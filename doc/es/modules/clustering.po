msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-19 02:05\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/clustering.po\n"
"X-Crowdin-File-ID: 4850\n"
"Language: es_ES\n"

#: ../modules/clustering.rst:5
msgid "Clustering"
msgstr "Análisis de conglomerados"

#: ../modules/clustering.rst:7
msgid "`Clustering <https://en.wikipedia.org/wiki/Cluster_analysis>`__ of unlabeled data can be performed with the module :mod:`sklearn.cluster`."
msgstr "`El análisis de conglomerados <https://en.wikipedia.org/wiki/Cluster_analysis>`__ de datos no etiquetados puede realizarse con el módulo :mod:`sklearn.cluster`."

#: ../modules/clustering.rst:10
msgid "Each clustering algorithm comes in two variants: a class, that implements the ``fit`` method to learn the clusters on train data, and a function, that, given train data, returns an array of integer labels corresponding to the different clusters. For the class, the labels over the training data can be found in the ``labels_`` attribute."
msgstr "Cada algoritmo de análisis de conglomerados viene en dos variantes: una clase, que implementa el método ``fit`` para aprender los conglomerados en los datos de entrenamiento, y una función, que, dados los datos de entrenamiento, devuelve un arreglo de etiquetas de enteros correspondientes a los diferentes conglomerados. Para la clase, las etiquetas sobre los datos de entrenamiento se pueden encontrar en el atributo ``labels_``."

msgid "Input data"
msgstr "Datos de entrada"

#: ../modules/clustering.rst:20
msgid "One important thing to note is that the algorithms implemented in this module can take different kinds of matrix as input. All the methods accept standard data matrices of shape ``(n_samples, n_features)``. These can be obtained from the classes in the :mod:`sklearn.feature_extraction` module. For :class:`AffinityPropagation`, :class:`SpectralClustering` and :class:`DBSCAN` one can also input similarity matrices of shape ``(n_samples, n_samples)``. These can be obtained from the functions in the :mod:`sklearn.metrics.pairwise` module."
msgstr "Una cosa importante a tener en cuenta es que los algoritmos implementados en este módulo pueden tomar diferentes tipos de matriz como entrada. Todos los métodos aceptan matrices de datos estándar de la forma ``(n_samples, n_features)``. Estos pueden obtenerse de las clases en el módulo :mod:`sklearn. módulo eature_extraction`. Para :class:`AffinityPropagation`, :class:`SpectralClustering` y :class:`DBSCAN` también se pueden introducir matrices de tamaños similares ``(n_samples, n_muestras)``. Estos se pueden obtener de las funciones en el módulo :mod:`sklearn.metrics.pairwise`."

#: ../modules/clustering.rst:30
msgid "Overview of clustering methods"
msgstr "Resumen de los métodos de análisis de conglomerados"

#: ../modules/clustering.rst:37
msgid "A comparison of the clustering algorithms in scikit-learn"
msgstr "Una comparación de los algoritmos de análisis de conglomerados en scikit-learn"

#: ../modules/clustering.rst:44
msgid "Method name"
msgstr "Nombre del método"

#: ../modules/clustering.rst:45
msgid "Parameters"
msgstr "Parámetros"

#: ../modules/clustering.rst:46
msgid "Scalability"
msgstr "Escalabilidad"

#: ../modules/clustering.rst:47
msgid "Usecase"
msgstr "Casos de uso"

#: ../modules/clustering.rst:48
msgid "Geometry (metric used)"
msgstr "Geometría (métrica utilizada)"

#: ../modules/clustering.rst:50
msgid ":ref:`K-Means <k_means>`"
msgstr ":ref:`K-Medias <k_means>`"

#: ../modules/clustering.rst:51 ../modules/clustering.rst:70
msgid "number of clusters"
msgstr "número de conglomerados"

#: ../modules/clustering.rst:52
msgid "Very large ``n_samples``, medium ``n_clusters`` with :ref:`MiniBatch code <mini_batch_kmeans>`"
msgstr "``n_samples`` muy grande, ``n_clusters`` mediano con :ref:`MiniBatch code <mini_batch_kmeans>`"

#: ../modules/clustering.rst:54
msgid "General-purpose, even cluster size, flat geometry, not too many clusters"
msgstr "Uso general, tamaño uniforme de los conglomerados, geometría plana, no demasiados conglomerados"

#: ../modules/clustering.rst:55 ../modules/clustering.rst:67
#: ../modules/clustering.rst:79 ../modules/clustering.rst:98
msgid "Distances between points"
msgstr "Distancias entre puntos"

#: ../modules/clustering.rst:57
msgid ":ref:`Affinity propagation <affinity_propagation>`"
msgstr ":ref:`Propagación por afinidad <affinity_propagation>`"

#: ../modules/clustering.rst:58
msgid "damping, sample preference"
msgstr ""

#: ../modules/clustering.rst:59
msgid "Not scalable with n_samples"
msgstr "No escalable con `n_samples`"

#: ../modules/clustering.rst:60 ../modules/clustering.rst:66
msgid "Many clusters, uneven cluster size, non-flat geometry"
msgstr "Muchos conglomerados, tamaño desigual de los conglomerados, geometría no plana"

#: ../modules/clustering.rst:61 ../modules/clustering.rst:73
msgid "Graph distance (e.g. nearest-neighbor graph)"
msgstr "Distancia gráfica (por ejemplo, el gráfico vecino más cercano)"

#: ../modules/clustering.rst:63
msgid ":ref:`Mean-shift <mean_shift>`"
msgstr ":ref:`Cambio medio <mean_shift>`"

#: ../modules/clustering.rst:64
msgid "bandwidth"
msgstr "ancho de banda"

#: ../modules/clustering.rst:65
msgid "Not scalable with ``n_samples``"
msgstr "No escalable con ``n_samples``"

#: ../modules/clustering.rst:69
msgid ":ref:`Spectral clustering <spectral_clustering>`"
msgstr ":ref:`Análisis espectral de conglomerados <spectral_clustering>`"

#: ../modules/clustering.rst:71
msgid "Medium ``n_samples``, small ``n_clusters``"
msgstr "``n_samples`` mediano, ``n_clusters`` pequeño"

#: ../modules/clustering.rst:72
msgid "Few clusters, even cluster size, non-flat geometry"
msgstr "Pocos conglomerados, tamaño uniforme de los conglomerados, geometría no plana"

#: ../modules/clustering.rst:75
msgid ":ref:`Ward hierarchical clustering <hierarchical_clustering>`"
msgstr ":ref:`Ward hierarchical clustering <hierarchical_clustering>`"

#: ../modules/clustering.rst:76
msgid "number of clusters or distance threshold"
msgstr "número de conglomerados o umbral de distancia"

#: ../modules/clustering.rst:77 ../modules/clustering.rst:83
msgid "Large ``n_samples`` and ``n_clusters``"
msgstr "``n_samples`` y ``n_clusters`` grandes"

#: ../modules/clustering.rst:78
msgid "Many clusters, possibly connectivity constraints"
msgstr "Muchos conglomerados, posiblemente con limitaciones de conectividad"

#: ../modules/clustering.rst:81
msgid ":ref:`Agglomerative clustering <hierarchical_clustering>`"
msgstr ":ref:`Agglomerative clustering <hierarchical_clustering>`"

#: ../modules/clustering.rst:82
msgid "number of clusters or distance threshold, linkage type, distance"
msgstr "número de conglomerados o umbral de distancia, tipo de vinculación, distancia"

#: ../modules/clustering.rst:84
msgid "Many clusters, possibly connectivity constraints, non Euclidean distances"
msgstr "Muchos conglomerados, posibles restricciones de conectividad, distancias no euclidianas"

#: ../modules/clustering.rst:86
msgid "Any pairwise distance"
msgstr "Cualquier distancia entre pares"

#: ../modules/clustering.rst:88
msgid ":ref:`DBSCAN <dbscan>`"
msgstr ":ref:`DBSCAN <dbscan>`"

#: ../modules/clustering.rst:89
msgid "neighborhood size"
msgstr ""

#: ../modules/clustering.rst:90
msgid "Very large ``n_samples``, medium ``n_clusters``"
msgstr "``n_samples`` muy grande, ``n_clusters`` mediano"

#: ../modules/clustering.rst:91
msgid "Non-flat geometry, uneven cluster sizes"
msgstr "Geometría no plana, tamaños desiguales de los conglomerados"

#: ../modules/clustering.rst:92
msgid "Distances between nearest points"
msgstr "Distancias entre los puntos más cercanos"

#: ../modules/clustering.rst:94
msgid ":ref:`OPTICS <optics>`"
msgstr ":ref:`OPTICS <optics>`"

#: ../modules/clustering.rst:95
msgid "minimum cluster membership"
msgstr "número mínimo de miembros del conglomerado"

#: ../modules/clustering.rst:96
msgid "Very large ``n_samples``, large ``n_clusters``"
msgstr "``n_samples`` muy grande, ``n_clusters`` grande"

#: ../modules/clustering.rst:97
msgid "Non-flat geometry, uneven cluster sizes, variable cluster density"
msgstr "Geometría no plana, tamaños desiguales de los conglomerados, densidad variable de los conglomerados"

#: ../modules/clustering.rst:100
msgid ":ref:`Gaussian mixtures <mixture>`"
msgstr ":ref:`Gaussian mixtures <mixture>`"

#: ../modules/clustering.rst:101
msgid "many"
msgstr "muchos"

#: ../modules/clustering.rst:102
msgid "Not scalable"
msgstr "No escalable"

#: ../modules/clustering.rst:103
msgid "Flat geometry, good for density estimation"
msgstr "Geometría plana, buena para la estimación de la densidad"

#: ../modules/clustering.rst:104
msgid "Mahalanobis distances to  centers"
msgstr "Distancias de Mahalanobis para los centros"

#: ../modules/clustering.rst:106
msgid ":ref:`Birch`"
msgstr ":ref:`Birch`"

#: ../modules/clustering.rst:107
msgid "branching factor, threshold, optional global clusterer."
msgstr "factor de ramificación, umbral, agrupador global opcional."

#: ../modules/clustering.rst:108
msgid "Large ``n_clusters`` and ``n_samples``"
msgstr "``n_clusters`` y ``n_samples`` grandes"

#: ../modules/clustering.rst:109
msgid "Large dataset, outlier removal, data reduction."
msgstr "Conjunto de datos grande, eliminación de valores atípicos, reducción de datos."

#: ../modules/clustering.rst:110
msgid "Euclidean distance between points"
msgstr "Distancia euclidiana entre puntos"

#: ../modules/clustering.rst:112
msgid "Non-flat geometry clustering is useful when the clusters have a specific shape, i.e. a non-flat manifold, and the standard euclidean distance is not the right metric. This case arises in the two top rows of the figure above."
msgstr "El análisis de conglomerados de geometría no plana es útil cuando los conglomerados tienen una forma específica, es decir, un colector no plano, y la distancia euclidiana estándar no es la métrica adecuada. Este caso se da en las dos filas superiores de la figura anterior."

#: ../modules/clustering.rst:117
msgid "Gaussian mixture models, useful for clustering, are described in :ref:`another chapter of the documentation <mixture>` dedicated to mixture models. KMeans can be seen as a special case of Gaussian mixture model with equal covariance per component."
msgstr ""

#: ../modules/clustering.rst:125
msgid "K-means"
msgstr "K-medias"

#: ../modules/clustering.rst:127
msgid "The :class:`KMeans` algorithm clusters data by trying to separate samples in n groups of equal variance, minimizing a criterion known as the *inertia* or within-cluster sum-of-squares (see below). This algorithm requires the number of clusters to be specified. It scales well to large number of samples and has been used across a large range of application areas in many different fields."
msgstr ""

#: ../modules/clustering.rst:133
msgid "The k-means algorithm divides a set of :math:`N` samples :math:`X` into :math:`K` disjoint clusters :math:`C`, each described by the mean :math:`\\mu_j` of the samples in the cluster. The means are commonly called the cluster \"centroids\"; note that they are not, in general, points from :math:`X`, although they live in the same space."
msgstr ""

#: ../modules/clustering.rst:139
msgid "The K-means algorithm aims to choose centroids that minimise the **inertia**, or **within-cluster sum-of-squares criterion**:"
msgstr "El algoritmo K-medias tiene como objetivo elegir los centroides que minimicen la **inercia**, o el **criterio de la suma de cuadrados dentro del conglomerado**:"

#: ../modules/clustering.rst:142
msgid "\\sum_{i=0}^{n}\\min_{\\mu_j \\in C}(||x_i - \\mu_j||^2)\n\n"
msgstr "\\sum_{i=0}^{n}\\min_{\\mu_j \\in C}(||x_i - \\mu_j||^2)\n\n"

#: ../modules/clustering.rst:144
msgid "Inertia can be recognized as a measure of how internally coherent clusters are. It suffers from various drawbacks:"
msgstr "La inercia puede reconocerse como una medida de la coherencia interna de los conglomerados. Sufre varios inconvenientes:"

#: ../modules/clustering.rst:147
msgid "Inertia makes the assumption that clusters are convex and isotropic, which is not always the case. It responds poorly to elongated clusters, or manifolds with irregular shapes."
msgstr "La inercia supone que los conglomerados son convexos e isotrópicos, lo que no siempre es el caso. Responde mal a los conglomerados alargados o a las variedades con formas irregulares."

#: ../modules/clustering.rst:151
msgid "Inertia is not a normalized metric: we just know that lower values are better and zero is optimal. But in very high-dimensional spaces, Euclidean distances tend to become inflated (this is an instance of the so-called \"curse of dimensionality\"). Running a dimensionality reduction algorithm such as :ref:`PCA` prior to k-means clustering can alleviate this problem and speed up the computations."
msgstr "La inercia no es una métrica normalizada: sólo sabemos que los valores más bajos son mejores y cero es óptimo. Pero en espacios de muy alta dimensión, las distancias Euclidianas tienden a inflarse (este es un ejemplo de la llamada \"maldición de la dimensión\"). Ejecutar un algoritmo de reducción de dimensionalidad como :ref:`PCA` antes de un análisis de conglomerados mediante k-medias puede minimizar este problema y acelerar los cálculos."

#: ../modules/clustering.rst:164
msgid "K-means is often referred to as Lloyd's algorithm. In basic terms, the algorithm has three steps. The first step chooses the initial centroids, with the most basic method being to choose :math:`k` samples from the dataset :math:`X`. After initialization, K-means consists of looping between the two other steps. The first step assigns each sample to its nearest centroid. The second step creates new centroids by taking the mean value of all of the samples assigned to each previous centroid. The difference between the old and the new centroids are computed and the algorithm repeats these last two steps until this value is less than a threshold. In other words, it repeats until the centroids do not move significantly."
msgstr "K-medias se conoce a menudo como el algoritmo de Lloyd. En términos básicos, el algoritmo tiene tres pasos. El primer paso elige los centroides iniciales, siendo el método más básico elegir :math:`k` muestras del conjunto de datos :math:`X`. Después de la inicialización, K-medias consiste en un bucle entre los otros dos pasos. El primer paso asigna cada muestra a su centroide más cercano. El segundo paso crea nuevos centroides tomando el valor medio de todas las muestras asignadas a cada centroide anterior. Se calcula la diferencia entre los centroides antiguos y los nuevos y el algoritmo repite estos dos últimos pasos hasta que este valor sea menor que un umbral. En otras palabras, se repite hasta que los centroides no se muevan de forma significativa."

#: ../modules/clustering.rst:180
msgid "K-means is equivalent to the expectation-maximization algorithm with a small, all-equal, diagonal covariance matrix."
msgstr "K-medias es equivalente al algoritmo de maximización de la esperanza con una matriz de covarianzas pequeña, toda igual y diagonal."

#: ../modules/clustering.rst:183
msgid "The algorithm can also be understood through the concept of `Voronoi diagrams <https://en.wikipedia.org/wiki/Voronoi_diagram>`_. First the Voronoi diagram of the points is calculated using the current centroids. Each segment in the Voronoi diagram becomes a separate cluster. Secondly, the centroids are updated to the mean of each segment. The algorithm then repeats this until a stopping criterion is fulfilled. Usually, the algorithm stops when the relative decrease in the objective function between iterations is less than the given tolerance value. This is not the case in this implementation: iteration stops when centroids move less than the tolerance."
msgstr "El algoritmo también puede entenderse a través del concepto de Voronoi diagrams <https://en.wikipedia.org/wiki/Voronoi_diagram>`_. En primer lugar, se calcula el diagrama de Voronoi de los puntos utilizando los centroides actuales. Cada segmento del diagrama de Voronoi se convierte en un conglomerado separado. En segundo lugar, los centroides se actualizan a la media de cada segmento. El algoritmo repite esto hasta que se cumpla un criterio de parada. Normalmente, el algoritmo se detiene cuando la disminución relativa de la función objetiva entre iteraciones es menor que el valor de tolerancia dado. Este no es el caso en esta implementación: la iteración se detiene cuando los centroides se mueven por debajo de la tolerancia."

#: ../modules/clustering.rst:193
msgid "Given enough time, K-means will always converge, however this may be to a local minimum. This is highly dependent on the initialization of the centroids. As a result, the computation is often done several times, with different initializations of the centroids. One method to help address this issue is the k-means++ initialization scheme, which has been implemented in scikit-learn (use the ``init='k-means++'`` parameter). This initializes the centroids to be (generally) distant from each other, leading to provably better results than random initialization, as shown in the reference."
msgstr "Con suficiente tiempo, K-medias siempre convergerá sin embargo, esto puede ser a un mínimo local. Esto depende en gran medida de la inicialización de los centroides. Como resultado, el cálculo se realiza a menudo varias veces, con diferentes inicializaciones de los centroides. Un método que ayuda a resolver este problema es el esquema de inicialización de k-medias++, que se ha implementado en scikit-learn (utilice el parámetro ``init='k-means++'``). Esto inicializa los centroides para que sean (generalmente) distantes entre sí, conduciendo a resultados probadamente mejores que la inicialización aleatoria, como se muestra en la referencia."

#: ../modules/clustering.rst:202
msgid "K-means++ can also be called independently to select seeds for other clustering algorithms, see :func:`sklearn.cluster.kmeans_plusplus` for details and example usage."
msgstr "K-medias++ también puede ser llamado independientemente para seleccionar semillas para otros algoritmos de análisis de conglomerados ver :func:`sklearn.cluster.kmeans_plus` para detalles y ejemplos de uso."

#: ../modules/clustering.rst:206
msgid "The algorithm supports sample weights, which can be given by a parameter ``sample_weight``. This allows to assign more weight to some samples when computing cluster centers and values of inertia. For example, assigning a weight of 2 to a sample is equivalent to adding a duplicate of that sample to the dataset :math:`X`."
msgstr "El algoritmo admite pesos de las muestras, que pueden ser dados por un parámetro ``sample_weight``. Esto permite asignar más peso a algunas muestras cuando se calculan los centros de los conglomerados y los valores de inercia. Por ejemplo, asignar un peso de 2 a una muestra equivale a añadir un duplicado de esa muestra al conjunto de datos :math:`X`."

#: ../modules/clustering.rst:212
msgid "K-means can be used for vector quantization. This is achieved using the transform method of a trained model of :class:`KMeans`."
msgstr "K-medias puede utilizarse para la cuantificación de vectores. Esto se consigue utilizando el método de transformación de un modelo entrenado de :class:`KMeans`."

#: ../modules/clustering.rst:216
msgid "Low-level parallelism"
msgstr "Paralelismo de bajo nivel"

#: ../modules/clustering.rst:218
msgid ":class:`KMeans` benefits from OpenMP based parallelism through Cython. Small chunks of data (256 samples) are processed in parallel, which in addition yields a low memory footprint. For more details on how to control the number of threads, please refer to our :ref:`parallelism` notes."
msgstr ":class:`KMeans` se beneficia del paralelismo basado en OpenMP a través de Cython. Pequeñas porciones de datos (256 muestras) se procesan en paralelo, lo que, además, supone un bajo consumo de memoria. Para más detalles sobre cómo controlar el número de hilos, por favor consulta nuestras notas de :ref:`parallelism`."

#: ../modules/clustering.rst:225
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_kmeans_assumptions.py`: Demonstrating when k-means performs intuitively and when it does not"
msgstr ":ref:`sphx_glr_auto_examples_cluster_plot_kmeans_assumptions.py`: Demostración de cuándo k-medias funciona intuitivamente y cuándo no"

#: ../modules/clustering.rst:227
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_kmeans_digits.py`: Clustering handwritten digits"
msgstr ":ref:`sphx_glr_auto_examples_cluster_plot_kmeans_digits.py`: Análisis de conglomerados de dígitos manuscritos"

#: ../modules/clustering.rst:231
msgid "`\"k-means++: The advantages of careful seeding\" <http://ilpubs.stanford.edu:8090/778/1/2006-13.pdf>`_ Arthur, David, and Sergei Vassilvitskii, *Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms*, Society for Industrial and Applied Mathematics (2007)"
msgstr "`\"k-means++: The advantages of careful seeding\" <http://ilpubs.stanford.edu:8090/778/1/2006-13.pdf>`_ Arthur, David, and Sergei Vassilvitskii, *Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms*, Society for Industrial and Applied Mathematics (2007)"

#: ../modules/clustering.rst:240
msgid "Mini Batch K-Means"
msgstr "K-medias de mini lotes"

#: ../modules/clustering.rst:242
msgid "The :class:`MiniBatchKMeans` is a variant of the :class:`KMeans` algorithm which uses mini-batches to reduce the computation time, while still attempting to optimise the same objective function. Mini-batches are subsets of the input data, randomly sampled in each training iteration. These mini-batches drastically reduce the amount of computation required to converge to a local solution. In contrast to other algorithms that reduce the convergence time of k-means, mini-batch k-means produces results that are generally only slightly worse than the standard algorithm."
msgstr "El :class:`MiniBatchKMeans` es una variante del algoritmo :class:`KMeans` que usa mini lotes para reducir el tiempo de cálculo, mientras se intenta optimizar la misma función objetivo. Los mini lotes son subconjuntos de los datos de entrada, muestreados aleatoriamente en cada iteración de entrenamiento. Estos mini lotes reducen drásticamente la cantidad de cálculo necesaria para converger a una solución local. En contraste con otros algoritmos que reducen el tiempo de convergencia de k-medias, k-medias de mini lotes produce resultados que generalmente son ligeramente peores que el algoritmo estándar."

#: ../modules/clustering.rst:251
msgid "The algorithm iterates between two major steps, similar to vanilla k-means. In the first step, :math:`b` samples are drawn randomly from the dataset, to form a mini-batch. These are then assigned to the nearest centroid. In the second step, the centroids are updated. In contrast to k-means, this is done on a per-sample basis. For each sample in the mini-batch, the assigned centroid is updated by taking the streaming average of the sample and all previous samples assigned to that centroid. This has the effect of decreasing the rate of change for a centroid over time. These steps are performed until convergence or a predetermined number of iterations is reached."
msgstr "El algoritmo itera entre dos pasos principales, similares a las k-medias vanilla. En el primer paso, las :math:`b` muestras se extraen aleatoriamente del conjunto de datos, para formar un mini lote. Estos se asignan al centroide más cercano. En el segundo paso, se actualizan los centroides. En contraste con las k-medias, esto se hace sobre una base por muestra. Para cada muestra en el mini lote, el centroide asignado se actualiza tomando la media de transmisión de la muestra y todas las muestras anteriores asignadas a ese centroide. Esto tiene el efecto de disminuir la tasa de cambio de un centroide en el tiempo. Estos pasos se realizan hasta que se alcanza la convergencia o un número predeterminado de iteraciones."

#: ../modules/clustering.rst:261
msgid ":class:`MiniBatchKMeans` converges faster than :class:`KMeans`, but the quality of the results is reduced. In practice this difference in quality can be quite small, as shown in the example and cited reference."
msgstr ":class:`MiniBatchKMeans` converge más rápido que :class:`KMeans`, pero la calidad de los resultados se reduce. En la práctica, esta diferencia de calidad puede ser bastante pequeña, como se muestra en el ejemplo y referencia citada."

#: ../modules/clustering.rst:273
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_mini_batch_kmeans.py`: Comparison of KMeans and MiniBatchKMeans"
msgstr ":ref:`sphx_glr_auto_examples_cluster_plot_mini_batch_kmeans.py`: Comparación de las KMedias y K-Medias de mini lotes"

#: ../modules/clustering.rst:276
msgid ":ref:`sphx_glr_auto_examples_text_plot_document_clustering.py`: Document clustering using sparse MiniBatchKMeans"
msgstr ":ref:`sphx_glr_auto_examples_text_plot_document_clustering.py`: Análisis de conglomerados de documentos utilizando K-medias de mini lotes dispersos"

#: ../modules/clustering.rst:279
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_dict_face_patches.py`"
msgstr ":ref:`sphx_glr_auto_examples_cluster_plot_dict_face_patches.py`"

#: ../modules/clustering.rst:284
msgid "`\"Web Scale K-Means clustering\" <https://www.eecs.tufts.edu/~dsculley/papers/fastkmeans.pdf>`_ D. Sculley, *Proceedings of the 19th international conference on World wide web* (2010)"
msgstr "`\"Web Scale K-Means clustering\" <https://www.eecs.tufts.edu/~dsculley/papers/fastkmeans.pdf>`_ D. Sculley, *Proceedings of the 19th international conference on World wide web* (2010)"

#: ../modules/clustering.rst:292
msgid "Affinity Propagation"
msgstr "Propagación de la afinidad"

#: ../modules/clustering.rst:294
msgid ":class:`AffinityPropagation` creates clusters by sending messages between pairs of samples until convergence. A dataset is then described using a small number of exemplars, which are identified as those most representative of other samples. The messages sent between pairs represent the suitability for one sample to be the exemplar of the other, which is updated in response to the values from other pairs. This updating happens iteratively until convergence, at which point the final exemplars are chosen, and hence the final clustering is given."
msgstr ""

#: ../modules/clustering.rst:309
msgid "Affinity Propagation can be interesting as it chooses the number of clusters based on the data provided. For this purpose, the two important parameters are the *preference*, which controls how many exemplars are used, and the *damping factor* which damps the responsibility and availability messages to avoid numerical oscillations when updating these messages."
msgstr ""

#: ../modules/clustering.rst:316
msgid "The main drawback of Affinity Propagation is its complexity. The algorithm has a time complexity of the order :math:`O(N^2 T)`, where :math:`N` is the number of samples and :math:`T` is the number of iterations until convergence. Further, the memory complexity is of the order :math:`O(N^2)` if a dense similarity matrix is used, but reducible if a sparse similarity matrix is used. This makes Affinity Propagation most appropriate for small to medium sized datasets."
msgstr ""

#: ../modules/clustering.rst:326
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_affinity_propagation.py`: Affinity Propagation on a synthetic 2D datasets with 3 classes."
msgstr ""

#: ../modules/clustering.rst:329
msgid ":ref:`sphx_glr_auto_examples_applications_plot_stock_market.py` Affinity Propagation on Financial time series to find groups of companies"
msgstr ""

#: ../modules/clustering.rst:333
msgid "**Algorithm description:** The messages sent between points belong to one of two categories. The first is the responsibility :math:`r(i, k)`, which is the accumulated evidence that sample :math:`k` should be the exemplar for sample :math:`i`. The second is the availability :math:`a(i, k)` which is the accumulated evidence that sample :math:`i` should choose sample :math:`k` to be its exemplar, and considers the values for all other samples that :math:`k` should be an exemplar. In this way, exemplars are chosen by samples if they are (1) similar enough to many samples and (2) chosen by many samples to be representative of themselves."
msgstr ""

#: ../modules/clustering.rst:346
msgid "More formally, the responsibility of a sample :math:`k` to be the exemplar of sample :math:`i` is given by:"
msgstr ""

#: ../modules/clustering.rst:349
msgid "r(i, k) \\leftarrow s(i, k) - max [ a(i, k') + s(i, k') \\forall k' \\neq k ]"
msgstr ""

#: ../modules/clustering.rst:353
msgid "Where :math:`s(i, k)` is the similarity between samples :math:`i` and :math:`k`. The availability of sample :math:`k` to be the exemplar of sample :math:`i` is given by:"
msgstr ""

#: ../modules/clustering.rst:357
msgid "a(i, k) \\leftarrow min [0, r(k, k) + \\sum_{i'~s.t.~i' \\notin \\{i, k\\}}{r(i', k)}]"
msgstr ""

#: ../modules/clustering.rst:361
msgid "To begin with, all values for :math:`r` and :math:`a` are set to zero, and the calculation of each iterates until convergence. As discussed above, in order to avoid numerical oscillations when updating the messages, the damping factor :math:`\\lambda` is introduced to iteration process:"
msgstr ""

#: ../modules/clustering.rst:366
msgid "r_{t+1}(i, k) = \\lambda\\cdot r_{t}(i, k) + (1-\\lambda)\\cdot r_{t+1}(i, k)\n\n"
msgstr ""

#: ../modules/clustering.rst:367
msgid "a_{t+1}(i, k) = \\lambda\\cdot a_{t}(i, k) + (1-\\lambda)\\cdot a_{t+1}(i, k)\n\n"
msgstr ""

#: ../modules/clustering.rst:369
msgid "where :math:`t` indicates the iteration times."
msgstr ""

#: ../modules/clustering.rst:374
msgid "Mean Shift"
msgstr ""

#: ../modules/clustering.rst:375
msgid ":class:`MeanShift` clustering aims to discover *blobs* in a smooth density of samples. It is a centroid based algorithm, which works by updating candidates for centroids to be the mean of the points within a given region. These candidates are then filtered in a post-processing stage to eliminate near-duplicates to form the final set of centroids."
msgstr ""

#: ../modules/clustering.rst:381
msgid "Given a candidate centroid :math:`x_i` for iteration :math:`t`, the candidate is updated according to the following equation:"
msgstr ""

#: ../modules/clustering.rst:384
msgid "x_i^{t+1} = m(x_i^t)"
msgstr ""

#: ../modules/clustering.rst:388
msgid "Where :math:`N(x_i)` is the neighborhood of samples within a given distance around :math:`x_i` and :math:`m` is the *mean shift* vector that is computed for each centroid that points towards a region of the maximum increase in the density of points. This is computed using the following equation, effectively updating a centroid to be the mean of the samples within its neighborhood:"
msgstr ""

#: ../modules/clustering.rst:394
msgid "m(x_i) = \\frac{\\sum_{x_j \\in N(x_i)}K(x_j - x_i)x_j}{\\sum_{x_j \\in N(x_i)}K(x_j - x_i)}"
msgstr ""

#: ../modules/clustering.rst:398
msgid "The algorithm automatically sets the number of clusters, instead of relying on a parameter ``bandwidth``, which dictates the size of the region to search through. This parameter can be set manually, but can be estimated using the provided ``estimate_bandwidth`` function, which is called if the bandwidth is not set."
msgstr ""

#: ../modules/clustering.rst:403
msgid "The algorithm is not highly scalable, as it requires multiple nearest neighbor searches during the execution of the algorithm. The algorithm is guaranteed to converge, however the algorithm will stop iterating when the change in centroids is small."
msgstr ""

#: ../modules/clustering.rst:408
msgid "Labelling a new sample is performed by finding the nearest centroid for a given sample."
msgstr ""

#: ../modules/clustering.rst:420
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_mean_shift.py`: Mean Shift clustering on a synthetic 2D datasets with 3 classes."
msgstr ""

#: ../modules/clustering.rst:425
msgid "`\"Mean shift: A robust approach toward feature space analysis.\" <http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.76.8968&rep=rep1&type=pdf>`_ D. Comaniciu and P. Meer, *IEEE Transactions on Pattern Analysis and Machine Intelligence* (2002)"
msgstr ""

#: ../modules/clustering.rst:433
msgid "Spectral clustering"
msgstr ""

#: ../modules/clustering.rst:435
msgid ":class:`SpectralClustering` performs a low-dimension embedding of the affinity matrix between samples, followed by clustering, e.g., by KMeans, of the components of the eigenvectors in the low dimensional space. It is especially computationally efficient if the affinity matrix is sparse and the `amg` solver is used for the eigenvalue problem (Note, the `amg` solver requires that the `pyamg <https://github.com/pyamg/pyamg>`_ module is installed.)"
msgstr ""

#: ../modules/clustering.rst:442
msgid "The present version of SpectralClustering requires the number of clusters to be specified in advance. It works well for a small number of clusters, but is not advised for many clusters."
msgstr ""

#: ../modules/clustering.rst:446
msgid "For two clusters, SpectralClustering solves a convex relaxation of the `normalised cuts <https://people.eecs.berkeley.edu/~malik/papers/SM-ncut.pdf>`_ problem on the similarity graph: cutting the graph in two so that the weight of the edges cut is small compared to the weights of the edges inside each cluster. This criteria is especially interesting when working on images, where graph vertices are pixels, and weights of the edges of the similarity graph are computed using a function of a gradient of the image."
msgstr ""

#: ../modules/clustering.rst:464
msgid "noisy_img segmented_img"
msgstr ""

#: ../modules/clustering.rst:465
msgid "Transforming distance to well-behaved similarities"
msgstr ""

#: ../modules/clustering.rst:467
msgid "Note that if the values of your similarity matrix are not well distributed, e.g. with negative values or with a distance matrix rather than a similarity, the spectral problem will be singular and the problem not solvable. In which case it is advised to apply a transformation to the entries of the matrix. For instance, in the case of a signed distance matrix, is common to apply a heat kernel::"
msgstr ""

#: ../modules/clustering.rst:476
msgid "See the examples for such an application."
msgstr ""

#: ../modules/clustering.rst:480
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_segmentation_toy.py`: Segmenting objects from a noisy background using spectral clustering."
msgstr ""

#: ../modules/clustering.rst:483
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_coin_segmentation.py`: Spectral clustering to split the image of coins in regions."
msgstr ""

#: ../modules/clustering.rst:495
msgid "Different label assignment strategies"
msgstr ""

#: ../modules/clustering.rst:497
#, python-format
msgid "Different label assignment strategies can be used, corresponding to the ``assign_labels`` parameter of :class:`SpectralClustering`. ``\"kmeans\"`` strategy can match finer details, but can be unstable. In particular, unless you control the ``random_state``, it may not be reproducible from run-to-run, as it depends on random initialization. The alternative ``\"discretize\"`` strategy is 100% reproducible, but tends to create parcels of fairly even and geometrical shape."
msgstr ""

#: ../modules/clustering.rst:506
msgid "``assign_labels=\"kmeans\"``"
msgstr ""

#: ../modules/clustering.rst:506
msgid "``assign_labels=\"discretize\"``"
msgstr ""

#: ../modules/clustering.rst:508
msgid "|coin_kmeans|"
msgstr ""

#: ../modules/clustering.rst:508
msgid "|coin_discretize|"
msgstr ""

#: ../modules/clustering.rst:512
msgid "Spectral Clustering Graphs"
msgstr ""

#: ../modules/clustering.rst:514
msgid "Spectral Clustering can also be used to partition graphs via their spectral embeddings.  In this case, the affinity matrix is the adjacency matrix of the graph, and SpectralClustering is initialized with `affinity='precomputed'`::"
msgstr ""

#: ../modules/clustering.rst:525
msgid "`\"A Tutorial on Spectral Clustering\" <http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.165.9323>`_ Ulrike von Luxburg, 2007"
msgstr ""

#: ../modules/clustering.rst:529
msgid "`\"Normalized cuts and image segmentation\" <http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.160.2324>`_ Jianbo Shi, Jitendra Malik, 2000"
msgstr ""

#: ../modules/clustering.rst:533
msgid "`\"A Random Walks View of Spectral Segmentation\" <http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.33.1501>`_ Marina Meila, Jianbo Shi, 2001"
msgstr ""

#: ../modules/clustering.rst:537
msgid "`\"On Spectral Clustering: Analysis and an algorithm\" <http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.19.8100>`_ Andrew Y. Ng, Michael I. Jordan, Yair Weiss, 2001"
msgstr ""

#: ../modules/clustering.rst:541
msgid "`\"Preconditioned Spectral Clustering for Stochastic Block Partition Streaming Graph Challenge\" <https://arxiv.org/abs/1708.07481>`_ David Zhuzhunashvili, Andrew Knyazev"
msgstr ""

#: ../modules/clustering.rst:549
msgid "Hierarchical clustering"
msgstr ""

#: ../modules/clustering.rst:551
msgid "Hierarchical clustering is a general family of clustering algorithms that build nested clusters by merging or splitting them successively. This hierarchy of clusters is represented as a tree (or dendrogram). The root of the tree is the unique cluster that gathers all the samples, the leaves being the clusters with only one sample. See the `Wikipedia page <https://en.wikipedia.org/wiki/Hierarchical_clustering>`_ for more details."
msgstr ""

#: ../modules/clustering.rst:558
msgid "The :class:`AgglomerativeClustering` object performs a hierarchical clustering using a bottom up approach: each observation starts in its own cluster, and clusters are successively merged together. The linkage criteria determines the metric used for the merge strategy:"
msgstr ""

#: ../modules/clustering.rst:563
msgid "**Ward** minimizes the sum of squared differences within all clusters. It is a variance-minimizing approach and in this sense is similar to the k-means objective function but tackled with an agglomerative hierarchical approach."
msgstr ""

#: ../modules/clustering.rst:567
msgid "**Maximum** or **complete linkage** minimizes the maximum distance between observations of pairs of clusters."
msgstr ""

#: ../modules/clustering.rst:569
msgid "**Average linkage** minimizes the average of the distances between all observations of pairs of clusters."
msgstr ""

#: ../modules/clustering.rst:571
msgid "**Single linkage** minimizes the distance between the closest observations of pairs of clusters."
msgstr ""

#: ../modules/clustering.rst:574
msgid ":class:`AgglomerativeClustering` can also scale to large number of samples when it is used jointly with a connectivity matrix, but is computationally expensive when no connectivity constraints are added between samples: it considers at each step all the possible merges."
msgstr ""

msgid ":class:`FeatureAgglomeration`"
msgstr ""

#: ../modules/clustering.rst:581
msgid "The :class:`FeatureAgglomeration` uses agglomerative clustering to group together features that look very similar, thus decreasing the number of features. It is a dimensionality reduction tool, see :ref:`data_reduction`."
msgstr ""

#: ../modules/clustering.rst:587
msgid "Different linkage type: Ward, complete, average, and single linkage"
msgstr ""

#: ../modules/clustering.rst:589
msgid ":class:`AgglomerativeClustering` supports Ward, single, average, and complete linkage strategies."
msgstr ""

#: ../modules/clustering.rst:596
msgid "Agglomerative cluster has a \"rich get richer\" behavior that leads to uneven cluster sizes. In this regard, single linkage is the worst strategy, and Ward gives the most regular sizes. However, the affinity (or distance used in clustering) cannot be varied with Ward, thus for non Euclidean metrics, average linkage is a good alternative. Single linkage, while not robust to noisy data, can be computed very efficiently and can therefore be useful to provide hierarchical clustering of larger datasets. Single linkage can also perform well on non-globular data."
msgstr ""

#: ../modules/clustering.rst:607
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_digits_linkage.py`: exploration of the different linkage strategies in a real dataset."
msgstr ""

#: ../modules/clustering.rst:611
msgid "Visualization of cluster hierarchy"
msgstr ""

#: ../modules/clustering.rst:613
msgid "It's possible to visualize the tree representing the hierarchical merging of clusters as a dendrogram. Visual inspection can often be useful for understanding the structure of the data, though more so in the case of small sample sizes."
msgstr ""

#: ../modules/clustering.rst:624
msgid "Adding connectivity constraints"
msgstr ""

#: ../modules/clustering.rst:626
msgid "An interesting aspect of :class:`AgglomerativeClustering` is that connectivity constraints can be added to this algorithm (only adjacent clusters can be merged together), through a connectivity matrix that defines for each sample the neighboring samples following a given structure of the data. For instance, in the swiss-roll example below, the connectivity constraints forbid the merging of points that are not adjacent on the swiss roll, and thus avoid forming clusters that extend across overlapping folds of the roll."
msgstr ""

#: ../modules/clustering.rst:644
msgid "unstructured structured"
msgstr ""

#: ../modules/clustering.rst:645
msgid "These constraint are useful to impose a certain local structure, but they also make the algorithm faster, especially when the number of the samples is high."
msgstr ""

#: ../modules/clustering.rst:649
msgid "The connectivity constraints are imposed via an connectivity matrix: a scipy sparse matrix that has elements only at the intersection of a row and a column with indices of the dataset that should be connected. This matrix can be constructed from a-priori information: for instance, you may wish to cluster web pages by only merging pages with a link pointing from one to another. It can also be learned from the data, for instance using :func:`sklearn.neighbors.kneighbors_graph` to restrict merging to nearest neighbors as in :ref:`this example <sphx_glr_auto_examples_cluster_plot_agglomerative_clustering.py>`, or using :func:`sklearn.feature_extraction.image.grid_to_graph` to enable only merging of neighboring pixels on an image, as in the :ref:`coin <sphx_glr_auto_examples_cluster_plot_coin_ward_segmentation.py>` example."
msgstr ""

#: ../modules/clustering.rst:664
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_coin_ward_segmentation.py`: Ward clustering to split the image of coins in regions."
msgstr ""

#: ../modules/clustering.rst:667
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_ward_structured_vs_unstructured.py`: Example of Ward algorithm on a swiss-roll, comparison of structured approaches versus unstructured approaches."
msgstr ""

#: ../modules/clustering.rst:671
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_feature_agglomeration_vs_univariate_selection.py`: Example of dimensionality reduction with feature agglomeration based on Ward hierarchical clustering."
msgstr ""

#: ../modules/clustering.rst:675
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_agglomerative_clustering.py`"
msgstr ""

#: ../modules/clustering.rst:677
msgid "**Connectivity constraints with single, average and complete linkage**"
msgstr ""

#: ../modules/clustering.rst:679
msgid "Connectivity constraints and single, complete or average linkage can enhance the 'rich getting richer' aspect of agglomerative clustering, particularly so if they are built with :func:`sklearn.neighbors.kneighbors_graph`. In the limit of a small number of clusters, they tend to give a few macroscopically occupied clusters and almost empty ones. (see the discussion in :ref:`sphx_glr_auto_examples_cluster_plot_agglomerative_clustering.py`). Single linkage is the most brittle linkage option with regard to this issue."
msgstr ""

#: ../modules/clustering.rst:706
msgid "Varying the metric"
msgstr ""

#: ../modules/clustering.rst:708
msgid "Single, average and complete linkage can be used with a variety of distances (or affinities), in particular Euclidean distance (*l2*), Manhattan distance (or Cityblock, or *l1*), cosine distance, or any precomputed affinity matrix."
msgstr ""

#: ../modules/clustering.rst:713
msgid "*l1* distance is often good for sparse features, or sparse noise: i.e. many of the features are zero, as in text mining using occurrences of rare words."
msgstr ""

#: ../modules/clustering.rst:717
msgid "*cosine* distance is interesting because it is invariant to global scalings of the signal."
msgstr ""

#: ../modules/clustering.rst:720
msgid "The guidelines for choosing a metric is to use one that maximizes the distance between samples in different classes, and minimizes that within each class."
msgstr ""

#: ../modules/clustering.rst:738
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_agglomerative_clustering_metrics.py`"
msgstr ""

#: ../modules/clustering.rst:744
msgid "DBSCAN"
msgstr ""

#: ../modules/clustering.rst:746
msgid "The :class:`DBSCAN` algorithm views clusters as areas of high density separated by areas of low density. Due to this rather generic view, clusters found by DBSCAN can be any shape, as opposed to k-means which assumes that clusters are convex shaped. The central component to the DBSCAN is the concept of *core samples*, which are samples that are in areas of high density. A cluster is therefore a set of core samples, each close to each other (measured by some distance measure) and a set of non-core samples that are close to a core sample (but are not themselves core samples). There are two parameters to the algorithm, ``min_samples`` and ``eps``, which define formally what we mean when we say *dense*. Higher ``min_samples`` or lower ``eps`` indicate higher density necessary to form a cluster."
msgstr ""

#: ../modules/clustering.rst:760
msgid "More formally, we define a core sample as being a sample in the dataset such that there exist ``min_samples`` other samples within a distance of ``eps``, which are defined as *neighbors* of the core sample. This tells us that the core sample is in a dense area of the vector space. A cluster is a set of core samples that can be built by recursively taking a core sample, finding all of its neighbors that are core samples, finding all of *their* neighbors that are core samples, and so on. A cluster also has a set of non-core samples, which are samples that are neighbors of a core sample in the cluster but are not themselves core samples. Intuitively, these samples are on the fringes of a cluster."
msgstr ""

#: ../modules/clustering.rst:771
msgid "Any core sample is part of a cluster, by definition. Any sample that is not a core sample, and is at least ``eps`` in distance from any core sample, is considered an outlier by the algorithm."
msgstr ""

#: ../modules/clustering.rst:775
msgid "While the parameter ``min_samples`` primarily controls how tolerant the algorithm is towards noise (on noisy and large data sets it may be desirable to increase this parameter), the parameter ``eps`` is *crucial to choose appropriately* for the data set and distance function and usually cannot be left at the default value. It controls the local neighborhood of the points. When chosen too small, most data will not be clustered at all (and labeled as ``-1`` for \"noise\"). When chosen too large, it causes close clusters to be merged into one cluster, and eventually the entire data set to be returned as a single cluster. Some heuristics for choosing this parameter have been discussed in the literature, for example based on a knee in the nearest neighbor distances plot (as discussed in the references below)."
msgstr ""

#: ../modules/clustering.rst:787
msgid "In the figure below, the color indicates cluster membership, with large circles indicating core samples found by the algorithm. Smaller circles are non-core samples that are still part of a cluster. Moreover, the outliers are indicated by black points below."
msgstr ""

#: ../modules/clustering.rst:797
msgid "dbscan_results"
msgstr ""

#: ../modules/clustering.rst:800
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_dbscan.py`"
msgstr ""

msgid "Implementation"
msgstr ""

#: ../modules/clustering.rst:804
msgid "The DBSCAN algorithm is deterministic, always generating the same clusters when given the same data in the same order.  However, the results can differ when data is provided in a different order. First, even though the core samples will always be assigned to the same clusters, the labels of those clusters will depend on the order in which those samples are encountered in the data. Second and more importantly, the clusters to which non-core samples are assigned can differ depending on the data order.  This would happen when a non-core sample has a distance lower than ``eps`` to two core samples in different clusters. By the triangular inequality, those two core samples must be more distant than ``eps`` from each other, or they would be in the same cluster. The non-core sample is assigned to whichever cluster is generated first in a pass through the data, and so the results will depend on the data ordering."
msgstr ""

#: ../modules/clustering.rst:817
msgid "The current implementation uses ball trees and kd-trees to determine the neighborhood of points, which avoids calculating the full distance matrix (as was done in scikit-learn versions before 0.14). The possibility to use custom metrics is retained; for details, see :class:`NearestNeighbors`."
msgstr ""

#: ../modules/clustering.rst:826
msgid "This implementation is by default not memory efficient because it constructs a full pairwise similarity matrix in the case where kd-trees or ball-trees cannot be used (e.g., with sparse matrices). This matrix will consume :math:`n^2` floats. A couple of mechanisms for getting around this are:"
msgstr ""

#: ../modules/clustering.rst:831
msgid "Use :ref:`OPTICS <optics>` clustering in conjunction with the `extract_dbscan` method. OPTICS clustering also calculates the full pairwise matrix, but only keeps one row in memory at a time (memory complexity n)."
msgstr ""

#: ../modules/clustering.rst:836
msgid "A sparse radius neighborhood graph (where missing entries are presumed to be out of eps) can be precomputed in a memory-efficient way and dbscan can be run over this with ``metric='precomputed'``.  See :meth:`sklearn.neighbors.NearestNeighbors.radius_neighbors_graph`."
msgstr ""

#: ../modules/clustering.rst:841
msgid "The dataset can be compressed, either by removing exact duplicates if these occur in your data, or by using BIRCH. Then you only have a relatively small number of representatives for a large number of points. You can then provide a ``sample_weight`` when fitting DBSCAN."
msgstr ""

#: ../modules/clustering.rst:848
msgid "\"A Density-Based Algorithm for Discovering Clusters in Large Spatial Databases with Noise\" Ester, M., H. P. Kriegel, J. Sander, and X. Xu, In Proceedings of the 2nd International Conference on Knowledge Discovery and Data Mining, Portland, OR, AAAI Press, pp. 226–231. 1996"
msgstr ""

#: ../modules/clustering.rst:854
msgid "\"DBSCAN revisited, revisited: why and how you should (still) use DBSCAN. Schubert, E., Sander, J., Ester, M., Kriegel, H. P., & Xu, X. (2017). In ACM Transactions on Database Systems (TODS), 42(3), 19."
msgstr ""

#: ../modules/clustering.rst:861
msgid "OPTICS"
msgstr ""

#: ../modules/clustering.rst:863
msgid "The :class:`OPTICS` algorithm shares many similarities with the :class:`DBSCAN` algorithm, and can be considered a generalization of DBSCAN that relaxes the ``eps`` requirement from a single value to a value range. The key difference between DBSCAN and OPTICS is that the OPTICS algorithm builds a *reachability* graph, which assigns each sample both a ``reachability_`` distance, and a spot within the cluster ``ordering_`` attribute; these two attributes are assigned when the model is fitted, and are used to determine cluster membership. If OPTICS is run with the default value of *inf* set for ``max_eps``, then DBSCAN style cluster extraction can be performed repeatedly in linear time for any given ``eps`` value using the ``cluster_optics_dbscan`` method. Setting ``max_eps`` to a lower value will result in shorter run times, and can be thought of as the maximum neighborhood radius from each point to find other potential reachable points."
msgstr ""

#: ../modules/clustering.rst:882
msgid "optics_results"
msgstr ""

#: ../modules/clustering.rst:883
msgid "The *reachability* distances generated by OPTICS allow for variable density extraction of clusters within a single data set. As shown in the above plot, combining *reachability* distances and data set ``ordering_`` produces a *reachability plot*, where point density is represented on the Y-axis, and points are ordered such that nearby points are adjacent. 'Cutting' the reachability plot at a single value produces DBSCAN like results; all points above the 'cut' are classified as noise, and each time that there is a break when reading from left to right signifies a new cluster. The default cluster extraction with OPTICS looks at the steep slopes within the graph to find clusters, and the user can define what counts as a steep slope using the parameter ``xi``. There are also other possibilities for analysis on the graph itself, such as generating hierarchical representations of the data through reachability-plot dendrograms, and the hierarchy of clusters detected by the algorithm can be accessed through the ``cluster_hierarchy_`` parameter. The plot above has been color-coded so that cluster colors in planar space match the linear segment clusters of the reachability plot. Note that the blue and red clusters are adjacent in the reachability plot, and can be hierarchically represented as children of a larger parent cluster."
msgstr ""

#: ../modules/clustering.rst:904
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_optics.py`"
msgstr ""

msgid "Comparison with DBSCAN"
msgstr ""

#: ../modules/clustering.rst:909
msgid "The results from OPTICS ``cluster_optics_dbscan`` method and DBSCAN are very similar, but not always identical; specifically, labeling of periphery and noise points. This is in part because the first samples of each dense area processed by OPTICS have a large reachability value while being close to other points in their area, and will thus sometimes be marked as noise rather than periphery. This affects adjacent points when they are considered as candidates for being marked as either periphery or noise."
msgstr ""

#: ../modules/clustering.rst:917
msgid "Note that for any single value of ``eps``, DBSCAN will tend to have a shorter run time than OPTICS; however, for repeated runs at varying ``eps`` values, a single run of OPTICS may require less cumulative runtime than DBSCAN. It is also important to note that OPTICS' output is close to DBSCAN's only if ``eps`` and ``max_eps`` are close."
msgstr ""

msgid "Computational Complexity"
msgstr ""

#: ../modules/clustering.rst:925
msgid "Spatial indexing trees are used to avoid calculating the full distance matrix, and allow for efficient memory usage on large sets of samples. Different distance metrics can be supplied via the ``metric`` keyword."
msgstr ""

#: ../modules/clustering.rst:929
msgid "For large datasets, similar (but not identical) results can be obtained via `HDBSCAN <https://hdbscan.readthedocs.io>`_. The HDBSCAN implementation is multithreaded, and has better algorithmic runtime complexity than OPTICS, at the cost of worse memory scaling. For extremely large datasets that exhaust system memory using HDBSCAN, OPTICS will maintain :math:`n` (as opposed to :math:`n^2`) memory scaling; however, tuning of the ``max_eps`` parameter will likely need to be used to give a solution in a reasonable amount of wall time."
msgstr ""

#: ../modules/clustering.rst:940
msgid "\"OPTICS: ordering points to identify the clustering structure.\" Ankerst, Mihael, Markus M. Breunig, Hans-Peter Kriegel, and Jörg Sander. In ACM Sigmod Record, vol. 28, no. 2, pp. 49-60. ACM, 1999."
msgstr ""

#: ../modules/clustering.rst:947
msgid "Birch"
msgstr ""

#: ../modules/clustering.rst:949
msgid "The :class:`Birch` builds a tree called the Clustering Feature Tree (CFT) for the given data. The data is essentially lossy compressed to a set of Clustering Feature nodes (CF Nodes). The CF Nodes have a number of subclusters called Clustering Feature subclusters (CF Subclusters) and these CF Subclusters located in the non-terminal CF Nodes can have CF Nodes as children."
msgstr ""

#: ../modules/clustering.rst:956
msgid "The CF Subclusters hold the necessary information for clustering which prevents the need to hold the entire input data in memory. This information includes:"
msgstr ""

#: ../modules/clustering.rst:959
msgid "Number of samples in a subcluster."
msgstr ""

#: ../modules/clustering.rst:960
msgid "Linear Sum - An n-dimensional vector holding the sum of all samples"
msgstr ""

#: ../modules/clustering.rst:961
msgid "Squared Sum - Sum of the squared L2 norm of all samples."
msgstr ""

#: ../modules/clustering.rst:962
msgid "Centroids - To avoid recalculation linear sum / n_samples."
msgstr ""

#: ../modules/clustering.rst:963
msgid "Squared norm of the centroids."
msgstr ""

#: ../modules/clustering.rst:965
msgid "The Birch algorithm has two parameters, the threshold and the branching factor. The branching factor limits the number of subclusters in a node and the threshold limits the distance between the entering sample and the existing subclusters."
msgstr ""

#: ../modules/clustering.rst:970
msgid "This algorithm can be viewed as an instance or data reduction method, since it reduces the input data to a set of subclusters which are obtained directly from the leaves of the CFT. This reduced data can be further processed by feeding it into a global clusterer. This global clusterer can be set by ``n_clusters``. If ``n_clusters`` is set to None, the subclusters from the leaves are directly read off, otherwise a global clustering step labels these subclusters into global clusters (labels) and the samples are mapped to the global label of the nearest subcluster."
msgstr ""

#: ../modules/clustering.rst:978
msgid "**Algorithm description:**"
msgstr ""

#: ../modules/clustering.rst:980
msgid "A new sample is inserted into the root of the CF Tree which is a CF Node. It is then merged with the subcluster of the root, that has the smallest radius after merging, constrained by the threshold and branching factor conditions. If the subcluster has any child node, then this is done repeatedly till it reaches a leaf. After finding the nearest subcluster in the leaf, the properties of this subcluster and the parent subclusters are recursively updated."
msgstr ""

#: ../modules/clustering.rst:987
msgid "If the radius of the subcluster obtained by merging the new sample and the nearest subcluster is greater than the square of the threshold and if the number of subclusters is greater than the branching factor, then a space is temporarily allocated to this new sample. The two farthest subclusters are taken and the subclusters are divided into two groups on the basis of the distance between these subclusters."
msgstr ""

#: ../modules/clustering.rst:994
msgid "If this split node has a parent subcluster and there is room for a new subcluster, then the parent is split into two. If there is no room, then this node is again split into two and the process is continued recursively, till it reaches the root."
msgstr ""

#: ../modules/clustering.rst:999
msgid "**Birch or MiniBatchKMeans?**"
msgstr ""

#: ../modules/clustering.rst:1001
msgid "Birch does not scale very well to high dimensional data. As a rule of thumb if ``n_features`` is greater than twenty, it is generally better to use MiniBatchKMeans."
msgstr ""

#: ../modules/clustering.rst:1003
msgid "If the number of instances of data needs to be reduced, or if one wants a large number of subclusters either as a preprocessing step or otherwise, Birch is more useful than MiniBatchKMeans."
msgstr ""

#: ../modules/clustering.rst:1008
msgid "**How to use partial_fit?**"
msgstr ""

#: ../modules/clustering.rst:1010
msgid "To avoid the computation of global clustering, for every call of ``partial_fit`` the user is advised"
msgstr ""

#: ../modules/clustering.rst:1013
msgid "To set ``n_clusters=None`` initially"
msgstr ""

#: ../modules/clustering.rst:1014
msgid "Train all data by multiple calls to partial_fit."
msgstr ""

#: ../modules/clustering.rst:1015
msgid "Set ``n_clusters`` to a required value using ``brc.set_params(n_clusters=n_clusters)``."
msgstr ""

#: ../modules/clustering.rst:1017
msgid "Call ``partial_fit`` finally with no arguments, i.e. ``brc.partial_fit()`` which performs the global clustering."
msgstr ""

#: ../modules/clustering.rst:1025
msgid "Tian Zhang, Raghu Ramakrishnan, Maron Livny BIRCH: An efficient data clustering method for large databases. https://www.cs.sfu.ca/CourseCentral/459/han/papers/zhang96.pdf"
msgstr ""

#: ../modules/clustering.rst:1029
msgid "Roberto Perdisci JBirch - Java implementation of BIRCH clustering algorithm https://code.google.com/archive/p/jbirch"
msgstr ""

#: ../modules/clustering.rst:1037
msgid "Clustering performance evaluation"
msgstr ""

#: ../modules/clustering.rst:1039
msgid "Evaluating the performance of a clustering algorithm is not as trivial as counting the number of errors or the precision and recall of a supervised classification algorithm. In particular any evaluation metric should not take the absolute values of the cluster labels into account but rather if this clustering define separations of the data similar to some ground truth set of classes or satisfying some assumption such that members belong to the same class are more similar than members of different classes according to some similarity metric."
msgstr ""

#: ../modules/clustering.rst:1054
msgid "Rand index"
msgstr ""

#: ../modules/clustering.rst:1056
msgid "Given the knowledge of the ground truth class assignments ``labels_true`` and our clustering algorithm assignments of the same samples ``labels_pred``, the **(adjusted or unadjusted) Rand index** is a function that measures the **similarity** of the two assignments, ignoring permutations::"
msgstr ""

#: ../modules/clustering.rst:1068
msgid "The Rand index does not ensure to obtain a value close to 0.0 for a random labelling. The adjusted Rand index **corrects for chance** and will give such a baseline."
msgstr ""

#: ../modules/clustering.rst:1075
msgid "As with all clustering metrics, one can permute 0 and 1 in the predicted labels, rename 2 to 3, and get the same score::"
msgstr ""

#: ../modules/clustering.rst:1084
msgid "Furthermore, both :func:`rand_score` :func:`adjusted_rand_score` are **symmetric**: swapping the argument does not change the scores. They can thus be used as **consensus measures**::"
msgstr ""

#: ../modules/clustering.rst:1093 ../modules/clustering.rst:1248
#: ../modules/clustering.rst:1606
msgid "Perfect labeling is scored 1.0::"
msgstr ""

#: ../modules/clustering.rst:1101
msgid "Poorly agreeing labels (e.g. independent labelings) have lower scores, and for the adjusted Rand index the score will be negative or close to zero. However, for the unadjusted Rand index the score, while lower, will not necessarily be close to zero.::"
msgstr ""

#: ../modules/clustering.rst:1115 ../modules/clustering.rst:1271
#: ../modules/clustering.rst:1480 ../modules/clustering.rst:1620
#: ../modules/clustering.rst:1706 ../modules/clustering.rst:1759
#: ../modules/clustering.rst:1837 ../modules/clustering.rst:1922
msgid "Advantages"
msgstr ""

#: ../modules/clustering.rst:1117
msgid "**Interpretability**: The unadjusted Rand index is proportional to the number of sample pairs whose labels are the same in both `labels_pred` and `labels_true`, or are different in both."
msgstr ""

#: ../modules/clustering.rst:1121
msgid "**Random (uniform) label assignments have an adjusted Rand index score close to 0.0** for any value of ``n_clusters`` and ``n_samples`` (which is not the case for the unadjusted Rand index or the V-measure for instance)."
msgstr ""

#: ../modules/clustering.rst:1126
msgid "**Bounded range**: Lower values indicate different labelings, similar clusterings have a high (adjusted or unadjusted) Rand index, 1.0 is the perfect match score. The score range is [0, 1] for the unadjusted Rand index and [-1, 1] for the adjusted Rand index."
msgstr ""

#: ../modules/clustering.rst:1131
msgid "**No assumption is made on the cluster structure**: The (adjusted or unadjusted) Rand index can be used to compare all kinds of clustering algorithms, and can be used to compare clustering algorithms such as k-means which assumes isotropic blob shapes with results of spectral clustering algorithms which can find cluster with \"folded\" shapes."
msgstr ""

#: ../modules/clustering.rst:1140 ../modules/clustering.rst:1284
#: ../modules/clustering.rst:1495 ../modules/clustering.rst:1639
#: ../modules/clustering.rst:1716 ../modules/clustering.rst:1768
#: ../modules/clustering.rst:1843 ../modules/clustering.rst:1932
msgid "Drawbacks"
msgstr ""

#: ../modules/clustering.rst:1142
msgid "Contrary to inertia, the **(adjusted or unadjusted) Rand index requires knowledge of the ground truth classes** which is almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting)."
msgstr ""

#: ../modules/clustering.rst:1147
msgid "However (adjusted or unadjusted) Rand index can also be useful in a purely unsupervised setting as a building block for a Consensus Index that can be used for clustering model selection (TODO)."
msgstr ""

#: ../modules/clustering.rst:1151
msgid "The **unadjusted Rand index is often close to 1.0** even if the clusterings themselves differ significantly. This can be understood when interpreting the Rand index as the accuracy of element pair labeling resulting from the clusterings: In practice there often is a majority of element pairs that are assigned the ``different`` pair label under both the predicted and the ground truth clustering resulting in a high proportion of pair labels that agree, which leads subsequently to a high score."
msgstr ""

#: ../modules/clustering.rst:1162 ../modules/clustering.rst:1521
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_adjusted_for_chance_measures.py`: Analysis of the impact of the dataset size on the value of clustering measures for random assignments."
msgstr ""

#: ../modules/clustering.rst:1168 ../modules/clustering.rst:1307
#: ../modules/clustering.rst:1527 ../modules/clustering.rst:1775
#: ../modules/clustering.rst:1851
msgid "Mathematical formulation"
msgstr ""

#: ../modules/clustering.rst:1170
msgid "If C is a ground truth class assignment and K the clustering, let us define :math:`a` and :math:`b` as:"
msgstr ""

#: ../modules/clustering.rst:1173
msgid ":math:`a`, the number of pairs of elements that are in the same set in C and in the same set in K"
msgstr ""

#: ../modules/clustering.rst:1176
msgid ":math:`b`, the number of pairs of elements that are in different sets in C and in different sets in K"
msgstr ""

#: ../modules/clustering.rst:1179
msgid "The unadjusted Rand index is then given by:"
msgstr ""

#: ../modules/clustering.rst:1181
msgid "\\text{RI} = \\frac{a + b}{C_2^{n_{samples}}}\n\n"
msgstr ""

#: ../modules/clustering.rst:1183
msgid "where :math:`C_2^{n_{samples}}` is the total number of possible pairs in the dataset. It does not matter if the calculation is performed on ordered pairs or unordered pairs as long as the calculation is performed consistently."
msgstr ""

#: ../modules/clustering.rst:1188
msgid "However, the Rand index does not guarantee that random label assignments will get a value close to zero (esp. if the number of clusters is in the same order of magnitude as the number of samples)."
msgstr ""

#: ../modules/clustering.rst:1192
msgid "To counter this effect we can discount the expected RI :math:`E[\\text{RI}]` of random labelings by defining the adjusted Rand index as follows:"
msgstr ""

#: ../modules/clustering.rst:1195
msgid "\\text{ARI} = \\frac{\\text{RI} - E[\\text{RI}]}{\\max(\\text{RI}) - E[\\text{RI}]}\n\n"
msgstr ""

#: ../modules/clustering.rst:1199
#, python-format
msgid "`Comparing Partitions <https://link.springer.com/article/10.1007%2FBF01908075>`_ L. Hubert and P. Arabie, Journal of Classification 1985"
msgstr ""

#: ../modules/clustering.rst:1203
msgid "`Properties of the Hubert-Arabie adjusted Rand index <https://psycnet.apa.org/record/2004-17801-007>`_ D. Steinley, Psychological Methods 2004"
msgstr ""

#: ../modules/clustering.rst:1207
msgid "`Wikipedia entry for the Rand index <https://en.wikipedia.org/wiki/Rand_index>`_"
msgstr ""

#: ../modules/clustering.rst:1210
msgid "`Wikipedia entry for the adjusted Rand index <https://en.wikipedia.org/wiki/Rand_index#Adjusted_Rand_index>`_"
msgstr ""

#: ../modules/clustering.rst:1217
msgid "Mutual Information based scores"
msgstr ""

#: ../modules/clustering.rst:1219
msgid "Given the knowledge of the ground truth class assignments ``labels_true`` and our clustering algorithm assignments of the same samples ``labels_pred``, the **Mutual Information** is a function that measures the **agreement** of the two assignments, ignoring permutations.  Two different normalized versions of this measure are available, **Normalized Mutual Information (NMI)** and **Adjusted Mutual Information (AMI)**. NMI is often used in the literature, while AMI was proposed more recently and is **normalized against chance**::"
msgstr ""

#: ../modules/clustering.rst:1234 ../modules/clustering.rst:1598
msgid "One can permute 0 and 1 in the predicted labels, rename 2 to 3 and get the same score::"
msgstr ""

#: ../modules/clustering.rst:1241
msgid "All, :func:`mutual_info_score`, :func:`adjusted_mutual_info_score` and :func:`normalized_mutual_info_score` are symmetric: swapping the argument does not change the score. Thus they can be used as a **consensus measure**::"
msgstr ""

#: ../modules/clustering.rst:1257
msgid "This is not true for ``mutual_info_score``, which is therefore harder to judge::"
msgstr ""

#: ../modules/clustering.rst:1262
msgid "Bad (e.g. independent labelings) have non-positive scores::"
msgstr ""

#: ../modules/clustering.rst:1273
msgid "**Random (uniform) label assignments have a AMI score close to 0.0** for any value of ``n_clusters`` and ``n_samples`` (which is not the case for raw Mutual Information or the V-measure for instance)."
msgstr ""

#: ../modules/clustering.rst:1277
msgid "**Upper bound  of 1**:  Values close to zero indicate two label assignments that are largely independent, while values close to one indicate significant agreement. Further, an AMI of exactly 1 indicates that the two label assignments are equal (with or without permutation)."
msgstr ""

#: ../modules/clustering.rst:1286
msgid "Contrary to inertia, **MI-based measures require the knowledge of the ground truth classes** while almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting)."
msgstr ""

#: ../modules/clustering.rst:1291
msgid "However MI-based measures can also be useful in purely unsupervised setting as a building block for a Consensus Index that can be used for clustering model selection."
msgstr ""

#: ../modules/clustering.rst:1295
msgid "NMI and MI are not adjusted against chance."
msgstr ""

#: ../modules/clustering.rst:1300
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_adjusted_for_chance_measures.py`: Analysis of the impact of the dataset size on the value of clustering measures for random assignments. This example also includes the Adjusted Rand Index."
msgstr ""

#: ../modules/clustering.rst:1309
msgid "Assume two label assignments (of the same N objects), :math:`U` and :math:`V`. Their entropy is the amount of uncertainty for a partition set, defined by:"
msgstr ""

#: ../modules/clustering.rst:1312
msgid "H(U) = - \\sum_{i=1}^{|U|}P(i)\\log(P(i))\n\n"
msgstr ""

#: ../modules/clustering.rst:1314
msgid "where :math:`P(i) = |U_i| / N` is the probability that an object picked at random from :math:`U` falls into class :math:`U_i`. Likewise for :math:`V`:"
msgstr ""

#: ../modules/clustering.rst:1317
msgid "H(V) = - \\sum_{j=1}^{|V|}P'(j)\\log(P'(j))\n\n"
msgstr ""

#: ../modules/clustering.rst:1319
msgid "With :math:`P'(j) = |V_j| / N`. The mutual information (MI) between :math:`U` and :math:`V` is calculated by:"
msgstr ""

#: ../modules/clustering.rst:1322
msgid "\\text{MI}(U, V) = \\sum_{i=1}^{|U|}\\sum_{j=1}^{|V|}P(i, j)\\log\\left(\\frac{P(i,j)}{P(i)P'(j)}\\right)\n\n"
msgstr ""

#: ../modules/clustering.rst:1324
msgid "where :math:`P(i, j) = |U_i \\cap V_j| / N` is the probability that an object picked at random falls into both classes :math:`U_i` and :math:`V_j`."
msgstr ""

#: ../modules/clustering.rst:1327
msgid "It also can be expressed in set cardinality formulation:"
msgstr ""

#: ../modules/clustering.rst:1329
msgid "\\text{MI}(U, V) = \\sum_{i=1}^{|U|} \\sum_{j=1}^{|V|} \\frac{|U_i \\cap V_j|}{N}\\log\\left(\\frac{N|U_i \\cap V_j|}{|U_i||V_j|}\\right)\n\n"
msgstr ""

#: ../modules/clustering.rst:1331
msgid "The normalized mutual information is defined as"
msgstr ""

#: ../modules/clustering.rst:1333
msgid "\\text{NMI}(U, V) = \\frac{\\text{MI}(U, V)}{\\text{mean}(H(U), H(V))}\n\n"
msgstr ""

#: ../modules/clustering.rst:1335
msgid "This value of the mutual information and also the normalized variant is not adjusted for chance and will tend to increase as the number of different labels (clusters) increases, regardless of the actual amount of \"mutual information\" between the label assignments."
msgstr ""

#: ../modules/clustering.rst:1340
msgid "The expected value for the mutual information can be calculated using the following equation [VEB2009]_. In this equation, :math:`a_i = |U_i|` (the number of elements in :math:`U_i`) and :math:`b_j = |V_j|` (the number of elements in :math:`V_j`)."
msgstr ""

#: ../modules/clustering.rst:1346
msgid "E[\\text{MI}(U,V)]=\\sum_{i=1}^{|U|} \\sum_{j=1}^{|V|} \\sum_{n_{ij}=(a_i+b_j-N)^+\n"
"}^{\\min(a_i, b_j)} \\frac{n_{ij}}{N}\\log \\left( \\frac{ N.n_{ij}}{a_i b_j}\\right)\n"
"\\frac{a_i!b_j!(N-a_i)!(N-b_j)!}{N!n_{ij}!(a_i-n_{ij})!(b_j-n_{ij})!\n"
"(N-a_i-b_j+n_{ij})!}\n\n"
msgstr ""

#: ../modules/clustering.rst:1351
msgid "Using the expected value, the adjusted mutual information can then be calculated using a similar form to that of the adjusted Rand index:"
msgstr ""

#: ../modules/clustering.rst:1354
msgid "\\text{AMI} = \\frac{\\text{MI} - E[\\text{MI}]}{\\text{mean}(H(U), H(V)) - E[\\text{MI}]}\n\n"
msgstr ""

#: ../modules/clustering.rst:1356
msgid "For normalized mutual information and adjusted mutual information, the normalizing value is typically some *generalized* mean of the entropies of each clustering. Various generalized means exist, and no firm rules exist for preferring one over the others.  The decision is largely a field-by-field basis; for instance, in community detection, the arithmetic mean is most common. Each normalizing method provides \"qualitatively similar behaviours\" [YAT2016]_. In our implementation, this is controlled by the ``average_method`` parameter."
msgstr ""

#: ../modules/clustering.rst:1364
msgid "Vinh et al. (2010) named variants of NMI and AMI by their averaging method [VEB2010]_. Their 'sqrt' and 'sum' averages are the geometric and arithmetic means; we use these more broadly common names."
msgstr ""

#: ../modules/clustering.rst:1370
msgid "Strehl, Alexander, and Joydeep Ghosh (2002). \"Cluster ensembles – a knowledge reuse framework for combining multiple partitions\". Journal of Machine Learning Research 3: 583–617. `doi:10.1162/153244303321897735 <http://strehl.com/download/strehl-jmlr02.pdf>`_."
msgstr ""

#: ../modules/clustering.rst:1375
msgid "`Wikipedia entry for the (normalized) Mutual Information <https://en.wikipedia.org/wiki/Mutual_Information>`_"
msgstr ""

#: ../modules/clustering.rst:1378
msgid "`Wikipedia entry for the Adjusted Mutual Information <https://en.wikipedia.org/wiki/Adjusted_Mutual_Information>`_"
msgstr ""

#: ../modules/clustering.rst:1381
msgid "Vinh, Epps, and Bailey, (2009). \"Information theoretic measures for clusterings comparison\". Proceedings of the 26th Annual International Conference on Machine Learning - ICML '09. `doi:10.1145/1553374.1553511 <https://dl.acm.org/citation.cfm?doid=1553374.1553511>`_. ISBN 9781605585161."
msgstr ""

#: ../modules/clustering.rst:1387
msgid "Vinh, Epps, and Bailey, (2010). \"Information Theoretic Measures for Clusterings Comparison: Variants, Properties, Normalization and Correction for Chance\". JMLR <http://jmlr.csail.mit.edu/papers/volume11/vinh10a/vinh10a.pdf>"
msgstr ""

#: ../modules/clustering.rst:1392
msgid "Yang, Algesheimer, and Tessone, (2016). \"A comparative analysis of community detection algorithms on artificial networks\". Scientific Reports 6: 30750. `doi:10.1038/srep30750 <https://www.nature.com/articles/srep30750>`_."
msgstr ""

#: ../modules/clustering.rst:1402
msgid "Homogeneity, completeness and V-measure"
msgstr ""

#: ../modules/clustering.rst:1404
msgid "Given the knowledge of the ground truth class assignments of the samples, it is possible to define some intuitive metric using conditional entropy analysis."
msgstr ""

#: ../modules/clustering.rst:1408
msgid "In particular Rosenberg and Hirschberg (2007) define the following two desirable objectives for any cluster assignment:"
msgstr ""

#: ../modules/clustering.rst:1411
msgid "**homogeneity**: each cluster contains only members of a single class."
msgstr ""

#: ../modules/clustering.rst:1413
msgid "**completeness**: all members of a given class are assigned to the same cluster."
msgstr ""

#: ../modules/clustering.rst:1416
msgid "We can turn those concept as scores :func:`homogeneity_score` and :func:`completeness_score`. Both are bounded below by 0.0 and above by 1.0 (higher is better)::"
msgstr ""

#: ../modules/clustering.rst:1430
msgid "Their harmonic mean called **V-measure** is computed by :func:`v_measure_score`::"
msgstr ""

#: ../modules/clustering.rst:1436
msgid "This function's formula is as follows:"
msgstr ""

#: ../modules/clustering.rst:1438
msgid "v = \\frac{(1 + \\beta) \\times \\text{homogeneity} \\times \\text{completeness}}{(\\beta \\times \\text{homogeneity} + \\text{completeness})}\n\n"
msgstr ""

#: ../modules/clustering.rst:1440
msgid "`beta` defaults to a value of 1.0, but for using a value less than 1 for beta::"
msgstr ""

#: ../modules/clustering.rst:1445
msgid "more weight will be attributed to homogeneity, and using a value greater than 1::"
msgstr ""

#: ../modules/clustering.rst:1450
msgid "more weight will be attributed to completeness."
msgstr ""

#: ../modules/clustering.rst:1452
msgid "The V-measure is actually equivalent to the mutual information (NMI) discussed above, with the aggregation function being the arithmetic mean [B2011]_."
msgstr ""

#: ../modules/clustering.rst:1455
msgid "Homogeneity, completeness and V-measure can be computed at once using :func:`homogeneity_completeness_v_measure` as follows::"
msgstr ""

#: ../modules/clustering.rst:1461
msgid "The following clustering assignment is slightly better, since it is homogeneous but not complete::"
msgstr ""

#: ../modules/clustering.rst:1470
msgid ":func:`v_measure_score` is **symmetric**: it can be used to evaluate the **agreement** of two independent assignments on the same dataset."
msgstr ""

#: ../modules/clustering.rst:1473
msgid "This is not the case for :func:`completeness_score` and :func:`homogeneity_score`: both are bound by the relationship::"
msgstr ""

#: ../modules/clustering.rst:1482
msgid "**Bounded scores**: 0.0 is as bad as it can be, 1.0 is a perfect score."
msgstr ""

#: ../modules/clustering.rst:1484
msgid "Intuitive interpretation: clustering with bad V-measure can be **qualitatively analyzed in terms of homogeneity and completeness** to better feel what 'kind' of mistakes is done by the assignment."
msgstr ""

#: ../modules/clustering.rst:1488 ../modules/clustering.rst:1632
msgid "**No assumption is made on the cluster structure**: can be used to compare clustering algorithms such as k-means which assumes isotropic blob shapes with results of spectral clustering algorithms which can find cluster with \"folded\" shapes."
msgstr ""

#: ../modules/clustering.rst:1497
msgid "The previously introduced metrics are **not normalized with regards to random labeling**: this means that depending on the number of samples, clusters and ground truth classes, a completely random labeling will not always yield the same values for homogeneity, completeness and hence v-measure. In particular **random labeling won't yield zero scores especially when the number of clusters is large**."
msgstr ""

#: ../modules/clustering.rst:1504
msgid "This problem can safely be ignored when the number of samples is more than a thousand and the number of clusters is less than 10. **For smaller sample sizes or larger number of clusters it is safer to use an adjusted index such as the Adjusted Rand Index (ARI)**."
msgstr ""

#: ../modules/clustering.rst:1514
msgid "These metrics **require the knowledge of the ground truth classes** while almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting)."
msgstr ""

#: ../modules/clustering.rst:1529
msgid "Homogeneity and completeness scores are formally given by:"
msgstr ""

#: ../modules/clustering.rst:1531
msgid "h = 1 - \\frac{H(C|K)}{H(C)}\n\n"
msgstr ""

#: ../modules/clustering.rst:1533
msgid "c = 1 - \\frac{H(K|C)}{H(K)}\n\n"
msgstr ""

#: ../modules/clustering.rst:1535
msgid "where :math:`H(C|K)` is the **conditional entropy of the classes given the cluster assignments** and is given by:"
msgstr ""

#: ../modules/clustering.rst:1538
msgid "H(C|K) = - \\sum_{c=1}^{|C|} \\sum_{k=1}^{|K|} \\frac{n_{c,k}}{n}\n"
"\\cdot \\log\\left(\\frac{n_{c,k}}{n_k}\\right)\n\n"
msgstr ""

#: ../modules/clustering.rst:1541
msgid "and :math:`H(C)` is the **entropy of the classes** and is given by:"
msgstr ""

#: ../modules/clustering.rst:1543
msgid "H(C) = - \\sum_{c=1}^{|C|} \\frac{n_c}{n} \\cdot \\log\\left(\\frac{n_c}{n}\\right)\n\n"
msgstr ""

#: ../modules/clustering.rst:1545
msgid "with :math:`n` the total number of samples, :math:`n_c` and :math:`n_k` the number of samples respectively belonging to class :math:`c` and cluster :math:`k`, and finally :math:`n_{c,k}` the number of samples from class :math:`c` assigned to cluster :math:`k`."
msgstr ""

#: ../modules/clustering.rst:1550
msgid "The **conditional entropy of clusters given class** :math:`H(K|C)` and the **entropy of clusters** :math:`H(K)` are defined in a symmetric manner."
msgstr ""

#: ../modules/clustering.rst:1553
msgid "Rosenberg and Hirschberg further define **V-measure** as the **harmonic mean of homogeneity and completeness**:"
msgstr ""

#: ../modules/clustering.rst:1556
msgid "v = 2 \\cdot \\frac{h \\cdot c}{h + c}\n\n"
msgstr ""

#: ../modules/clustering.rst:1560
msgid "`V-Measure: A conditional entropy-based external cluster evaluation measure <https://aclweb.org/anthology/D/D07/D07-1043.pdf>`_ Andrew Rosenberg and Julia Hirschberg, 2007"
msgstr ""

#: ../modules/clustering.rst:1564
msgid "`Identication and Characterization of Events in Social Media <http://www.cs.columbia.edu/~hila/hila-thesis-distributed.pdf>`_, Hila Becker, PhD Thesis."
msgstr ""

#: ../modules/clustering.rst:1571
msgid "Fowlkes-Mallows scores"
msgstr ""

#: ../modules/clustering.rst:1573
msgid "The Fowlkes-Mallows index (:func:`sklearn.metrics.fowlkes_mallows_score`) can be used when the ground truth class assignments of the samples is known. The Fowlkes-Mallows score FMI is defined as the geometric mean of the pairwise precision and recall:"
msgstr ""

#: ../modules/clustering.rst:1578
msgid "\\text{FMI} = \\frac{\\text{TP}}{\\sqrt{(\\text{TP} + \\text{FP}) (\\text{TP} + \\text{FN})}}\n\n"
msgstr ""

#: ../modules/clustering.rst:1580
msgid "Where ``TP`` is the number of **True Positive** (i.e. the number of pair of points that belong to the same clusters in both the true labels and the predicted labels), ``FP`` is the number of **False Positive** (i.e. the number of pair of points that belong to the same clusters in the true labels and not in the predicted labels) and ``FN`` is the number of **False Negative** (i.e the number of pair of points that belongs in the same clusters in the predicted labels and not in the true labels)."
msgstr ""

#: ../modules/clustering.rst:1588
msgid "The score ranges from 0 to 1. A high value indicates a good similarity between two clusters."
msgstr ""

#: ../modules/clustering.rst:1612
msgid "Bad (e.g. independent labelings) have zero scores::"
msgstr ""

#: ../modules/clustering.rst:1622
msgid "**Random (uniform) label assignments have a FMI score close to 0.0** for any value of ``n_clusters`` and ``n_samples`` (which is not the case for raw Mutual Information or the V-measure for instance)."
msgstr ""

#: ../modules/clustering.rst:1626
msgid "**Upper-bounded at 1**:  Values close to zero indicate two label assignments that are largely independent, while values close to one indicate significant agreement. Further, values of exactly 0 indicate **purely** independent label assignments and a FMI of exactly 1 indicates that the two label assignments are equal (with or without permutation)."
msgstr ""

#: ../modules/clustering.rst:1641
msgid "Contrary to inertia, **FMI-based measures require the knowledge of the ground truth classes** while almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting)."
msgstr ""

#: ../modules/clustering.rst:1648
msgid "E. B. Fowkles and C. L. Mallows, 1983. \"A method for comparing two hierarchical clusterings\". Journal of the American Statistical Association. http://wildfire.stat.ucla.edu/pdflibrary/fowlkes.pdf"
msgstr ""

#: ../modules/clustering.rst:1652
msgid "`Wikipedia entry for the Fowlkes-Mallows Index <https://en.wikipedia.org/wiki/Fowlkes-Mallows_index>`_"
msgstr ""

#: ../modules/clustering.rst:1658
msgid "Silhouette Coefficient"
msgstr ""

#: ../modules/clustering.rst:1660
msgid "If the ground truth labels are not known, evaluation must be performed using the model itself. The Silhouette Coefficient (:func:`sklearn.metrics.silhouette_score`) is an example of such an evaluation, where a higher Silhouette Coefficient score relates to a model with better defined clusters. The Silhouette Coefficient is defined for each sample and is composed of two scores:"
msgstr ""

#: ../modules/clustering.rst:1668
msgid "**a**: The mean distance between a sample and all other points in the same class."
msgstr ""

#: ../modules/clustering.rst:1671
msgid "**b**: The mean distance between a sample and all other points in the *next nearest cluster*."
msgstr ""

#: ../modules/clustering.rst:1674
msgid "The Silhouette Coefficient *s* for a single sample is then given as:"
msgstr ""

#: ../modules/clustering.rst:1676
msgid "s = \\frac{b - a}{max(a, b)}\n\n"
msgstr ""

#: ../modules/clustering.rst:1678
msgid "The Silhouette Coefficient for a set of samples is given as the mean of the Silhouette Coefficient for each sample."
msgstr ""

#: ../modules/clustering.rst:1687
msgid "In normal usage, the Silhouette Coefficient is applied to the results of a cluster analysis."
msgstr ""

#: ../modules/clustering.rst:1699
msgid "Peter J. Rousseeuw (1987). \"Silhouettes: a Graphical Aid to the Interpretation and Validation of Cluster Analysis\". Computational and Applied Mathematics 20: 53–65. `doi:10.1016/0377-0427(87)90125-7 <https://doi.org/10.1016/0377-0427(87)90125-7>`_."
msgstr ""

#: ../modules/clustering.rst:1708
msgid "The score is bounded between -1 for incorrect clustering and +1 for highly dense clustering. Scores around zero indicate overlapping clusters."
msgstr ""

#: ../modules/clustering.rst:1711 ../modules/clustering.rst:1761
msgid "The score is higher when clusters are dense and well separated, which relates to a standard concept of a cluster."
msgstr ""

#: ../modules/clustering.rst:1718
msgid "The Silhouette Coefficient is generally higher for convex clusters than other concepts of clusters, such as density based clusters like those obtained through DBSCAN."
msgstr ""

#: ../modules/clustering.rst:1724
msgid ":ref:`sphx_glr_auto_examples_cluster_plot_kmeans_silhouette_analysis.py` : In this example the silhouette analysis is used to choose an optimal value for n_clusters."
msgstr ""

#: ../modules/clustering.rst:1731
msgid "Calinski-Harabasz Index"
msgstr ""

#: ../modules/clustering.rst:1734
msgid "If the ground truth labels are not known, the Calinski-Harabasz index (:func:`sklearn.metrics.calinski_harabasz_score`) - also known as the Variance Ratio Criterion - can be used to evaluate the model, where a higher Calinski-Harabasz score relates to a model with better defined clusters."
msgstr ""

#: ../modules/clustering.rst:1739
msgid "The index is the ratio of the sum of between-clusters dispersion and of within-cluster dispersion for all clusters (where dispersion is defined as the sum of distances squared):"
msgstr ""

#: ../modules/clustering.rst:1748
msgid "In normal usage, the Calinski-Harabasz index is applied to the results of a cluster analysis:"
msgstr ""

#: ../modules/clustering.rst:1764
msgid "The score is fast to compute."
msgstr ""

#: ../modules/clustering.rst:1770
msgid "The Calinski-Harabasz index is generally higher for convex clusters than other concepts of clusters, such as density based clusters like those obtained through DBSCAN."
msgstr ""

#: ../modules/clustering.rst:1777
msgid "For a set of data :math:`E` of size :math:`n_E` which has been clustered into :math:`k` clusters, the Calinski-Harabasz score :math:`s` is defined as the ratio of the between-clusters dispersion mean and the within-cluster dispersion:"
msgstr ""

#: ../modules/clustering.rst:1781
msgid "s = \\frac{\\mathrm{tr}(B_k)}{\\mathrm{tr}(W_k)} \\times \\frac{n_E - k}{k - 1}\n\n"
msgstr ""

#: ../modules/clustering.rst:1784
msgid "where :math:`\\mathrm{tr}(B_k)` is trace of the between group dispersion matrix and :math:`\\mathrm{tr}(W_k)` is the trace of the within-cluster dispersion matrix defined by:"
msgstr ""

#: ../modules/clustering.rst:1788
msgid "W_k = \\sum_{q=1}^k \\sum_{x \\in C_q} (x - c_q) (x - c_q)^T\n\n"
msgstr ""

#: ../modules/clustering.rst:1790
msgid "B_k = \\sum_{q=1}^k n_q (c_q - c_E) (c_q - c_E)^T\n\n"
msgstr ""

#: ../modules/clustering.rst:1792
msgid "with :math:`C_q` the set of points in cluster :math:`q`, :math:`c_q` the center of cluster :math:`q`, :math:`c_E` the center of :math:`E`, and :math:`n_q` the number of points in cluster :math:`q`."
msgstr ""

#: ../modules/clustering.rst:1798
msgid "Caliński, T., & Harabasz, J. (1974). `\"A Dendrite Method for Cluster Analysis\" <https://www.researchgate.net/publication/233096619_A_Dendrite_Method_for_Cluster_Analysis>`_. Communications in Statistics-theory and Methods 3: 1-27. `doi:10.1080/03610927408827101 <https://doi.org/10.1080/03610927408827101>`_."
msgstr ""

#: ../modules/clustering.rst:1808
msgid "Davies-Bouldin Index"
msgstr ""

#: ../modules/clustering.rst:1810
msgid "If the ground truth labels are not known, the Davies-Bouldin index (:func:`sklearn.metrics.davies_bouldin_score`) can be used to evaluate the model, where a lower Davies-Bouldin index relates to a model with better separation between the clusters."
msgstr ""

#: ../modules/clustering.rst:1815
msgid "This index signifies the average 'similarity' between clusters, where the similarity is a measure that compares the distance between clusters with the size of the clusters themselves."
msgstr ""

#: ../modules/clustering.rst:1819
msgid "Zero is the lowest possible score. Values closer to zero indicate a better partition."
msgstr ""

#: ../modules/clustering.rst:1822
msgid "In normal usage, the Davies-Bouldin index is applied to the results of a cluster analysis as follows:"
msgstr ""

#: ../modules/clustering.rst:1839
msgid "The computation of Davies-Bouldin is simpler than that of Silhouette scores."
msgstr ""

#: ../modules/clustering.rst:1840
msgid "The index is computed only quantities and features inherent to the dataset."
msgstr ""

#: ../modules/clustering.rst:1845
msgid "The Davies-Boulding index is generally higher for convex clusters than other concepts of clusters, such as density based clusters like those obtained from DBSCAN."
msgstr ""

#: ../modules/clustering.rst:1848
msgid "The usage of centroid distance limits the distance metric to Euclidean space."
msgstr ""

#: ../modules/clustering.rst:1853
msgid "The index is defined as the average similarity between each cluster :math:`C_i` for :math:`i=1, ..., k` and its most similar one :math:`C_j`. In the context of this index, similarity is defined as a measure :math:`R_{ij}` that trades off:"
msgstr ""

#: ../modules/clustering.rst:1857
msgid ":math:`s_i`, the average distance between each point of cluster :math:`i` and the centroid of that cluster -- also know as cluster diameter."
msgstr ""

#: ../modules/clustering.rst:1859
msgid ":math:`d_{ij}`, the distance between cluster centroids :math:`i` and :math:`j`."
msgstr ""

#: ../modules/clustering.rst:1861
msgid "A simple choice to construct :math:`R_{ij}` so that it is nonnegative and symmetric is:"
msgstr ""

#: ../modules/clustering.rst:1864
msgid "R_{ij} = \\frac{s_i + s_j}{d_{ij}}\n\n"
msgstr ""

#: ../modules/clustering.rst:1867
msgid "Then the Davies-Bouldin index is defined as:"
msgstr ""

#: ../modules/clustering.rst:1869
msgid "DB = \\frac{1}{k} \\sum_{i=1}^k \\max_{i \\neq j} R_{ij}\n\n"
msgstr ""

#: ../modules/clustering.rst:1875
msgid "Davies, David L.; Bouldin, Donald W. (1979). \"A Cluster Separation Measure\" IEEE Transactions on Pattern Analysis and Machine Intelligence. PAMI-1 (2): 224-227. `doi:10.1109/TPAMI.1979.4766909 <https://doi.org/10.1109/TPAMI.1979.4766909>`_."
msgstr ""

#: ../modules/clustering.rst:1881
msgid "Halkidi, Maria; Batistakis, Yannis; Vazirgiannis, Michalis (2001). \"On Clustering Validation Techniques\" Journal of Intelligent Information Systems, 17(2-3), 107-145. `doi:10.1023/A:1012801612483 <https://doi.org/10.1023/A:1012801612483>`_."
msgstr ""

#: ../modules/clustering.rst:1886
msgid "`Wikipedia entry for Davies-Bouldin index <https://en.wikipedia.org/wiki/Davies–Bouldin_index>`_."
msgstr ""

#: ../modules/clustering.rst:1893
msgid "Contingency Matrix"
msgstr ""

#: ../modules/clustering.rst:1895
msgid "Contingency matrix (:func:`sklearn.metrics.cluster.contingency_matrix`) reports the intersection cardinality for every true/predicted cluster pair. The contingency matrix provides sufficient statistics for all clustering metrics where the samples are independent and identically distributed and one doesn't need to account for some instances not being clustered."
msgstr ""

#: ../modules/clustering.rst:1901
msgid "Here is an example::"
msgstr ""

#: ../modules/clustering.rst:1910
msgid "The first row of output array indicates that there are three samples whose true cluster is \"a\". Of them, two are in predicted cluster 0, one is in 1, and none is in 2. And the second row indicates that there are three samples whose true cluster is \"b\". Of them, none is in predicted cluster 0, one is in 1 and two are in 2."
msgstr ""

#: ../modules/clustering.rst:1916
msgid "A :ref:`confusion matrix <confusion_matrix>` for classification is a square contingency matrix where the order of rows and columns correspond to a list of classes."
msgstr ""

#: ../modules/clustering.rst:1924
msgid "Allows to examine the spread of each true cluster across predicted clusters and vice versa."
msgstr ""

#: ../modules/clustering.rst:1927
msgid "The contingency table calculated is typically utilized in the calculation of a similarity statistic (like the others listed in this document) between the two clusterings."
msgstr ""

#: ../modules/clustering.rst:1934
msgid "Contingency matrix is easy to interpret for a small number of clusters, but becomes very hard to interpret for a large number of clusters."
msgstr ""

#: ../modules/clustering.rst:1937
msgid "It doesn't give a single metric to use as an objective for clustering optimisation."
msgstr ""

#: ../modules/clustering.rst:1943
msgid "`Wikipedia entry for contingency matrix <https://en.wikipedia.org/wiki/Contingency_table>`_"
msgstr ""

#: ../modules/clustering.rst:1949
msgid "Pair Confusion Matrix"
msgstr ""

#: ../modules/clustering.rst:1951
msgid "The pair confusion matrix (:func:`sklearn.metrics.cluster.pair_confusion_matrix`) is a 2x2 similarity matrix"
msgstr ""

#: ../modules/clustering.rst:1955
msgid "C = \\left[\\begin{matrix}\n"
"C_{00} & C_{01} \\\\\n"
"C_{10} & C_{11}\n"
"\\end{matrix}\\right]\n\n"
msgstr ""

#: ../modules/clustering.rst:1961
msgid "between two clusterings computed by considering all pairs of samples and counting pairs that are assigned into the same or into different clusters under the true and predicted clusterings."
msgstr ""

#: ../modules/clustering.rst:1965
msgid "It has the following entries:"
msgstr ""

#: ../modules/clustering.rst:1967
msgid ":math:`C_{00}` : number of pairs with both clusterings having the samples not clustered together"
msgstr ""

#: ../modules/clustering.rst:1970
msgid ":math:`C_{10}` : number of pairs with the true label clustering having the samples clustered together but the other clustering not having the samples clustered together"
msgstr ""

#: ../modules/clustering.rst:1974
msgid ":math:`C_{01}` : number of pairs with the true label clustering not having the samples clustered together but the other clustering having the samples clustered together"
msgstr ""

#: ../modules/clustering.rst:1978
msgid ":math:`C_{11}` : number of pairs with both clusterings having the samples clustered together"
msgstr ""

#: ../modules/clustering.rst:1981
msgid "Considering a pair of samples that is clustered together a positive pair, then as in binary classification the count of true negatives is :math:`C_{00}`, false negatives is :math:`C_{10}`, true positives is :math:`C_{11}` and false positives is :math:`C_{01}`."
msgstr ""

#: ../modules/clustering.rst:1986
msgid "Perfectly matching labelings have all non-zero entries on the diagonal regardless of actual label values::"
msgstr ""

#: ../modules/clustering.rst:2000
msgid "Labelings that assign all classes members to the same clusters are complete but may not always be pure, hence penalized, and have some off-diagonal non-zero entries::"
msgstr ""

#: ../modules/clustering.rst:2008
msgid "The matrix is not symmetric::"
msgstr ""

#: ../modules/clustering.rst:2014
msgid "If classes members are completely split across different clusters, the assignment is totally incomplete, hence the matrix has all zero diagonal entries::"
msgstr ""

#: ../modules/clustering.rst:2024
#, python-format
msgid "L. Hubert and P. Arabie, Comparing Partitions, Journal of Classification 1985 <https://link.springer.com/article/10.1007%2FBF01908075>_"
msgstr ""

