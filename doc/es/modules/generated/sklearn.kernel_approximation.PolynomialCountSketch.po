msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-05-21 20:53\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.kernel_approximation.PolynomialCountSketch.po\n"
"X-Crowdin-File-ID: 4898\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.kernel_approximation.PolynomialCountSketch.rst:2
msgid ":mod:`sklearn.kernel_approximation`.PolynomialCountSketch"
msgstr ":mod:`sklearn.kernel_approximation`.PolynomialCountSketch"

#: of sklearn.kernel_approximation.PolynomialCountSketch:2
msgid "Polynomial kernel approximation via Tensor Sketch."
msgstr "Aproximación de núcleos polinómicos a través de Tensor Sketch."

#: of sklearn.kernel_approximation.PolynomialCountSketch:4
msgid "Implements Tensor Sketch, which approximates the feature map of the polynomial kernel::"
msgstr "Implementa el Tensor Sketch, el cual aproxima el mapa de características del núcleo polinómico::"

#: of sklearn.kernel_approximation.PolynomialCountSketch:9
msgid "by efficiently computing a Count Sketch of the outer product of a vector with itself using Fast Fourier Transforms (FFT). Read more in the :ref:`User Guide <polynomial_kernel_approx>`."
msgstr "mediante el calculo eficiente de un Count Sketch del producto externo de un vector con sí mismo utilizando Transformaciones de Fourier Rapidas (TFR). Lea más en la :ref:`Manual de Usuario <polynomial_kernel_approx>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.kernel_approximation.PolynomialCountSketch
#: sklearn.kernel_approximation.PolynomialCountSketch.fit
#: sklearn.kernel_approximation.PolynomialCountSketch.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.kernel_approximation.PolynomialCountSketch:19
msgid "**gamma**"
msgstr "**gamma**"

#: of
msgid "float, default=1.0"
msgstr "float, default=1.0"

#: of sklearn.kernel_approximation.PolynomialCountSketch:18
msgid "Parameter of the polynomial kernel whose feature map will be approximated."
msgstr "Parámetro del núcleo polinomial cuyo mapa de características será aproximado."

#: of sklearn.kernel_approximation.PolynomialCountSketch:23
msgid "**degree**"
msgstr "**degree**"

#: of
msgid "int, default=2"
msgstr "int, default=2"

#: of sklearn.kernel_approximation.PolynomialCountSketch:22
msgid "Degree of the polynomial kernel whose feature map will be approximated."
msgstr "Grado del núcleo polinomial cuyo mapa de características será aproximado."

#: of sklearn.kernel_approximation.PolynomialCountSketch:27
msgid "**coef0**"
msgstr "**coef0**"

#: of
msgid "int, default=0"
msgstr "int, default=0"

#: of sklearn.kernel_approximation.PolynomialCountSketch:26
msgid "Constant term of the polynomial kernel whose feature map will be approximated."
msgstr "Termino constante del núcleo polinomial cuyo mapa de características será aproximado."

#: of sklearn.kernel_approximation.PolynomialCountSketch:34
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.kernel_approximation.PolynomialCountSketch:30
msgid "Dimensionality of the output feature space. Usually, n_components should be greater than the number of features in input samples in order to achieve good performance. The optimal score / run time balance is typically achieved around n_components = 10 * n_features, but this depends on the specific dataset being used."
msgstr "Dimensionalidad del espacio de características salida. Usualmente, n_components_ debería ser mayor al número de características en las muestras de entrada para lograr un buen rendimiento. El balance óptimo entre el puntaje y el tiempo de ejecución es normalmente obtenido entre n_components = 10 * n_features, pero esto depende en el conjunto de datos específico siendo utilizado."

#: of sklearn.kernel_approximation.PolynomialCountSketch:42
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance, default=None"
msgstr "int, RandomState instance, default=None"

#: of sklearn.kernel_approximation.PolynomialCountSketch:37
msgid "Determines random number generation for indexHash and bitHash initialization. Pass an int for reproducible results across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Determina la generación de números aleatorios para la inicialización de indexHash y bitHash. Pase un int para una salida reproducible a través de múltiples llamadas a la función. Consulta :term:`Glossary <random_state>`."

#: of sklearn.kernel_approximation.PolynomialCountSketch
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.kernel_approximation.PolynomialCountSketch:48
msgid "**indexHash_**"
msgstr "**indexHash_**"

#: of
msgid "ndarray of shape (degree, n_features), dtype=int64"
msgstr "ndarray de forma (degree, n_features), dtype=int64"

#: of sklearn.kernel_approximation.PolynomialCountSketch:47
msgid "Array of indexes in range [0, n_components) used to represent the 2-wise independent hash functions for Count Sketch computation."
msgstr "Arreglo de índices en el rango [0, n_components) usados para representar las funciones de hash independientes a dos bandas para el calculo de Count Sketch."

#: of sklearn.kernel_approximation.PolynomialCountSketch:58
msgid "**bitHash_**"
msgstr "**bitHash_**"

#: of
msgid "ndarray of shape (degree, n_features), dtype=float32"
msgstr "ndarray de forma (degree, n_features), dtype=float32"

#: of sklearn.kernel_approximation.PolynomialCountSketch:51
msgid "Array with random entries in {+1, -1}, used to represent the 2-wise independent hash functions for Count Sketch computation."
msgstr "Arreglo con entradas aleatorias en {+1, -1} usadas para representar las funciones de hash independientes para el calculo de Count Sketch."

#: of sklearn.kernel_approximation.PolynomialCountSketch:61
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.kernel_approximation.PolynomialCountSketch:75
msgid "Methods"
msgstr "Métodos"

#: of sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid ":obj:`fit <sklearn.kernel_approximation.PolynomialCountSketch.fit>`\\"
msgstr ":obj:`fit <sklearn.kernel_approximation.PolynomialCountSketch.fit>`\\"

#: of sklearn.kernel_approximation.PolynomialCountSketch.fit:2
#: sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid "Fit the model with X."
msgstr "Ajusta el modelo con X."

#: of sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.kernel_approximation.PolynomialCountSketch.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.kernel_approximation.PolynomialCountSketch.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Lo ajusta a los datos, y después lo transforma."

#: of sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid ":obj:`get_params <sklearn.kernel_approximation.PolynomialCountSketch.get_params>`\\"
msgstr ":obj:`get_params <sklearn.kernel_approximation.PolynomialCountSketch.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid ":obj:`set_params <sklearn.kernel_approximation.PolynomialCountSketch.set_params>`\\"
msgstr ":obj:`set_params <sklearn.kernel_approximation.PolynomialCountSketch.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid ":obj:`transform <sklearn.kernel_approximation.PolynomialCountSketch.transform>`\\"
msgstr ":obj:`transform <sklearn.kernel_approximation.PolynomialCountSketch.transform>`\\"

#: of sklearn.kernel_approximation.PolynomialCountSketch.transform:2
#: sklearn.kernel_approximation.PolynomialCountSketch:83:<autosummary>:1
msgid "Generate the feature map approximation for X."
msgstr "Genera la aproximación del mapa de características para X."

#: of sklearn.kernel_approximation.PolynomialCountSketch.fit:4
msgid "Initializes the internal variables. The method needs no information about the distribution of data, so we only care about n_features in X."
msgstr "Inicializa las variables internas. El método no necesita información sobre la distribución de datos, así que sólo nos importa n_features en X."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.kernel_approximation.PolynomialCountSketch.fit:11
#: sklearn.kernel_approximation.PolynomialCountSketch.transform:9
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.kernel_approximation.PolynomialCountSketch.fit:10
msgid "Training data, where n_samples in the number of samples and n_features is the number of features."
msgstr "Datos de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.kernel_approximation.PolynomialCountSketch.fit
#: sklearn.kernel_approximation.PolynomialCountSketch.transform
msgid "Returns"
msgstr "Salida"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.kernel_approximation.PolynomialCountSketch.fit:27
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.kernel_approximation.PolynomialCountSketch.fit:16
msgid "Returns the transformer."
msgstr "Devuelve el transformador."

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` y `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "tipo arreglo de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "tipo arreglo de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.kernel_approximation.PolynomialCountSketch.transform:25
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "ndarray arreglo de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=False"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>``` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of
msgid "{array-like}, shape (n_samples, n_features)"
msgstr "{array-like}, shape (n_samples, n_features)"

#: of sklearn.kernel_approximation.PolynomialCountSketch.transform:8
msgid "New data, where n_samples in the number of samples and n_features is the number of features."
msgstr "Nuevos datos, donde n_samples es el número de muestras y n_features es el número de características."

#: of
msgid "array-like, shape (n_samples, n_components)"
msgstr "array-like, shape (n_samples, n_components)"

#: ../modules/generated/sklearn.kernel_approximation.PolynomialCountSketch.examples:4
msgid "Examples using ``sklearn.kernel_approximation.PolynomialCountSketch``"
msgstr "Ejemplos usando ``sklearn.kernel_approximation.PolynomialCountSketch``"

#: ../modules/generated/sklearn.kernel_approximation.PolynomialCountSketch.examples:15
#: ../modules/generated/sklearn.kernel_approximation.PolynomialCountSketch.examples:23
msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"
msgstr ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_kernel_approximation_plot_scalable_poly_kernels.py`"
#~ msgstr ""

