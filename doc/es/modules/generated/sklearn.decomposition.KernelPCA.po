msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-26 17:04\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.decomposition.KernelPCA.po\n"
"X-Crowdin-File-ID: 5428\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.decomposition.KernelPCA.rst:2
msgid ":mod:`sklearn.decomposition`.KernelPCA"
msgstr ":mod:`sklearn.decomposition`.KernelPCA"

#: of sklearn.decomposition._kernel_pca.KernelPCA:2
msgid "Kernel Principal component analysis (KPCA)."
msgstr "Análisis de Componentes Principales basado en Kernel (Kernel Principal component analysis, KPCA)."

#: of sklearn.decomposition._kernel_pca.KernelPCA:4
msgid "Non-linear dimensionality reduction through the use of kernels (see :ref:`metrics`)."
msgstr "Reducción de la dimensionalidad no lineal mediante el uso de kernels (ver :ref:`metrics`)."

#: of sklearn.decomposition._kernel_pca.KernelPCA:7
msgid "Read more in the :ref:`User Guide <kernel_PCA>`."
msgstr "Lee más en el :ref:`Manual de usuario <kernel_PCA>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.decomposition._kernel_pca.KernelPCA
#: sklearn.decomposition._kernel_pca.KernelPCA.fit
#: sklearn.decomposition._kernel_pca.KernelPCA.fit_transform
#: sklearn.decomposition._kernel_pca.KernelPCA.inverse_transform
#: sklearn.decomposition._kernel_pca.KernelPCA.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.decomposition._kernel_pca.KernelPCA:12
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.decomposition._kernel_pca.KernelPCA:12
msgid "Number of components. If None, all non-zero components are kept."
msgstr "Número de componentes. Si es None, se mantienen todos los componentes distintos de cero."

#: of sklearn.decomposition._kernel_pca.KernelPCA:15
msgid "**kernel**"
msgstr "**kernel**"

#: of
msgid "{'linear', 'poly',             'rbf', 'sigmoid', 'cosine', 'precomputed'}, default='linear'"
msgstr "{'linear', 'poly',             'rbf', 'sigmoid', 'cosine', 'precomputed'}, default='linear'"

#: of sklearn.decomposition._kernel_pca.KernelPCA:15
msgid "Kernel used for PCA."
msgstr "Kernel utilizado para PCA."

#: of sklearn.decomposition._kernel_pca.KernelPCA:19
msgid "**gamma**"
msgstr "**gamma**"

#: of
msgid "float, default=None"
msgstr "float, default=None"

#: of sklearn.decomposition._kernel_pca.KernelPCA:18
msgid "Kernel coefficient for rbf, poly and sigmoid kernels. Ignored by other kernels. If ``gamma`` is ``None``, then it is set to ``1/n_features``."
msgstr "Coeficiente del kernel para los kernels poly y sigmoide. Ignorado por otros kernels. Si ``gamma`` es ``None``, entonces se establece en ``1/n_features``."

#: of sklearn.decomposition._kernel_pca.KernelPCA:22
msgid "**degree**"
msgstr "**degree**"

#: of
msgid "int, default=3"
msgstr "int, default=3"

#: of sklearn.decomposition._kernel_pca.KernelPCA:22
msgid "Degree for poly kernels. Ignored by other kernels."
msgstr "Grado para los kernels poly. Ignorado por otros kernels."

#: of sklearn.decomposition._kernel_pca.KernelPCA:26
msgid "**coef0**"
msgstr "**coef0**"

#: of
msgid "float, default=1"
msgstr "float, default=1"

#: of sklearn.decomposition._kernel_pca.KernelPCA:25
msgid "Independent term in poly and sigmoid kernels. Ignored by other kernels."
msgstr "Término independiente en los kernels poly y sigmoide. Ignorado por otros núcleos."

#: of sklearn.decomposition._kernel_pca.KernelPCA:31
msgid "**kernel_params**"
msgstr "**kernel_params**"

#: of
msgid "dict, default=None"
msgstr "dict, default=None"

#: of sklearn.decomposition._kernel_pca.KernelPCA:29
msgid "Parameters (keyword arguments) and values for kernel passed as callable object. Ignored by other kernels."
msgstr "Parámetros (argumentos de palabra clave) y valores para el kernel o núcleo pasados como objeto de llamada. Ignorado por otros kernels."

#: of sklearn.decomposition._kernel_pca.KernelPCA:35
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float, default=1.0"
msgstr "float, default=1.0"

#: of sklearn.decomposition._kernel_pca.KernelPCA:34
msgid "Hyperparameter of the ridge regression that learns the inverse transform (when fit_inverse_transform=True)."
msgstr "Hiperparámetro de la regresión de cresta que aprende la transformación inversa (cuando fit_inverse_transform=True)."

#: of sklearn.decomposition._kernel_pca.KernelPCA:39
msgid "**fit_inverse_transform**"
msgstr "**fit_inverse_transform**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.decomposition._kernel_pca.KernelPCA:38
msgid "Learn the inverse transform for non-precomputed kernels. (i.e. learn to find the pre-image of a point)"
msgstr "Aprende la transformación inversa para kernels no precalculados. (es decir, aprende a encontrar la preimagen de un punto)"

#: of sklearn.decomposition._kernel_pca.KernelPCA:44
msgid "**eigen_solver**"
msgstr "**eigen_solver**"

#: of
msgid "{'auto', 'dense', 'arpack'}, default='auto'"
msgstr "{'auto', 'dense', 'arpack'}, default='auto'"

#: of sklearn.decomposition._kernel_pca.KernelPCA:42
msgid "Select eigensolver to use. If n_components is much less than the number of training samples, arpack may be more efficient than the dense eigensolver."
msgstr "Selecciona el método de obtención de autovalores a utilizar. Si n_components es mucho menor que el número de muestras de entrenamiento, arpack puede ser más eficiente que el método de obtención de autovalores denso."

#: of sklearn.decomposition._kernel_pca.KernelPCA:48
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=0"
msgstr "float, default=0"

#: of sklearn.decomposition._kernel_pca.KernelPCA:47
msgid "Convergence tolerance for arpack. If 0, optimal value will be chosen by arpack."
msgstr "Tolerancia de convergencia para arpack. Si es 0, el valor óptimo será elegido por arpack."

#: of sklearn.decomposition._kernel_pca.KernelPCA:52
msgid "**max_iter**"
msgstr "**max_iter**"

#: of sklearn.decomposition._kernel_pca.KernelPCA:51
msgid "Maximum number of iterations for arpack. If None, optimal value will be chosen by arpack."
msgstr "Número máximo de iteraciones para arpack. Si es None, el valor óptimo será elegido por arpack."

#: of sklearn.decomposition._kernel_pca.KernelPCA:59
msgid "**remove_zero_eig**"
msgstr "**remove_zero_eig**"

#: of sklearn.decomposition._kernel_pca.KernelPCA:55
msgid "If True, then all components with zero eigenvalues are removed, so that the number of components in the output may be < n_components (and sometimes even zero due to numerical instability). When n_components is None, this parameter is ignored and components with zero eigenvalues are removed regardless."
msgstr "Si es True, se eliminan todos los componentes con valores propios cero, de modo que el número de componentes en la salida puede ser < n_components (y a veces incluso cero debido a la inestabilidad numérica). Cuando n_componentes es None, este parámetro se ignora y los componentes con autovalores cero se eliminan a pesar de todo."

#: of sklearn.decomposition._kernel_pca.KernelPCA:66
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, RandomState instance o None, default=None"

#: of sklearn.decomposition._kernel_pca.KernelPCA:62
msgid "Used when ``eigen_solver`` == 'arpack'. Pass an int for reproducible results across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Se utiliza cuando ``eigen_solver`` == 'arpack'. Pasa un número entero (int) para que los resultados sean reproducibles a través de múltiples llamadas a la función. Ver :term:`Glosario <random_state>`."

#: of sklearn.decomposition._kernel_pca.KernelPCA:73
msgid "**copy_X**"
msgstr "**copy_X**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.decomposition._kernel_pca.KernelPCA:69
msgid "If True, input X is copied and stored by the model in the `X_fit_` attribute. If no further changes will be done to X, setting `copy_X=False` saves memory by storing a reference."
msgstr "Si es True, la entrada X es copiada y almacenada por el modelo en el atributo `X_fit_`. Si no se van a realizar más cambios en X, establecer `copy_X=False` ahorra memoria al almacenar una referencia."

#: of sklearn.decomposition._kernel_pca.KernelPCA:84
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of sklearn.decomposition._kernel_pca.KernelPCA:76
msgid "The number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "El número de trabajos paralelos a ejecutar. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesadores. Ver ::term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.decomposition._kernel_pca.KernelPCA
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.decomposition._kernel_pca.KernelPCA:91
msgid "**lambdas_**"
msgstr "**lambdas_**"

#: of
msgid "ndarray of shape (n_components,)"
msgstr "ndarray de forma (n_components,)"

#: of sklearn.decomposition._kernel_pca.KernelPCA:89
msgid "Eigenvalues of the centered kernel matrix in decreasing order. If `n_components` and `remove_zero_eig` are not set, then all values are stored."
msgstr "Los autovalores de la matriz kernel centrada en orden decreciente. Si `n_components` y `remove_zero_eig` no están establecidos, entonces se almacenan todos los valores."

#: of sklearn.decomposition._kernel_pca.KernelPCA:95
msgid "**alphas_**"
msgstr "**alphas_**"

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr "ndarray de forma (n_samples, n_components)"

#: of sklearn.decomposition._kernel_pca.KernelPCA:94
msgid "Eigenvectors of the centered kernel matrix. If `n_components` and `remove_zero_eig` are not set, then all components are stored."
msgstr "Los autovectores de la matriz kernel centrada. Si `n_components` y `remove_zero_eig` no están establecidos, entonces se almacenan todos los componentes."

#: of sklearn.decomposition._kernel_pca.KernelPCA:99
msgid "**dual_coef_**"
msgstr "**dual_coef_**"

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr "ndarray de forma (n_samples, n_features)"

#: of sklearn.decomposition._kernel_pca.KernelPCA:98
msgid "Inverse transform matrix. Only available when ``fit_inverse_transform`` is True."
msgstr "La matriz de transformación inversa. Solo está disponible cuando ``fit_inverse_transform`` es True."

#: of sklearn.decomposition._kernel_pca.KernelPCA:103
msgid "**X_transformed_fit_**"
msgstr "**X_transformed_fit_**"

#: of sklearn.decomposition._kernel_pca.KernelPCA:102
msgid "Projection of the fitted data on the kernel principal components. Only available when ``fit_inverse_transform`` is True."
msgstr "Proyección de los datos ajustados en los componentes principales basados en kernel. Sólo disponible cuando ``fit_inverse_transform`` es True."

#: of sklearn.decomposition._kernel_pca.KernelPCA:112
msgid "**X_fit_**"
msgstr "**X_fit_**"

#: of sklearn.decomposition._kernel_pca.KernelPCA:106
msgid "The data used to fit the model. If `copy_X=False`, then `X_fit_` is a reference. This attribute is used for the calls to transform."
msgstr "Los datos utilizados para ajustar el modelo. Si `copy_X=False`, entonces `X_fit_` es una referencia. Este atributo se utiliza para las llamadas a transformar."

#: of sklearn.decomposition._kernel_pca.KernelPCA:115
#: sklearn.decomposition._kernel_pca.KernelPCA.inverse_transform:24
msgid "References"
msgstr "Referencias"

#: of sklearn.decomposition._kernel_pca.KernelPCA:120
msgid "Kernel PCA was introduced in:"
msgstr "PCA basado en kernel fue introducido en:"

#: of sklearn.decomposition._kernel_pca.KernelPCA:117
msgid "Bernhard Schoelkopf, Alexander J. Smola, and Klaus-Robert Mueller. 1999. Kernel principal component analysis. In Advances in kernel methods, MIT Press, Cambridge, MA, USA 327-352."
msgstr "Bernhard Schoelkopf, Alexander J. Smola, and Klaus-Robert Mueller. 1999. Kernel principal component analysis. En Advances in kernel methods, MIT Press, Cambridge, MA, USA 327-352."

#: of sklearn.decomposition._kernel_pca.KernelPCA:127
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.decomposition._kernel_pca.KernelPCA:137
msgid "Methods"
msgstr "Métodos"

#: of sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.KernelPCA.fit>`\\"
msgstr ":obj:`fit <sklearn.decomposition.KernelPCA.fit>`\\"

#: of sklearn.decomposition._kernel_pca.KernelPCA.fit:2
#: sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid "Fit the model from data in X."
msgstr "Ajusta el modelo a partir de los datos en X."

#: of sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.decomposition.KernelPCA.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.decomposition.KernelPCA.fit_transform>`\\"

#: of sklearn.decomposition._kernel_pca.KernelPCA.fit_transform:2
#: sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid "Fit the model from data in X and transform X."
msgstr "Ajustar el modelo a partir de los datos en X y transforma X."

#: of sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.KernelPCA.get_params>`\\"
msgstr ":obj:`get_params <sklearn.decomposition.KernelPCA.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.decomposition.KernelPCA.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.decomposition.KernelPCA.inverse_transform>`\\"

#: of sklearn.decomposition._kernel_pca.KernelPCA.inverse_transform:2
#: sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid "Transform X back to original space."
msgstr "Transforma X de vuelta a su espacio original."

#: of sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid ":obj:`set_params <sklearn.decomposition.KernelPCA.set_params>`\\"
msgstr ":obj:`set_params <sklearn.decomposition.KernelPCA.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.KernelPCA.transform>`\\"
msgstr ":obj:`transform <sklearn.decomposition.KernelPCA.transform>`\\"

#: of sklearn.decomposition._kernel_pca.KernelPCA.transform:2
#: sklearn.decomposition._kernel_pca.KernelPCA:146:<autosummary>:1
msgid "Transform X."
msgstr "Transforma X."

#: of sklearn.decomposition._kernel_pca.KernelPCA.fit:9
#: sklearn.decomposition._kernel_pca.KernelPCA.fit_transform:9
#: sklearn.decomposition._kernel_pca.KernelPCA.inverse_transform:8
#: sklearn.decomposition._kernel_pca.KernelPCA.transform:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.decomposition._kernel_pca.KernelPCA.fit:8
#: sklearn.decomposition._kernel_pca.KernelPCA.fit_transform:8
msgid "Training vector, where n_samples in the number of samples and n_features is the number of features."
msgstr "Vector de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.decomposition._kernel_pca.KernelPCA.fit
#: sklearn.decomposition._kernel_pca.KernelPCA.fit_transform
#: sklearn.decomposition._kernel_pca.KernelPCA.inverse_transform
#: sklearn.decomposition._kernel_pca.KernelPCA.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.decomposition._kernel_pca.KernelPCA.fit:25
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.decomposition._kernel_pca.KernelPCA.fit:14
msgid "Returns the instance itself."
msgstr "Devuelve la propia instancia."

#: of sklearn.decomposition._kernel_pca.KernelPCA.fit_transform:25
#: sklearn.decomposition._kernel_pca.KernelPCA.inverse_transform:21
#: sklearn.decomposition._kernel_pca.KernelPCA.transform:24
msgid "**X_new**"
msgstr "**X_new**"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_components)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_components)"

#: of sklearn.decomposition._kernel_pca.KernelPCA.inverse_transform:25
msgid "\"Learning to Find Pre-Images\", G BakIr et al, 2004."
msgstr "\"Learning to Find Pre-Images\", G BakIr et al, 2004."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

