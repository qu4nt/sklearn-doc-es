msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-08 01:04\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.LabelEncoder.po\n"
"X-Crowdin-File-ID: 5410\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.LabelEncoder.rst:2
msgid ":mod:`sklearn.preprocessing`.LabelEncoder"
msgstr ":mod:`sklearn.preprocessing`.LabelEncoder"

#: of sklearn.preprocessing._label.LabelEncoder:2
msgid "Encode target labels with value between 0 and n_classes-1."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:4
msgid "This transformer should be used to encode target values, *i.e.* `y`, and not the input `X`."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:7
msgid "Read more in the :ref:`User Guide <preprocessing_targets>`."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.preprocessing._label.LabelEncoder:21
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.preprocessing._label.LabelEncoder:18
msgid "Holds the label for each class."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:26
msgid ":obj:`OrdinalEncoder`"
msgstr ":obj:`OrdinalEncoder`"

#: of sklearn.preprocessing._label.LabelEncoder:27
msgid "Encode categorical features using an ordinal encoding scheme."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:28
msgid ":obj:`OneHotEncoder`"
msgstr ":obj:`OneHotEncoder`"

#: of sklearn.preprocessing._label.LabelEncoder:29
msgid "Encode categorical features as a one-hot numeric array."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:35
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.preprocessing._label.LabelEncoder:36
msgid "`LabelEncoder` can be used to normalize labels."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:49
msgid "It can also be used to transform non-numerical labels (as long as they are hashable and comparable) to numerical labels."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:63
msgid "Methods"
msgstr "Métodos"

#: of sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.LabelEncoder.fit>`\\"
msgstr ":obj:`fit <sklearn.preprocessing.LabelEncoder.fit>`\\"

#: of sklearn.preprocessing._label.LabelEncoder.fit:2
#: sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid "Fit label encoder."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.LabelEncoder.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.preprocessing.LabelEncoder.fit_transform>`\\"

#: of sklearn.preprocessing._label.LabelEncoder.fit_transform:2
#: sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid "Fit label encoder and return encoded labels."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.LabelEncoder.get_params>`\\"
msgstr ":obj:`get_params <sklearn.preprocessing.LabelEncoder.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.preprocessing.LabelEncoder.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.preprocessing.LabelEncoder.inverse_transform>`\\"

#: of sklearn.preprocessing._label.LabelEncoder.inverse_transform:2
#: sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid "Transform labels back to original encoding."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.LabelEncoder.set_params>`\\"
msgstr ":obj:`set_params <sklearn.preprocessing.LabelEncoder.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.LabelEncoder.transform>`\\"
msgstr ":obj:`transform <sklearn.preprocessing.LabelEncoder.transform>`\\"

#: of sklearn.preprocessing._label.LabelEncoder.transform:2
#: sklearn.preprocessing._label.LabelEncoder:72:<autosummary>:1
msgid "Transform labels to normalized encoding."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.preprocessing._label.LabelEncoder.fit
#: sklearn.preprocessing._label.LabelEncoder.fit_transform
#: sklearn.preprocessing._label.LabelEncoder.inverse_transform
#: sklearn.preprocessing._label.LabelEncoder.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._label.LabelEncoder.fit:8
#: sklearn.preprocessing._label.LabelEncoder.fit_transform:8
#: sklearn.preprocessing._label.LabelEncoder.fit_transform:24
#: sklearn.preprocessing._label.LabelEncoder.inverse_transform:8
#: sklearn.preprocessing._label.LabelEncoder.inverse_transform:24
#: sklearn.preprocessing._label.LabelEncoder.transform:8
#: sklearn.preprocessing._label.LabelEncoder.transform:24
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.preprocessing._label.LabelEncoder.fit:8
#: sklearn.preprocessing._label.LabelEncoder.fit_transform:8
#: sklearn.preprocessing._label.LabelEncoder.inverse_transform:8
#: sklearn.preprocessing._label.LabelEncoder.transform:8
msgid "Target values."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.preprocessing._label.LabelEncoder.fit
#: sklearn.preprocessing._label.LabelEncoder.fit_transform
#: sklearn.preprocessing._label.LabelEncoder.inverse_transform
#: sklearn.preprocessing._label.LabelEncoder.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.preprocessing._label.LabelEncoder.fit:24
msgid "**self**"
msgstr "**self**"

#: of
msgid "returns an instance of self."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

