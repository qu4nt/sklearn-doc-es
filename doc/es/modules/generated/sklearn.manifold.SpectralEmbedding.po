msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-17 22:54\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.manifold.SpectralEmbedding.po\n"
"X-Crowdin-File-ID: 5508\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.manifold.SpectralEmbedding.rst:2
msgid ":mod:`sklearn.manifold`.SpectralEmbedding"
msgstr ":mod:`sklearn.manifold`.SpectralEmbedding"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:2
msgid "Spectral embedding for non-linear dimensionality reduction."
msgstr "Spectral embedding para la reducción de la dimensionalidad no lineal."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:4
msgid "Forms an affinity matrix given by the specified function and applies spectral decomposition to the corresponding graph laplacian. The resulting transformation is given by the value of the eigenvectors for each data point."
msgstr "Forma una matriz de afinidad dada por la función especificada y aplica la descomposición espectral al laplaciano del grafo correspondiente. La transformación resultante viene dada por el valor de los autovectores de cada punto de datos."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:9
msgid "Note : Laplacian Eigenmaps is the actual algorithm implemented here."
msgstr "Nota: Laplacian Eigenmaps es el algoritmo real implementado aquí."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:11
msgid "Read more in the :ref:`User Guide <spectral_embedding>`."
msgstr "Más información en el :ref:`Manual de usuario <spectral_embedding>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.manifold._spectral_embedding.SpectralEmbedding
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:16
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=2"
msgstr "int, default=2"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:16
msgid "The dimension of the projected subspace."
msgstr "La dimensión del subespacio proyectado."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:30
msgid "**affinity**"
msgstr "**affinity**"

#: of
msgid "{'nearest_neighbors', 'rbf', 'precomputed',                 'precomputed_nearest_neighbors'} or callable,                 default='nearest_neighbors'"
msgstr "{'nearest_neighbors', 'rbf', 'precomputed',                 'precomputed_nearest_neighbors'} o invocable,                 default='nearest_neighbors'"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:30
msgid "How to construct the affinity matrix."
msgstr "Cómo construir la matriz affinity."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:20
msgid "'nearest_neighbors' : construct the affinity matrix by computing a graph of nearest neighbors."
msgstr "'nearest_neighbors' : construye la matriz affinity calculando una gráfica de vecinos más cercanos."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:22
msgid "'rbf' : construct the affinity matrix by computing a radial basis function (RBF) kernel."
msgstr "'rbf' : construye la matriz de afinidad calculando un núcleo de función de base radial (RBF)."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:24
msgid "'precomputed' : interpret ``X`` as a precomputed affinity matrix."
msgstr "'precomputed' : interpreta ``X`` como una matriz de afinidad precalculada."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:25
msgid "'precomputed_nearest_neighbors' : interpret ``X`` as a sparse graph of precomputed nearest neighbors, and constructs the affinity matrix by selecting the ``n_neighbors`` nearest neighbors."
msgstr "'precomputed_nearest_neighbors' : interprete ``X`` como un gráfico disperso de vecinos cercanos precalculados, y construye la matriz de afinidad seleccionando los vecinos más cercanos ``n_neighbors``."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:28
msgid "callable : use passed in function as affinity the function takes in data matrix (n_samples, n_features) and return affinity matrix (n_samples, n_samples)."
msgstr "callable : usa la función pasada como afinidad la función toma la matriz de datos (n_samples, n_features) y devuelve la matriz de afinidad (n_samples, n_samples)."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:34
msgid "**gamma**"
msgstr "**gamma**"

#: of
msgid "float, default=None"
msgstr "float, default=None"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:33
msgid "Kernel coefficient for rbf kernel. If None, gamma will be set to 1/n_features."
msgstr "Coeficiente del núcleo para el núcleo rbf. Si es None, gamma se establecerá en 1/n_features."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:40
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "entero, instancia de RandomState o None, default=None"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:37
msgid "Determines the random number generator used for the initialization of the lobpcg eigenvectors when ``solver`` == 'amg'.  Pass an int for reproducible results across multiple function calls. See :term: `Glossary <random_state>`."
msgstr "Determina el generador de números aleatorios utilizado para la inicialización de los autovectores lobpcg cuando ``solver`` == 'amg'.  Pase un int para obtener resultados reproducibles a través de múltiples llamadas a la función. Ver :term: `Glosario <random_state>`."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:45
msgid "**eigen_solver**"
msgstr "**eigen_solver**"

#: of
msgid "{'arpack', 'lobpcg', 'amg'}, default=None"
msgstr "{'arpack', 'lobpcg', 'amg'}, default=None"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:43
msgid "The eigenvalue decomposition strategy to use. AMG requires pyamg to be installed. It can be faster on very large, sparse problems. If None, then ``'arpack'`` is used."
msgstr "La estrategia de descomposición de autovalores propios a utilizar. AMG requiere la instalación de pyamg. Puede ser más rápido en problemas muy grandes y dispersos. Si es None, se utiliza ``'arpack'``."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:49
msgid "**n_neighbors**"
msgstr "**n_neighbors**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:48
msgid "Number of nearest neighbors for nearest_neighbors graph building. If None, n_neighbors will be set to max(n_samples/10, 1)."
msgstr "Número de vecinos más cercanos para la construcción del grafo nearest_neighbors. Si es None, n_neighbors se establecerá en max(n_samples/10, 1)."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:58
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:52
msgid "The number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "El número de trabajos paralelos a ejecutar. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesadores. Ver ::term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:63
msgid "**embedding_**"
msgstr "**embedding_**"

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr "ndarray de forma (n_samples, n_components)"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:63
msgid "Spectral embedding of the training matrix."
msgstr "Embedding espectral de la matriz de entrenamiento."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:66
msgid "**affinity_matrix_**"
msgstr "**affinity_matrix_**"

#: of
msgid "ndarray of shape (n_samples, n_samples)"
msgstr "ndarray de forma (n_samples, n_samples)"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:66
msgid "Affinity_matrix constructed from samples or precomputed."
msgstr "Affinity_matrix construido a partir de muestras o precalculadas."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:74
msgid "**n_neighbors_**"
msgstr "**n_neighbors_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:69
msgid "Number of nearest neighbors effectively used."
msgstr "Número de vecinos más cercanos que se utilizan eficazmente."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:77
msgid "References"
msgstr "Referencias"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:78
msgid "A Tutorial on Spectral Clustering, 2007 Ulrike von Luxburg http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.165.9323"
msgstr "A Tutorial on Spectral Clustering, 2007 Ulrike von Luxburg http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.165.9323"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:82
msgid "On Spectral Clustering: Analysis and an algorithm, 2001 Andrew Y. Ng, Michael I. Jordan, Yair Weiss http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.19.8100"
msgstr "On Spectral Clustering: Analysis and an algorithm, 2001 Andrew Y. Ng, Michael I. Jordan, Yair Weiss http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.19.8100"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:86
msgid "Normalized cuts and image segmentation, 2000 Jianbo Shi, Jitendra Malik http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.160.2324"
msgstr "Normalized cuts and image segmentation, 2000 Jianbo Shi, Jitendra Malik http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.160.2324"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:95
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:107
msgid "Methods"
msgstr "Métodos"

#: of
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid ":obj:`fit <sklearn.manifold.SpectralEmbedding.fit>`\\"
msgstr ":obj:`fit <sklearn.manifold.SpectralEmbedding.fit>`\\"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:2
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid "Fit the model from data in X."
msgstr "Ajusta el modelo a partir de los datos en X."

#: of
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.manifold.SpectralEmbedding.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.manifold.SpectralEmbedding.fit_transform>`\\"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:2
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid "Fit the model from data in X and transform X."
msgstr "Ajustar el modelo a partir de los datos en X y transforma X."

#: of
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid ":obj:`get_params <sklearn.manifold.SpectralEmbedding.get_params>`\\"
msgstr ":obj:`get_params <sklearn.manifold.SpectralEmbedding.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid ":obj:`set_params <sklearn.manifold.SpectralEmbedding.set_params>`\\"
msgstr ":obj:`set_params <sklearn.manifold.SpectralEmbedding.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:14
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:14
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:8
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:8
msgid "Training vector, where n_samples is the number of samples and n_features is the number of features."
msgstr "Vector de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:11
msgid "If affinity is \"precomputed\" X : {array-like, sparse matrix}, shape (n_samples, n_samples), Interpret X as precomputed adjacency graph computed from samples."
msgstr "Si la afinidad es \"precalculada\" X : {array-like, sparse matrix}, forma (n_samples, n_samples), Interpreta X como gráfica de adición precalculada calculada a partir de muestras."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:17
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:17
msgid "**y**"
msgstr "**y**"

#: of
msgid "Ignored"
msgstr "Ignorado"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:33
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:22
msgid "Returns the instance itself."
msgstr "Devuelve la propia instancia."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:11
msgid "If affinity is \"precomputed\" X : {array-like, sparse matrix} of shape (n_samples, n_samples), Interpret X as precomputed adjacency graph computed from samples."
msgstr "Si la afinidad es \"precalculada\" X : {array-like, sparse matrix}, forma (n_samples, n_samples), Interprete X como gráfico de adyacencia precomputado calculado a partir de las muestras."

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:33
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "array-like of shape (n_samples, n_components)"
msgstr "array-like de forma (n_samples, n_components)"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: ../modules/generated/sklearn.manifold.SpectralEmbedding.examples:4
msgid "Examples using ``sklearn.manifold.SpectralEmbedding``"
msgstr "Ejemplos usando ``sklearn.manifold.SpectralEmbedding``"

#: ../modules/generated/sklearn.manifold.SpectralEmbedding.examples:15
#: ../modules/generated/sklearn.manifold.SpectralEmbedding.examples:23
msgid ":ref:`sphx_glr_auto_examples_manifold_plot_lle_digits.py`"
msgstr ":ref:`sphx_glr_auto_examples_manifold_plot_lle_digits.py`"

