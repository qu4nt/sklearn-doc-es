msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-01 15:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.manifold.SpectralEmbedding.po\n"
"X-Crowdin-File-ID: 5508\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.manifold.SpectralEmbedding.rst:2
msgid ":mod:`sklearn.manifold`.SpectralEmbedding"
msgstr ":mod:`sklearn.manifold`.SpectralEmbedding"

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:2
msgid "Spectral embedding for non-linear dimensionality reduction."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:4
msgid "Forms an affinity matrix given by the specified function and applies spectral decomposition to the corresponding graph laplacian. The resulting transformation is given by the value of the eigenvectors for each data point."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:9
msgid "Note : Laplacian Eigenmaps is the actual algorithm implemented here."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:11
msgid "Read more in the :ref:`User Guide <spectral_embedding>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.manifold._spectral_embedding.SpectralEmbedding
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform
msgid "Parameters"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:16
msgid "**n_components**"
msgstr ""

#: of
msgid "int, default=2"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:16
msgid "The dimension of the projected subspace."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:30
msgid "**affinity**"
msgstr ""

#: of
msgid "{'nearest_neighbors', 'rbf', 'precomputed',                 'precomputed_nearest_neighbors'} or callable,                 default='nearest_neighbors'"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:30
msgid "How to construct the affinity matrix."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:20
msgid "'nearest_neighbors' : construct the affinity matrix by computing a graph of nearest neighbors."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:22
msgid "'rbf' : construct the affinity matrix by computing a radial basis function (RBF) kernel."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:24
msgid "'precomputed' : interpret ``X`` as a precomputed affinity matrix."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:25
msgid "'precomputed_nearest_neighbors' : interpret ``X`` as a sparse graph of precomputed nearest neighbors, and constructs the affinity matrix by selecting the ``n_neighbors`` nearest neighbors."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:28
msgid "callable : use passed in function as affinity the function takes in data matrix (n_samples, n_features) and return affinity matrix (n_samples, n_samples)."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:34
msgid "**gamma**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:33
msgid "Kernel coefficient for rbf kernel. If None, gamma will be set to 1/n_features."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:40
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:37
msgid "Determines the random number generator used for the initialization of the lobpcg eigenvectors when ``solver`` == 'amg'.  Pass an int for reproducible results across multiple function calls. See :term: `Glossary <random_state>`."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:45
msgid "**eigen_solver**"
msgstr ""

#: of
msgid "{'arpack', 'lobpcg', 'amg'}, default=None"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:43
msgid "The eigenvalue decomposition strategy to use. AMG requires pyamg to be installed. It can be faster on very large, sparse problems. If None, then ``'arpack'`` is used."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:49
msgid "**n_neighbors**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:48
msgid "Number of nearest neighbors for nearest_neighbors graph building. If None, n_neighbors will be set to max(n_samples/10, 1)."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:58
msgid "**n_jobs**"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:52
msgid "The number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding
msgid "Attributes"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:63
msgid "**embedding_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:63
msgid "Spectral embedding of the training matrix."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:66
msgid "**affinity_matrix_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_samples)"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:66
msgid "Affinity_matrix constructed from samples or precomputed."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:74
msgid "**n_neighbors_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:69
msgid "Number of nearest neighbors effectively used."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:77
msgid "References"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:78
msgid "A Tutorial on Spectral Clustering, 2007 Ulrike von Luxburg http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.165.9323"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:82
msgid "On Spectral Clustering: Analysis and an algorithm, 2001 Andrew Y. Ng, Michael I. Jordan, Yair Weiss http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.19.8100"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:86
msgid "Normalized cuts and image segmentation, 2000 Jianbo Shi, Jitendra Malik http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.160.2324"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:95
msgid "Examples"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding:107
msgid "Methods"
msgstr ""

#: of
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid ":obj:`fit <sklearn.manifold.SpectralEmbedding.fit>`\\"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:2
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid "Fit the model from data in X."
msgstr ""

#: of
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.manifold.SpectralEmbedding.fit_transform>`\\"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:2
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid "Fit the model from data in X and transform X."
msgstr ""

#: of
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid ":obj:`get_params <sklearn.manifold.SpectralEmbedding.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid ":obj:`set_params <sklearn.manifold.SpectralEmbedding.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.manifold._spectral_embedding.SpectralEmbedding:114:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:14
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:14
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:8
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:8
msgid "Training vector, where n_samples is the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:11
msgid "If affinity is \"precomputed\" X : {array-like, sparse matrix}, shape (n_samples, n_samples), Interpret X as precomputed adjacency graph computed from samples."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:17
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:17
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:33
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit:22
msgid "Returns the instance itself."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:11
msgid "If affinity is \"precomputed\" X : {array-like, sparse matrix} of shape (n_samples, n_samples), Interpret X as precomputed adjacency graph computed from samples."
msgstr ""

#: of sklearn.manifold._spectral_embedding.SpectralEmbedding.fit_transform:33
msgid "**X_new**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.manifold.SpectralEmbedding.examples:4
msgid "Examples using ``sklearn.manifold.SpectralEmbedding``"
msgstr ""

#: ../modules/generated/sklearn.manifold.SpectralEmbedding.examples:15
#: ../modules/generated/sklearn.manifold.SpectralEmbedding.examples:23
msgid ":ref:`sphx_glr_auto_examples_manifold_plot_lle_digits.py`"
msgstr ""

