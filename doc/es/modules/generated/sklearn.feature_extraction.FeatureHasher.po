msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-08-09 20:40\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.feature_extraction.FeatureHasher.po\n"
"X-Crowdin-File-ID: 5668\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.feature_extraction.FeatureHasher.rst:2
msgid ":mod:`sklearn.feature_extraction`.FeatureHasher"
msgstr ":mod:`sklearn.feature_extraction`.FeatureHasher"

#: of sklearn.feature_extraction._hash.FeatureHasher:2
msgid "Implements feature hashing, aka the hashing trick."
msgstr "Implementa el hashing de características, también conocido como el truco del hashing."

#: of sklearn.feature_extraction._hash.FeatureHasher:4
msgid "This class turns sequences of symbolic feature names (strings) into scipy.sparse matrices, using a hash function to compute the matrix column corresponding to a name. The hash function employed is the signed 32-bit version of Murmurhash3."
msgstr "Esta clase convierte secuencias de nombres de características simbólicas (strings) en matrices scipy.sparse, utilizando una función hash para calcular la columna de la matriz correspondiente a un nombre. La función hash empleada es la versión de 32 bits con signo de Murmurhash3."

#: of sklearn.feature_extraction._hash.FeatureHasher:9
msgid "Feature names of type byte string are used as-is. Unicode strings are converted to UTF-8 first, but no Unicode normalization is done. Feature values must be (finite) numbers."
msgstr "Los nombres de características de tipo cadena de bytes(byte string) se utilizan tal cual. Las cadenas Unicode se convierten primero a UTF-8, pero no se realiza ninguna normalización Unicode. Los valores de las características deben ser números (finitos)."

#: of sklearn.feature_extraction._hash.FeatureHasher:13
msgid "This class is a low-memory alternative to DictVectorizer and CountVectorizer, intended for large-scale (online) learning and situations where memory is tight, e.g. when running prediction code on embedded devices."
msgstr "Esta clase es una alternativa de baja memoria a DictVectorizer y CountVectorizer, pensada para el aprendizaje a gran escala (en línea) y para situaciones en las que la memoria es escasa, por ejemplo, cuando se ejecuta código de predicción en dispositivos integrados(embedded)."

#: of sklearn.feature_extraction._hash.FeatureHasher:18
msgid "Read more in the :ref:`User Guide <feature_hashing>`."
msgstr "Más información en el :ref:`Manual de usuario <feature_hashing>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_extraction._hash.FeatureHasher
#: sklearn.feature_extraction._hash.FeatureHasher.fit
#: sklearn.feature_extraction._hash.FeatureHasher.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.feature_extraction._hash.FeatureHasher:27
msgid "**n_features**"
msgstr "**n_features**"

#: of
msgid "int, default=2**20"
msgstr "int, default=2**20"

#: of sklearn.feature_extraction._hash.FeatureHasher:25
msgid "The number of features (columns) in the output matrices. Small numbers of features are likely to cause hash collisions, but large numbers will cause larger coefficient dimensions in linear learners."
msgstr "El número de características (columnas) en las matrices de salida. Los números pequeños de características probablemente causen colisiones de hash, pero los números grandes causarán dimensiones de coeficiente más grandes en los algoritmos de aprendizaje lineales."

#: of sklearn.feature_extraction._hash.FeatureHasher:37
msgid "**input_type**"
msgstr "**input_type**"

#: of
msgid "{\"dict\", \"pair\", \"string\"}, default=\"dict\""
msgstr "{\"dict\", \"pair\", \"string\"}, default=\"dict\""

#: of sklearn.feature_extraction._hash.FeatureHasher:30
msgid "Either \"dict\" (the default) to accept dictionaries over (feature_name, value); \"pair\" to accept pairs of (feature_name, value); or \"string\" to accept single strings. feature_name should be a string, while value should be a number. In the case of \"string\", a value of 1 is implied. The feature_name is hashed to find the appropriate column for the feature. The value's sign might be flipped in the output (but see non_negative, below)."
msgstr "O bien \"dict\" (por defecto) para aceptar diccionarios sobre (feature_name, value); \"pair\" para aceptar pares de (feature_name, value); o \"string\" para aceptar cadenas simples. feature_name debe ser un string, mientras que value debe ser un número. En el caso de \"string\", el valor de 1 está implícito. El feature_name es mapeado (hashed) para encontrar la columna apropiada para la característica. El signo del valor puede estar invertido en la salida (pero ver non_negative, más abajo)."

#: of sklearn.feature_extraction._hash.FeatureHasher:42
msgid "**dtype**"
msgstr "**dtype**"

#: of
msgid "numpy dtype, default=np.float64"
msgstr "dtype de numpy, default=np.float64"

#: of sklearn.feature_extraction._hash.FeatureHasher:40
msgid "The type of feature values. Passed to scipy.sparse matrix constructors as the dtype argument. Do not set this to bool, np.boolean or any unsigned integer type."
msgstr "El tipo de los valores de las características. Se pasa a los constructores de matrices scipy.sparse como el argumento dtype. No lo establezcas como bool, np.boolean o cualquier tipo de entero sin signo."

#: of sklearn.feature_extraction._hash.FeatureHasher:47
msgid "**alternate_sign**"
msgstr "**alternate_sign**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.feature_extraction._hash.FeatureHasher:45
msgid "When True, an alternating sign is added to the features as to approximately conserve the inner product in the hashed space even for small n_features. This approach is similar to sparse random projection."
msgstr "Cuando es True, se añade un signo alternativo a las características para conservar aproximadamente el producto interno en el espacio mapeado (hashed), incluso para n_features pequeñas. Este enfoque es similar a la proyección aleatoria dispersa."

#: of sklearn.feature_extraction._hash.FeatureHasher:58
msgid "**.. versionchanged:: 0.19**"
msgstr "**.. versionchanged:: 0.19**"

#: of sklearn.feature_extraction._hash.FeatureHasher:50
msgid "``alternate_sign`` replaces the now deprecated ``non_negative`` parameter."
msgstr "``alternate_sign`` reemplaza el parámetro ``non_negative``, ahora obsoleto."

#: of sklearn.feature_extraction._hash.FeatureHasher:63
msgid ":obj:`DictVectorizer`"
msgstr ":obj:`DictVectorizer`"

#: of sklearn.feature_extraction._hash.FeatureHasher:64
msgid "Vectorizes string-valued features using a hash table."
msgstr "Vectoriza características con valores de cadena utilizando una tabla hash."

#: of sklearn.feature_extraction._hash.FeatureHasher:65
msgid ":obj:`sklearn.preprocessing.OneHotEncoder`"
msgstr ":obj:`sklearn.preprocessing.OneHotEncoder`"

#: of sklearn.feature_extraction._hash.FeatureHasher:66
msgid "Handles nominal/categorical features."
msgstr "Maneja características nominales/categóricas."

#: of sklearn.feature_extraction._hash.FeatureHasher:72
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.feature_extraction._hash.FeatureHasher:82
msgid "Methods"
msgstr "Métodos"

#: of sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid ":obj:`fit <sklearn.feature_extraction.FeatureHasher.fit>`\\"
msgstr ":obj:`fit <sklearn.feature_extraction.FeatureHasher.fit>`\\"

#: of sklearn.feature_extraction._hash.FeatureHasher.fit:2
#: sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid "No-op."
msgstr "No se puede."

#: of sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.feature_extraction.FeatureHasher.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.feature_extraction.FeatureHasher.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta los datos y luego los transforma."

#: of sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid ":obj:`get_params <sklearn.feature_extraction.FeatureHasher.get_params>`\\"
msgstr ":obj:`get_params <sklearn.feature_extraction.FeatureHasher.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid ":obj:`set_params <sklearn.feature_extraction.FeatureHasher.set_params>`\\"
msgstr ":obj:`set_params <sklearn.feature_extraction.FeatureHasher.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid ":obj:`transform <sklearn.feature_extraction.FeatureHasher.transform>`\\"
msgstr ":obj:`transform <sklearn.feature_extraction.FeatureHasher.transform>`\\"

#: of sklearn.feature_extraction._hash.FeatureHasher.transform:2
#: sklearn.feature_extraction._hash.FeatureHasher:90:<autosummary>:1
msgid "Transform a sequence of instances to a scipy.sparse matrix."
msgstr "Transforma una secuencia de instancias en una matriz scipy.sparse."

#: of sklearn.feature_extraction._hash.FeatureHasher.fit:4
msgid "This method doesn't do anything. It exists purely for compatibility with the scikit-learn transformer API."
msgstr "Este método no hace nada. Existe únicamente por compatibilidad con la API del transformador de scikit-learn."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.feature_extraction._hash.FeatureHasher.fit:10
#: sklearn.feature_extraction._hash.FeatureHasher.transform:28
msgid "**X**"
msgstr "**X**"

#: of
msgid "ndarray"
msgstr "ndarray"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_extraction._hash.FeatureHasher.fit
#: sklearn.feature_extraction._hash.FeatureHasher.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.feature_extraction._hash.FeatureHasher.fit:26
msgid "**self**"
msgstr "**self**"

#: of
msgid "FeatureHasher"
msgstr "FeatureHasher"

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` e `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "arreglo ndarray de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.feature_extraction._hash.FeatureHasher.transform:12
msgid "**raw_X**"
msgstr "**raw_X**"

#: of
msgid "iterable over iterable over raw features, length = n_samples"
msgstr "iterable sobre características en bruto, length= n_samples"

#: of sklearn.feature_extraction._hash.FeatureHasher.transform:8
msgid "Samples. Each sample must be iterable an (e.g., a list or tuple) containing/generating feature names (and optionally values, see the input_type constructor argument) which will be hashed. raw_X need not support the len function, so it can be the result of a generator; n_samples is determined on the fly."
msgstr "Muestras. Cada muestra debe ser un iterable (por ejemplo, una lista o tupla) que contenga/genere nombres de características (y opcionalmente valores, consulta el argumento del constructor input_type) que serán mapeados (hashed). raw_X no necesita ser compatible con la función len, por lo que puede ser el resultado de un generador; n_samples se determina sobre la marcha."

#: of
msgid "sparse matrix of shape (n_samples, n_features)"
msgstr "matriz dispersa de forma (n_samples, n_features)"

#: of sklearn.feature_extraction._hash.FeatureHasher.transform:17
msgid "Feature matrix, for use with estimators or further transformers."
msgstr "Matriz de características, para uso con estimadores o transformadores posteriores."

#: ../modules/generated/sklearn.feature_extraction.FeatureHasher.examples:4
msgid "Examples using ``sklearn.feature_extraction.FeatureHasher``"
msgstr "Ejemplos utilizando ``sklearn.feature_extraction.FeatureHasher``"

#: ../modules/generated/sklearn.feature_extraction.FeatureHasher.examples:15
#: ../modules/generated/sklearn.feature_extraction.FeatureHasher.examples:23
msgid ":ref:`sphx_glr_auto_examples_text_plot_hashing_vs_dict_vectorizer.py`"
msgstr ":ref:`sphx_glr_auto_examples_text_plot_hashing_vs_dict_vectorizer.py`"

