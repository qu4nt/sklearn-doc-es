msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-21 21:57\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.utils.check_array.po\n"
"X-Crowdin-File-ID: 5494\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.utils.check_array.rst:2
msgid ":mod:`sklearn.utils`.check_array"
msgstr ":mod:`sklearn.utils`.check_array"

#: of sklearn.utils.validation.check_array:2
msgid "Input validation on an array, list, sparse matrix or similar."
msgstr ""

#: of sklearn.utils.validation.check_array:4
msgid "By default, the input is checked to be a non-empty 2D array containing only finite values. If the dtype of the array is object, attempt converting to float, raising on failure."
msgstr ""

#: of sklearn.utils.validation.check_array
msgid "Parameters"
msgstr "ParÃ¡metros"

#: of sklearn.utils.validation.check_array:11
msgid "**array**"
msgstr "**array**"

#: of
msgid "object"
msgstr ""

#: of sklearn.utils.validation.check_array:11
msgid "Input object to check / convert."
msgstr ""

#: of sklearn.utils.validation.check_array:18
msgid "**accept_sparse**"
msgstr "**accept_sparse**"

#: of
msgid "str, bool or list/tuple of str, default=False"
msgstr ""

#: of sklearn.utils.validation.check_array:14
msgid "String[s] representing allowed sparse matrix formats, such as 'csc', 'csr', etc. If the input is sparse but not in the allowed format, it will be converted to the first listed format. True allows the input to be any format. False means that a sparse matrix input will raise an error."
msgstr ""

#: of sklearn.utils.validation.check_array:25
msgid "**accept_large_sparse**"
msgstr "**accept_large_sparse**"

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.utils.validation.check_array:21
msgid "If a CSR, CSC, COO or BSR sparse matrix is supplied and accepted by accept_sparse, accept_large_sparse=False will cause it to be accepted only if its indices are stored with a 32-bit dtype."
msgstr ""

#: of sklearn.utils.validation.check_array:31
msgid "**dtype**"
msgstr "**dtype**"

#: of
msgid "'numeric', type, list of type or None, default='numeric'"
msgstr ""

#: of sklearn.utils.validation.check_array:28
msgid "Data type of result. If None, the dtype of the input is preserved. If \"numeric\", dtype is preserved unless array.dtype is object. If dtype is a list of types, conversion on the first type is only performed if the dtype of the input is not in the list."
msgstr ""

#: of sklearn.utils.validation.check_array:38
msgid "**order**"
msgstr "**order**"

#: of
msgid "{'F', 'C'} or None, default=None"
msgstr ""

#: of sklearn.utils.validation.check_array:34
msgid "Whether an array will be forced to be fortran or c-style. When order is None (default), then if copy=False, nothing is ensured about the memory layout of the output array; otherwise (copy=True) the memory layout of the returned array is kept as close as possible to the original array."
msgstr ""

#: of sklearn.utils.validation.check_array:42
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.utils.validation.check_array:41
msgid "Whether a forced copy will be triggered. If copy=False, a copy might be triggered by a conversion."
msgstr ""

#: of sklearn.utils.validation.check_array:57
msgid "**force_all_finite**"
msgstr "**force_all_finite**"

#: of
msgid "bool or 'allow-nan', default=True"
msgstr ""

#: of sklearn.utils.validation.check_array:45
msgid "Whether to raise an error on np.inf, np.nan, pd.NA in array. The possibilities are:"
msgstr ""

#: of sklearn.utils.validation.check_array:48
msgid "True: Force all values of array to be finite."
msgstr ""

#: of sklearn.utils.validation.check_array:49
msgid "False: accepts np.inf, np.nan, pd.NA in array."
msgstr ""

#: of sklearn.utils.validation.check_array:50
msgid "'allow-nan': accepts only np.nan and pd.NA values in array. Values cannot be infinite."
msgstr ""

#: of sklearn.utils.validation.check_array:53
msgid "``force_all_finite`` accepts the string ``'allow-nan'``."
msgstr ""

#: of sklearn.utils.validation.check_array:56
msgid "Accepts `pd.NA` and converts it into `np.nan`"
msgstr ""

#: of sklearn.utils.validation.check_array:60
msgid "**ensure_2d**"
msgstr "**ensure_2d**"

#: of sklearn.utils.validation.check_array:60
msgid "Whether to raise a value error if array is not 2D."
msgstr ""

#: of sklearn.utils.validation.check_array:63
msgid "**allow_nd**"
msgstr "**allow_nd**"

#: of sklearn.utils.validation.check_array:63
msgid "Whether to allow array.ndim > 2."
msgstr ""

#: of sklearn.utils.validation.check_array:67
msgid "**ensure_min_samples**"
msgstr "**ensure_min_samples**"

#: of
msgid "int, default=1"
msgstr ""

#: of sklearn.utils.validation.check_array:66
msgid "Make sure that the array has a minimum number of samples in its first axis (rows for a 2D array). Setting to 0 disables this check."
msgstr ""

#: of sklearn.utils.validation.check_array:74
msgid "**ensure_min_features**"
msgstr "**ensure_min_features**"

#: of sklearn.utils.validation.check_array:70
msgid "Make sure that the 2D array has some minimum number of features (columns). The default value of 1 rejects empty datasets. This check is only enforced when the input data has effectively 2 dimensions or is originally 1D and ``ensure_2d`` is True. Setting to 0 disables this check."
msgstr ""

#: of sklearn.utils.validation.check_array:77
msgid "**estimator**"
msgstr "**estimator**"

#: of
msgid "str or estimator instance, default=None"
msgstr ""

#: of sklearn.utils.validation.check_array:77
msgid "If passed, include the name of the estimator in warning messages."
msgstr ""

#: of sklearn.utils.validation.check_array
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.utils.validation.check_array:93
msgid "**array_converted**"
msgstr "**array_converted**"

#: of sklearn.utils.validation.check_array:82
msgid "The converted and validated array."
msgstr ""

