msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-08-12 16:30\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.feature_extraction.DictVectorizer.po\n"
"X-Crowdin-File-ID: 5028\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.feature_extraction.DictVectorizer.rst:2
msgid ":mod:`sklearn.feature_extraction`.DictVectorizer"
msgstr ":mod:`sklearn.feature_extraction`.DictVectorizer"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:2
msgid "Transforms lists of feature-value mappings to vectors."
msgstr "Transforma listas de mapeos de valores-características en vectores."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:4
msgid "This transformer turns lists of mappings (dict-like objects) of feature names to feature values into Numpy arrays or scipy.sparse matrices for use with scikit-learn estimators."
msgstr "Este transformador convierte listas de mapeos (objetos tipo dict) de nombres de características a valores de características en arreglos Numpy o matrices scipy.sparse para su uso con estimadores de scikit-learn."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:8
msgid "When feature values are strings, this transformer will do a binary one-hot (aka one-of-K) coding: one boolean-valued feature is constructed for each of the possible string values that the feature can take on. For instance, a feature \"f\" that can take on the values \"ham\" and \"spam\" will become two features in the output, one signifying \"f=ham\", the other \"f=spam\"."
msgstr "Cuando los valores de las características son cadenas (string), este transformador realizará una codificación binaria one-hot (también conocida como one-of- K): se construye una característica con valor booleano para cada uno de los posibles valores de cadena que puede tomar la característica. Por ejemplo, una característica \"f\" que puede tomar los valores \"ham\" y \"spam\" se convertirá en dos características en la salida, una significando \"f=ham\", la otra \"f=spam\"."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:14
msgid "If a feature value is a sequence or set of strings, this transformer will iterate over the values and will count the occurrences of each string value."
msgstr "Si un valor de una característica es una secuencia o conjunto de cadenas, este transformador iterará sobre los valores y contará las ocurrencias de cada valor de cadena."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:18
msgid "However, note that this transformer will only do a binary one-hot encoding when feature values are of type string. If categorical features are represented as numeric values such as int or iterables of strings, the DictVectorizer can be followed by :class:`~sklearn.preprocessing.OneHotEncoder` to complete binary one-hot encoding."
msgstr "Sin embargo, ten en cuenta que este transformador sólo hará una codificación binaria one-hot cuando los valores de las características sean de tipo string. Si las características categóricas se representan como valores numéricos, tales como int o iterables de strings , el DictVectorizer puede ser seguido por :class:`~sklearn.preprocessing.OneHotEncoder` para completar la codificación binaria one-hot."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:25
msgid "Features that do not occur in a sample (mapping) will have a zero value in the resulting array/matrix."
msgstr "Las características que no aparecen en una muestra (mapeo) tendrán un valor cero en el arreglo/matriz resultante."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:28
msgid "Read more in the :ref:`User Guide <dict_feature_extraction>`."
msgstr "Más información en el :ref:`Manual de usuario <dict_feature_extraction>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:34
msgid "**dtype**"
msgstr "**dtype**"

#: of
msgid "dtype, default=np.float64"
msgstr "dtype, default=np.float64"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:33
msgid "The type of feature values. Passed to Numpy array/scipy.sparse matrix constructors as the dtype argument."
msgstr "El tipo de los valores de las características. Se pasa a los constructores de arreglos Numpy/matrices scipy.sparse como argumento dtype."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:38
msgid "**separator**"
msgstr "**separator**"

#: of
msgid "str, default=\"=\""
msgstr "str, default=\"=\""

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:37
msgid "Separator string used when constructing new features for one-hot coding."
msgstr "Cadena de separación utilizada cuando se construyen nuevas características para la codificación one-hot."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:41
msgid "**sparse**"
msgstr "**sparse**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:41
msgid "Whether transform should produce scipy.sparse matrices."
msgstr "Si la transformación debe producir matrices scipy.sparse."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:48
msgid "**sort**"
msgstr "**sort**"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:44
msgid "Whether ``feature_names_`` and ``vocabulary_`` should be sorted when fitting."
msgstr "Si ``feature_names_`` y ``vocabulary_`` deben ser ordenados cuando se ajustan."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:53
msgid "**vocabulary_**"
msgstr "**vocabulary_**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:53
msgid "A dictionary mapping feature names to feature indices."
msgstr "Un diccionario que mapea nombres de características a índices de características."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:60
msgid "**feature_names_**"
msgstr "**feature_names_**"

#: of
msgid "list"
msgstr "list"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:56
msgid "A list of length n_features containing the feature names (e.g., \"f=ham\" and \"f=spam\")."
msgstr "Una lista de longitud n_features que contiene los nombres de las características (por ejemplo, \"f=ham\" y \"f=spam\")."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:65
msgid ":obj:`FeatureHasher`"
msgstr ":obj:`FeatureHasher`"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:66
msgid "Performs vectorization using only a hash function."
msgstr "Realiza la vectorización utilizando sólo una función hash."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:67
msgid ":obj:`sklearn.preprocessing.OrdinalEncoder`"
msgstr ":obj:`sklearn.preprocessing.OrdinalEncoder`"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:68
msgid "Handles nominal/categorical features encoded as columns of arbitrary data types."
msgstr "Maneja características nominales/categóricas codificadas como columnas de tipos de datos arbitrarios."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:74
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict:30
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer:89
msgid "Methods"
msgstr "Métodos"

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid ":obj:`fit <sklearn.feature_extraction.DictVectorizer.fit>`\\"
msgstr ":obj:`fit <sklearn.feature_extraction.DictVectorizer.fit>`\\"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit:2
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid "Learn a list of feature name -> indices mappings."
msgstr "Aprende una lista de nombres de características -> mapeos de índices."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.feature_extraction.DictVectorizer.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.feature_extraction.DictVectorizer.fit_transform>`\\"

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform:2
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid "Learn a list of feature name -> indices mappings and transform X."
msgstr "Aprende una lista de nombres de características -> mapeos de índices y transforma X."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid ":obj:`get_feature_names <sklearn.feature_extraction.DictVectorizer.get_feature_names>`\\"
msgstr ":obj:`get_feature_names <sklearn.feature_extraction.DictVectorizer.get_feature_names>`\\"

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.get_feature_names:2
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid "Returns a list of feature names, ordered by their indices."
msgstr "Devuelve una lista de nombres de características, ordenada por sus índices."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid ":obj:`get_params <sklearn.feature_extraction.DictVectorizer.get_params>`\\"
msgstr ":obj:`get_params <sklearn.feature_extraction.DictVectorizer.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.feature_extraction.DictVectorizer.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.feature_extraction.DictVectorizer.inverse_transform>`\\"

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform:2
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid "Transform array or sparse matrix X back to feature mappings."
msgstr "Transforma la matriz dispersa X en mapeos de características."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid ":obj:`restrict <sklearn.feature_extraction.DictVectorizer.restrict>`\\"
msgstr ":obj:`restrict <sklearn.feature_extraction.DictVectorizer.restrict>`\\"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict:2
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid "Restrict the features to those in support using feature selection."
msgstr "Restringe las características a aquellas que soportan la selección de características."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid ":obj:`set_params <sklearn.feature_extraction.DictVectorizer.set_params>`\\"
msgstr ":obj:`set_params <sklearn.feature_extraction.DictVectorizer.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid ":obj:`transform <sklearn.feature_extraction.DictVectorizer.transform>`\\"
msgstr ":obj:`transform <sklearn.feature_extraction.DictVectorizer.transform>`\\"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform:2
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer:100:<autosummary>:1
msgid "Transform feature->value dicts to array or sparse matrix."
msgstr "Característica de transformación->valores del diccionario a un arreglo o a una matriz dispersa."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit:12
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform:14
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform:14
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform:11
msgid "**X**"
msgstr "**X**"

#: of
msgid "Mapping or iterable over Mappings"
msgstr "Mapping o iterable sobre Mappings"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit:8
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform:10
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform:10
msgid "Dict(s) or Mapping(s) from feature names (arbitrary Python objects) to feature values (strings or convertible to dtype)."
msgstr "Dict(s) o Mapping(s) a partir de los nombres de las características(objetos arbitrarios de Python) a valores de características (strings o convertibles a dtype)."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit:11
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform:13
msgid "Accepts multiple string values for one categorical feature."
msgstr "Acepta múltiples valores de string para una característica categórica."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit:15
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform:17
msgid "**y**"
msgstr "**y**"

#: of
msgid "(ignored)"
msgstr "(Ignorado)"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit:31
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict:27
msgid "self"
msgstr "self"

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform:4
msgid "Like fit(X) followed by transform(X), but does not require materializing X in memory."
msgstr "Como fit(X) seguido de transform(X), pero no requiere materializar X en memoria."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform:33
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform:27
msgid "**Xa**"
msgstr "**Xa**"

#: of
msgid "{array, sparse matrix}"
msgstr "{array, sparse matrix}"

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.fit_transform:22
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform:16
msgid "Feature vectors; always 2-d."
msgstr "Vectores de característica; siempre 2-d(dos dimensiones)."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.get_feature_names:4
msgid "If one-of-K coding is applied to categorical features, this will include the constructed feature names but not the original ones."
msgstr "Si se aplica la codificación one-of-K a las características categóricas, se incluirán los nombres de las características construidas pero no las originales."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform:4
msgid "X must have been produced by this DictVectorizer's transform or fit_transform method; it may only have passed through transformers that preserve the number of features and their order."
msgstr "X debe haber sido producido por el método transform o fit_transform de DictVectorizer; solo puede haber pasado por transformadores que preserven el número de características y su orden."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform:8
msgid "In the case of one-hot/one-of-K coding, the constructed feature names and values are returned rather than the original ones."
msgstr "En el caso de la codificación one-hot/one-of-K, se devuelven los nombres y valores de las características construidas en lugar de las originales."

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform:14
msgid "Sample matrix."
msgstr "Matriz de muestras."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform:18
msgid "**dict_type**"
msgstr "**dict_type**"

#: of
msgid "type, default=dict"
msgstr "type, default=dict"

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform:17
msgid "Constructor for feature mappings. Must conform to the collections.Mapping API."
msgstr "Constructor para mapeos de características. Debe ajustarse a la API collections.Mapping."

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform:34
msgid "**D**"
msgstr "**D**"

#: of
msgid "list of dict_type objects of shape (n_samples,)"
msgstr "list de dict_type objects de forma (n_samples,)"

#: of
#: sklearn.feature_extraction._dict_vectorizer.DictVectorizer.inverse_transform:23
msgid "Feature mappings for the samples in X."
msgstr "Mapeos de características para las muestras en X."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict:4
msgid "This function modifies the estimator in-place."
msgstr "Esta función modifica el estimador in situ."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict:10
msgid "**support**"
msgstr "**support**"

#: of
msgid "array-like"
msgstr "array-like"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict:9
msgid "Boolean mask or list of indices (as returned by the get_support member of feature selectors)."
msgstr "Máscara booleana o lista de índices (como la devuelta por el miembro get_support de los selectores de características)."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict:13
msgid "**indices**"
msgstr "**indices**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.restrict:13
msgid "Whether support is a list of indices."
msgstr "Si el soporte es una lista de índices."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr "instancia de estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.feature_extraction._dict_vectorizer.DictVectorizer.transform:4
msgid "Named features not encountered during fit or fit_transform will be silently ignored."
msgstr "Las características con nombre que no se encuentren durante fit o fit_transform serán ignoradas silenciosamente."

#: of
msgid "Mapping or iterable over Mappings of shape (n_samples,)"
msgstr "Mapping o iterable sobre Mappings de forma (n_samples,)"

#: ../modules/generated/sklearn.feature_extraction.DictVectorizer.examples:4
msgid "Examples using ``sklearn.feature_extraction.DictVectorizer``"
msgstr "Ejemplos usando ``sklearn.feature_extraction.DictVectorizer``"

#: ../modules/generated/sklearn.feature_extraction.DictVectorizer.examples:15
#: ../modules/generated/sklearn.feature_extraction.DictVectorizer.examples:23
msgid ":ref:`sphx_glr_auto_examples_compose_plot_column_transformer.py`"
msgstr ":ref:`sphx_glr_auto_examples_compose_plot_column_transformer.py`"

#: ../modules/generated/sklearn.feature_extraction.DictVectorizer.examples:34
#: ../modules/generated/sklearn.feature_extraction.DictVectorizer.examples:42
msgid ":ref:`sphx_glr_auto_examples_text_plot_hashing_vs_dict_vectorizer.py`"
msgstr ":ref:`sphx_glr_auto_examples_text_plot_hashing_vs_dict_vectorizer.py`"

