msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-24 19:20\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.VotingRegressor.po\n"
"X-Crowdin-File-ID: 5058\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.VotingRegressor.rst:2
msgid ":mod:`sklearn.ensemble`.VotingRegressor"
msgstr ":mod:`sklearn.ensemble`.VotingRegressor"

#: of sklearn.ensemble._voting.VotingRegressor:2
msgid "Prediction voting regressor for unfitted estimators."
msgstr "Regresor de predicción de voto para estimadores no ajustados."

#: of sklearn.ensemble._voting.VotingRegressor:4
msgid "A voting regressor is an ensemble meta-estimator that fits several base regressors, each on the whole dataset. Then it averages the individual predictions to form a final prediction."
msgstr "Un regresor de voto es un meta-estimador de ensemble que se ajusta a varios regresores de base, cada uno en todo el conjunto de datos. Luego promedian las predicciones individuales para formar una predicción final."

#: of sklearn.ensemble._voting.VotingRegressor:8
msgid "Read more in the :ref:`User Guide <voting_regressor>`."
msgstr "Más información en :ref:`Manual de usuario <voting_regressor>`."

#: of sklearn.base.RegressorMixin.score
#: sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params
#: sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params
#: sklearn.ensemble._voting.VotingRegressor
#: sklearn.ensemble._voting.VotingRegressor.fit
#: sklearn.ensemble._voting.VotingRegressor.predict
#: sklearn.ensemble._voting.VotingRegressor.transform
#: sklearn.ensemble._voting._BaseVoting.fit_transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.ensemble._voting.VotingRegressor:22
msgid "**estimators**"
msgstr "**estimadores**"

#: of
msgid "list of (str, estimator) tuples"
msgstr "lista de tuplas (str, estimator)"

#: of sklearn.ensemble._voting.VotingRegressor:15
msgid "Invoking the ``fit`` method on the ``VotingRegressor`` will fit clones of those original estimators that will be stored in the class attribute ``self.estimators_``. An estimator can be set to ``'drop'`` using ``set_params``."
msgstr "Invocando el método ``fit`` en el ``VotingRegressor`` ajustará los clones de los estimadores originales que serán almacenados en el atributo de clase ``self.estimators_'. Un estimador puede establecerse a ``'drop'`` usando ``set_params``."

#: of sklearn.ensemble._voting.VotingRegressor:20
msgid "``'drop'`` is accepted. Using None was deprecated in 0.22 and support was removed in 0.24."
msgstr "``'drop'`` es aceptado. El uso de None quedó obsoleto en la versión 0.22 y se eliminó el soporte en la 0.24."

#: of sklearn.ensemble._voting.VotingRegressor:26
msgid "**weights**"
msgstr "**ponderaciones**"

#: of
msgid "array-like of shape (n_regressors,), default=None"
msgstr "array-like de forma (n_regressors,), default=None"

#: of sklearn.ensemble._voting.VotingRegressor:25
msgid "Sequence of weights (`float` or `int`) to weight the occurrences of predicted values before averaging. Uses uniform weights if `None`."
msgstr "Secuencia de ponderaciones (`float` o `int`) para considerar las ocurrencias de los valores predichos antes de promediar. Utiliza ponderaciones uniformes si `None`."

#: of sklearn.ensemble._voting.VotingRegressor:32
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.ensemble._voting.VotingRegressor:29
msgid "The number of jobs to run in parallel for ``fit``. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "El número de trabajos a ejecutar en paralelo para ``fit``. ``None`` significa 1 a menos que sea en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa usar todos los procesadores. Ver :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.ensemble._voting.VotingRegressor:41
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.ensemble._voting.VotingRegressor:35
msgid "If True, the time elapsed while fitting will be printed as it is completed."
msgstr "Si es cierto, el tiempo transcurrido mientras se ajusta se imprimirá a medida que se complete."

#: of sklearn.ensemble._voting.VotingRegressor
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.ensemble._voting.VotingRegressor:47
msgid "**estimators_**"
msgstr "**estimators_**"

#: of
msgid "list of regressors"
msgstr "lista de regresores"

#: of sklearn.ensemble._voting.VotingRegressor:46
msgid "The collection of fitted sub-estimators as defined in ``estimators`` that are not 'drop'."
msgstr "La colección de subestimadores ajustados como se define en ``estimators`` que no son 'drop'."

#: of sklearn.ensemble._voting.VotingRegressor:55
msgid "**named_estimators_**"
msgstr "**named_estimators_**"

#: of
msgid "Bunch"
msgstr "Puñado"

#: of sklearn.ensemble._voting.VotingRegressor:50
msgid "Attribute to access any fitted sub-estimators by name."
msgstr "Atributo para acceder a cualquier subestimador ajustado por su nombre."

#: of sklearn.ensemble._voting.VotingRegressor:60
msgid ":obj:`VotingClassifier`"
msgstr ":obj:`VotingClassifier`"

#: of sklearn.ensemble._voting.VotingRegressor:61
msgid "Soft Voting/Majority Rule classifier."
msgstr "Clasificador de voto blando/regla de la mayoría."

#: of sklearn.ensemble._voting.VotingRegressor:67
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.ensemble._voting.VotingRegressor:81
msgid "Methods"
msgstr "Métodos"

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.VotingRegressor.fit>`\\"
msgstr ":obj:`fit <sklearn.ensemble.VotingRegressor.fit>`\\"

#: of sklearn.ensemble._voting.VotingRegressor.fit:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Fit the estimators."
msgstr "Ajustar los estimadores."

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.ensemble.VotingRegressor.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.ensemble.VotingRegressor.fit_transform>`\\"

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
#: sklearn.ensemble._voting._BaseVoting.fit_transform:2
msgid "Return class labels or probabilities for each estimator."
msgstr "Devuelve etiquetas de clase o probabilidades para cada estimador."

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.VotingRegressor.get_params>`\\"
msgstr ":obj:`get_params <sklearn.ensemble.VotingRegressor.get_params>`\\"

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Get the parameters of an estimator from the ensemble."
msgstr "Obtiene los parámetros de un estimador del ensemble."

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.VotingRegressor.predict>`\\"
msgstr ":obj:`predict <sklearn.ensemble.VotingRegressor.predict>`\\"

#: of sklearn.ensemble._voting.VotingRegressor.predict:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Predict regression target for X."
msgstr "Predice el objetivo de regresión para X."

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`score <sklearn.ensemble.VotingRegressor.score>`\\"
msgstr ":obj:`score <sklearn.ensemble.VotingRegressor.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.VotingRegressor.set_params>`\\"
msgstr ":obj:`set_params <sklearn.ensemble.VotingRegressor.set_params>`\\"

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Set the parameters of an estimator from the ensemble."
msgstr "Establece los parámetros de un estimador del ensemble."

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`transform <sklearn.ensemble.VotingRegressor.transform>`\\"
msgstr ":obj:`transform <sklearn.ensemble.VotingRegressor.transform>`\\"

#: of sklearn.ensemble._voting.VotingRegressor.transform:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
#: sklearn.ensemble._voting._BaseVoting.fit_transform:4
msgid "Return predictions for X for each estimator."
msgstr "Devuelve las predicciones de X para cada estimador."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.ensemble._voting.VotingRegressor.fit:9
#: sklearn.ensemble._voting.VotingRegressor.predict:10
#: sklearn.ensemble._voting.VotingRegressor.transform:8
#: sklearn.ensemble._voting._BaseVoting.fit_transform:9
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.ensemble._voting.VotingRegressor.fit:8
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of features."
msgstr "Vectores de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.ensemble._voting.VotingRegressor.fit:12
#: sklearn.ensemble._voting.VotingRegressor.predict:26
#: sklearn.ensemble._voting._BaseVoting.fit_transform:12
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like de forma (n_samples,)"

#: of sklearn.ensemble._voting.VotingRegressor.fit:12
msgid "Target values."
msgstr "Valores objetivo."

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.ensemble._voting.VotingRegressor.fit:17
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.ensemble._voting.VotingRegressor.fit:15
msgid "Sample weights. If None, then samples are equally weighted. Note that this is supported only if all underlying estimators support sample weights."
msgstr "Ponderaciones de muestra. Si es None, entonces las muestras están igualmente ponderadas. Ten en cuenta que esto sólo es soportado si todos los estimadores subyacentes soportan ponderaciones de muestra."

#: of sklearn.base.RegressorMixin.score
#: sklearn.ensemble._voting.VotingRegressor.fit
#: sklearn.ensemble._voting.VotingRegressor.predict
#: sklearn.ensemble._voting.VotingRegressor.transform
#: sklearn.ensemble._voting._BaseVoting.fit_transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.ensemble._voting.VotingRegressor.fit:33
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "objeto"

#: of sklearn.ensemble._voting.VotingRegressor.fit:22
msgid "Fitted estimator."
msgstr "Estimador ajustado."

#: of
msgid "{array-like, sparse matrix, dataframe} of shape                 (n_samples, n_features)"
msgstr "{array-like, sparse matrix, dataframe} de forma             (n_samples, n_features)"

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:9
msgid "Input samples"
msgstr "Muestras de entrada"

#: of
msgid "ndarray of shape (n_samples,), default=None"
msgstr "ndarray de forma (n_samples,), default=None"

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:12
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (Ninguno para transformaciones no supervisadas)."

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:15
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:15
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:31
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "arreglo ndarray de forma (n_samples, n_features_new)"

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:20
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:4
msgid "Returns the parameters given in the constructor as well as the estimators contained within the `estimators` parameter."
msgstr "Devuelve los parámetros dados en el constructor así como los estimadores contenidos en el parámetro `estimators`."

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:23
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:10
msgid "Setting it to True gets the various estimators and the parameters of the estimators as well."
msgstr "Establecerlo a True también obtiene los diversos estimadores y parámetros de los estimadores."

#: of sklearn.ensemble._voting.VotingRegressor.predict:4
msgid "The predicted regression target of an input sample is computed as the mean predicted regression targets of the estimators in the ensemble."
msgstr "El objetivo de regresión previsto de una muestra de entrada se calcula como los objetivos de regresión previstos de los estimadores en el ensemble."

#: of sklearn.ensemble._voting.VotingRegressor.predict:10
#: sklearn.ensemble._voting.VotingRegressor.transform:8
msgid "The input samples."
msgstr "Las muestras de entrada."

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.ensemble._voting.VotingRegressor.predict:15
msgid "The predicted values."
msgstr "Los valores previstos."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma residual de cuadrados ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1,0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0,0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz de núcleo precalculada o una lista de objetos genéricos con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para `X`."

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderaciones de muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` of ``self.predict(X)`` wrt. `y`."

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr "Notas"

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al llamar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la coherencia con el valor por defecto de :func:`~sklearn.metrics.r2_score``. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:4
msgid "Valid parameter keys can be listed with `get_params()`. Note that you can directly set the parameters of the estimators contained in `estimators`."
msgstr "Las claves de parámetro válidas pueden ser listadas con `get_params()`. Ten en cuenta que puedes establecer directamente los parámetros de los estimadores contenidos en `estimators`."

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:27
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of
msgid "keyword arguments"
msgstr "argumentos de palabras clave"

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:11
msgid "Specific parameters using e.g. `set_params(parameter_name=new_value)`. In addition, to setting the parameters of the estimator, the individual estimator of the estimators can also be set, or can be removed by setting them to 'drop'."
msgstr "Parámetros específicos usando por ejemplo `set_params(parameter_name=new_value)`. Además, para establecer los parámetros del estimador, el estimador individual de los estimadores también se puede establecer, o se puede eliminar estableciendolos en \"drop\"."

#: of sklearn.ensemble._voting.VotingRegressor.transform:24
msgid "predictions: ndarray of shape (n_samples, n_classifiers)"
msgstr "predicciones: ndarray de forma (n_samples, n_classifiers)"

#: of sklearn.ensemble._voting.VotingRegressor.transform:13
msgid "Values predicted by each regressor."
msgstr "Valores previstos por cada regresor."

