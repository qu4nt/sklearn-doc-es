msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 00:01\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.VotingRegressor.po\n"
"X-Crowdin-File-ID: 3112\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.VotingRegressor.rst:2
msgid ":mod:`sklearn.ensemble`.VotingRegressor"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:2
msgid "Prediction voting regressor for unfitted estimators."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:4
msgid "A voting regressor is an ensemble meta-estimator that fits several base regressors, each on the whole dataset. Then it averages the individual predictions to form a final prediction."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:8
msgid "Read more in the :ref:`User Guide <voting_regressor>`."
msgstr ""

#: of sklearn.base.RegressorMixin.score
#: sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params
#: sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params
#: sklearn.ensemble._voting.VotingRegressor
#: sklearn.ensemble._voting.VotingRegressor.fit
#: sklearn.ensemble._voting.VotingRegressor.predict
#: sklearn.ensemble._voting.VotingRegressor.transform
#: sklearn.ensemble._voting._BaseVoting.fit_transform
msgid "Parameters"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:22
msgid "**estimators**"
msgstr ""

#: of
msgid "list of (str, estimator) tuples"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:15
msgid "Invoking the ``fit`` method on the ``VotingRegressor`` will fit clones of those original estimators that will be stored in the class attribute ``self.estimators_``. An estimator can be set to ``'drop'`` using ``set_params``."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:20
msgid "``'drop'`` is accepted. Using None was deprecated in 0.22 and support was removed in 0.24."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:26
msgid "**weights**"
msgstr ""

#: of
msgid "array-like of shape (n_regressors,), default=None"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:25
msgid "Sequence of weights (`float` or `int`) to weight the occurrences of predicted values before averaging. Uses uniform weights if `None`."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:32
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:29
msgid "The number of jobs to run in parallel for ``fit``. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:41
msgid "**verbose**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:35
msgid "If True, the time elapsed while fitting will be printed as it is completed."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor
msgid "Attributes"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:47
msgid "**estimators_**"
msgstr ""

#: of
msgid "list of regressors"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:46
msgid "The collection of fitted sub-estimators as defined in ``estimators`` that are not 'drop'."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:55
msgid "**named_estimators_**"
msgstr ""

#: of
msgid "Bunch"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:50
msgid "Attribute to access any fitted sub-estimators by name."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:60
msgid ":obj:`VotingClassifier`"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:61
msgid "Soft Voting/Majority Rule classifier."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:67
msgid "Examples"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:81
msgid "Methods"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.VotingRegressor.fit>`\\"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.fit:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Fit the estimators."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.ensemble.VotingRegressor.fit_transform>`\\"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
#: sklearn.ensemble._voting._BaseVoting.fit_transform:2
msgid "Return class labels or probabilities for each estimator."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.VotingRegressor.get_params>`\\"
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Get the parameters of an estimator from the ensemble."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.VotingRegressor.predict>`\\"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.predict:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Predict regression target for X."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`score <sklearn.ensemble.VotingRegressor.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.VotingRegressor.set_params>`\\"
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid "Set the parameters of an estimator from the ensemble."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
msgid ":obj:`transform <sklearn.ensemble.VotingRegressor.transform>`\\"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.transform:2
#: sklearn.ensemble._voting.VotingRegressor:91:<autosummary>:1
#: sklearn.ensemble._voting._BaseVoting.fit_transform:4
msgid "Return predictions for X for each estimator."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.ensemble._voting.VotingRegressor.fit:9
#: sklearn.ensemble._voting.VotingRegressor.predict:10
#: sklearn.ensemble._voting.VotingRegressor.transform:8
#: sklearn.ensemble._voting._BaseVoting.fit_transform:9
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.fit:8
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.ensemble._voting.VotingRegressor.fit:12
#: sklearn.ensemble._voting.VotingRegressor.predict:26
#: sklearn.ensemble._voting._BaseVoting.fit_transform:12
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.fit:12
msgid "Target values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.ensemble._voting.VotingRegressor.fit:17
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.fit:15
msgid "Sample weights. If None, then samples are equally weighted. Note that this is supported only if all underlying estimators support sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score
#: sklearn.ensemble._voting.VotingRegressor.fit
#: sklearn.ensemble._voting.VotingRegressor.predict
#: sklearn.ensemble._voting.VotingRegressor.transform
#: sklearn.ensemble._voting._BaseVoting.fit_transform
msgid "Returns"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.fit:33
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.fit:22
msgid "Fitted estimator."
msgstr ""

#: of
msgid "{array-like, sparse matrix, dataframe} of shape                 (n_samples, n_features)"
msgstr ""

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:9
msgid "Input samples"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:12
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:15
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:15
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:31
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:20
msgid "Transformed array."
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:4
msgid "Returns the parameters given in the constructor as well as the estimators contained within the `estimators` parameter."
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:23
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:10
msgid "Setting it to True gets the various estimators and the parameters of the estimators as well."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.predict:4
msgid "The predicted regression target of an input sample is computed as the mean predicted regression targets of the estimators in the ensemble."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.predict:10
#: sklearn.ensemble._voting.VotingRegressor.transform:8
msgid "The input samples."
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.predict:15
msgid "The predicted values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:4
msgid "Valid parameter keys can be listed with `get_params()`. Note that you can directly set the parameters of the estimators contained in `estimators`."
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:27
msgid "**\\*\\*params**"
msgstr ""

#: of
msgid "keyword arguments"
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:11
msgid "Specific parameters using e.g. `set_params(parameter_name=new_value)`. In addition, to setting the parameters of the estimator, the individual estimator of the estimators can also be set, or can be removed by setting them to 'drop'."
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.transform:24
msgid "predictions: ndarray of shape (n_samples, n_classifiers)"
msgstr ""

#: of sklearn.ensemble._voting.VotingRegressor.transform:13
msgid "Values predicted by each regressor."
msgstr ""

