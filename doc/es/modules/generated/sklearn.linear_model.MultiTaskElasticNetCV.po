msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-24 21:32\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.MultiTaskElasticNetCV.po\n"
"X-Crowdin-File-ID: 5486\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.MultiTaskElasticNetCV.rst:2
msgid ":mod:`sklearn.linear_model`.MultiTaskElasticNetCV"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:2
msgid "Multi-task L1/L2 ElasticNet with built-in cross-validation."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:4
msgid "See glossary entry for :term:`cross-validation estimator`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:6
msgid "The optimization objective for MultiTaskElasticNet is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:12
#: sklearn.linear_model._coordinate_descent.enet_path:18
msgid "Where::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:16
#: sklearn.linear_model._coordinate_descent.enet_path:22
msgid "i.e. the sum of norm of each row."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:18
msgid "Read more in the :ref:`User Guide <multi_task_elastic_net>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV
#: sklearn.linear_model._coordinate_descent.enet_path
msgid "Parameters"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:34
#: sklearn.linear_model._coordinate_descent.enet_path:38
msgid "**l1_ratio**"
msgstr ""

#: of
msgid "float or list of float, default=0.5"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:25
msgid "The ElasticNet mixing parameter, with 0 < l1_ratio <= 1. For l1_ratio = 1 the penalty is an L1/L2 penalty. For l1_ratio = 0 it is an L2 penalty. For ``0 < l1_ratio < 1``, the penalty is a combination of L1/L2 and L2. This parameter can be a list, in which case the different values are tested by cross-validation and the one giving the best prediction score is used. Note that a good choice of list of values for l1_ratio is often to put more values close to 1 (i.e. Lasso) and less close to 0 (i.e. Ridge), as in ``[.1, .5, .7, .9, .95, .99, 1]``"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:38
#: sklearn.linear_model._coordinate_descent.enet_path:42
msgid "**eps**"
msgstr ""

#: of
msgid "float, default=1e-3"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:37
#: sklearn.linear_model._coordinate_descent.enet_path:41
msgid "Length of the path. ``eps=1e-3`` means that ``alpha_min / alpha_max = 1e-3``."
msgstr "Longitud de la ruta. ``eps=1e-3`` significa que ``alpha_min / alpha_max = 1e-3``."

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:41
#: sklearn.linear_model._coordinate_descent.enet_path:45
msgid "**n_alphas**"
msgstr "**n_alphas**"

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:41
#: sklearn.linear_model._coordinate_descent.enet_path:45
msgid "Number of alphas along the regularization path."
msgstr "Número de alfas a lo largo de la ruta de regularización."

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:45
#: sklearn.linear_model._coordinate_descent.enet_path:49
#: sklearn.linear_model._coordinate_descent.enet_path:87
msgid "**alphas**"
msgstr "**alphas**"

#: of
msgid "array-like, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:44
msgid "List of alphas where to compute the models. If not provided, set automatically."
msgstr "Lista de alfas donde calcular los modelos. Si es None los alfas se establecen automáticamente."

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:50
msgid "**fit_intercept**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:48
msgid "Whether to calculate the intercept for this model. If set to false, no intercept will be used in calculations (i.e. data is expected to be centered)."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:58
msgid "**normalize**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:53
msgid "This parameter is ignored when ``fit_intercept`` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm. If you wish to standardize, please use :class:`~sklearn.preprocessing.StandardScaler` before calling ``fit`` on an estimator with ``normalize=False``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:61
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=1000"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:61
msgid "The maximum number of iterations."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:67
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-4"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:64
msgid "The tolerance for the optimization: if the updates are smaller than ``tol``, the optimization code checks the dual gap for optimality and continues until it is smaller than ``tol``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:84
msgid "**cv**"
msgstr ""

#: of
msgid "int, cross-validation generator or iterable, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:70
msgid "Determines the cross-validation splitting strategy. Possible inputs for cv are:"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:73
msgid "None, to use the default 5-fold cross-validation,"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:74
msgid "int, to specify the number of folds."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:75
msgid ":term:`CV splitter`,"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:76
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:78
msgid "For int/None inputs, :class:`KFold` is used."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:80
msgid "Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:83
msgid "``cv`` default value if None changed from 3-fold to 5-fold."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:87
#: sklearn.linear_model._coordinate_descent.enet_path:61
msgid "**copy_X**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:87
#: sklearn.linear_model._coordinate_descent.enet_path:61
msgid "If ``True``, X will be copied; else, it may be overwritten."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:90
#: sklearn.linear_model._coordinate_descent.enet_path:67
msgid "**verbose**"
msgstr ""

#: of
msgid "bool or int, default=0"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:90
#: sklearn.linear_model._coordinate_descent.enet_path:67
msgid "Amount of verbosity."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:97
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:93
msgid "Number of CPUs to use during the cross validation. Note that this is used only if multiple values for l1_ratio are given. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:103
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:100
msgid "The seed of the pseudo random number generator that selects a random feature to update. Used when ``selection`` == 'random'. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:112
msgid "**selection**"
msgstr ""

#: of
msgid "{'cyclic', 'random'}, default='cyclic'"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:106
msgid "If set to 'random', a random coefficient is updated every iteration rather than looping over features sequentially by default. This (setting to 'random') often leads to significantly faster convergence especially when tol is higher than 1e-4."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV
msgid "Attributes"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:117
msgid "**intercept_**"
msgstr ""

#: of
msgid "ndarray of shape (n_tasks,)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:117
msgid "Independent term in decision function."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:121
msgid "**coef_**"
msgstr ""

#: of
msgid "ndarray of shape (n_tasks, n_features)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:120
msgid "Parameter vector (W in the cost function formula). Note that ``coef_`` stores the transpose of ``W``, ``W.T``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:124
msgid "**alpha_**"
msgstr "**alpha_**"

#: of
msgid "float"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:124
msgid "The amount of penalization chosen by cross validation."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:127
msgid "**mse_path_**"
msgstr ""

#: of
msgid "ndarray of shape (n_alphas, n_folds) or                 (n_l1_ratio, n_alphas, n_folds)"
msgstr "ndarray de forma (n_alphas, n_folds) o (n_l1_ratio, n_alphas, n_folds)"

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:127
msgid "Mean square error for the test set on each fold, varying alpha."
msgstr "Error medio cuadrático para el conjunto de prueba en cada pliegue, variando l1_ratio y alfa."

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:130
msgid "**alphas_**"
msgstr "**alphas_**"

#: of
msgid "ndarray of shape (n_alphas,) or (n_l1_ratio, n_alphas)"
msgstr "ndarray de forma (n_alphas,) o (n_l1_ratio, n_alphas)"

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:130
msgid "The grid of alphas used for fitting, for each l1_ratio."
msgstr "La cuadrícula de alfas usada para ajustar, por cada l1_ratio."

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:133
msgid "**l1_ratio_**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:133
msgid "Best l1_ratio obtained by cross-validation."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:137
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:136
msgid "Number of iterations run by the coordinate descent solver to reach the specified tolerance for the optimal alpha."
msgstr "Número de iteraciones ejecutadas por el solucionador de descenso de coordenadas para alcanzar la tolerancia especificada para el alfa óptimo."

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:143
msgid "**dual_gap_**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:140
msgid "The dual gap at the end of the optimization for the optimal alpha."
msgstr "Los huecos duales al final de la optimización para el alfa óptimo."

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:148
#: sklearn.linear_model._coordinate_descent.enet_path:109
msgid ":obj:`MultiTaskElasticNet`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:150
#: sklearn.linear_model._coordinate_descent.enet_path:115
msgid ":obj:`ElasticNetCV`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:152
msgid ":obj:`MultiTaskLassoCV`"
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:156
#: sklearn.linear_model._coordinate_descent.enet_path:119
msgid "Notes"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:157
msgid "The algorithm used to fit the model is coordinate descent."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:159
msgid "To avoid unnecessary memory duplication the X and y arguments of the fit method should be directly passed as Fortran-contiguous numpy arrays."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:164
msgid "Examples"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:177
msgid "Methods"
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.MultiTaskElasticNetCV.fit>`\\"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:2
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid "Fit linear model with coordinate descent."
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.MultiTaskElasticNetCV.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid ":obj:`path <sklearn.linear_model.MultiTaskElasticNetCV.path>`\\"
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
#: sklearn.linear_model._coordinate_descent.enet_path:2
msgid "Compute elastic net path with coordinate descent."
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.MultiTaskElasticNetCV.predict>`\\"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:2
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid "Predict using the linear model."
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.MultiTaskElasticNetCV.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.MultiTaskElasticNetCV.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV:186:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:4
msgid "Fit is on grid of alphas and best alpha estimated by cross-validation."
msgstr "El ajuste esta en la cuadrícula de alfas y el mejor alfa estimado por validación cruzada."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._base.LinearModel.predict:8
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit:11
#: sklearn.linear_model._coordinate_descent.enet_path:31
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:9
msgid "Training data. Pass directly as Fortran-contiguous data to avoid unnecessary memory duplication. If y is mono-output, X can be sparse."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit:26
#: sklearn.linear_model._coordinate_descent.enet_path:34
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_targets)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:14
#: sklearn.linear_model._coordinate_descent.enet_path:34
msgid "Target values."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._coordinate_descent.enet_path
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:4
msgid "The elastic net optimization function varies for mono and multi-outputs."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:6
msgid "For mono-output tasks it is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:12
msgid "For multi-output tasks it is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:24
msgid "Read more in the :ref:`User Guide <elastic_net>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:29
msgid "Training data. Pass directly as Fortran-contiguous data to avoid unnecessary memory duplication. If ``y`` is mono-output then ``X`` can be sparse."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples,) or         (n_samples, n_outputs)"
msgstr ""

#: of
msgid "float, default=0.5"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:37
msgid "Number between 0 and 1 passed to elastic net (scaling between l1 and l2 penalties). ``l1_ratio=1`` corresponds to the Lasso."
msgstr ""

#: of
msgid "ndarray, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:48
msgid "List of alphas where to compute the models. If None alphas are set automatically."
msgstr "Lista de alfas donde calcular los modelos. Si es None los alfas se establecen automáticamente."

#: of sklearn.linear_model._coordinate_descent.enet_path:54
msgid "**precompute**"
msgstr ""

#: of
msgid "'auto', bool or array-like of shape (n_features, n_features),                 default='auto'"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:52
msgid "Whether to use a precomputed Gram matrix to speed up calculations. If set to ``'auto'`` let us decide. The Gram matrix can also be passed as argument."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:58
msgid "**Xy**"
msgstr ""

#: of
msgid "array-like of shape (n_features,) or (n_features, n_outputs),         default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:57
msgid "Xy = np.dot(X.T, y) that can be precomputed. It is useful only when the Gram matrix is precomputed."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:64
msgid "**coef_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, ), default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:64
msgid "The initial values of the coefficients."
msgstr ""

#: of
msgid "bool or int, default=False"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:70
msgid "**return_n_iter**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:70
msgid "Whether to return the number of iterations or not."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:74
msgid "**positive**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:73
msgid "If set to True, forces coefficients to be positive. (Only allowed when ``y.ndim == 1``)."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:79
msgid "**check_input**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:77
msgid "If set to False, the input validation checks are skipped (including the Gram matrix when provided). It is assumed that they are handled by the caller."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
#: sklearn.linear_model._coordinate_descent.enet_path:82
msgid "**\\*\\*params**"
msgstr ""

#: of
msgid "kwargs"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:82
msgid "Keyword arguments passed to the coordinate descent solver."
msgstr ""

#: of
msgid "ndarray of shape (n_alphas,)"
msgstr "ndarray de forma (n_alphas,)"

#: of sklearn.linear_model._coordinate_descent.enet_path:87
msgid "The alphas along the path where models are computed."
msgstr "Los alfas a lo largo del camino donde se calculan los modelos."

#: of sklearn.linear_model._coordinate_descent.enet_path:90
msgid "**coefs**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_alphas) or             (n_outputs, n_features, n_alphas)"
msgstr "ndarray de forma (n_features, n_alphas) o (n_outputs, n_features, n_alphas)"

#: of sklearn.linear_model._coordinate_descent.enet_path:90
msgid "Coefficients along the path."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:93
msgid "**dual_gaps**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:93
msgid "The dual gaps at the end of the optimization for each alpha."
msgstr "Los huecos duales al final de la optimización para cada alfa."

#: of sklearn.linear_model._coordinate_descent.enet_path:104
msgid "**n_iters**"
msgstr ""

#: of
msgid "list of int"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:96
msgid "The number of iterations taken by the coordinate descent optimizer to reach the specified tolerance for each alpha. (Is returned when ``return_n_iter`` is set to True)."
msgstr "El número de iteraciones tomadas por el optimizador de descenso de coordenadas para alcanzar la tolerancia especificada para cada alfa. (Es devuelto cuando ``return_n_iter`` está establecido a True)."

#: of sklearn.linear_model._coordinate_descent.enet_path:111
msgid ":obj:`MultiTaskElasticNetCV`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:113
msgid ":obj:`ElasticNet`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:120
msgid "For an example, see :ref:`examples/linear_model/plot_lasso_coordinate_descent_path.py <sphx_glr_auto_examples_linear_model_plot_lasso_coordinate_descent_path.py>`."
msgstr ""

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:8
msgid "Samples."
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:24
msgid "**C**"
msgstr ""

#: of
msgid "array, shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:13
msgid "Returns predicted values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

