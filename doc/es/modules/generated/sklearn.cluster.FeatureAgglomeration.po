msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 00:11\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.cluster.FeatureAgglomeration.po\n"
"X-Crowdin-File-ID: 2866\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.cluster.FeatureAgglomeration.rst:2
msgid ":mod:`sklearn.cluster`.FeatureAgglomeration"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:2
msgid "Agglomerate features."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:4
msgid "Similar to AgglomerativeClustering, but recursively merges features instead of samples."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:7
msgid "Read more in the :ref:`User Guide <hierarchical_clustering>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.cluster.FeatureAgglomeration.fit_predict
#: sklearn.cluster._agglomerative.FeatureAgglomeration
#: sklearn.cluster._agglomerative.FeatureAgglomeration.fit
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform
msgid "Parameters"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:13
msgid "**n_clusters**"
msgstr ""

#: of
msgid "int, default=2"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:12
msgid "The number of clusters to find. It must be ``None`` if ``distance_threshold`` is not ``None``."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:18
msgid "**affinity**"
msgstr ""

#: of
msgid "str or callable, default='euclidean'"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:16
msgid "Metric used to compute the linkage. Can be \"euclidean\", \"l1\", \"l2\", \"manhattan\", \"cosine\", or 'precomputed'. If linkage is \"ward\", only \"euclidean\" is accepted."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:23
msgid "**memory**"
msgstr ""

#: of
msgid "str or object with the joblib.Memory interface, default=None"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:21
msgid "Used to cache the output of the computation of the tree. By default, no caching is done. If a string is given, it is the path to the caching directory."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:31
msgid "**connectivity**"
msgstr ""

#: of
msgid "array-like or callable, default=None"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:26
msgid "Connectivity matrix. Defines for each feature the neighboring features following a given structure of the data. This can be a connectivity matrix itself or a callable that transforms the data into a connectivity matrix, such as derived from kneighbors_graph. Default is None, i.e, the hierarchical clustering algorithm is unstructured."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:43
msgid "**compute_full_tree**"
msgstr ""

#: of
msgid "'auto' or bool, default='auto'"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:34
msgid "Stop early the construction of the tree at n_clusters. This is useful to decrease computation time if the number of clusters is not small compared to the number of features. This option is useful only when specifying a connectivity matrix. Note also that when varying the number of clusters and using caching, it may be advantageous to compute the full tree. It must be ``True`` if ``distance_threshold`` is not ``None``. By default `compute_full_tree` is \"auto\", which is equivalent to `True` when `distance_threshold` is not `None` or that `n_clusters` is inferior to the maximum between 100 or `0.02 * n_samples`. Otherwise, \"auto\" is equivalent to `False`."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:56
msgid "**linkage**"
msgstr ""

#: of
msgid "{'ward', 'complete', 'average', 'single'}, default='ward'"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:46
msgid "Which linkage criterion to use. The linkage criterion determines which distance to use between sets of features. The algorithm will merge the pairs of cluster that minimize this criterion."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:50
msgid "ward minimizes the variance of the clusters being merged."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:51
msgid "average uses the average of the distances of each feature of the two sets."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:53
msgid "complete or maximum linkage uses the maximum distances between all features of the two sets."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:55
msgid "single uses the minimum of the distances between all observations of the two sets."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:61
msgid "**pooling_func**"
msgstr ""

#: of
msgid "callable, default=np.mean"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:59
msgid "This combines the values of agglomerated features into a single value, and should accept an array of shape [M, N] and the keyword argument `axis=1`, and reduce it to an array of size [M]."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:68
msgid "**distance_threshold**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:64
msgid "The linkage distance threshold above which, clusters will not be merged. If not ``None``, ``n_clusters`` must be ``None`` and ``compute_full_tree`` must be ``True``."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:78
msgid "**compute_distances**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:71
msgid "Computes distances between clusters even if `distance_threshold` is not used. This can be used to make dendrogram visualization, but introduces a computational and memory overhead."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration
msgid "Attributes"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:85
msgid "**n_clusters_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:83
msgid "The number of clusters found by the algorithm. If ``distance_threshold=None``, it will be equal to the given ``n_clusters``."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:88
msgid "**labels_**"
msgstr ""

#: of
msgid "array-like of (n_features,)"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:88
msgid "cluster labels for each feature."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:91
msgid "**n_leaves_**"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:91
msgid "Number of leaves in the hierarchical tree."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:97
msgid "**n_connected_components_**"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:94
msgid "The estimated number of connected components in the graph."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:96
msgid "``n_connected_components_`` was added to replace ``n_components_``."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:105
msgid "**children_**"
msgstr ""

#: of
msgid "array-like of shape (n_nodes-1, 2)"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:100
msgid "The children of each non-leaf node. Values less than `n_features` correspond to leaves of the tree which are the original samples. A node `i` greater than or equal to `n_features` is a non-leaf node and has children `children_[i - n_features]`. Alternatively at the i-th iteration, children[i][0] and children[i][1] are merged to form node `n_features + i`"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:116
msgid "**distances_**"
msgstr ""

#: of
msgid "array-like of shape (n_nodes-1,)"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:108
msgid "Distances between nodes in the corresponding place in `children_`. Only computed if `distance_threshold` is used or `compute_distances` is set to `True`."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:119
msgid "Examples"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:133
msgid "Methods"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid ":obj:`fit <sklearn.cluster.FeatureAgglomeration.fit>`\\"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration.fit:2
#: sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid "Fit the hierarchical clustering on the data"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.cluster.FeatureAgglomeration.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid ":obj:`get_params <sklearn.cluster.FeatureAgglomeration.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.cluster.FeatureAgglomeration.inverse_transform>`\\"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid "Inverse the transformation."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid ":obj:`set_params <sklearn.cluster.FeatureAgglomeration.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
msgid ":obj:`transform <sklearn.cluster.FeatureAgglomeration.transform>`\\"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration:142:<autosummary>:1
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform:2
msgid "Transform a new matrix using the built clustering"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.cluster.FeatureAgglomeration.fit_predict:10
#: sklearn.cluster._agglomerative.FeatureAgglomeration.fit:8
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform:27
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform:9
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration.fit:8
msgid "The data"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.cluster.FeatureAgglomeration.fit_predict:13
#: sklearn.cluster._agglomerative.FeatureAgglomeration.fit:11
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.cluster.FeatureAgglomeration.fit_predict
#: sklearn.cluster._agglomerative.FeatureAgglomeration.fit
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform
msgid "Returns"
msgstr ""

#: of sklearn.cluster._agglomerative.FeatureAgglomeration.fit:27
msgid "self"
msgstr ""

#: of sklearn.cluster.FeatureAgglomeration.fit_predict:2
msgid "Fit the hierarchical clustering from features or distance matrix, and return cluster labels."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features) or                 (n_samples, n_samples)"
msgstr ""

#: of sklearn.cluster.FeatureAgglomeration.fit_predict:9
msgid "Training instances to cluster, or distances between instances if ``affinity='precomputed'``."
msgstr ""

#: of sklearn.cluster.FeatureAgglomeration.fit_predict:13
msgid "Not used, present here for API consistency by convention."
msgstr ""

#: of sklearn.cluster.FeatureAgglomeration.fit_predict:29
msgid "**labels**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.cluster.FeatureAgglomeration.fit_predict:18
msgid "Cluster labels."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform:2
msgid "Inverse the transformation. Return a vector of size nb_features with the values of Xred assigned to each group of features"
msgstr ""

#: of
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform:10
msgid "**Xred**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_clusters) or (n_clusters,)"
msgstr ""

#: of
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform:10
msgid "The values to be assigned to each cluster of samples"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features) or (n_features,)"
msgstr ""

#: of
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.inverse_transform:15
msgid "A vector of size n_samples with the values of Xred assigned to each of the cluster of samples."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features) or (n_samples,)"
msgstr ""

#: of sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform:8
msgid "A M by N array of M observations in N dimensions or a length M array of M one-dimensional observations."
msgstr ""

#: of
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform:25
msgid "**Y**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_clusters) or (n_clusters,)"
msgstr ""

#: of
#: sklearn.cluster._feature_agglomeration.AgglomerationTransform.transform:14
msgid "The pooled values for each feature cluster."
msgstr ""

