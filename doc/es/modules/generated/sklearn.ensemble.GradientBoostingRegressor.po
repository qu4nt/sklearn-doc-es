msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-13 17:07\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.GradientBoostingRegressor.po\n"
"X-Crowdin-File-ID: 5008\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.GradientBoostingRegressor.rst:2
msgid ":mod:`sklearn.ensemble`.GradientBoostingRegressor"
msgstr ":mod:`sklearn.ensemble`.GradientBoostingRegressor"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:2
msgid "Gradient Boosting for regression."
msgstr "Potenciación de Gradiente para regresión."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:4
msgid "GB builds an additive model in a forward stage-wise fashion; it allows for the optimization of arbitrary differentiable loss functions. In each stage a regression tree is fit on the negative gradient of the given loss function."
msgstr "El PG (GB en inglés) construye un modelo aditivo de forma progresiva por etapas; permite la optimización de funciones de pérdida diferenciables arbitrarias. En cada etapa un árbol de regresión es ajustado al gradiente negativo de la función de pérdida dada."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:9
msgid "Read more in the :ref:`User Guide <gradient_boosting>`."
msgstr "Más información en el :ref:`Manual de usuario <gradient_boosting>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.ensemble._gb.BaseGradientBoosting.fit
#: sklearn.ensemble._gb.GradientBoostingRegressor
#: sklearn.ensemble._gb.GradientBoostingRegressor.apply
#: sklearn.ensemble._gb.GradientBoostingRegressor.predict
#: sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:18
msgid "**loss**"
msgstr "**loss**"

#: of
msgid "{'ls', 'lad', 'huber', 'quantile'}, default='ls'"
msgstr "{'ls', 'lad', 'huber', 'quantile'}, default='ls'"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:14
msgid "Loss function to be optimized. 'ls' refers to least squares regression. 'lad' (least absolute deviation) is a highly robust loss function solely based on order information of the input variables. 'huber' is a combination of the two. 'quantile' allows quantile regression (use `alpha` to specify the quantile)."
msgstr "La función de pérdida a optimizar. 'ls' se refiere a la regresión de minimos cuadrados. 'lad' (desviación menor absoluta) es una función de perdida altamente robusta basada únicamente en la información de orden de las variables de entrada. 'huber' es una combinación de ambas. 'quantile' permite la regresión por cuantiles (utilice `alpha` para especificar el cuantil)."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:22
msgid "**learning_rate**"
msgstr "**learning_rate**"

#: of
msgid "float, default=0.1"
msgstr "float, default=0.1"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:21
msgid "Learning rate shrinks the contribution of each tree by `learning_rate`. There is a trade-off between learning_rate and n_estimators."
msgstr "La tasa de aprendizaje reduce la contribución de cada árbol por `learning_rate`. Hay una compensación entre learning_rate y n_estimators."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:27
msgid "**n_estimators**"
msgstr "**n_estimators**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:25
msgid "The number of boosting stages to perform. Gradient boosting is fairly robust to over-fitting so a large number usually results in better performance."
msgstr "La cantidad de etapas de potenciación a realizar. La potenciación de gradiente es bastante robusta al sobre-ajuste, por lo que un número grande normalmente resultará en mejor rendimiento."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:34
msgid "**subsample**"
msgstr "**subsample**"

#: of
msgid "float, default=1.0"
msgstr "float, default=1.0"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:30
msgid "The fraction of samples to be used for fitting the individual base learners. If smaller than 1.0 this results in Stochastic Gradient Boosting. `subsample` interacts with the parameter `n_estimators`. Choosing `subsample < 1.0` leads to a reduction of variance and an increase in bias."
msgstr "La fracción de muestras a ser usadas para ajustar los aprendices base individuales. Si es menor que 1.0 esto resulta en Potenciación de Gradiente Estocástica. `subsample` interactúa con el parámetro `n_estimators`. Escoger `subsample < 1.0` lleva a una reducción de varianza y un aumento en el sesgo."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:48
msgid "**criterion**"
msgstr "**criterion**"

#: of
msgid "{'friedman_mse', 'mse', 'mae'}, default='friedman_mse'"
msgstr "{'friedman_mse', 'mse', 'mae'}, default='friedman_mse'"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:37
msgid "The function to measure the quality of a split. Supported criteria are \"friedman_mse\" for the mean squared error with improvement score by Friedman, \"mse\" for mean squared error, and \"mae\" for the mean absolute error. The default value of \"friedman_mse\" is generally the best as it can provide a better approximation in some cases."
msgstr "La función para medir la calidad de una división. Los criterios soportados son `friedman_mse` para el error cuadrático medio con puntuación de mejora por Friedman, \"mse\" para error cuadrático medio, y \"mae\" para el error absoluto medio. El valor por defecto de \"friedman_mse\" es generalmente el mejor ya que puede proveer una mejor aproximación en algunos casos."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:45
msgid "`criterion='mae'` is deprecated and will be removed in version 1.1 (renaming of 0.26). The correct way of minimizing the absolute error is to use `loss='lad'` instead."
msgstr "`criterion='mae'` está obsoleto y será eliminado en la versión 1.1 (renombrado de 0.26). La forma correcta de minimizar el error absoluto es usar `loss='lad'` en su lugar."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:59
msgid "**min_samples_split**"
msgstr "**min_samples_split**"

#: of
msgid "int or float, default=2"
msgstr "int o float, default=2"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:51
msgid "The minimum number of samples required to split an internal node:"
msgstr "El número mínimo de muestras requeridas para dividir un nodo interno:"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:53
msgid "If int, then consider `min_samples_split` as the minimum number."
msgstr "Si int, entonces considera `min_samples_split` como el número mínimo."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:54
msgid "If float, then `min_samples_split` is a fraction and `ceil(min_samples_split * n_samples)` are the minimum number of samples for each split."
msgstr "Si float, entonces `min_samples_split` es una fracción y `ceil(min_samples_split * n_samples)` son el número mínimo de muestras para cada división."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:58
#: sklearn.ensemble._gb.GradientBoostingRegressor:73
msgid "Added float values for fractions."
msgstr "Se añadieron valores flotantes para las fracciones."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:74
msgid "**min_samples_leaf**"
msgstr "**min_samples_leaf**"

#: of
msgid "int or float, default=1"
msgstr "int o float, default=1"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:62
msgid "The minimum number of samples required to be at a leaf node. A split point at any depth will only be considered if it leaves at least ``min_samples_leaf`` training samples in each of the left and right branches.  This may have the effect of smoothing the model, especially in regression."
msgstr "El número mínimo de muestras requeridas para estar en un nodo de hoja. Un punto dividido a cualquier profundidad sólo se considerará si deja al menos ``min_samples_leaf`` muestras de entrenamiento en cada una de las ramas izquierda y derecha. Esto puede tener el efecto de suavizar el modelo, especialmente en regresión."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:68
msgid "If int, then consider `min_samples_leaf` as the minimum number."
msgstr "Si int, entonces considera `min_samples_split` como el número mínimo."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:69
msgid "If float, then `min_samples_leaf` is a fraction and `ceil(min_samples_leaf * n_samples)` are the minimum number of samples for each node."
msgstr "Si float, entonces `min_samples_leaf` es una fracción y `ceil(min_samples_leaf * n_samples)` son el número mínimo de muestras para cada nodo."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:79
msgid "**min_weight_fraction_leaf**"
msgstr "**min_weight_fraction_leaf**"

#: of
msgid "float, default=0.0"
msgstr "float, default=0.0"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:77
msgid "The minimum weighted fraction of the sum total of weights (of all the input samples) required to be at a leaf node. Samples have equal weight when sample_weight is not provided."
msgstr "La fracción mínima ponderada de la suma total de las ponderaciones (de todas las muestras de entrada) requeridas para estar en un nodo de hoja. Las muestras tienen la misma ponderación cuando no se proporciona sample_weight."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:85
msgid "**max_depth**"
msgstr "**max_depth**"

#: of
msgid "int, default=3"
msgstr "int, default=3"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:82
msgid "Maximum depth of the individual regression estimators. The maximum depth limits the number of nodes in the tree. Tune this parameter for best performance; the best value depends on the interaction of the input variables."
msgstr "Profundidad máxima de los estimadores de regresión individuales. La profundidad máxima limita el número de nodos en el árbol. Ajusté este parámetro para un mejor rendimiento; el mejor valor dependerá de la interacción de las variables de entrada."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:103
msgid "**min_impurity_decrease**"
msgstr "**min_impurity_decrease**"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:88
msgid "A node will be split if this split induces a decrease of the impurity greater than or equal to this value."
msgstr "Un nodo se dividirá si esta división induce una disminución de la impureza mayor o igual a este valor."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:91
msgid "The weighted impurity decrease equation is the following::"
msgstr "La ecuación de disminución de impureza ponderada es la siguiente::"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:96
msgid "where ``N`` is the total number of samples, ``N_t`` is the number of samples at the current node, ``N_t_L`` is the number of samples in the left child, and ``N_t_R`` is the number of samples in the right child."
msgstr "donde ``N`` es el número total de muestras, ``N_t`` es el número de muestras en el nodo actual, ``N_t_L`` es el número de muestras en el hijo izquierdo, y ``N_t_R`` es el número de muestras en el hijo derecho."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:100
msgid "``N``, ``N_t``, ``N_t_R`` and ``N_t_L`` all refer to the weighted sum, if ``sample_weight`` is passed."
msgstr "``N``, ``N_t``, ``N_t_R`` y ``N_t_L`` se refieren a la suma ponderada, si ``sample_weight`` es pasada."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:114
msgid "**min_impurity_split**"
msgstr "**min_impurity_split**"

#: of
msgid "float, default=None"
msgstr "float, default=None"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:106
msgid "Threshold for early stopping in tree growth. A node will split if its impurity is above the threshold, otherwise it is a leaf."
msgstr "El umbral para la parada anticipada en el crecimiento de árboles. Un nodo se dividirá si su impureza está por encima del umbral, de lo contrario será una hoja."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:109
msgid "``min_impurity_split`` has been deprecated in favor of ``min_impurity_decrease`` in 0.19. The default value of ``min_impurity_split`` has changed from 1e-7 to 0 in 0.23 and it will be removed in 1.0 (renaming of 0.25). Use ``min_impurity_decrease`` instead."
msgstr "``min_impurity_split`` ha sido obviado en favor de ``min_impurity_decrease`` en 0.19. El valor por defecto de ``min_impurity_split`` ha cambiado de 1e-7 a 0 en 0.23 y se eliminará en 1.0 (renombrado de 0.25). Use ``min_impurity_decrease`` en su lugar."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:121
msgid "**init**"
msgstr "**init**"

#: of
msgid "estimator or 'zero', default=None"
msgstr "estimator or 'zero' default=None"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:117
msgid "An estimator object that is used to compute the initial predictions. ``init`` has to provide :term:`fit` and :term:`predict`. If 'zero', the initial raw predictions are set to zero. By default a ``DummyEstimator`` is used, predicting either the average target value (for loss='ls'), or a quantile for the other losses."
msgstr "Un objeto estimador utilizado para calcular las predicciones iniciales. ``init`` debe proporcionar :term:`fit` y :term:`predict`. Si 'zero', las predicciones en bruto iniciales son establecidas como cero. Por defecto un ``DummyEstimator`` es utilizado, prediciendo tanto el valor objetivo promedio (para loss='ls'), como un cuantil para las otras perdidas."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:131
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, instancia de RandomState o None, por defecto=None"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:124
msgid "Controls the random seed given to each Tree estimator at each boosting iteration. In addition, it controls the random permutation of the features at each split (see Notes for more details). It also controls the random spliting of the training data to obtain a validation set if `n_iter_no_change` is not None. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Controla la semilla aleatoria dada a cada estimador de árbol en cada iteración de potenciación. Además, controla la permutación aleatoria de las características en cada división (vea las Notas para mas detalles). También controla la división aleatoria de los datos de entrenamiento para obtener un conjunto de validación si `n_iter_no_change` no es None. Pase un int para una salida reproducible a lo largo de varías llamadas de función. Vea :term:`Glossary<random_state>`."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:150
msgid "**max_features**"
msgstr "**max_features**"

#: of
msgid "{'auto', 'sqrt', 'log2'}, int or float, default=None"
msgstr "{'auto', 'sqrt', 'log2'}, int o float, default=None"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:134
msgid "The number of features to consider when looking for the best split:"
msgstr "El número de características a tener en cuenta cuando se busca la mejor división:"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:136
msgid "If int, then consider `max_features` features at each split."
msgstr "Si es int, entonces considere las características `max_features` en cada división."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:137
msgid "If float, then `max_features` is a fraction and `int(max_features * n_features)` features are considered at each split."
msgstr "Si float, entonces `max_features` es una fracción y las características `int(max_features * n_features)` son consideradas en cada división."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:140
msgid "If \"auto\", then `max_features=n_features`."
msgstr "Si \"auto\", entonces `max_features=n_features`."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:141
msgid "If \"sqrt\", then `max_features=sqrt(n_features)`."
msgstr "Si \"sqrt\", entonces `max_features=sqrt(n_features)`."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:142
msgid "If \"log2\", then `max_features=log2(n_features)`."
msgstr "Si \"log2\", entonces `max_features=log2(n_features)`."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:143
msgid "If None, then `max_features=n_features`."
msgstr "Si None, entonces `max_features=n_features`."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:145
msgid "Choosing `max_features < n_features` leads to a reduction of variance and an increase in bias."
msgstr "Elegir `max_features < n_features` lleva a una reducción de varianza y un incremento en el sesgo."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:148
msgid "Note: the search for a split does not stop until at least one valid partition of the node samples is found, even if it requires to effectively inspect more than ``max_features`` features."
msgstr "Nota: la búsqueda de una división no se detiene hasta que se encuentre al menos una partición válida de las muestras de nodos, incluso si requiere inspeccionar eficazmente más de las características de ``max_features``."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:154
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float, default=0.9"
msgstr "float, default=0.9"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:153
msgid "The alpha-quantile of the huber loss function and the quantile loss function. Only if ``loss='huber'`` or ``loss='quantile'``."
msgstr "El cuantil-alfa de la función de pérdida de huber y la función de perdida de cuantil. Solo sí ``loss='huber'`` o ``loss='quantile'``."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:159
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int, default=0"
msgstr "int, default=0"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:157
msgid "Enable verbose output. If 1 then it prints progress and performance once in a while (the more trees the lower the frequency). If greater than 1 then it prints progress and performance for every tree."
msgstr "Habilita la salida verborrea. Si 1, entonces imprime el progreso y el rendimiento de vez en cuando (mientras más sean los árboles menor será la frecuencia). Si es mayor que 1, imprimirá progreso y rendimiento para cada árbol."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:164
msgid "**max_leaf_nodes**"
msgstr "**max_leaf_nodes**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:162
msgid "Grow trees with ``max_leaf_nodes`` in best-first fashion. Best nodes are defined as relative reduction in impurity. If None then unlimited number of leaf nodes."
msgstr "Hacer crecer árboles con ``max_leaf_nodes`` en modo best-first. Los mejores nodos se definen como una reducción relativa de la impureza. Si no hay ninguno, el número de nodos hoja es ilimitado."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:169
msgid "**warm_start**"
msgstr "**warm_start**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:167
msgid "When set to ``True``, reuse the solution of the previous call to fit and add more estimators to the ensemble, otherwise, just erase the previous solution. See :term:`the Glossary <warm_start>`."
msgstr "Cuando se establece a ``True``, reutiliza la solución de la llamada anterior para ajustar y añadir más estimadores al ensemble, de lo contrario, solamente borrará la solución anterior. Vea :term:`el Glosario <warm_start>`."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:176
msgid "**validation_fraction**"
msgstr "**validation_fraction**"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:172
msgid "The proportion of training data to set aside as validation set for early stopping. Must be between 0 and 1. Only used if ``n_iter_no_change`` is set to an integer."
msgstr "La proporción de datos de entrenamiento a reservar como conjunto de validación para la parada anticipada. Debe ser entre 0 y 1. Solamente utilizada si ``n_iter_no_change`` está establecido como un entero."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:187
msgid "**n_iter_no_change**"
msgstr "**n_iter_no_change**"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:179
msgid "``n_iter_no_change`` is used to decide if early stopping will be used to terminate training when validation score is not improving. By default it is set to None to disable early stopping. If set to a number, it will set aside ``validation_fraction`` size of the training data as validation and terminate training when validation score is not improving in all of the previous ``n_iter_no_change`` numbers of iterations."
msgstr "``n_iter_no_change`` se usa para decidir si la parada anticipada sera utilizada para terminar el entrenamiento cuando el puntaje de validación no esta mejorando. Por defecto esta establecido como None para deshabilitar la parada anticipada. Si se establece como un número, apartará un tamaño ``validation_fraction`` de los datos de entrenamiento como validación y terminara el entrenamiento cuando el puntaje de validación no este mejorando en todas los números de iteraciones ``n_iter_no_change`` previos."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:194
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-4"
msgstr "float, default=1e-4"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:190
msgid "Tolerance for the early stopping. When the loss is not improving by at least tol for ``n_iter_no_change`` iterations (if set to a number), the training stops."
msgstr "Tolerancia para la parada anticipada. Cuando la pérdida no esta mejorando por al menos tol para ``n_iter_no_change`` iteraciones (si se establece en un número), el entrenamiento se detiene."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:205
msgid "**ccp_alpha**"
msgstr "**ccp_alpha**"

#: of
msgid "non-negative float, default=0.0"
msgstr "flotante no negativo, default=0.0"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:197
msgid "Complexity parameter used for Minimal Cost-Complexity Pruning. The subtree with the largest cost complexity that is smaller than ``ccp_alpha`` will be chosen. By default, no pruning is performed. See :ref:`minimal_cost_complexity_pruning` for details."
msgstr "Parámetro de complejidad utilizado para la Poda de Mínima Complejidad de Costo. El subárbol con la complejidad de costo mayor que sea menor que ``ccp_alpha`` será elegido. Por defecto, no se realiza ninguna poda. Vea :ref:`minimal_cost_complexity_pruning` para más detalles."

#: of sklearn.ensemble._gb.GradientBoostingRegressor
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:210
msgid ":obj:`feature_importances_ <feature_importances_>`"
msgstr ":obj:`feature_importances_ <feature_importances_>`"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.ensemble.GradientBoostingRegressor.feature_importances_:2
#: sklearn.ensemble._gb.GradientBoostingRegressor:210
msgid "The impurity-based feature importances."
msgstr "Las importancias basadas en la impureza de las características."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:217
msgid "**oob_improvement_**"
msgstr "**oob_improvement_**"

#: of
msgid "ndarray of shape (n_estimators,)"
msgstr "ndarray de forma (n_estimators,)"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:213
msgid "The improvement in loss (= deviance) on the out-of-bag samples relative to the previous iteration. ``oob_improvement_[0]`` is the improvement in loss of the first stage over the ``init`` estimator. Only available if ``subsample < 1.0``"
msgstr "La mejora en la pérdida (= desviación) en las muestras fuera-de-bolsa relativa a la iteración previa. ``oob_improvement_[0]```es la mejora en la pérdida de la primera etapa sobre el estimador ``init``. Sólo esta disponible si ``subsample < 1.0``"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:222
msgid "**train_score_**"
msgstr "**train_score_**"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:220
msgid "The i-th score ``train_score_[i]`` is the deviance (= loss) of the model at iteration ``i`` on the in-bag sample. If ``subsample == 1`` this is the deviance on the training data."
msgstr "La puntuación i-ésima ``train_score_[i]`` es la desviación (= pérdida) del modelo en la iteración ``i`` de la muestra en-bolsa. Si ``subsample == 1`` esta es la desviación en los datos de entrenamiento."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:225
msgid "**loss_**"
msgstr "**loss_**"

#: of
msgid "LossFunction"
msgstr "LossFunction"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:225
msgid "The concrete ``LossFunction`` object."
msgstr "El objeto concreto ``LossFunction``."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:229
msgid "**init_**"
msgstr "**init_**"

#: of
msgid "estimator"
msgstr "estimator"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:228
msgid "The estimator that provides the initial predictions. Set via the ``init`` argument or ``loss.init_estimator``."
msgstr "El estimador que proporciona las predicciones iniciales. Establecer a través del argumento ``init`` o ``loss.init_estimator``."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:232
msgid "**estimators_**"
msgstr "**estimators_**"

#: of
msgid "ndarray of DecisionTreeRegressor of shape (n_estimators, 1)"
msgstr "ndarray de DecisionTreeRegressor de forma (n_estimators, 1)"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:232
msgid "The collection of fitted sub-estimators."
msgstr "La colección de sub-estimadores ajustados."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:239
msgid "**n_classes_**"
msgstr "**n_clases_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:235
msgid "The number of classes, set to 1 for regressors."
msgstr "El número de clases, establecido a 1 para regresores."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:237
msgid "Attribute ``n_classes_`` was deprecated in version 0.24 and will be removed in 1.1 (renaming of 0.26)."
msgstr "El atributo ``n_jobs`` fue obsoleto en la versión 0.24 y será eliminado en la 1.1 (cambio de nombre de la versión 0.26)."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:244
msgid "**n_estimators_**"
msgstr "**n_estimators_**"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:242
msgid "The number of estimators as selected by early stopping (if ``n_iter_no_change`` is specified). Otherwise it is set to ``n_estimators``."
msgstr "El número de estimadores seleccionados por la parada anticipada (si se especifica ``n_iter_no_change``). De lo contrario, se establece como ``n_estimators``."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:247
msgid "**n_features_**"
msgstr "**n_features_**"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:247
msgid "The number of data features."
msgstr "El número de características en los datos."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:253
msgid "**max_features_**"
msgstr "**max_features_**"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:250
msgid "The inferred value of max_features."
msgstr "El valor inferido de max_features."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:258
msgid ":obj:`HistGradientBoostingRegressor`"
msgstr ":obj:`HistGradientBoostingRegressor`"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:259
msgid "Histogram-based Gradient Boosting Classification Tree."
msgstr "Árbol de Clasificación de Potenciación de Gradiente basado en histograma."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:260
msgid ":obj:`sklearn.tree.DecisionTreeRegressor`"
msgstr ":obj:`sklearn.tree.DecisionTreeRegressor`"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:261
msgid "A decision tree regressor."
msgstr "Un regresor de árbol de decisión."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:262
msgid ":obj:`sklearn.tree.RandomForestRegressor`"
msgstr ":obj:`sklearn.tree.RandomForestRegressor`"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:263
msgid "A random forest regressor."
msgstr "Un regresor de bosque aleatorio."

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.ensemble._gb.GradientBoostingRegressor:267
msgid "Notes"
msgstr "Notas"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:268
msgid "The features are always randomly permuted at each split. Therefore, the best found split may vary, even with the same training data and ``max_features=n_features``, if the improvement of the criterion is identical for several splits enumerated during the search of the best split. To obtain a deterministic behaviour during fitting, ``random_state`` has to be fixed."
msgstr "Las características siempre son aleatoriamente permutadas en cada división. Por lo tanto, la mejor división encontrada podría variar, inclusive con los mismos datos de entrenamiento y ``max_features=n_features``, si la mejora del criterio es idéntica para varias divisiones enumeradas durante la búsqueda de la mejor división. Para obtener un comportamiento determinístico durante el ajuste, ``random_state`` debe ser fijo."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:276
msgid "References"
msgstr "Referencias"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:277
msgid "J. Friedman, Greedy Function Approximation: A Gradient Boosting Machine, The Annals of Statistics, Vol. 29, No. 5, 2001."
msgstr "J. Friedman, Greedy Function Approximation: A Gradient Boosting Machine, The Annals of Statistics, Vol. 29, No. 5, 2001."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:280
msgid "Friedman, Stochastic Gradient Boosting, 1999"
msgstr "Friedman, Stochastic Gradient Boosting, 1999"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:282
msgid "T. Hastie, R. Tibshirani and J. Friedman. Elements of Statistical Learning Ed. 2, Springer, 2009."
msgstr "T. Hastie, R. Tibshirani and J. Friedman. Elements of Statistical Learning Ed. 2, Springer, 2009."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:290
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:306
msgid "Methods"
msgstr "Métodos"

#: of sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid ":obj:`apply <sklearn.ensemble.GradientBoostingRegressor.apply>`\\"
msgstr ":obj:`apply <sklearn.ensemble.GradientBoostingRegressor.apply>`\\"

#: of sklearn.ensemble._gb.GradientBoostingRegressor.apply:2
#: sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid "Apply trees in the ensemble to X, return leaf indices."
msgstr "Aplica los árboles en el ensemble a X, devuelve los índices de las hojas."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.GradientBoostingRegressor.fit>`\\"
msgstr ":obj:`fit <sklearn.ensemble.GradientBoostingRegressor.fit>`\\"

#: of sklearn.ensemble._gb.BaseGradientBoosting.fit:2
#: sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid "Fit the gradient boosting model."
msgstr "Ajustado del modelo de potenciación de gradiente."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.GradientBoostingRegressor.get_params>`\\"
msgstr ":obj:`get_params <sklearn.ensemble.GradientBoostingRegressor.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.GradientBoostingRegressor.predict>`\\"
msgstr ":obj:`predict <sklearn.ensemble.GradientBoostingRegressor.predict>`\\"

#: of sklearn.ensemble._gb.GradientBoostingRegressor.predict:2
#: sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid "Predict regression target for X."
msgstr "Predice el objetivo de regresión para X."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid ":obj:`score <sklearn.ensemble.GradientBoostingRegressor.score>`\\"
msgstr ":obj:`score <sklearn.ensemble.GradientBoostingRegressor.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.GradientBoostingRegressor.set_params>`\\"
msgstr ":obj:`set_params <sklearn.ensemble.GradientBoostingRegressor.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid ":obj:`staged_predict <sklearn.ensemble.GradientBoostingRegressor.staged_predict>`\\"
msgstr ":obj:`staged_predict <sklearn.ensemble.GradientBoostingRegressor.staged_predict>`\\"

#: of sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict:2
#: sklearn.ensemble._gb.GradientBoostingRegressor:316:<autosummary>:1
msgid "Predict regression target at each stage for X."
msgstr "Predice el objetivo de regresión en cada etapa para X."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.ensemble._gb.BaseGradientBoosting.fit:10
#: sklearn.ensemble._gb.GradientBoostingRegressor.apply:11
#: sklearn.ensemble._gb.GradientBoostingRegressor.predict:10
#: sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict:12
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.ensemble._gb.GradientBoostingRegressor.apply:9
msgid "The input samples. Internally, its dtype will be converted to ``dtype=np.float32``. If a sparse matrix is provided, it will be converted to a sparse ``csr_matrix``."
msgstr "Las muestras de entrada. Internamente, su dtype se convertirá a ``dtype=np.float32``. Si se proporciona una matriz dispersa, se convertirá a una dispersa ``csr_matrix``."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.ensemble.GradientBoostingRegressor.feature_importances_
#: sklearn.ensemble._gb.BaseGradientBoosting.fit
#: sklearn.ensemble._gb.GradientBoostingRegressor.apply
#: sklearn.ensemble._gb.GradientBoostingRegressor.predict
#: sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict
msgid "Returns"
msgstr "Salida"

#: of sklearn.ensemble._gb.GradientBoostingRegressor.apply:28
msgid "**X_leaves**"
msgstr "**X_leaves**"

#: of
msgid "array-like of shape (n_samples, n_estimators)"
msgstr "array-like de forma (n_samples, n_estimators)"

#: of sklearn.ensemble._gb.GradientBoostingRegressor.apply:16
msgid "For each datapoint x in X and for each tree in the ensemble, return the index of the leaf x ends up in each estimator."
msgstr "Para cada punto de dato x en X y para cada árbol en el ensemble, devuelve el índice de la hoja en la que x termina en cada estimador."

#: of sklearn.ensemble.GradientBoostingRegressor.feature_importances_:4
msgid "The higher, the more important the feature. The importance of a feature is computed as the (normalized) total reduction of the criterion brought by that feature.  It is also known as the Gini importance."
msgstr "Cuanto más alto, más importante sera la característica. La importancia de una característica se calcula como la reducción total (normalizada) del criterio traído por esa función. También se le conoce como la importancia de Gini."

#: of sklearn.ensemble.GradientBoostingRegressor.feature_importances_:9
msgid "Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative."
msgstr "Advertencia: las importancias de característica basadas en la impureza pueden ser engañosas para las características de alta cardinalidad (muchos valores únicos). Vea :func:`sklearn.inspection.permutation_importance` como una alternativa."

#: of sklearn.ensemble.GradientBoostingRegressor.feature_importances_:30
msgid "**feature_importances_**"
msgstr "**feature_importances_**"

#: of sklearn.ensemble.GradientBoostingRegressor.feature_importances_:17
msgid "The values of this array sum to 1, unless all trees are single node trees consisting of only the root node, in which case it will be an array of zeros."
msgstr "Los valores de este arreglo suman a 1, a menos que todos los árboles sean árboles de nodos individuales consistiendo de solo el nodo raíz, en cuyo caso sera un arreglo de ceros."

#: of sklearn.ensemble._gb.BaseGradientBoosting.fit:8
#: sklearn.ensemble._gb.GradientBoostingRegressor.predict:8
#: sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict:10
msgid "The input samples. Internally, it will be converted to ``dtype=np.float32`` and if a sparse matrix is provided to a sparse ``csr_matrix``."
msgstr "Las muestras de entrada. Internamente, se convertirá a ``dtype=np.float32`` y si se proporciona una matriz dispersa se convertirá a una dispersa ``csr_matrix``."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.ensemble._gb.BaseGradientBoosting.fit:15
#: sklearn.ensemble._gb.GradientBoostingRegressor.predict:26
#: sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict:28
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "arreglo tipo de forma (n_samples,)"

#: of sklearn.ensemble._gb.BaseGradientBoosting.fit:13
msgid "Target values (strings or integers in classification, real numbers in regression) For classification, labels must correspond to classes."
msgstr "Valores objetivo (cadenas o enteros en clasificación, números reales en la regresión) Para la clasificación, las etiquetas deben corresponder a las clases."

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.ensemble._gb.BaseGradientBoosting.fit:22
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "arreglo tipo de forma (n_samples,), default=None"

#: of sklearn.ensemble._gb.BaseGradientBoosting.fit:18
msgid "Sample weights. If None, then samples are equally weighted. Splits that would create child nodes with net zero or negative weight are ignored while searching for a split in each node. In the case of classification, splits are also ignored if they would result in any single class carrying a negative weight in either child node."
msgstr "Ponderados de muestra. Si es None, entonces las muestras están ponderadas de la misma manera. Divisiones que crearían nodos hijos con ponderado neto cero o negativo son ignoradas al buscar una división en cada nodo. En el caso de la clasificación, las divisiones también se ignoran si resultarían en cualquier clase individual llevando un ponderado negativo en cualquiera de los nodos hijos."

#: of sklearn.ensemble._gb.BaseGradientBoosting.fit:31
msgid "**monitor**"
msgstr "**monitor**"

#: of
msgid "callable, default=None"
msgstr "callable, default=None"

#: of sklearn.ensemble._gb.BaseGradientBoosting.fit:25
msgid "The monitor is called after each iteration with the current iteration, a reference to the estimator and the local variables of ``_fit_stages`` as keyword arguments ``callable(i, self, locals())``. If the callable returns ``True`` the fitting procedure is stopped. The monitor can be used for various things such as computing held-out estimates, early stopping, model introspect, and snapshoting."
msgstr "El monitor es llamado después de cada iteración con la iteración actual, una referencia al estimador y a las variables locales de ``_fit_stages`` como argumentos de palabra clave ``callable(i, self, locals())``. Si el invocable devuelve ``True`` el procedimiento de ajuste se detiene. El monitor puede ser utilizado para varias cosas como calcular estimados apartados, parada anticipada, introspección del modelo, y snapshoting."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.ensemble._gb.BaseGradientBoosting.fit:47
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.ensemble._gb.GradientBoostingRegressor.predict:15
msgid "The predicted values."
msgstr "Los valores previstos."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma residual de cuadrados ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1,0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0,0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "tipo arreglo de forma (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz de núcleo precalculada o una lista de objetos genéricos con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para `X`."

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` of ``self.predict(X)`` wrt. `y`."

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al llamar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la coherencia con el valor por defecto de :func:`~sklearn.metrics.r2_score``. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como con objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict:4
msgid "This method allows monitoring (i.e. determine error on testing set) after each stage."
msgstr "Este método permite el monitoreo (es decir, determinar el error en el conjunto de pruebas) después de cada etapa."

#: of
msgid "generator of ndarray of shape (n_samples,)"
msgstr "generador de ndarray de forma (n_samples,)"

#: of sklearn.ensemble._gb.GradientBoostingRegressor.staged_predict:17
msgid "The predicted value of the input samples."
msgstr "El valor predicho de las muestras de entrada."

#: ../modules/generated/sklearn.ensemble.GradientBoostingRegressor.examples:4
msgid "Examples using ``sklearn.ensemble.GradientBoostingRegressor``"
msgstr "Ejemplos usando ``sklearn.ensemble.GradientBoostingRegressor``"

#: ../modules/generated/sklearn.ensemble.GradientBoostingRegressor.examples:15
#: ../modules/generated/sklearn.ensemble.GradientBoostingRegressor.examples:23
msgid ":ref:`sphx_glr_auto_examples_applications_plot_model_complexity_influence.py`"
msgstr ":ref:`sphx_glr_auto_examples_applications_plot_model_complexity_influence.py`"

