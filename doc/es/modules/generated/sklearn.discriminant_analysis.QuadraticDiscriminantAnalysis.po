msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.po\n"
"X-Crowdin-File-ID: 5880\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.rst:2
msgid ":mod:`sklearn.discriminant_analysis`.QuadraticDiscriminantAnalysis"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:2
msgid "Quadratic Discriminant Analysis"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:4
msgid "A classifier with a quadratic decision boundary, generated by fitting class conditional densities to the data and using Bayes' rule."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:8
msgid "The model fits a Gaussian density to each class."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:10
msgid "*QuadraticDiscriminantAnalysis*"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:13
msgid "Read more in the :ref:`User Guide <lda_qda>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba
msgid "Parameters"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:19
msgid "**priors**"
msgstr ""

#: of
msgid "ndarray of shape (n_classes,), default=None"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:18
msgid "Class priors. By default, the class proportions are inferred from the training data."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:24
msgid "**reg_param**"
msgstr ""

#: of
msgid "float, default=0.0"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:22
msgid "Regularizes the per-class covariance estimates by transforming S2 as ``S2 = (1 - reg_param) * S2 + reg_param * np.eye(n_features)``, where S2 corresponds to the `scaling_` attribute of a given class."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:30
msgid "**store_covariance**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:27
msgid "If True, the class covariance matrices are explicitely computed and stored in the `self.covariance_` attribute."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:42
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1.0e-4"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:33
msgid "Absolute threshold for a singular value to be considered significant, used to estimate the rank of `Xk` where `Xk` is the centered matrix of samples in class k. This parameter does not affect the predictions. It only controls a warning that is raised when features are considered to be colinear."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis
msgid "Attributes"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:49
msgid "**covariance_**"
msgstr ""

#: of
msgid "list of len n_classes of ndarray             of shape (n_features, n_features)"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:47
msgid "For each class, gives the covariance matrix estimated using the samples of that class. The estimations are unbiased. Only present if `store_covariance` is True."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:52
msgid "**means_**"
msgstr ""

#: of
msgid "array-like of shape (n_classes, n_features)"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:52
msgid "Class-wise means."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:55
msgid "**priors_**"
msgstr ""

#: of
msgid "array-like of shape (n_classes,)"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:55
msgid "Class priors (sum to 1)."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:63
msgid "**rotations_**"
msgstr ""

#: of
msgid "list of len n_classes of ndarray of shape (n_features, n_k)"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:58
msgid "For each class k an array of shape (n_features, n_k), where ``n_k = min(n_features, number of elements in class k)`` It is the rotation of the Gaussian distribution, i.e. its principal axis. It corresponds to `V`, the matrix of eigenvectors coming from the SVD of `Xk = U S Vt` where `Xk` is the centered matrix of samples from class k."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:71
msgid "**scalings_**"
msgstr ""

#: of
msgid "list of len n_classes of ndarray of shape (n_k,)"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:66
msgid "For each class, contains the scaling of the Gaussian distributions along its principal axes, i.e. the variance in the rotated coordinate system. It corresponds to `S^2 / (n_samples - 1)`, where `S` is the diagonal matrix of singular values from the SVD of `Xk`, where `Xk` is the centered matrix of samples from class k."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:77
msgid "**classes_**"
msgstr ""

#: of
msgid "ndarray of shape (n_classes,)"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:74
msgid "Unique class labels."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:82
msgid ":obj:`LinearDiscriminantAnalysis`"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:83
msgid "Linear Discriminant Analysis."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:89
msgid "Examples"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:101
msgid "Methods"
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid ":obj:`decision_function <sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function>`\\"
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function:2
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid "Apply decision function to an array of samples."
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid ":obj:`fit <sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit>`\\"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit:2
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid "Fit the model according to the given training data and parameters."
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid ":obj:`get_params <sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid ":obj:`predict <sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict>`\\"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict:2
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid "Perform classification on an array of test vectors X."
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid ":obj:`predict_log_proba <sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba>`\\"
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba:2
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid "Return log of posterior probabilities of classification."
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba>`\\"
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba:2
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid "Return posterior probabilities of classification."
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid ":obj:`score <sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.score>`\\"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid ":obj:`set_params <sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis:112:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function:4
msgid "The decision function is equal (up to a constant factor) to the log-posterior of the model, i.e. `log p(y = k | x)`. In a binary classification setting this instead corresponds to the difference `log p(y = 1 | x) - log p(y = 0 | x)`. See :ref:`lda_qda_math`."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function:12
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit:15
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict:9
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba:8
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function:12
msgid "Array of samples (test vectors)."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba
msgid "Returns"
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function:30
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict:25
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba:24
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba:24
msgid "**C**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,) or (n_samples, n_classes)"
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.decision_function:17
msgid "Decision function values related to each class, per sample. In the two-class case, the shape is (n_samples,), giving the log likelihood ratio of the positive class."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit:4
msgid "``store_covariances`` has been moved to main constructor as ``store_covariance``"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit:8
msgid "``tol`` has been moved to main constructor."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit:14
msgid "Training vector, where n_samples is the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit:30
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.fit:18
msgid "Target values (integers)"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict:4
msgid "The predicted class C for each sample in X is returned."
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba:8
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba:8
msgid "Array of samples/test vectors."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_classes)"
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_log_proba:13
msgid "Posterior log-probabilities of classification per class."
msgstr ""

#: of
#: sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis.predict_proba:13
msgid "Posterior probabilities of classification per class."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:17
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

