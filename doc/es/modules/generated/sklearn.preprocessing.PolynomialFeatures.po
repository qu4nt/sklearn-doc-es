msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-06-12 23:05\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.PolynomialFeatures.po\n"
"X-Crowdin-File-ID: 5772\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.PolynomialFeatures.rst:2
msgid ":mod:`sklearn.preprocessing`.PolynomialFeatures"
msgstr ":mod:`sklearn.preprocessing`.PolynomialFeatures"

#: of sklearn.preprocessing._data.PolynomialFeatures:2
msgid "Generate polynomial and interaction features."
msgstr "Genera características polinómicas y de interacción."

#: of sklearn.preprocessing._data.PolynomialFeatures:4
msgid "Generate a new feature matrix consisting of all polynomial combinations of the features with degree less than or equal to the specified degree. For example, if an input sample is two dimensional and of the form [a, b], the degree-2 polynomial features are [1, a, b, a^2, ab, b^2]."
msgstr "Genera una nueva matriz de características que consiste en todas las combinaciones polinómicas de las características con grado menor o igual al grado especificado. Por ejemplo, si una muestra de entrada es bidimensional y de la forma [a, b], las características polinómicas de grado 2 son [1, a, b, a^2, ab, b^2]."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.PolynomialFeatures
#: sklearn.preprocessing._data.PolynomialFeatures.fit
#: sklearn.preprocessing._data.PolynomialFeatures.get_feature_names
#: sklearn.preprocessing._data.PolynomialFeatures.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._data.PolynomialFeatures:12
msgid "**degree**"
msgstr "**degree**"

#: of
msgid "int, default=2"
msgstr "int, default=2"

#: of sklearn.preprocessing._data.PolynomialFeatures:12
msgid "The degree of the polynomial features."
msgstr "El grado de las características polinómicas."

#: of sklearn.preprocessing._data.PolynomialFeatures:17
msgid "**interaction_only**"
msgstr "**interaction_only**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.preprocessing._data.PolynomialFeatures:15
msgid "If true, only interaction features are produced: features that are products of at most ``degree`` *distinct* input features (so not ``x[1] ** 2``, ``x[0] * x[2] ** 3``, etc.)."
msgstr "Si es True, sólo se producen características de interacción: características que son productos de como máximo ``degree`` de características de entrada *distintas* (así que no ``x[1] ** 2``, ``x[0] * x[2] ** 3``, etc.)."

#: of sklearn.preprocessing._data.PolynomialFeatures:22
msgid "**include_bias**"
msgstr "**include_bias**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.preprocessing._data.PolynomialFeatures:20
msgid "If True (default), then include a bias column, the feature in which all polynomial powers are zero (i.e. a column of ones - acts as an intercept term in a linear model)."
msgstr "Si es True (por defecto), entonces incluye una columna de sesgo, la característica en la que todas las potencias del polinomio son cero (es decir, una columna de unos - actúa como un término intercepto en un modelo lineal)."

#: of sklearn.preprocessing._data.PolynomialFeatures:31
msgid "**order**"
msgstr "**order**"

#: of
msgid "{'C', 'F'}, default='C'"
msgstr "{'C', 'F'}, default='C'"

#: of sklearn.preprocessing._data.PolynomialFeatures:25
msgid "Order of output array in the dense case. 'F' order is faster to compute, but may slow down subsequent estimators."
msgstr "Orden del arreglo de salida en el caso denso. El orden 'F' es más rápido de calcular, pero puede ralentizar los estimadores posteriores."

#: of sklearn.preprocessing._data.PolynomialFeatures
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.preprocessing._data.PolynomialFeatures:36
msgid "**powers_**"
msgstr "**powers_**"

#: of
msgid "ndarray of shape (n_output_features, n_input_features)"
msgstr "ndarray de forma (n_output_features, n_input_features)"

#: of sklearn.preprocessing._data.PolynomialFeatures:36
msgid "powers_[i, j] is the exponent of the jth input in the ith output."
msgstr "powers_[i, j] es el exponente de la j-ésima entrada en la i-ésima salida."

#: of sklearn.preprocessing._data.PolynomialFeatures:39
msgid "**n_input_features_**"
msgstr "**n_input_features_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.preprocessing._data.PolynomialFeatures:39
msgid "The total number of input features."
msgstr "El número total de características de entrada."

#: of sklearn.preprocessing._data.PolynomialFeatures:48
msgid "**n_output_features_**"
msgstr "**n_output_features_**"

#: of sklearn.preprocessing._data.PolynomialFeatures:42
msgid "The total number of polynomial output features. The number of output features is computed by iterating over all suitably sized combinations of input features."
msgstr "El número total de características polinómicas de salida. El número de características de salida se calcula iterando sobre todas las combinaciones de características de entrada de tamaño adecuado."

#: of sklearn.preprocessing._data.PolynomialFeatures:51
msgid "Notes"
msgstr "Notas"

#: of sklearn.preprocessing._data.PolynomialFeatures:52
msgid "Be aware that the number of features in the output array scales polynomially in the number of features of the input array, and exponentially in the degree. High degrees can cause overfitting."
msgstr "Ten en cuenta que el número de características en el arreglo de salida se escala polinomialmente en el número de características del arreglo de entrada y exponencialmente en el grado. Los grados altos pueden causar un sobreajuste (overfitting)."

#: of sklearn.preprocessing._data.PolynomialFeatures:56
msgid "See :ref:`examples/linear_model/plot_polynomial_interpolation.py <sphx_glr_auto_examples_linear_model_plot_polynomial_interpolation.py>`"
msgstr "Ver :ref:`examples/linear_model/plot_polynomial_interpolation.py <sphx_glr_auto_examples_linear_model_plot_polynomial_interpolation.py>`"

#: of sklearn.preprocessing._data.PolynomialFeatures:61
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.preprocessing._data.PolynomialFeatures:81
msgid "Methods"
msgstr "Métodos"

#: of sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.PolynomialFeatures.fit>`\\"
msgstr ":obj:`fit <sklearn.preprocessing.PolynomialFeatures.fit>`\\"

#: of sklearn.preprocessing._data.PolynomialFeatures.fit:2
#: sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid "Compute number of output features."
msgstr "Calcula el número de características de salida."

#: of sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.PolynomialFeatures.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.preprocessing.PolynomialFeatures.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta a los datos y luego los transforma."

#: of sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid ":obj:`get_feature_names <sklearn.preprocessing.PolynomialFeatures.get_feature_names>`\\"
msgstr ":obj:`get_feature_names <sklearn.preprocessing.PolynomialFeatures.get_feature_names>`\\"

#: of sklearn.preprocessing._data.PolynomialFeatures.get_feature_names:2
#: sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid "Return feature names for output features"
msgstr "Devuelve los nombres de las características para las características de salida"

#: of sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.PolynomialFeatures.get_params>`\\"
msgstr ":obj:`get_params <sklearn.preprocessing.PolynomialFeatures.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.PolynomialFeatures.set_params>`\\"
msgstr ":obj:`set_params <sklearn.preprocessing.PolynomialFeatures.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.PolynomialFeatures.transform>`\\"
msgstr ":obj:`transform <sklearn.preprocessing.PolynomialFeatures.transform>`\\"

#: of sklearn.preprocessing._data.PolynomialFeatures.transform:2
#: sklearn.preprocessing._data.PolynomialFeatures:90:<autosummary>:1
msgid "Transform data to polynomial features"
msgstr "Transforma los datos en características polinómicas"

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.preprocessing._data.PolynomialFeatures.fit:8
#: sklearn.preprocessing._data.PolynomialFeatures.transform:21
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.PolynomialFeatures.fit:8
msgid "The data."
msgstr "Los datos."

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.preprocessing._data.PolynomialFeatures.fit:11
msgid "**y**"
msgstr "**y**"

#: of
msgid "None"
msgstr "None"

#: of sklearn.preprocessing._data.PolynomialFeatures.fit:11
msgid "Ignored."
msgstr "Ignorado."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.PolynomialFeatures.fit
#: sklearn.preprocessing._data.PolynomialFeatures.get_feature_names
#: sklearn.preprocessing._data.PolynomialFeatures.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.preprocessing._data.PolynomialFeatures.fit:27
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.preprocessing._data.PolynomialFeatures.fit:16
msgid "Fitted transformer."
msgstr "Transformador ajustado."

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` y `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "ndarray array de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.preprocessing._data.PolynomialFeatures.get_feature_names:9
msgid "**input_features**"
msgstr "**input_features**"

#: of
msgid "list of str of shape (n_features,), default=None"
msgstr "list de str de forma (n_features,), default=None"

#: of sklearn.preprocessing._data.PolynomialFeatures.get_feature_names:8
msgid "String names for input features if available. By default, \"x0\", \"x1\", ... \"xn_features\" is used."
msgstr "Nombres de cadenas para las características de entrada, si están disponibles. Por defecto, se utiliza \"x0\", \"x1\", ... \"xn_features\"."

#: of sklearn.preprocessing._data.PolynomialFeatures.get_feature_names:25
msgid "**output_feature_names**"
msgstr "**output_feature_names**"

#: of
msgid "list of str of shape (n_output_features,)"
msgstr "list de str de forma (n_output_features,)"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.preprocessing._data.PolynomialFeatures.transform:8
msgid "The data to transform, row by row."
msgstr "Los datos a transformar, fila por fila."

#: of sklearn.preprocessing._data.PolynomialFeatures.transform:10
msgid "Prefer CSR over CSC for sparse input (for speed), but CSC is required if the degree is 4 or higher. If the degree is less than 4 and the input format is CSC, it will be converted to CSR, have its polynomial features generated, then converted back to CSC."
msgstr "Preferir CSR sobre CSC para entradas dispersas (por velocidad), pero se requiere CSC si el grado es 4 o superior. Si el grado es menor que 4 y el formato de entrada es CSC, se convertirá a CSR, se generarán sus características polinómicas y se volverá a convertir a CSC."

#: of sklearn.preprocessing._data.PolynomialFeatures.transform:15
msgid "If the degree is 2 or 3, the method described in \"Leveraging Sparsity to Speed Up Polynomial Feature Expansions of CSR Matrices Using K-Simplex Numbers\" by Andrew Nystrom and John Hughes is used, which is much faster than the method used on CSC input. For this reason, a CSC input will be converted to CSR, and the output will be converted back to CSC prior to being returned, hence the preference of CSR."
msgstr "Si el grado es 2 o 3, se utiliza el método descrito en \"Leveraging Sparsity to Speed Up Polynomial Feature Expansions of CSR Matrices Using K-Simplex Numbers\" por Andrew Nystrom y John Hughes, que es mucho más rápido que el método utilizado en la entrada CSC. Por esta razón, una entrada CSC se convertirá en CSR, y la salida se convertirá de nuevo en CSC antes de ser devuelta, de ahí la preferencia de CSR."

#: of sklearn.preprocessing._data.PolynomialFeatures.transform:40
msgid "**XP**"
msgstr "**XP**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, NP)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, NP)"

#: of sklearn.preprocessing._data.PolynomialFeatures.transform:26
msgid "The matrix of features, where NP is the number of polynomial features generated from the combination of inputs. If a sparse matrix is provided, it will be converted into a sparse ``csr_matrix``."
msgstr "La matriz de características, donde NP es el número de características polinómicas generadas a partir de la combinación de entradas. Si se proporciona una matriz dispersa, se convertirá en una matriz dispersa ``csr_matrix``."

#: ../modules/generated/sklearn.preprocessing.PolynomialFeatures.examples:4
msgid "Examples using ``sklearn.preprocessing.PolynomialFeatures``"
msgstr "Ejemplos utilizando ``sklearn.preprocessing.PolynomialFeatures``"

#: ../modules/generated/sklearn.preprocessing.PolynomialFeatures.examples:15
#: ../modules/generated/sklearn.preprocessing.PolynomialFeatures.examples:23
msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"
msgstr ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"

#: ../modules/generated/sklearn.preprocessing.PolynomialFeatures.examples:34
#: ../modules/generated/sklearn.preprocessing.PolynomialFeatures.examples:42
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_poisson_regression_non_normal_loss.py`"
msgstr ":ref:`sphx_glr_auto_examples_linear_model_plot_poisson_regression_non_normal_loss.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_polynomial_interpolation.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_robust_fit.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_underfitting_overfitting.py`"
#~ msgstr ""

