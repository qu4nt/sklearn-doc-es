msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:56-0400\n"
"PO-Revision-Date: 2021-07-05 15:09\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.StandardScaler.po\n"
"X-Crowdin-File-ID: 5024\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.StandardScaler.rst:2
msgid ":mod:`sklearn.preprocessing`.StandardScaler"
msgstr ":mod:`sklearn.preprocessing`.StandardScaler"

#: of sklearn.preprocessing._data.StandardScaler:2
msgid "Standardize features by removing the mean and scaling to unit variance"
msgstr "Se estandarizan las características eliminando la media y escalando a la varianza unitaria"

#: of sklearn.preprocessing._data.StandardScaler:4
msgid "The standard score of a sample `x` is calculated as:"
msgstr "La puntuación estándar de una muestra `x` se calcula como:"

#: of sklearn.preprocessing._data.StandardScaler:6
msgid "z = (x - u) / s"
msgstr "z = (x - u) / s"

#: of sklearn.preprocessing._data.StandardScaler:8
msgid "where `u` is the mean of the training samples or zero if `with_mean=False`, and `s` is the standard deviation of the training samples or one if `with_std=False`."
msgstr "donde `u` es la media de las muestras de entrenamiento o cero si `with_mean=False`, y `s` es la desviación estándar de las muestras de entrenamiento o uno si `with_std=False`."

#: of sklearn.preprocessing._data.StandardScaler:12
msgid "Centering and scaling happen independently on each feature by computing the relevant statistics on the samples in the training set. Mean and standard deviation are then stored to be used on later data using :meth:`transform`."
msgstr "El centrado y el escalado se realizan de forma independiente en cada característica, calculando los estadísticos pertinentes en las muestras del conjunto de entrenamiento. La media y la desviación estándar se almacenan para ser utilizadas en datos posteriores utilizando :meth:`transform`."

#: of sklearn.preprocessing._data.StandardScaler:17
msgid "Standardization of a dataset is a common requirement for many machine learning estimators: they might behave badly if the individual features do not more or less look like standard normally distributed data (e.g. Gaussian with 0 mean and unit variance)."
msgstr "La Estandarización de un conjunto de datos es un requisito común para muchos estimadores de aprendizaje automático: podrían comportarse mal si las características individuales no se parecen más o menos a los datos distribuidos normalmente estándar (por ejemplo, gaussianos con media 0 y varianza unitaria)."

#: of sklearn.preprocessing._data.StandardScaler:22
msgid "For instance many elements used in the objective function of a learning algorithm (such as the RBF kernel of Support Vector Machines or the L1 and L2 regularizers of linear models) assume that all features are centered around 0 and have variance in the same order. If a feature has a variance that is orders of magnitude larger that others, it might dominate the objective function and make the estimator unable to learn from other features correctly as expected."
msgstr "Por ejemplo, muchos elementos utilizados en la función objetivo de un algoritmo de aprendizaje (como el núcleo RBF de Máquinas de Vectores de Soporte o los regularizadores L1 y L2 de modelos lineales) asumen que todas las características están centradas en torno a cero y tienen varianza del mismo orden. Si una característica tiene varianza de un orden de magnitud mayor que otras, podría dominar la función objetivo y hacer que el estimador no pueda aprender de otras características correctamente como se espera."

#: of sklearn.preprocessing._data.StandardScaler:30
msgid "This scaler can also be applied to sparse CSR or CSC matrices by passing `with_mean=False` to avoid breaking the sparsity structure of the data."
msgstr "Este escalador también puede aplicarse a matrices CSR o CSC dispersas pasando `with_mean=False` para evitar romper la estructura de dispersión de los datos."

#: of sklearn.preprocessing._data.StandardScaler:33
msgid "Read more in the :ref:`User Guide <preprocessing_scaler>`."
msgstr "Más información en el :ref:`Manual de usuario <preprocessing_scaler>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.StandardScaler
#: sklearn.preprocessing._data.StandardScaler.fit
#: sklearn.preprocessing._data.StandardScaler.inverse_transform
#: sklearn.preprocessing._data.StandardScaler.partial_fit
#: sklearn.preprocessing._data.StandardScaler.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._data.StandardScaler:41
#: sklearn.preprocessing._data.StandardScaler.inverse_transform:11
#: sklearn.preprocessing._data.StandardScaler.transform:11
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.preprocessing._data.StandardScaler:38
msgid "If False, try to avoid a copy and do inplace scaling instead. This is not guaranteed to always work inplace; e.g. if the data is not a NumPy array or scipy.sparse CSR matrix, a copy may still be returned."
msgstr "Si es False, intente evitar una copia y, en su lugar, realice un escalado in situ. No se garantiza que esto funcione siempre en el lugar; por ejemplo, si los datos no son una matriz NumPy o una matriz CSR scipy.sparse, es posible que se devuelva una copia."

#: of sklearn.preprocessing._data.StandardScaler:48
msgid "**with_mean**"
msgstr "**with_mean**"

#: of sklearn.preprocessing._data.StandardScaler:44
msgid "If True, center the data before scaling. This does not work (and will raise an exception) when attempted on sparse matrices, because centering them entails building a dense matrix which in common use cases is likely to be too large to fit in memory."
msgstr "Si es True, centra los datos antes de escalarlos. Esto no funciona (y lanzará una excepción) cuando se intenta con matrices dispersas, porque centrarlas implica construir una matriz densa que, en casos de uso común, es probable que sea demasiado grande para caber en la memoria."

#: of sklearn.preprocessing._data.StandardScaler:55
msgid "**with_std**"
msgstr "**with_std**"

#: of sklearn.preprocessing._data.StandardScaler:51
msgid "If True, scale the data to unit variance (or equivalently, unit standard deviation)."
msgstr "Si es True, escala los datos a la varianza unitaria (o, de manera equivalente, a la desviación estándar unitaria)."

#: of sklearn.preprocessing._data.StandardScaler
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.preprocessing._data.StandardScaler:67
msgid "**scale_**"
msgstr "**scale_**"

#: of
msgid "ndarray of shape (n_features,) or None"
msgstr "ndarray de forma (n_features,) o None"

#: of sklearn.preprocessing._data.StandardScaler:60
msgid "Per feature relative scaling of the data to achieve zero mean and unit variance. Generally this is calculated using `np.sqrt(var_)`. If a variance is zero, we can't achieve unit variance, and the data is left as-is, giving a scaling factor of 1. `scale_` is equal to `None` when `with_std=False`."
msgstr "Por característica de escala relativa de los datos para lograr una media cero y una varianza unitaria. Generalmente esto se calcula usando `np.sqrt(var_)`. Si una varianza es cero, no podemos lograr una varianza unitaria, y los datos se dejan como están, dando un factor de escala de 1. `scale_` es igual a `None` cuando `with_std=False`."

#: of sklearn.preprocessing._data.StandardScaler:66
msgid "*scale_*"
msgstr "*scale_*"

#: of sklearn.preprocessing._data.StandardScaler:71
msgid "**mean_**"
msgstr "**mean_**"

#: of sklearn.preprocessing._data.StandardScaler:70
msgid "The mean value for each feature in the training set. Equal to ``None`` when ``with_mean=False``."
msgstr "El valor medio de cada característica en el conjunto de entrenamiento. Es igual a ``None`` cuando ``with_mean=False``."

#: of sklearn.preprocessing._data.StandardScaler:75
msgid "**var_**"
msgstr "**var_**"

#: of sklearn.preprocessing._data.StandardScaler:74
msgid "The variance for each feature in the training set. Used to compute `scale_`. Equal to ``None`` when ``with_std=False``."
msgstr "La varianza de cada característica en el conjunto de entrenamiento. Se utiliza para calcular `scale_`. Igual a ``None`` cuando ``with_std=False``."

#: of sklearn.preprocessing._data.StandardScaler:87
msgid "**n_samples_seen_**"
msgstr "**n_samples_seen_**"

#: of
msgid "int or ndarray of shape (n_features,)"
msgstr "int o ndarray de forma (n_features,)"

#: of sklearn.preprocessing._data.StandardScaler:78
msgid "The number of samples processed by the estimator for each feature. If there are no missing samples, the ``n_samples_seen`` will be an integer, otherwise it will be an array of dtype int. If `sample_weights` are used it will be a float (if no missing data) or an array of dtype float that sums the weights seen so far. Will be reset on new calls to fit, but increments across ``partial_fit`` calls."
msgstr "El número de muestras procesadas por el estimador para cada característica. Si no hay muestras faltantes, el ``n_samples_seen`` será un entero, de lo contrario será un arreglo de tipo int. Si se utiliza ``sample_weights`` será un float (si no hay datos faltantes) o un arreglo de tipo float que sume las ponderaciones vistas hasta el momento. Se restablecerá en las nuevas llamadas a fit, pero se incrementa a través de las llamadas a ``partial_fit``."

#: of sklearn.preprocessing._data.StandardScaler:92
msgid ":obj:`scale`"
msgstr ":obj:`scale`"

#: of sklearn.preprocessing._data.StandardScaler:93
msgid "Equivalent function without the estimator API."
msgstr "Función equivalente sin la API estimator."

#: of sklearn.preprocessing._data.StandardScaler:94
msgid ":class:`~sklearn.decomposition.PCA`"
msgstr ":class:`~sklearn.decomposition.PCA`"

#: of sklearn.preprocessing._data.StandardScaler:95
msgid "Further removes the linear correlation across features with 'whiten=True'."
msgstr "Elimina además la correlación lineal entre características con 'whiten=True'."

#: of sklearn.preprocessing._data.StandardScaler:99
msgid "Notes"
msgstr "Notas"

#: of sklearn.preprocessing._data.StandardScaler:100
msgid "NaNs are treated as missing values: disregarded in fit, and maintained in transform."
msgstr "Los NaN se tratan como valores faltantes: no se tienen en cuenta en el ajuste y se mantienen en la transformación."

#: of sklearn.preprocessing._data.StandardScaler:103
msgid "We use a biased estimator for the standard deviation, equivalent to `numpy.std(x, ddof=0)`. Note that the choice of `ddof` is unlikely to affect model performance."
msgstr "Utilizamos un estimador sesgado para la desviación estándar, equivalente a `numpy.std(x, ddof=0)`. Ten en cuenta que la elección de `ddof` es poco probable que afecte al rendimiento del modelo."

#: of sklearn.preprocessing._data.StandardScaler:107
msgid "For a comparison of the different scalers, transformers, and normalizers, see :ref:`examples/preprocessing/plot_all_scaling.py <sphx_glr_auto_examples_preprocessing_plot_all_scaling.py>`."
msgstr "Para una comparación de los diferentes escaladores, transformadores y normalizadores, véase :ref:`examples/preprocessing/plot_all_scaling.py <sphx_glr_auto_examples_preprocessing_plot_all_scaling.py>`."

#: of sklearn.preprocessing._data.StandardScaler:113
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.preprocessing._data.StandardScaler:130
msgid "Methods"
msgstr "Métodos"

#: of sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.StandardScaler.fit>`\\"
msgstr ":obj:`fit <sklearn.preprocessing.StandardScaler.fit>`\\"

#: of sklearn.preprocessing._data.StandardScaler.fit:2
#: sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid "Compute the mean and std to be used for later scaling."
msgstr "Calcula la media y la desviación estándar (std) que se utilizarán para el escalado posterior."

#: of sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.StandardScaler.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.preprocessing.StandardScaler.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta los datos y luego los transforma."

#: of sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.StandardScaler.get_params>`\\"
msgstr ":obj:`get_params <sklearn.preprocessing.StandardScaler.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.preprocessing.StandardScaler.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.preprocessing.StandardScaler.inverse_transform>`\\"

#: of sklearn.preprocessing._data.StandardScaler.inverse_transform:2
#: sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid "Scale back the data to the original representation"
msgstr "Escala los datos a la representación original"

#: of sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.preprocessing.StandardScaler.partial_fit>`\\"
msgstr ":obj:`partial_fit <sklearn.preprocessing.StandardScaler.partial_fit>`\\"

#: of sklearn.preprocessing._data.StandardScaler.partial_fit:2
#: sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid "Online computation of mean and std on X for later scaling."
msgstr "Cálcula en línea la media y la std en X para su posterior escalamiento."

#: of sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.StandardScaler.set_params>`\\"
msgstr ":obj:`set_params <sklearn.preprocessing.StandardScaler.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.StandardScaler.transform>`\\"
msgstr ":obj:`transform <sklearn.preprocessing.StandardScaler.transform>`\\"

#: of sklearn.preprocessing._data.StandardScaler.transform:2
#: sklearn.preprocessing._data.StandardScaler:140:<autosummary>:1
msgid "Perform standardization by centering and scaling"
msgstr "Realiza la estandarización mediante el centrado y el escalado"

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.preprocessing._data.StandardScaler.fit:9
#: sklearn.preprocessing._data.StandardScaler.inverse_transform:8
#: sklearn.preprocessing._data.StandardScaler.partial_fit:17
#: sklearn.preprocessing._data.StandardScaler.transform:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.StandardScaler.fit:8
#: sklearn.preprocessing._data.StandardScaler.partial_fit:16
msgid "The data used to compute the mean and standard deviation used for later scaling along the features axis."
msgstr "Los datos utilizados para calcular la media y la desviación estándar utilizadas para el posterior escalamiento a lo largo del eje de las características."

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.preprocessing._data.StandardScaler.fit:12
#: sklearn.preprocessing._data.StandardScaler.partial_fit:20
msgid "**y**"
msgstr "**y**"

#: of
msgid "None"
msgstr "None"

#: of sklearn.preprocessing._data.StandardScaler.fit:12
#: sklearn.preprocessing._data.StandardScaler.partial_fit:20
msgid "Ignored."
msgstr "Ignorado."

#: of sklearn.preprocessing._data.StandardScaler.fit:18
#: sklearn.preprocessing._data.StandardScaler.partial_fit:26
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.preprocessing._data.StandardScaler.fit:15
#: sklearn.preprocessing._data.StandardScaler.partial_fit:23
msgid "Individual weights for each sample."
msgstr "Ponderaciones individuales para cada muestra."

#: of sklearn.preprocessing._data.StandardScaler.fit:17
#: sklearn.preprocessing._data.StandardScaler.partial_fit:25
msgid "parameter *sample_weight* support to StandardScaler."
msgstr "el parámetro *sample_weight* tiene soporte para StandardScaler."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.StandardScaler.fit
#: sklearn.preprocessing._data.StandardScaler.inverse_transform
#: sklearn.preprocessing._data.StandardScaler.partial_fit
#: sklearn.preprocessing._data.StandardScaler.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.preprocessing._data.StandardScaler.fit:34
#: sklearn.preprocessing._data.StandardScaler.partial_fit:42
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.preprocessing._data.StandardScaler.fit:23
#: sklearn.preprocessing._data.StandardScaler.partial_fit:31
msgid "Fitted scaler."
msgstr "Escalador ajustado."

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` e `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "arreglo ndarray de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
#: sklearn.preprocessing._data.StandardScaler.inverse_transform:16
#: sklearn.preprocessing._data.StandardScaler.transform:16
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.preprocessing._data.StandardScaler.inverse_transform:8
#: sklearn.preprocessing._data.StandardScaler.transform:8
msgid "The data used to scale along the features axis."
msgstr "Los datos utilizados para escalar a lo largo del eje de las características."

#: of
msgid "bool, default=None"
msgstr "bool, default=None"

#: of sklearn.preprocessing._data.StandardScaler.inverse_transform:11
#: sklearn.preprocessing._data.StandardScaler.transform:11
msgid "Copy the input X or not."
msgstr "Copia la entrada X o no."

#: of sklearn.preprocessing._data.StandardScaler.inverse_transform:27
#: sklearn.preprocessing._data.StandardScaler.transform:27
msgid "**X_tr**"
msgstr "**X_tr**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.StandardScaler.partial_fit:4
msgid "All of X is processed as a single batch. This is intended for cases when :meth:`fit` is not feasible due to very large number of `n_samples` or because X is read from a continuous stream."
msgstr "Todo X se procesa como un único lote. Esto está pensado para casos en los que :meth:`fit` no es factible debido a un número muy grande de `n_samples` o porque X se lee de un flujo continuo."

#: of sklearn.preprocessing._data.StandardScaler.partial_fit:8
msgid "The algorithm for incremental mean and std is given in Equation 1.5a,b in Chan, Tony F., Gene H. Golub, and Randall J. LeVeque. \"Algorithms for computing the sample variance: Analysis and recommendations.\" The American Statistician 37.3 (1983): 242-247:"
msgstr "El algoritmo para la media y la std incrementales se da en la ecuación 1.5a,b en Chan, Tony F., Gene H. Golub, y Randall J. LeVeque. \"Algorithms for computing the sample variance: Analysis and recommendations.\" The American Statistician 37.3 (1983): 242-247:"

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of
msgid "{array-like, sparse matrix of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: ../modules/generated/sklearn.preprocessing.StandardScaler.examples:4
msgid "Examples using ``sklearn.preprocessing.StandardScaler``"
msgstr "Ejemplos utilizando ``sklearn.preprocessing.StandardScaler``"

#: ../modules/generated/sklearn.preprocessing.StandardScaler.examples:15
#: ../modules/generated/sklearn.preprocessing.StandardScaler.examples:23
msgid ":ref:`sphx_glr_auto_examples_inspection_plot_linear_model_coefficient_interpretation.py`"
msgstr ":ref:`sphx_glr_auto_examples_inspection_plot_linear_model_coefficient_interpretation.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_22_0.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_ensemble_plot_stack_predictors.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_applications_plot_prediction_latency.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_sparse_logistic_regression_mnist.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_logistic_l1_l2_sparsity.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_poisson_regression_non_normal_loss.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_tweedie_regression_insurance_claims.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_display_object_visualization.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_partial_dependence_visualization_api.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_det.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_nca_classification.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_nca_dim_reduction.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neural_networks_plot_mlp_alpha.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_column_transformer_mixed_types.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_scaling_importance.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_discretization_classification.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_all_scaling.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_svm_plot_svm_anova.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_svm_plot_rbf_parameters.py`"
#~ msgstr ""

