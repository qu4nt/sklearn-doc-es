msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-15 12:20\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.ExtraTreesRegressor.po\n"
"X-Crowdin-File-ID: 5074\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.ExtraTreesRegressor.rst:2
msgid ":mod:`sklearn.ensemble`.ExtraTreesRegressor"
msgstr ":mod:`sklearn.ensemble`.ExtraTreesRegressor"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:2
msgid "An extra-trees regressor."
msgstr "Un regresor extra-árbol."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:4
msgid "This class implements a meta estimator that fits a number of randomized decision trees (a.k.a. extra-trees) on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting."
msgstr "Esta clase implementa un metaestimador que se ajusta a un número de árboles de decisión aleatorios (alias extra-arboles) en varias submuestras del conjunto de datos y utiliza el promedio para mejorar la precisión predictiva y controlar el sobre-ajuste."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:9
msgid "Read more in the :ref:`User Guide <forest>`."
msgstr "Más información en :ref:`Guía de usuario <forest>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.ensemble._forest.BaseForest.apply
#: sklearn.ensemble._forest.BaseForest.decision_path
#: sklearn.ensemble._forest.BaseForest.fit
#: sklearn.ensemble._forest.ExtraTreesRegressor
#: sklearn.ensemble._forest.ForestRegressor.predict
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:18
msgid "**n_estimators**"
msgstr "**n_estimators**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:14
msgid "The number of trees in the forest."
msgstr "El número de árboles en el bosque."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:16
msgid "The default value of ``n_estimators`` changed from 10 to 100 in 0.22."
msgstr "El valor predeterminado de ``n_estimators`` cambió de 10 a 100 en 0.22."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:27
msgid "**criterion**"
msgstr "**criterion**"

#: of
msgid "{\"mse\", \"mae\"}, default=\"mse\""
msgstr "{\"mse\", \"mae\"}, default=\"mse\""

#: of sklearn.ensemble._forest.ExtraTreesRegressor:21
msgid "The function to measure the quality of a split. Supported criteria are \"mse\" for the mean squared error, which is equal to variance reduction as feature selection criterion, and \"mae\" for the mean absolute error."
msgstr "La función a medir la calidad de una división. Los criterios soportados son \"mse\" para el error cuadrático medio, que es igual a la reducción de varianza como criterio de selección de características, y \"mae\" para el error absoluto medio."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:26
msgid "Mean Absolute Error (MAE) criterion."
msgstr "Criterio de Error Absoluto Medio (EAM, MAE en inglés)."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:32
msgid "**max_depth**"
msgstr "**max_depth**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:30
msgid "The maximum depth of the tree. If None, then nodes are expanded until all leaves are pure or until all leaves contain less than min_samples_split samples."
msgstr "La profundidad máxima del árbol. Si None, entonces los nodos se expanden hasta que todas las hojas sean puras o hasta que todas contengan menos que min_samples_split muestras."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:43
msgid "**min_samples_split**"
msgstr "**min_samples_split**"

#: of
msgid "int or float, default=2"
msgstr "int o float, default=2"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:35
msgid "The minimum number of samples required to split an internal node:"
msgstr "El número mínimo de muestras requeridas para dividir un nodo interno:"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:37
msgid "If int, then consider `min_samples_split` as the minimum number."
msgstr "Si int, entonces considera `min_samples_split` como el número mínimo."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:38
msgid "If float, then `min_samples_split` is a fraction and `ceil(min_samples_split * n_samples)` are the minimum number of samples for each split."
msgstr "Si float, entonces `min_samples_split` es una fracción y `ceil(min_samples_split * n_samples)` son el número mínimo de muestras para cada división."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:42
#: sklearn.ensemble._forest.ExtraTreesRegressor:57
msgid "Added float values for fractions."
msgstr "Se añadieron valores flotantes para las fracciones."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:58
msgid "**min_samples_leaf**"
msgstr "**min_samples_leaf**"

#: of
msgid "int or float, default=1"
msgstr "int o float, default=1"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:46
msgid "The minimum number of samples required to be at a leaf node. A split point at any depth will only be considered if it leaves at least ``min_samples_leaf`` training samples in each of the left and right branches.  This may have the effect of smoothing the model, especially in regression."
msgstr "El número mínimo de muestras requeridas para estar en un nodo de hoja. Un punto dividido a cualquier profundidad sólo se considerará si deja al menos ``min_samples_leaf`` muestras de entrenamiento en cada una de las ramas izquierda y derecha. Esto puede tener el efecto de suavizar el modelo, especialmente en regresión."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:52
msgid "If int, then consider `min_samples_leaf` as the minimum number."
msgstr "Si int, entonces considera `min_samples_split` como el número mínimo."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:53
msgid "If float, then `min_samples_leaf` is a fraction and `ceil(min_samples_leaf * n_samples)` are the minimum number of samples for each node."
msgstr "Si float, entonces `min_samples_leaf` es una fracción y `ceil(min_samples_leaf * n_samples)` son el número mínimo de muestras para cada nodo."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:63
msgid "**min_weight_fraction_leaf**"
msgstr "**min_weight_fraction_leaf**"

#: of
msgid "float, default=0.0"
msgstr "float, default=0.0"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:61
msgid "The minimum weighted fraction of the sum total of weights (of all the input samples) required to be at a leaf node. Samples have equal weight when sample_weight is not provided."
msgstr "La fracción mínima ponderada de la suma total de las ponderaciones (de todas las muestras de entrada) requeridas para estar en un nodo de hoja. Las muestras tienen la misma ponderación cuando no se proporciona sample_weight."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:79
msgid "**max_features**"
msgstr "**max_features**"

#: of
msgid "{\"auto\", \"sqrt\", \"log2\"}, int or float, default=\"auto\""
msgstr "{\"auto\", \"sqrt\", \"log2\"}, int o float, default=\"auto\""

#: of sklearn.ensemble._forest.ExtraTreesRegressor:66
msgid "The number of features to consider when looking for the best split:"
msgstr "El número de características a tener en cuenta cuando se busca la mejor división:"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:68
msgid "If int, then consider `max_features` features at each split."
msgstr "Si es int, entonces considere las características `max_features` en cada división."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:69
msgid "If float, then `max_features` is a fraction and `round(max_features * n_features)` features are considered at each split."
msgstr "Si float, entonces `max_features` es una fracción y las características `round(max_features * n_features)` son consideradas en cada división."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:72
msgid "If \"auto\", then `max_features=n_features`."
msgstr "Si \"auto\", entonces `max_features=n_features`."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:73
msgid "If \"sqrt\", then `max_features=sqrt(n_features)`."
msgstr "Si \"sqrt\", entonces `max_features=sqrt(n_features)`."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:74
msgid "If \"log2\", then `max_features=log2(n_features)`."
msgstr "Si \"log2\", entonces `max_features=log2(n_features)`."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:75
msgid "If None, then `max_features=n_features`."
msgstr "Si None, entonces `max_features=n_features`."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:77
msgid "Note: the search for a split does not stop until at least one valid partition of the node samples is found, even if it requires to effectively inspect more than ``max_features`` features."
msgstr "Nota: la búsqueda de una división no se detiene hasta que se encuentre al menos una partición válida de las muestras de nodos, incluso si requiere inspeccionar eficazmente más de las características de ``max_features``."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:84
msgid "**max_leaf_nodes**"
msgstr "**max_leaf_nodes**"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:82
msgid "Grow trees with ``max_leaf_nodes`` in best-first fashion. Best nodes are defined as relative reduction in impurity. If None then unlimited number of leaf nodes."
msgstr "Hacer crecer árboles con ``max_leaf_nodes`` en modo best-first. Los mejores nodos se definen como una reducción relativa de la impureza. Si no hay ninguno, el número de nodos hoja es ilimitado."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:102
msgid "**min_impurity_decrease**"
msgstr "**min_impurity_decrease**"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:87
msgid "A node will be split if this split induces a decrease of the impurity greater than or equal to this value."
msgstr "Un nodo se dividirá si esta división induce una disminución de la impureza mayor o igual a este valor."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:90
msgid "The weighted impurity decrease equation is the following::"
msgstr "La ecuación de disminución de impureza ponderada es la siguiente::"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:95
msgid "where ``N`` is the total number of samples, ``N_t`` is the number of samples at the current node, ``N_t_L`` is the number of samples in the left child, and ``N_t_R`` is the number of samples in the right child."
msgstr "donde ``N`` es el número total de muestras, ``N_t`` es el número de muestras en el nodo actual, ``N_t_L`` es el número de muestras en el hijo izquierdo, y ``N_t_R`` es el número de muestras en el hijo derecho."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:99
msgid "``N``, ``N_t``, ``N_t_R`` and ``N_t_L`` all refer to the weighted sum, if ``sample_weight`` is passed."
msgstr "``N``, ``N_t``, ``N_t_R`` y ``N_t_L`` se refieren a la suma ponderada, si ``sample_weight`` es pasada."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:113
msgid "**min_impurity_split**"
msgstr "**min_impurity_split**"

#: of
msgid "float, default=None"
msgstr "float, default=None"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:105
msgid "Threshold for early stopping in tree growth. A node will split if its impurity is above the threshold, otherwise it is a leaf."
msgstr "El umbral para la parada anticipada en el crecimiento de árboles. Un nodo se dividirá si su impureza está por encima del umbral, de lo contrario será una hoja."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:108
msgid "``min_impurity_split`` has been deprecated in favor of ``min_impurity_decrease`` in 0.19. The default value of ``min_impurity_split`` has changed from 1e-7 to 0 in 0.23 and it will be removed in 1.0 (renaming of 0.25). Use ``min_impurity_decrease`` instead."
msgstr "``min_impurity_split`` ha sido obviado en favor de ``min_impurity_decrease`` en 0.19. El valor por defecto de ``min_impurity_split`` ha cambiado de 1e-7 a 0 en 0.23 y se eliminará en 1.0 (renombrado de 0.25). Use ``min_impurity_decrease`` en su lugar."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:117
msgid "**bootstrap**"
msgstr "**bootstrap**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:116
msgid "Whether bootstrap samples are used when building trees. If False, the whole dataset is used to build each tree."
msgstr "Si se utilizan muestras por bootstrap al construir árboles. Si es False, todo el conjunto de datos se utiliza para construir cada árbol."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:120
msgid "**oob_score**"
msgstr "**oob_score**"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:120
msgid "Whether to use out-of-bag samples to estimate the R^2 on unseen data."
msgstr "Si se utilizan muestras fuera-de-bolsa para estimar el R^2 en datos no vistos."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:127
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:123
msgid "The number of jobs to run in parallel. :meth:`fit`, :meth:`predict`, :meth:`decision_path` and :meth:`apply` are all parallelized over the trees. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "El número de trabajos a ejecutar en paralelo. :meth:`fit`, :meth:`predict`, :meth:`decision_path` y :meth:`apply` son todos paralelizados sobre los árboles. ``None`` significa 1 excepto en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa usar todos los procesadores. Ver :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:138
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, instancia de RandomState o None, por defecto=None"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:130
msgid "Controls 3 sources of randomness:"
msgstr "Controla 3 fuentes de aleatoriedad:"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:132
msgid "the bootstrapping of the samples used when building trees (if ``bootstrap=True``)"
msgstr "el bootstrapping de las muestras utilizadas al construir árboles (si ``bootstrap=True``)"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:134
msgid "the sampling of the features to consider when looking for the best split at each node (if ``max_features < n_features``)"
msgstr "el muestreo de las características a considerar al buscar la mejor división en cada nodo (si ``max_features < n_features``)"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:136
msgid "the draw of the splits for each of the `max_features`"
msgstr "el barajeo de las divisiones por cada una de las `max_features`"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:138
msgid "See :term:`Glossary <random_state>` for details."
msgstr "Vea :term:`Glossary <random_state>` para más detalles."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:141
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int, default=0"
msgstr "int, default=0"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:141
msgid "Controls the verbosity when fitting and predicting."
msgstr "Controla la verbosidad a la hora de ajustar y predecir."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:146
msgid "**warm_start**"
msgstr "**warm_start**"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:144
msgid "When set to ``True``, reuse the solution of the previous call to fit and add more estimators to the ensemble, otherwise, just fit a whole new forest. See :term:`the Glossary <warm_start>`."
msgstr "Cuando se establece a ``True``, reutiliza la solución de la llamada anterior para ajustar y añadir más estimadores al ensemble, de lo contrario, solamente ajustara un nuevo bosque. Vea :term:`el Glosario <warm_start>`."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:154
msgid "**ccp_alpha**"
msgstr "**ccp_alpha**"

#: of
msgid "non-negative float, default=0.0"
msgstr "flotante no negativo, default=0.0"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:149
msgid "Complexity parameter used for Minimal Cost-Complexity Pruning. The subtree with the largest cost complexity that is smaller than ``ccp_alpha`` will be chosen. By default, no pruning is performed. See :ref:`minimal_cost_complexity_pruning` for details."
msgstr "Parámetro de complejidad utilizado para la Poda de Mínima Complejidad de Costo. El subárbol con la complejidad de costo mayor que sea menor que ``ccp_alpha`` será elegido. Por defecto, no se realiza ninguna poda. Vea :ref:`minimal_cost_complexity_pruning` para más detalles."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:168
msgid "**max_samples**"
msgstr "**max_samples**"

#: of
msgid "int or float, default=None"
msgstr "int o float, default=None"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:157
msgid "If bootstrap is True, the number of samples to draw from X to train each base estimator."
msgstr "Si el bootstrap es True, el número de muestras a escoger de X para entrenar cada estimador base."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:160
msgid "If None (default), then draw `X.shape[0]` samples."
msgstr "Si es None (default), entonces escoge `X.shape[0]` muestras."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:161
msgid "If int, then draw `max_samples` samples."
msgstr "Si es int, entonces escoge `max_samples` muestras."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:162
msgid "If float, then draw `max_samples * X.shape[0]` samples. Thus, `max_samples` should be in the interval `(0, 1)`."
msgstr "Si es float, entonces escoge `max_samples * X.shape[0]` muestras. Entonces, `max_samples` debería estar en el intervalo `(0, 1)`."

#: of sklearn.ensemble._forest.ExtraTreesRegressor
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:174
msgid "**base_estimator_**"
msgstr "**base_estimator_**"

#: of
msgid "ExtraTreeRegressor"
msgstr "ExtraTreeRegressor"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:173
msgid "The child estimator template used to create the collection of fitted sub-estimators."
msgstr "La plantilla de estimador hijo utilizada para crear la colección de sub-estimadores ajustados."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:177
msgid "**estimators_**"
msgstr "**estimators_**"

#: of
msgid "list of DecisionTreeRegressor"
msgstr "lista de DecisionTreeRegressor"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:177
msgid "The collection of fitted sub-estimators."
msgstr "La colección de sub-estimadores ajustados."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:180
msgid ":obj:`feature_importances_ <feature_importances_>`"
msgstr ":obj:`feature_importances_ <feature_importances_>`"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.ensemble.ExtraTreesRegressor.feature_importances_:2
#: sklearn.ensemble._forest.ExtraTreesRegressor:180
msgid "The impurity-based feature importances."
msgstr "Las importancias basadas en la impureza de las características."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:183
msgid "**n_features_**"
msgstr "**n_features_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:183
msgid "The number of features."
msgstr "El número de características."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:186
msgid "**n_outputs_**"
msgstr "**n_outputs_**"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:186
msgid "The number of outputs."
msgstr "El número de salidas."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:190
msgid "**oob_score_**"
msgstr "**oob_score_**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:189
msgid "Score of the training dataset obtained using an out-of-bag estimate. This attribute exists only when ``oob_score`` is True."
msgstr "Puntuación del conjunto de datos de entrenamiento obtenido utilizando una estimación fuera de bolsa. Este atributo solo existe cuando ``oob_score`` es True."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:197
msgid "**oob_prediction_**"
msgstr "**oob_prediction_**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:193
msgid "Prediction computed with out-of-bag estimate on the training set. This attribute exists only when ``oob_score`` is True."
msgstr "La predicción calculada con el estimado fuera de bolsa en el conjunto de entrenamiento. Este atributo existe sólo cuando ``oob_score`` es True."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:202
msgid ":obj:`sklearn.tree.ExtraTreeRegressor`"
msgstr ":obj:`sklearn.tree.ExtraTreeRegressor`"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:203
msgid "Base estimator for this ensemble."
msgstr "Estimador base para este ensemble."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:204
msgid ":obj:`RandomForestRegressor`"
msgstr ":obj:`RandomForestRegressor`"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:205
msgid "Ensemble regressor using trees with optimal splits."
msgstr "Regresor de ensemble utilizando árboles con divisiones óptimas."

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.ensemble._forest.ExtraTreesRegressor:209
msgid "Notes"
msgstr "Notas"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:210
msgid "The default values for the parameters controlling the size of the trees (e.g. ``max_depth``, ``min_samples_leaf``, etc.) lead to fully grown and unpruned trees which can potentially be very large on some data sets. To reduce memory consumption, the complexity and size of the trees should be controlled by setting those parameter values."
msgstr "Los valores por defecto de los parámetros controlando el tamaño de los árboles (por ejemplo, ```max_depth``, ``min_samples_leaf``, etc.) llevan a árboles totalmente cultivados y sin podar que podrían ser muy grandes en algunos conjuntos de datos. Para reducir el consumo de memoria, la complejidad y el tamaño de los árboles deben ser controlados estableciendo los valores de los parámetros."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:217
msgid "References"
msgstr "Referencias"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:218
msgid "P. Geurts, D. Ernst., and L. Wehenkel, \"Extremely randomized trees\", Machine Learning, 63(1), 3-42, 2006."
msgstr "P. Geurts, D. Ernst., and L. Wehenkel, \"Extremely randomized trees\", Machine Learning, 63(1), 3-42, 2006."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:223
msgid "[Ra7d0c8995fbc-1]_"
msgstr "[Ra7d0c8995fbc-1]_"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:226
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:239
msgid "Methods"
msgstr "Métodos"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid ":obj:`apply <sklearn.ensemble.ExtraTreesRegressor.apply>`\\"
msgstr ":obj:`apply <sklearn.ensemble.ExtraTreesRegressor.apply>`\\"

#: of sklearn.ensemble._forest.BaseForest.apply:2
#: sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid "Apply trees in the forest to X, return leaf indices."
msgstr "Aplica los árboles en el bosque a X, devuelve los índices de las hojas."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid ":obj:`decision_path <sklearn.ensemble.ExtraTreesRegressor.decision_path>`\\"
msgstr ":obj:`decision_path <sklearn.ensemble.ExtraTreesRegressor.decision_path>`\\"

#: of sklearn.ensemble._forest.BaseForest.decision_path:2
#: sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid "Return the decision path in the forest."
msgstr "Devuelve la ruta de decisión en el bosque."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.ExtraTreesRegressor.fit>`\\"
msgstr ":obj:`fit <sklearn.ensemble.ExtraTreesRegressor.fit>`\\"

#: of sklearn.ensemble._forest.BaseForest.fit:2
#: sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid "Build a forest of trees from the training set (X, y)."
msgstr "Construye un bosque de árboles a partir del conjunto de entrenamiento (X, y)."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.ExtraTreesRegressor.get_params>`\\"
msgstr ":obj:`get_params <sklearn.ensemble.ExtraTreesRegressor.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.ExtraTreesRegressor.predict>`\\"
msgstr ":obj:`predict <sklearn.ensemble.ExtraTreesRegressor.predict>`\\"

#: of sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
#: sklearn.ensemble._forest.ForestRegressor.predict:2
msgid "Predict regression target for X."
msgstr "Predice el objetivo de regresión para X."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid ":obj:`score <sklearn.ensemble.ExtraTreesRegressor.score>`\\"
msgstr ":obj:`score <sklearn.ensemble.ExtraTreesRegressor.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.ExtraTreesRegressor.set_params>`\\"
msgstr ":obj:`set_params <sklearn.ensemble.ExtraTreesRegressor.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.ensemble._forest.ExtraTreesRegressor:249:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.ensemble._forest.BaseForest.apply:10
#: sklearn.ensemble._forest.BaseForest.decision_path:11
#: sklearn.ensemble._forest.BaseForest.fit:10
#: sklearn.ensemble._forest.ForestRegressor.predict:12
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.ensemble._forest.BaseForest.apply:8
#: sklearn.ensemble._forest.BaseForest.decision_path:9
#: sklearn.ensemble._forest.ForestRegressor.predict:10
msgid "The input samples. Internally, its dtype will be converted to ``dtype=np.float32``. If a sparse matrix is provided, it will be converted into a sparse ``csr_matrix``."
msgstr "Las muestras de entrada. Internamente, su dtype se convertirá a ``dtype=np.float32``. Si se proporciona una matriz dispersa, se convertirá a una dispersa ``csr_matrix``."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.ensemble.ExtraTreesRegressor.feature_importances_
#: sklearn.ensemble._forest.BaseForest.apply
#: sklearn.ensemble._forest.BaseForest.decision_path
#: sklearn.ensemble._forest.BaseForest.fit
#: sklearn.ensemble._forest.ForestRegressor.predict
msgid "Returns"
msgstr "Salida"

#: of sklearn.ensemble._forest.BaseForest.apply:27
msgid "**X_leaves**"
msgstr "**X_leaves**"

#: of
msgid "ndarray of shape (n_samples, n_estimators)"
msgstr "ndarray de forma (n_samples, n_estimators)"

#: of sklearn.ensemble._forest.BaseForest.apply:15
msgid "For each datapoint x in X and for each tree in the forest, return the index of the leaf x ends up in."
msgstr "Para cada punto de dato x en X y para cada árbol en el bosque, devuelve el índice de la hoja en la que termina x."

#: of sklearn.ensemble._forest.BaseForest.decision_path:18
msgid "**indicator**"
msgstr "**indicator**"

#: of
msgid "sparse matrix of shape (n_samples, n_nodes)"
msgstr "matriz dispersa de forma (n_samples, n_nodes)"

#: of sklearn.ensemble._forest.BaseForest.decision_path:16
msgid "Return a node indicator matrix where non zero elements indicates that the samples goes through the nodes. The matrix is of CSR format."
msgstr "Devuelve una matriz de indicador de nodo donde elementos no cero indican que las muestras pasan por los nodos. La matriz es de formato CSR."

#: of sklearn.ensemble._forest.BaseForest.decision_path:33
msgid "**n_nodes_ptr**"
msgstr "**n_nodes_ptr**"

#: of
msgid "ndarray of shape (n_estimators + 1,)"
msgstr "ndarray de forma (n_estimators + 1,)"

#: of sklearn.ensemble._forest.BaseForest.decision_path:21
msgid "The columns from indicator[n_nodes_ptr[i]:n_nodes_ptr[i+1]] gives the indicator value for the i-th estimator."
msgstr "Las columnas de indicator[n_nodes_ptr[i]:n_nodes_ptr[i+1]] devuelve el valor de indicador para el estimador i-ésimo."

#: of sklearn.ensemble.ExtraTreesRegressor.feature_importances_:4
msgid "The higher, the more important the feature. The importance of a feature is computed as the (normalized) total reduction of the criterion brought by that feature.  It is also known as the Gini importance."
msgstr "Cuanto más alto, más importante sera la característica. La importancia de una característica se calcula como la reducción total (normalizada) del criterio traído por esa función. También se le conoce como la importancia de Gini."

#: of sklearn.ensemble.ExtraTreesRegressor.feature_importances_:9
msgid "Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative."
msgstr "Advertencia: las importancias de característica basadas en la impureza pueden ser engañosas para las características de alta cardinalidad (muchos valores únicos). Vea :func:`sklearn.inspection.permutation_importance` como una alternativa."

#: of sklearn.ensemble.ExtraTreesRegressor.feature_importances_:30
msgid "**feature_importances_**"
msgstr "**feature_importances_**"

#: of sklearn.ensemble.ExtraTreesRegressor.feature_importances_:17
msgid "The values of this array sum to 1, unless all trees are single node trees consisting of only the root node, in which case it will be an array of zeros."
msgstr "Los valores de este arreglo suman a 1, a menos que todos los árboles sean árboles de nodos individuales consistiendo de solo el nodo raíz, en cuyo caso sera un arreglo de ceros."

#: of sklearn.ensemble._forest.BaseForest.fit:8
msgid "The training input samples. Internally, its dtype will be converted to ``dtype=np.float32``. If a sparse matrix is provided, it will be converted into a sparse ``csc_matrix``."
msgstr "Las muestras de entrada de entrenamiento. Internamente, su dtype se convertirá a ``dtype=np.float32``. Si se proporciona una matriz dispersa, se convertirá a una dispersa ``csc_matrix``."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.ensemble._forest.BaseForest.fit:14
#: sklearn.ensemble._forest.ForestRegressor.predict:28
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.ensemble._forest.BaseForest.fit:13
msgid "The target values (class labels in classification, real numbers in regression)."
msgstr "Los valores objetivo (etiquetas de clase en clasificación, números reales en regresión)."

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.ensemble._forest.BaseForest.fit:21
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "arreglo tipo de forma (n_samples,), default=None"

#: of sklearn.ensemble._forest.BaseForest.fit:17
msgid "Sample weights. If None, then samples are equally weighted. Splits that would create child nodes with net zero or negative weight are ignored while searching for a split in each node. In the case of classification, splits are also ignored if they would result in any single class carrying a negative weight in either child node."
msgstr "Ponderados de muestra. Si es None, entonces las muestras están ponderadas de la misma manera. Divisiones que crearían nodos hijos con ponderado neto cero o negativo son ignoradas al buscar una división en cada nodo. En el caso de la clasificación, las divisiones también se ignoran si resultarían en cualquier clase individual llevando un ponderado negativo en cualquiera de los nodos hijos."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.ensemble._forest.BaseForest.fit:37
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "objeto"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.ensemble._forest.ForestRegressor.predict:4
msgid "The predicted regression target of an input sample is computed as the mean predicted regression targets of the trees in the forest."
msgstr "El objetivo de regresión previsto de una muestra de entrada es calculado como el medio de los objetivos de regresión previstos de los árboles en el bosque."

#: of
msgid "ndarray of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "ndarray de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.ensemble._forest.ForestRegressor.predict:17
msgid "The predicted values."
msgstr "Los valores previstos."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma residual de cuadrados ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1,0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0,0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "tipo arreglo de forma (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz de núcleo precalculada o una lista de objetos genéricos con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para `X`."

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` of ``self.predict(X)`` wrt. `y`."

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al llamar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la coherencia con el valor por defecto de :func:`~sklearn.metrics.r2_score``. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: ../modules/generated/sklearn.ensemble.ExtraTreesRegressor.examples:4
msgid "Examples using ``sklearn.ensemble.ExtraTreesRegressor``"
msgstr "Ejemplos usando ``sklearn.ensemble.ExtraTreesRegressor``"

#: ../modules/generated/sklearn.ensemble.ExtraTreesRegressor.examples:15
#: ../modules/generated/sklearn.ensemble.ExtraTreesRegressor.examples:23
msgid ":ref:`sphx_glr_auto_examples_impute_plot_iterative_imputer_variants_comparison.py`"
msgstr ":ref:`sphx_glr_auto_examples_impute_plot_iterative_imputer_variants_comparison.py`"

