msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-03 22:13\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.MultiLabelBinarizer.po\n"
"X-Crowdin-File-ID: 4958\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.MultiLabelBinarizer.rst:2
msgid ":mod:`sklearn.preprocessing`.MultiLabelBinarizer"
msgstr ":mod:`sklearn.preprocessing`.MultiLabelBinarizer"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:2
msgid "Transform between iterable of iterables and a multilabel format."
msgstr "Transformación entre iterable de iterables y un formato multietiqueta."

#: of sklearn.preprocessing._label.MultiLabelBinarizer:4
msgid "Although a list of sets or tuples is a very intuitive format for multilabel data, it is unwieldy to process. This transformer converts between this intuitive format and the supported multilabel format: a (samples x classes) binary matrix indicating the presence of a class label."
msgstr "Aunque una lista de conjuntos o tuplas es un formato muy intuitivo para los datos multietiqueta, su procesamiento es difícil de manejar. Este transformador convierte entre este formato intuitivo y el formato de etiquetas múltiples admitido: una matriz binaria (muestras x clases) que indica la presencia de una etiqueta de clase."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.preprocessing._label.MultiLabelBinarizer
#: sklearn.preprocessing._label.MultiLabelBinarizer.fit
#: sklearn.preprocessing._label.MultiLabelBinarizer.fit_transform
#: sklearn.preprocessing._label.MultiLabelBinarizer.inverse_transform
#: sklearn.preprocessing._label.MultiLabelBinarizer.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:13
msgid "**classes**"
msgstr "**classes**"

#: of
msgid "array-like of shape (n_classes,), default=None"
msgstr "array-like de forma (n_classes,), default=None"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:12
msgid "Indicates an ordering for the class labels. All entries should be unique (cannot contain duplicate classes)."
msgstr "Indica un orden para las etiquetas de las clases. Todas las entradas deben ser únicas (no pueden contener clases duplicadas)."

#: of sklearn.preprocessing._label.MultiLabelBinarizer:19
msgid "**sparse_output**"
msgstr "**sparse_output**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:16
msgid "Set to True if output binary array is desired in CSR sparse format."
msgstr "Establécelo en True si deseas un arreglo binario de salida en formato CSR disperso."

#: of sklearn.preprocessing._label.MultiLabelBinarizer
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:29
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:24
msgid "A copy of the `classes` parameter when provided. Otherwise it corresponds to the sorted set of classes found when fitting."
msgstr "Una copia del parámetro `classes` cuando se proporciona. En caso contrario, corresponde al conjunto ordenado de clases que se encuentran al ajustar."

#: of sklearn.preprocessing._label.MultiLabelBinarizer:34
msgid ":obj:`OneHotEncoder`"
msgstr ":obj:`OneHotEncoder`"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:35
msgid "Encode categorical features using a one-hot aka one-of-K scheme."
msgstr "Codifica las características categóricas utilizando un esquema one-hot también conocido como uno de K (one-of-K)."

#: of sklearn.preprocessing._label.MultiLabelBinarizer:41
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:56
msgid "A common mistake is to pass in a list, which leads to the following issue:"
msgstr "Un error común es pasar una lista (list), lo que lleva al siguiente problema:"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:65
msgid "To correct this, the list of labels should be passed in as:"
msgstr "Para corregir esto, la lista de etiquetas debe pasarse como:"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:74
msgid "Methods"
msgstr "Métodos"

#: of sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.MultiLabelBinarizer.fit>`\\"
msgstr ":obj:`fit <sklearn.preprocessing.MultiLabelBinarizer.fit>`\\"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.fit:2
#: sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid "Fit the label sets binarizer, storing :term:`classes_`."
msgstr "Ajusta el binarizador de conjuntos de etiquetas, almacenando :term:`classes_`."

#: of sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.MultiLabelBinarizer.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.preprocessing.MultiLabelBinarizer.fit_transform>`\\"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.fit_transform:2
#: sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid "Fit the label sets binarizer and transform the given label sets."
msgstr "Ajusta el binarizador de conjuntos de etiquetas y transforma los conjuntos de etiquetas dados."

#: of sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.MultiLabelBinarizer.get_params>`\\"
msgstr ":obj:`get_params <sklearn.preprocessing.MultiLabelBinarizer.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.preprocessing.MultiLabelBinarizer.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.preprocessing.MultiLabelBinarizer.inverse_transform>`\\"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.inverse_transform:2
#: sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid "Transform the given indicator matrix into label sets."
msgstr "Transforma la matriz indicatriz dada en conjuntos de etiquetas."

#: of sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.MultiLabelBinarizer.set_params>`\\"
msgstr ":obj:`set_params <sklearn.preprocessing.MultiLabelBinarizer.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.MultiLabelBinarizer.transform>`\\"
msgstr ":obj:`transform <sklearn.preprocessing.MultiLabelBinarizer.transform>`\\"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.transform:2
#: sklearn.preprocessing._label.MultiLabelBinarizer:83:<autosummary>:1
msgid "Transform the given label sets."
msgstr "Transforma los conjuntos de etiquetas dados."

#: of sklearn.preprocessing._label.MultiLabelBinarizer.fit:10
#: sklearn.preprocessing._label.MultiLabelBinarizer.fit_transform:10
#: sklearn.preprocessing._label.MultiLabelBinarizer.inverse_transform:25
#: sklearn.preprocessing._label.MultiLabelBinarizer.transform:10
msgid "**y**"
msgstr "**y**"

#: of
msgid "iterable of iterables"
msgstr "iterable of iterables"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.fit:8
#: sklearn.preprocessing._label.MultiLabelBinarizer.fit_transform:8
#: sklearn.preprocessing._label.MultiLabelBinarizer.transform:8
msgid "A set of labels (any orderable and hashable object) for each sample. If the `classes` parameter is set, `y` will not be iterated."
msgstr "Un conjunto de etiquetas (cualquier objeto ordenable y hashable) para cada muestra. Si se establece el parámetro `classes`, no se iterará `y`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.preprocessing._label.MultiLabelBinarizer.fit
#: sklearn.preprocessing._label.MultiLabelBinarizer.fit_transform
#: sklearn.preprocessing._label.MultiLabelBinarizer.inverse_transform
#: sklearn.preprocessing._label.MultiLabelBinarizer.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.preprocessing._label.MultiLabelBinarizer.fit:26
msgid "**self**"
msgstr "**self**"

#: of
msgid "returns this MultiLabelBinarizer instance"
msgstr "returns this MultiLabelBinarizer instance"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.fit_transform:28
#: sklearn.preprocessing._label.MultiLabelBinarizer.transform:27
msgid "**y_indicator**"
msgstr "**y_indicator**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_classes)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_classes)"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.fit_transform:15
msgid "A matrix such that `y_indicator[i, j] = 1` i.f.f. `classes_[j]` is in `y[i]`, and 0 otherwise. Sparse matrix will be of CSR format."
msgstr "Una matriz tal que `y_indicator[i, j] = 1` si y sólo si `classes_[j]` está en `y[i]`, y 0 en caso contrario. La Matriz Dispersa tendrá el formato CSR."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Los nombres de los parámetros mapeados a sus valores."

#: of sklearn.preprocessing._label.MultiLabelBinarizer.inverse_transform:8
msgid "**yt**"
msgstr "**yt**"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.inverse_transform:8
msgid "A matrix containing only 1s ands 0s."
msgstr "Una matriz que sólo contiene 1 (unos) y 0 (ceros)."

#: of
msgid "list of tuples"
msgstr "list of tuples"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.inverse_transform:13
msgid "The set of labels for each sample such that `y[i]` consists of `classes_[j]` for each `yt[i, j] == 1`."
msgstr "El conjunto de etiquetas para cada muestra tal que `y[i]` consta de `classes_[j]` para cada `yt[i, j] == 1`."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of
msgid "array or CSR matrix, shape (n_samples, n_classes)"
msgstr "array o CSR matrix, forma (n_samples, n_classes)"

#: of sklearn.preprocessing._label.MultiLabelBinarizer.transform:15
msgid "A matrix such that `y_indicator[i, j] = 1` iff `classes_[j]` is in `y[i]`, and 0 otherwise."
msgstr "Una matriz tal que `y_indicator[i, j] = 1` si y sólo si `classes_[j]` está en `y[i]`, y 0 de lo contrario."

