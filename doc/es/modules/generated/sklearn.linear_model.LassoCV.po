msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:56-0400\n"
"PO-Revision-Date: 2021-06-01 01:49\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.LassoCV.po\n"
"X-Crowdin-File-ID: 5926\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.LassoCV.rst:2
msgid ":mod:`sklearn.linear_model`.LassoCV"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:2
msgid "Lasso linear model with iterative fitting along a regularization path."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:4
msgid "See glossary entry for :term:`cross-validation estimator`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:6
msgid "The best model is selected by cross-validation."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:8
msgid "The optimization objective for Lasso is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:12
#: sklearn.linear_model._coordinate_descent.lasso_path:20
msgid "Read more in the :ref:`User Guide <lasso>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._coordinate_descent.LassoCV
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit
#: sklearn.linear_model._coordinate_descent.lasso_path
msgid "Parameters"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:18
#: sklearn.linear_model._coordinate_descent.lasso_path:34
msgid "**eps**"
msgstr "**eps**"

#: of
msgid "float, default=1e-3"
msgstr "float, default=1e-3"

#: of sklearn.linear_model._coordinate_descent.LassoCV:17
msgid "Length of the path. ``eps=1e-3`` means that ``alpha_min / alpha_max = 1e-3``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:21
#: sklearn.linear_model._coordinate_descent.lasso_path:37
msgid "**n_alphas**"
msgstr "**n_alphas**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.linear_model._coordinate_descent.LassoCV:21
msgid "Number of alphas along the regularization path."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:25
#: sklearn.linear_model._coordinate_descent.lasso_path:41
#: sklearn.linear_model._coordinate_descent.lasso_path:74
msgid "**alphas**"
msgstr "**alphas**"

#: of
msgid "ndarray, default=None"
msgstr "ndarray, default=None"

#: of sklearn.linear_model._coordinate_descent.LassoCV:24
msgid "List of alphas where to compute the models. If ``None`` alphas are set automatically."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:30
msgid "**fit_intercept**"
msgstr "**fit_intercept**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.linear_model._coordinate_descent.LassoCV:28
msgid "Whether to calculate the intercept for this model. If set to false, no intercept will be used in calculations (i.e. data is expected to be centered)."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:38
msgid "**normalize**"
msgstr "**normalize**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.linear_model._coordinate_descent.LassoCV:33
msgid "This parameter is ignored when ``fit_intercept`` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm. If you wish to standardize, please use :class:`~sklearn.preprocessing.StandardScaler` before calling ``fit`` on an estimator with ``normalize=False``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:43
#: sklearn.linear_model._coordinate_descent.lasso_path:46
msgid "**precompute**"
msgstr "**precompute**"

#: of
msgid "'auto', bool or array-like of shape (n_features, n_features),                 default='auto'"
msgstr "'auto', bool or array-like de forma (n_features, n_features),                 default='auto'"

#: of sklearn.linear_model._coordinate_descent.LassoCV:41
#: sklearn.linear_model._coordinate_descent.lasso_path:44
msgid "Whether to use a precomputed Gram matrix to speed up calculations. If set to ``'auto'`` let us decide. The Gram matrix can also be passed as argument."
msgstr "Si se utiliza una matriz Gram precalculada para acelerar los cálculos. Si se establece como ``'auto'`` se puede decidir. La matriz Gram también se puede pasar como argumento."

#: of sklearn.linear_model._coordinate_descent.LassoCV:46
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=1000"
msgstr "int, default=1000"

#: of sklearn.linear_model._coordinate_descent.LassoCV:46
msgid "The maximum number of iterations."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:52
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-4"
msgstr "float, default=1e-4"

#: of sklearn.linear_model._coordinate_descent.LassoCV:49
msgid "The tolerance for the optimization: if the updates are smaller than ``tol``, the optimization code checks the dual gap for optimality and continues until it is smaller than ``tol``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:55
#: sklearn.linear_model._coordinate_descent.lasso_path:53
msgid "**copy_X**"
msgstr "**copy_X**"

#: of sklearn.linear_model._coordinate_descent.LassoCV:55
#: sklearn.linear_model._coordinate_descent.lasso_path:53
msgid "If ``True``, X will be copied; else, it may be overwritten."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:72
msgid "**cv**"
msgstr "**cv**"

#: of
msgid "int, cross-validation generator or iterable, default=None"
msgstr "int, cross-validation generator o iterable, default=None"

#: of sklearn.linear_model._coordinate_descent.LassoCV:58
msgid "Determines the cross-validation splitting strategy. Possible inputs for cv are:"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:61
msgid "None, to use the default 5-fold cross-validation,"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:62
msgid "int, to specify the number of folds."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:63
msgid ":term:`CV splitter`,"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:64
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:66
msgid "For int/None inputs, :class:`KFold` is used."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:68
msgid "Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:71
msgid "``cv`` default value if None changed from 3-fold to 5-fold."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:75
#: sklearn.linear_model._coordinate_descent.lasso_path:59
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool or int, default=False"
msgstr "bool o int, default=False"

#: of sklearn.linear_model._coordinate_descent.LassoCV:75
#: sklearn.linear_model._coordinate_descent.lasso_path:59
msgid "Amount of verbosity."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:81
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.linear_model._coordinate_descent.LassoCV:78
msgid "Number of CPUs to use during the cross validation. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:84
#: sklearn.linear_model._coordinate_descent.lasso_path:66
msgid "**positive**"
msgstr "**positive**"

#: of sklearn.linear_model._coordinate_descent.LassoCV:84
msgid "If positive, restrict regression coefficients to be positive."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:90
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance, default=None"
msgstr "int, RandomState instance, default=None"

#: of sklearn.linear_model._coordinate_descent.LassoCV:87
msgid "The seed of the pseudo random number generator that selects a random feature to update. Used when ``selection`` == 'random'. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:99
msgid "**selection**"
msgstr "**selection**"

#: of
msgid "{'cyclic', 'random'}, default='cyclic'"
msgstr "{'cyclic', 'random'}, default='cyclic'"

#: of sklearn.linear_model._coordinate_descent.LassoCV:93
msgid "If set to 'random', a random coefficient is updated every iteration rather than looping over features sequentially by default. This (setting to 'random') often leads to significantly faster convergence especially when tol is higher than 1e-4."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.linear_model._coordinate_descent.LassoCV:104
msgid "**alpha_**"
msgstr "**alpha_**"

#: of
msgid "float"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:104
msgid "The amount of penalization chosen by cross validation."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:107
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (n_features,) or (n_targets, n_features)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:107
msgid "Parameter vector (w in the cost function formula)."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:110
msgid "**intercept_**"
msgstr "**intercept_**"

#: of
msgid "float or ndarray of shape (n_targets,)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:110
msgid "Independent term in decision function."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:113
msgid "**mse_path_**"
msgstr "**mse_path_**"

#: of
msgid "ndarray of shape (n_alphas, n_folds)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:113
msgid "Mean square error for the test set on each fold, varying alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:116
msgid "**alphas_**"
msgstr "**alphas_**"

#: of
msgid "ndarray of shape (n_alphas,)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:116
msgid "The grid of alphas used for fitting."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:120
msgid "**dual_gap_**"
msgstr "**dual_gap_**"

#: of sklearn.linear_model._coordinate_descent.LassoCV:119
msgid "The dual gap at the end of the optimization for the optimal alpha (``alpha_``)."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:127
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "int"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:123
msgid "Number of iterations run by the coordinate descent solver to reach the specified tolerance for the optimal alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:132
#: sklearn.linear_model._coordinate_descent.lasso_path:95
msgid ":obj:`lars_path`"
msgstr ":obj:`lars_path`"

#: of sklearn.linear_model._coordinate_descent.LassoCV:134
msgid ":obj:`lasso_path`"
msgstr ":obj:`lasso_path`"

#: of sklearn.linear_model._coordinate_descent.LassoCV:136
#: sklearn.linear_model._coordinate_descent.lasso_path:99
msgid ":obj:`LassoLars`"
msgstr ":obj:`LassoLars`"

#: of sklearn.linear_model._coordinate_descent.LassoCV:138
#: sklearn.linear_model._coordinate_descent.lasso_path:97
msgid ":obj:`Lasso`"
msgstr ":obj:`Lasso`"

#: of sklearn.linear_model._coordinate_descent.LassoCV:140
#: sklearn.linear_model._coordinate_descent.lasso_path:103
msgid ":obj:`LassoLarsCV`"
msgstr ":obj:`LassoLarsCV`"

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.linear_model._coordinate_descent.LassoCV:144
#: sklearn.linear_model._coordinate_descent.lasso_path:109
msgid "Notes"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:145
msgid "For an example, see :ref:`examples/linear_model/plot_lasso_model_selection.py <sphx_glr_auto_examples_linear_model_plot_lasso_model_selection.py>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:149
#: sklearn.linear_model._coordinate_descent.lasso_path:114
msgid "To avoid unnecessary memory duplication the X argument of the fit method should be directly passed as a Fortran-contiguous numpy array."
msgstr "Para evitar la duplicación innecesaria de memoria, el argumento X del método fit debe pasarse directamente como un arreglo numpy Fortran-contiguos."

#: of sklearn.linear_model._coordinate_descent.LassoCV:154
#: sklearn.linear_model._coordinate_descent.lasso_path:124
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.linear_model._coordinate_descent.LassoCV:165
msgid "Methods"
msgstr "Métodos"

#: of sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.LassoCV.fit>`\\"
msgstr ":obj:`fit <sklearn.linear_model.LassoCV.fit>`\\"

#: of sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit:2
msgid "Fit linear model with coordinate descent."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.LassoCV.get_params>`\\"
msgstr ":obj:`get_params <sklearn.linear_model.LassoCV.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid ":obj:`path <sklearn.linear_model.LassoCV.path>`\\"
msgstr ":obj:`path <sklearn.linear_model.LassoCV.path>`\\"

#: of sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
#: sklearn.linear_model._coordinate_descent.lasso_path:2
msgid "Compute Lasso path with coordinate descent"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.LassoCV.predict>`\\"
msgstr ":obj:`predict <sklearn.linear_model.LassoCV.predict>`\\"

#: of sklearn.linear_model._base.LinearModel.predict:2
#: sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid "Predict using the linear model."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.LassoCV.score>`\\"
msgstr ":obj:`score <sklearn.linear_model.LassoCV.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.LassoCV.set_params>`\\"
msgstr ":obj:`set_params <sklearn.linear_model.LassoCV.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._coordinate_descent.LassoCV:174:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:4
msgid "Fit is on grid of alphas and best alpha estimated by cross-validation."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._base.LinearModel.predict:8
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit:11
#: sklearn.linear_model._coordinate_descent.lasso_path:27
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:9
msgid "Training data. Pass directly as Fortran-contiguous data to avoid unnecessary memory duplication. If y is mono-output, X can be sparse."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit:26
#: sklearn.linear_model._coordinate_descent.lasso_path:30
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_targets)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:14
msgid "Target values."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._coordinate_descent.lasso_path
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:4
msgid "The Lasso optimization function varies for mono and multi-outputs."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:6
msgid "For mono-output tasks it is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:10
msgid "For multi-output tasks it is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:14
msgid "Where::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:18
msgid "i.e. the sum of norm of each row."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:25
msgid "Training data. Pass directly as Fortran-contiguous data to avoid unnecessary memory duplication. If ``y`` is mono-output then ``X`` can be sparse."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples,) or         (n_samples, n_outputs)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:30
msgid "Target values"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:33
msgid "Length of the path. ``eps=1e-3`` means that ``alpha_min / alpha_max = 1e-3``"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:37
msgid "Number of alphas along the regularization path"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:40
msgid "List of alphas where to compute the models. If ``None`` alphas are set automatically"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:50
msgid "**Xy**"
msgstr "**Xy**"

#: of
msgid "array-like of shape (n_features,) or (n_features, n_outputs),         default=None"
msgstr "array-like de forma (n_features,) or (n_features, n_outputs),         default=None"

#: of sklearn.linear_model._coordinate_descent.lasso_path:49
msgid "Xy = np.dot(X.T, y) that can be precomputed. It is useful only when the Gram matrix is precomputed."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:56
msgid "**coef_init**"
msgstr "**coef_init**"

#: of
msgid "ndarray of shape (n_features, ), default=None"
msgstr "ndarray de forma (n_features, ), default=None"

#: of sklearn.linear_model._coordinate_descent.lasso_path:56
msgid "The initial values of the coefficients."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:62
msgid "**return_n_iter**"
msgstr "**return_n_iter**"

#: of sklearn.linear_model._coordinate_descent.lasso_path:62
msgid "whether to return the number of iterations or not."
msgstr "si se devuelve o no el número de iteraciones."

#: of sklearn.linear_model._coordinate_descent.lasso_path:65
msgid "If set to True, forces coefficients to be positive. (Only allowed when ``y.ndim == 1``)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
#: sklearn.linear_model._coordinate_descent.lasso_path:69
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of
msgid "kwargs"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:69
msgid "keyword arguments passed to the coordinate descent solver."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:74
msgid "The alphas along the path where models are computed."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:77
msgid "**coefs**"
msgstr "**coefs**"

#: of
msgid "ndarray of shape (n_features, n_alphas) or             (n_outputs, n_features, n_alphas)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:77
msgid "Coefficients along the path."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:80
msgid "**dual_gaps**"
msgstr "**dual_gaps**"

#: of sklearn.linear_model._coordinate_descent.lasso_path:80
msgid "The dual gaps at the end of the optimization for each alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:90
msgid "**n_iters**"
msgstr "**n_iters**"

#: of
msgid "list of int"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:83
msgid "The number of iterations taken by the coordinate descent optimizer to reach the specified tolerance for each alpha."
msgstr "El número de iteraciones que toma el optimizador de descenso coordinado para alcanzar la tolerancia especificada para cada alfa."

#: of sklearn.linear_model._coordinate_descent.lasso_path:101
msgid ":obj:`LassoCV`"
msgstr ":obj:`LassoCV`"

#: of sklearn.linear_model._coordinate_descent.lasso_path:105
msgid ":obj:`sklearn.decomposition.sparse_encode`"
msgstr ":obj:`sklearn.decomposition.sparse_encode`"

#: of sklearn.linear_model._coordinate_descent.lasso_path:110
msgid "For an example, see :ref:`examples/linear_model/plot_lasso_coordinate_descent_path.py <sphx_glr_auto_examples_linear_model_plot_lasso_coordinate_descent_path.py>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:117
msgid "Note that in certain cases, the Lars solver may be significantly faster to implement this functionality. In particular, linear interpolation can be used to retrieve model coefficients between the values output by lars_path"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:125
msgid "Comparing lasso_path and lars_path with interpolation:"
msgstr ""

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr "array-like o sparse matrix, de forma (n_samples, n_features)"

#: of sklearn.linear_model._base.LinearModel.predict:8
msgid "Samples."
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:24
msgid "**C**"
msgstr "**C**"

#: of
msgid "array, shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:13
msgid "Returns predicted values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.linear_model.LassoCV.examples:4
msgid "Examples using ``sklearn.linear_model.LassoCV``"
msgstr ""

#: ../modules/generated/sklearn.linear_model.LassoCV.examples:15
#: ../modules/generated/sklearn.linear_model.LassoCV.examples:23
msgid ":ref:`sphx_glr_auto_examples_inspection_plot_linear_model_coefficient_interpretation.py`"
msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_ensemble_plot_stack_predictors.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_feature_selection_plot_select_from_model_diabetes.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_lasso_model_selection.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_exercises_plot_cv_diabetes.py`"
#~ msgstr ""

