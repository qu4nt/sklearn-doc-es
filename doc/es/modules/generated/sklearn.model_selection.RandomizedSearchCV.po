msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-05-31 23:30\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.model_selection.RandomizedSearchCV.po\n"
"X-Crowdin-File-ID: 5472\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.model_selection.RandomizedSearchCV.rst:2
msgid ":mod:`sklearn.model_selection`.RandomizedSearchCV"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:2
msgid "Randomized search on hyper parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:4
msgid "RandomizedSearchCV implements a \"fit\" and a \"score\" method. It also implements \"score_samples\", \"predict\", \"predict_proba\", \"decision_function\", \"transform\" and \"inverse_transform\" if they are implemented in the estimator used."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:9
msgid "The parameters of the estimator used to apply these methods are optimized by cross-validated search over parameter settings."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:12
msgid "In contrast to GridSearchCV, not all parameter values are tried out, but rather a fixed number of parameter settings is sampled from the specified distributions. The number of parameter settings that are tried is given by n_iter."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:17
msgid "If all parameters are presented as a list, sampling without replacement is performed. If at least one parameter is given as a distribution, sampling with replacement is used. It is highly recommended to use continuous distributions for continuous parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:23
msgid "Read more in the :ref:`User Guide <randomized_parameter_search>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.model_selection._search.BaseSearchCV.decision_function
#: sklearn.model_selection._search.BaseSearchCV.fit
#: sklearn.model_selection._search.BaseSearchCV.inverse_transform
#: sklearn.model_selection._search.BaseSearchCV.predict
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba
#: sklearn.model_selection._search.BaseSearchCV.predict_proba
#: sklearn.model_selection._search.BaseSearchCV.score
#: sklearn.model_selection._search.BaseSearchCV.score_samples
#: sklearn.model_selection._search.BaseSearchCV.transform
#: sklearn.model_selection._search.RandomizedSearchCV
msgid "Parameters"
msgstr "Par√°metros"

#: of sklearn.model_selection._search.RandomizedSearchCV:33
msgid "**estimator**"
msgstr ""

#: of
msgid "estimator object."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:30
msgid "A object of that type is instantiated for each grid point. This is assumed to implement the scikit-learn estimator interface. Either estimator needs to provide a ``score`` function, or ``scoring`` must be passed."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:41
msgid "**param_distributions**"
msgstr ""

#: of
msgid "dict or list of dicts"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:36
msgid "Dictionary with parameters names (`str`) as keys and distributions or lists of parameters to try. Distributions must provide a ``rvs`` method for sampling (such as those from scipy.stats.distributions). If a list is given, it is sampled uniformly. If a list of dicts is given, first a dict is sampled uniformly, and then a parameter is sampled using that dict as above."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:45
msgid "**n_iter**"
msgstr ""

#: of
msgid "int, default=10"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:44
msgid "Number of parameter settings that are sampled. n_iter trades off runtime vs quality of the solution."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:65
msgid "**scoring**"
msgstr ""

#: of
msgid "str, callable, list, tuple or dict, default=None"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:48
msgid "Strategy to evaluate the performance of the cross-validated model on the test set."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:51
msgid "If `scoring` represents a single score, one can use:"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:53
msgid "a single string (see :ref:`scoring_parameter`);"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:54
msgid "a callable (see :ref:`scoring`) that returns a single value."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:56
msgid "If `scoring` reprents multiple scores, one can use:"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:58
msgid "a list or tuple of unique strings;"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:59
msgid "a callable returning a dictionary where the keys are the metric names and the values are the metric scores;"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:61
msgid "a dictionary with metric names as keys and callables a values."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:63
msgid "See :ref:`multimetric_grid_search` for an example."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:65
msgid "If None, the estimator's score method is used."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:74
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:68
msgid "Number of jobs to run in parallel. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:73
msgid "`n_jobs` default changed from 1 to None"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:91
msgid "**pre_dispatch**"
msgstr ""

#: of
msgid "int, or str, default=None"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:77
msgid "Controls the number of jobs that get dispatched during parallel execution. Reducing this number can be useful to avoid an explosion of memory consumption when more jobs get dispatched than CPUs can process. This parameter can be:"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:82
msgid "None, in which case all the jobs are immediately created and spawned. Use this for lightweight and fast-running jobs, to avoid delays due to on-demand spawning of the jobs"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:87
msgid "An int, giving the exact number of total jobs that are spawned"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:90
msgid "A str, giving an expression as a function of n_jobs, as in '2*n_jobs'"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:110
msgid "**cv**"
msgstr ""

#: of
msgid "int, cross-validation generator or an iterable, default=None"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:94
msgid "Determines the cross-validation splitting strategy. Possible inputs for cv are:"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:97
msgid "None, to use the default 5-fold cross validation,"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:98
msgid "integer, to specify the number of folds in a `(Stratified)KFold`,"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:99
msgid ":term:`CV splitter`,"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:100
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:102
msgid "For integer/None inputs, if the estimator is a classifier and ``y`` is either binary or multiclass, :class:`StratifiedKFold` is used. In all other cases, :class:`KFold` is used."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:106
msgid "Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:109
msgid "``cv`` default value if None changed from 3-fold to 5-fold."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:140
msgid "**refit**"
msgstr ""

#: of
msgid "bool, str, or callable, default=True"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:113
msgid "Refit an estimator using the best found parameters on the whole dataset."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:116
msgid "For multiple metric evaluation, this needs to be a `str` denoting the scorer that would be used to find the best parameters for refitting the estimator at the end."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:120
msgid "Where there are considerations other than maximum score in choosing a best estimator, ``refit`` can be set to a function which returns the selected ``best_index_`` given the ``cv_results``. In that case, the ``best_estimator_`` and ``best_params_`` will be set according to the returned ``best_index_`` while the ``best_score_`` attribute will not be available."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:127
msgid "The refitted estimator is made available at the ``best_estimator_`` attribute and permits using ``predict`` directly on this ``RandomizedSearchCV`` instance."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:131
msgid "Also for multiple metric evaluation, the attributes ``best_index_``, ``best_score_`` and ``best_params_`` will only be available if ``refit`` is set and all of them will be determined w.r.t this specific scorer."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:136
msgid "See ``scoring`` parameter to know more about multiple metric evaluation."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:139
msgid "Support for callable added."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:143
msgid "**verbose**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:143
msgid "Controls the verbosity: the higher, the more messages."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:150
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:146
msgid "Pseudo random number generator state used for random uniform sampling from lists of possible values instead of scipy.stats distributions. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:156
msgid "**error_score**"
msgstr ""

#: of
msgid "'raise' or numeric, default=np.nan"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:153
msgid "Value to assign to the score if an error occurs in estimator fitting. If set to 'raise', the error is raised. If a numeric value is given, FitFailedWarning is raised. This parameter does not affect the refit step, which will always raise the error."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:173
msgid "**return_train_score**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:159
msgid "If ``False``, the ``cv_results_`` attribute will not include training scores. Computing training scores is used to get insights on how different parameter settings impact the overfitting/underfitting trade-off. However computing the scores on the training set can be computationally expensive and is not strictly required to select the parameters that yield the best generalization performance."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:169
msgid "Default value was changed from ``True`` to ``False``"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV
msgid "Attributes"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:226
msgid "**cv_results_**"
msgstr ""

#: of
msgid "dict of numpy (masked) ndarrays"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:178
msgid "A dict with keys as column headers and values as columns, that can be imported into a pandas ``DataFrame``."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:181
msgid "For instance the below given table"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:184
msgid "param_kernel"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:184
msgid "param_gamma"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:184
msgid "split0_test_score"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:184
#: sklearn.model_selection._search.RandomizedSearchCV:186
#: sklearn.model_selection._search.RandomizedSearchCV:188
#: sklearn.model_selection._search.RandomizedSearchCV:190
msgid "..."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:184
msgid "rank_test_score"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:186
#: sklearn.model_selection._search.RandomizedSearchCV:188
#: sklearn.model_selection._search.RandomizedSearchCV:190
msgid "'rbf'"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:186
msgid "0.1"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:186
msgid "0.80"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:186
msgid "1"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:188
msgid "0.2"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:188
msgid "0.84"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:188
msgid "3"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:190
msgid "0.3"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:190
msgid "0.70"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:190
msgid "2"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:193
msgid "will be represented by a ``cv_results_`` dict of::"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:215
msgid "NOTE"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:217
msgid "The key ``'params'`` is used to store a list of parameter settings dicts for all the parameter candidates."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:220
msgid "The ``mean_fit_time``, ``std_fit_time``, ``mean_score_time`` and ``std_score_time`` are all in seconds."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:223
msgid "For multi-metric evaluation, the scores for all the scorers are available in the ``cv_results_`` dict at the keys ending with that scorer's name (``'_<scorer_name>'``) instead of ``'_score'`` shown above. ('split0_test_precision', 'mean_train_precision' etc.)"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:236
msgid "**best_estimator_**"
msgstr ""

#: of
msgid "estimator"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:229
msgid "Estimator that was chosen by the search, i.e. estimator which gave highest score (or smallest loss if specified) on the left out data. Not available if ``refit=False``."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:233
msgid "For multi-metric evaluation, this attribute is present only if ``refit`` is specified."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:236
msgid "See ``refit`` parameter for more information on allowed values."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:244
msgid "**best_score_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:239
msgid "Mean cross-validated score of the best_estimator."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:241
#: sklearn.model_selection._search.RandomizedSearchCV:249
#: sklearn.model_selection._search.RandomizedSearchCV:260
msgid "For multi-metric evaluation, this is not available if ``refit`` is ``False``. See ``refit`` parameter for more information."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:244
msgid "This attribute is not available if ``refit`` is a function."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:250
msgid "**best_params_**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:247
msgid "Parameter setting that gave the best results on the hold out data."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:261
msgid "**best_index_**"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:253
msgid "The index (of the ``cv_results_`` arrays) which corresponds to the best candidate parameter setting."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:256
msgid "The dict at ``search.cv_results_['params'][search.best_index_]`` gives the parameter setting for the best model, that gives the highest mean score (``search.best_score_``)."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:268
msgid "**scorer_**"
msgstr ""

#: of
msgid "function or a dict"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:264
msgid "Scorer function used on the held out data to choose the best parameters for the model."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:267
msgid "For multi-metric evaluation, this attribute holds the validated ``scoring`` dict which maps the scorer key to the scorer callable."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:271
msgid "**n_splits_**"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:271
msgid "The number of cross-validation splits (folds/iterations)."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:278
msgid "**refit_time_**"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:274
msgid "Seconds used for refitting the best model on the whole dataset."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:276
msgid "This is present only if ``refit`` is not False."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:284
msgid "**multimetric_**"
msgstr ""

#: of
msgid "bool"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:281
msgid "Whether or not the scorers compute several metrics."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:289
msgid ":obj:`GridSearchCV`"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:290
msgid "Does exhaustive search over a grid of parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:291
msgid ":obj:`ParameterSampler`"
msgstr ":obj:`ParameterSampler`"

#: of sklearn.model_selection._search.RandomizedSearchCV:292
msgid "A generator over parameter settings, constructed from param_distributions."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:296
msgid "Notes"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:297
msgid "The parameters selected are those that maximize the score of the held-out data, according to the scoring parameter."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:300
msgid "If `n_jobs` was set to a value higher than one, the data is copied for each parameter setting(and not `n_jobs` times). This is done for efficiency reasons if individual jobs take very little time, but may raise errors if the dataset is large and not enough memory is available.  A workaround in this case is to set `pre_dispatch`. Then, the memory is copied only `pre_dispatch` many times. A reasonable value for `pre_dispatch` is `2 * n_jobs`."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:310
msgid "Examples"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:326
msgid "Methods"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`decision_function <sklearn.model_selection.RandomizedSearchCV.decision_function>`\\"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call decision_function on the estimator with the best found parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`fit <sklearn.model_selection.RandomizedSearchCV.fit>`\\"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.fit:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Run fit with all sets of parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`get_params <sklearn.model_selection.RandomizedSearchCV.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.model_selection.RandomizedSearchCV.inverse_transform>`\\"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call inverse_transform on the estimator with the best found params."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`predict <sklearn.model_selection.RandomizedSearchCV.predict>`\\"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.predict:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call predict on the estimator with the best found parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`predict_log_proba <sklearn.model_selection.RandomizedSearchCV.predict_log_proba>`\\"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.predict_log_proba:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call predict_log_proba on the estimator with the best found parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.model_selection.RandomizedSearchCV.predict_proba>`\\"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.predict_proba:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call predict_proba on the estimator with the best found parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`score <sklearn.model_selection.RandomizedSearchCV.score>`\\"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.score:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Returns the score on the given data, if the estimator has been refit."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`score_samples <sklearn.model_selection.RandomizedSearchCV.score_samples>`\\"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call score_samples on the estimator with the best found parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`set_params <sklearn.model_selection.RandomizedSearchCV.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`transform <sklearn.model_selection.RandomizedSearchCV.transform>`\\"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.transform:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call transform on the estimator with the best found parameters."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``decision_function``."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:23
#: sklearn.model_selection._search.BaseSearchCV.fit:9
#: sklearn.model_selection._search.BaseSearchCV.predict:23
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba:23
#: sklearn.model_selection._search.BaseSearchCV.predict_proba:23
#: sklearn.model_selection._search.BaseSearchCV.score:11
#: sklearn.model_selection._search.BaseSearchCV.score_samples:13
#: sklearn.model_selection._search.BaseSearchCV.transform:23
msgid "**X**"
msgstr ""

#: of
msgid "indexable, length n_samples"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:10
#: sklearn.model_selection._search.BaseSearchCV.inverse_transform:10
#: sklearn.model_selection._search.BaseSearchCV.predict:10
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba:10
#: sklearn.model_selection._search.BaseSearchCV.predict_proba:10
#: sklearn.model_selection._search.BaseSearchCV.transform:10
msgid "Must fulfill the input assumptions of the underlying estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.fit:8
msgid "Training vector, where n_samples is the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.fit:13
#: sklearn.model_selection._search.BaseSearchCV.score:15
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_output)             or (n_samples,), default=None"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.fit:12
#: sklearn.model_selection._search.BaseSearchCV.score:14
msgid "Target relative to X for classification or regression; None for unsupervised learning."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.fit:18
msgid "**groups**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.fit:16
msgid "Group labels for the samples used while splitting the dataset into train/test set. Only used in conjunction with a \"Group\" :term:`cv` instance (e.g., :class:`~sklearn.model_selection.GroupKFold`)."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.fit:33
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict of str -> object"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.fit:21
msgid "Parameters passed to the ``fit`` method of the estimator"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.model_selection._search.BaseSearchCV.score
#: sklearn.model_selection._search.BaseSearchCV.score_samples
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:4
msgid "Only available if the underlying estimator implements ``inverse_transform`` and ``refit=True``."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:23
msgid "**Xt**"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.predict:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict``."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.predict_log_proba:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict_log_proba``."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.predict_proba:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict_proba``."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.score:4
msgid "This uses the score defined by ``scoring`` where provided, and the ``best_estimator_.score`` method otherwise."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.score:10
msgid "Input data, where n_samples is the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.score:31
msgid "**score**"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``score_samples``."
msgstr ""

#: of
msgid "iterable"
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:12
msgid "Data to predict on. Must fulfill input requirements of the underlying estimator."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:29
msgid "**y_score**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.model_selection._search.BaseSearchCV.transform:4
msgid "Only available if the underlying estimator supports ``transform`` and ``refit=True``."
msgstr ""

#: ../modules/generated/sklearn.model_selection.RandomizedSearchCV.examples:4
msgid "Examples using ``sklearn.model_selection.RandomizedSearchCV``"
msgstr ""

#: ../modules/generated/sklearn.model_selection.RandomizedSearchCV.examples:15
#: ../modules/generated/sklearn.model_selection.RandomizedSearchCV.examples:23
msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"
msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_randomized_search.py`"
#~ msgstr ""

