msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-06-16 00:56\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.model_selection.RandomizedSearchCV.po\n"
"X-Crowdin-File-ID: 5472\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.model_selection.RandomizedSearchCV.rst:2
msgid ":mod:`sklearn.model_selection`.RandomizedSearchCV"
msgstr ":mod:`sklearn.model_selection`.RandomizedSearchCV"

#: of sklearn.model_selection._search.RandomizedSearchCV:2
msgid "Randomized search on hyper parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:4
msgid "RandomizedSearchCV implements a \"fit\" and a \"score\" method. It also implements \"score_samples\", \"predict\", \"predict_proba\", \"decision_function\", \"transform\" and \"inverse_transform\" if they are implemented in the estimator used."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:9
msgid "The parameters of the estimator used to apply these methods are optimized by cross-validated search over parameter settings."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:12
msgid "In contrast to GridSearchCV, not all parameter values are tried out, but rather a fixed number of parameter settings is sampled from the specified distributions. The number of parameter settings that are tried is given by n_iter."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:17
msgid "If all parameters are presented as a list, sampling without replacement is performed. If at least one parameter is given as a distribution, sampling with replacement is used. It is highly recommended to use continuous distributions for continuous parameters."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:23
msgid "Read more in the :ref:`User Guide <randomized_parameter_search>`."
msgstr "Más información en el :ref:`Manual de usuario <randomized_parameter_search>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.model_selection._search.BaseSearchCV.decision_function
#: sklearn.model_selection._search.BaseSearchCV.fit
#: sklearn.model_selection._search.BaseSearchCV.inverse_transform
#: sklearn.model_selection._search.BaseSearchCV.predict
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba
#: sklearn.model_selection._search.BaseSearchCV.predict_proba
#: sklearn.model_selection._search.BaseSearchCV.score
#: sklearn.model_selection._search.BaseSearchCV.score_samples
#: sklearn.model_selection._search.BaseSearchCV.transform
#: sklearn.model_selection._search.RandomizedSearchCV
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.model_selection._search.RandomizedSearchCV:33
msgid "**estimator**"
msgstr "**estimator**"

#: of
msgid "estimator object."
msgstr "objeto estimador."

#: of sklearn.model_selection._search.RandomizedSearchCV:30
msgid "A object of that type is instantiated for each grid point. This is assumed to implement the scikit-learn estimator interface. Either estimator needs to provide a ``score`` function, or ``scoring`` must be passed."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:41
msgid "**param_distributions**"
msgstr "**param_distributions**"

#: of
msgid "dict or list of dicts"
msgstr "dict o lista de dicts"

#: of sklearn.model_selection._search.RandomizedSearchCV:36
msgid "Dictionary with parameters names (`str`) as keys and distributions or lists of parameters to try. Distributions must provide a ``rvs`` method for sampling (such as those from scipy.stats.distributions). If a list is given, it is sampled uniformly. If a list of dicts is given, first a dict is sampled uniformly, and then a parameter is sampled using that dict as above."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:45
msgid "**n_iter**"
msgstr "**n_iter**"

#: of
msgid "int, default=10"
msgstr "int, default=10"

#: of sklearn.model_selection._search.RandomizedSearchCV:44
msgid "Number of parameter settings that are sampled. n_iter trades off runtime vs quality of the solution."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:65
msgid "**scoring**"
msgstr "**scoring**"

#: of
msgid "str, callable, list, tuple or dict, default=None"
msgstr "str, callable, list/tuple o dict, default=None"

#: of sklearn.model_selection._search.RandomizedSearchCV:48
msgid "Strategy to evaluate the performance of the cross-validated model on the test set."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:51
msgid "If `scoring` represents a single score, one can use:"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:53
msgid "a single string (see :ref:`scoring_parameter`);"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:54
msgid "a callable (see :ref:`scoring`) that returns a single value."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:56
msgid "If `scoring` reprents multiple scores, one can use:"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:58
msgid "a list or tuple of unique strings;"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:59
msgid "a callable returning a dictionary where the keys are the metric names and the values are the metric scores;"
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:61
msgid "a dictionary with metric names as keys and callables a values."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:63
msgid "See :ref:`multimetric_grid_search` for an example."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:65
msgid "If None, the estimator's score method is used."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:74
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.model_selection._search.RandomizedSearchCV:68
msgid "Number of jobs to run in parallel. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.model_selection._search.RandomizedSearchCV:73
msgid "`n_jobs` default changed from 1 to None"
msgstr "`n_jobs` por defecto cambiado de 1 a None"

#: of sklearn.model_selection._search.RandomizedSearchCV:91
msgid "**pre_dispatch**"
msgstr "**pre_dispatch**"

#: of
msgid "int, or str, default=None"
msgstr "int, o str, default=None"

#: of sklearn.model_selection._search.RandomizedSearchCV:77
msgid "Controls the number of jobs that get dispatched during parallel execution. Reducing this number can be useful to avoid an explosion of memory consumption when more jobs get dispatched than CPUs can process. This parameter can be:"
msgstr "Controla el número de trabajos que se envían durante la ejecución en paralelo. Reducir este número puede ser útil para evitar una explosión de consumo de memoria cuando se envían más trabajos de los que las CPUs pueden procesar. Este parámetro puede ser:"

#: of sklearn.model_selection._search.RandomizedSearchCV:82
msgid "None, in which case all the jobs are immediately created and spawned. Use this for lightweight and fast-running jobs, to avoid delays due to on-demand spawning of the jobs"
msgstr "None, en cuyo caso todos los trabajos se crean y generan inmediatamente. Utilícelo para trabajos ligeros y de ejecución rápida, para evitar retrasos debidos a la generación de trabajos bajo demanda"

#: of sklearn.model_selection._search.RandomizedSearchCV:87
msgid "An int, giving the exact number of total jobs that are spawned"
msgstr "Un int, que da el número exacto de trabajos totales que se generan"

#: of sklearn.model_selection._search.RandomizedSearchCV:90
msgid "A str, giving an expression as a function of n_jobs, as in '2*n_jobs'"
msgstr "Una str, que da una expresión como función de n_jobs, como en '2*n_jobs'"

#: of sklearn.model_selection._search.RandomizedSearchCV:110
msgid "**cv**"
msgstr "**cv**"

#: of
msgid "int, cross-validation generator or an iterable, default=None"
msgstr "int, generador de validación cruzada o un iterable, por defecto=None"

#: of sklearn.model_selection._search.RandomizedSearchCV:94
msgid "Determines the cross-validation splitting strategy. Possible inputs for cv are:"
msgstr "Determina la estrategia de separación de la validación cruzada. Las entradas posibles para cv son:"

#: of sklearn.model_selection._search.RandomizedSearchCV:97
msgid "None, to use the default 5-fold cross validation,"
msgstr "None, para utilizar la validación cruzada de 5 pliegues por defecto,"

#: of sklearn.model_selection._search.RandomizedSearchCV:98
msgid "integer, to specify the number of folds in a `(Stratified)KFold`,"
msgstr "entero, para especificar el número de pliegues en un `(Stratified)KFold`,"

#: of sklearn.model_selection._search.RandomizedSearchCV:99
msgid ":term:`CV splitter`,"
msgstr ":term:`CV splitter`,"

#: of sklearn.model_selection._search.RandomizedSearchCV:100
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr "Un iterable que produce (train, test) se separa como arreglos de índices."

#: of sklearn.model_selection._search.RandomizedSearchCV:102
msgid "For integer/None inputs, if the estimator is a classifier and ``y`` is either binary or multiclass, :class:`StratifiedKFold` is used. In all other cases, :class:`KFold` is used."
msgstr "Para entradas enteras/nulas, si el estimador es un clasificador y ``y`` es binario o multiclase, se utiliza :class:`StratifiedKFold`. En todos los demás casos, se utiliza :class:`KFold`."

#: of sklearn.model_selection._search.RandomizedSearchCV:106
msgid "Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr "Consulte la :ref:`Guía del usuario <cross_validation>` para conocer las distintas estrategias de validación cruzada que pueden utilizarse aquí."

#: of sklearn.model_selection._search.RandomizedSearchCV:109
msgid "``cv`` default value if None changed from 3-fold to 5-fold."
msgstr "El valor por defecto es ``cv`` si no se cambia de 3 a 5 veces."

#: of sklearn.model_selection._search.RandomizedSearchCV:140
msgid "**refit**"
msgstr "**refit**"

#: of
msgid "bool, str, or callable, default=True"
msgstr "booleano, default=True"

#: of sklearn.model_selection._search.RandomizedSearchCV:113
msgid "Refit an estimator using the best found parameters on the whole dataset."
msgstr "Reajustar un estimador utilizando los mejores parámetros encontrados en todo el conjunto de datos."

#: of sklearn.model_selection._search.RandomizedSearchCV:116
msgid "For multiple metric evaluation, this needs to be a `str` denoting the scorer that would be used to find the best parameters for refitting the estimator at the end."
msgstr "Para la evaluación de métricas múltiples, debe ser una `str` que denote el calificador que se utilizaría para encontrar los mejores parámetros para reajustar el estimador al final."

#: of sklearn.model_selection._search.RandomizedSearchCV:120
msgid "Where there are considerations other than maximum score in choosing a best estimator, ``refit`` can be set to a function which returns the selected ``best_index_`` given the ``cv_results``. In that case, the ``best_estimator_`` and ``best_params_`` will be set according to the returned ``best_index_`` while the ``best_score_`` attribute will not be available."
msgstr "Cuando hay consideraciones distintas de la puntuación máxima en la elección de un mejor estimador, ``refit`` puede establecerse en una función que devuelva el ``best_index_`` seleccionado dado el ``cv_results``. En ese caso, el ``best_estimator_`` y ``best_params`` se establecerán de acuerdo con el ``best_index_`` devuelto, mientras que el atributo ``best_score_`` no estará disponible."

#: of sklearn.model_selection._search.RandomizedSearchCV:127
msgid "The refitted estimator is made available at the ``best_estimator_`` attribute and permits using ``predict`` directly on this ``RandomizedSearchCV`` instance."
msgstr "El estimador ajustado está disponible en el atributo ``best_estimator_`` y permite utilizar ``predict`` directamente en esta instancia de ``RandomizedSearchCV``."

#: of sklearn.model_selection._search.RandomizedSearchCV:131
msgid "Also for multiple metric evaluation, the attributes ``best_index_``, ``best_score_`` and ``best_params_`` will only be available if ``refit`` is set and all of them will be determined w.r.t this specific scorer."
msgstr "También para la evaluación de múltiples métricas, los atributos ``best_index_``, ``best_score_`` y ``best_params_`` sólo estarán disponibles si se establece ``refit`` y todos ellos se determinarán con este estimador específico."

#: of sklearn.model_selection._search.RandomizedSearchCV:136
msgid "See ``scoring`` parameter to know more about multiple metric evaluation."
msgstr "Vea el parámetro ``scoring`` para saber más sobre la evaluación de múltiples métricas."

#: of sklearn.model_selection._search.RandomizedSearchCV:139
msgid "Support for callable added."
msgstr "Se ha añadido soporte para callable."

#: of sklearn.model_selection._search.RandomizedSearchCV:143
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.model_selection._search.RandomizedSearchCV:143
msgid "Controls the verbosity: the higher, the more messages."
msgstr "Controla la verbosidad: cuanto más alta, más mensajes."

#: of sklearn.model_selection._search.RandomizedSearchCV:150
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, instancia RandomState o None, por defecto=None"

#: of sklearn.model_selection._search.RandomizedSearchCV:146
msgid "Pseudo random number generator state used for random uniform sampling from lists of possible values instead of scipy.stats distributions. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Estado del generador de números pseudoaleatorios utilizado para el muestreo uniforme aleatorio de las listas de valores posibles en lugar de las distribuciones de scipy.stats. Pase un int para una salida reproducible a través de múltiples llamadas a la función. Ver :term:`Glosario <random_state>`."

#: of sklearn.model_selection._search.RandomizedSearchCV:156
msgid "**error_score**"
msgstr "**error_score**"

#: of
msgid "'raise' or numeric, default=np.nan"
msgstr "'raise' o numérico, default=np.nan"

#: of sklearn.model_selection._search.RandomizedSearchCV:153
msgid "Value to assign to the score if an error occurs in estimator fitting. If set to 'raise', the error is raised. If a numeric value is given, FitFailedWarning is raised. This parameter does not affect the refit step, which will always raise the error."
msgstr "Valor a asignar a la puntuación si se produce un error en el ajuste del estimador. Si se establece como 'raise', el error se eleva. Si se da un valor numérico, se levanta FitFailedWarning. Este parámetro no afecta al paso de reajuste, que siempre elevará el error."

#: of sklearn.model_selection._search.RandomizedSearchCV:173
msgid "**return_train_score**"
msgstr "**return_train_score**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.model_selection._search.RandomizedSearchCV:159
msgid "If ``False``, the ``cv_results_`` attribute will not include training scores. Computing training scores is used to get insights on how different parameter settings impact the overfitting/underfitting trade-off. However computing the scores on the training set can be computationally expensive and is not strictly required to select the parameters that yield the best generalization performance."
msgstr "Si es ``False``, el atributo ``cv_results_`` no incluirá las puntuaciones de entrenamiento. El cálculo de las puntuaciones de entrenamiento se utiliza para obtener información sobre el impacto de los diferentes ajustes de los parámetros en el equilibrio entre sobreajuste e infraajuste. Sin embargo, calcular las puntuaciones en el conjunto de entrenamiento puede ser costoso desde el punto de vista informático y no es estrictamente necesario para seleccionar los parámetros que producen el mejor rendimiento de generalización."

#: of sklearn.model_selection._search.RandomizedSearchCV:169
msgid "Default value was changed from ``True`` to ``False``"
msgstr "El valor por defecto se ha cambiado de ``True`` a ``False``"

#: of sklearn.model_selection._search.RandomizedSearchCV
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.model_selection._search.RandomizedSearchCV:226
msgid "**cv_results_**"
msgstr "**cv_results_**"

#: of
msgid "dict of numpy (masked) ndarrays"
msgstr "dict de numpy (masked) ndarrays"

#: of sklearn.model_selection._search.RandomizedSearchCV:178
msgid "A dict with keys as column headers and values as columns, that can be imported into a pandas ``DataFrame``."
msgstr "Un dict con claves como cabeceras de columna y valores como columnas, que puede ser importado en un ``DataFrame`` de pandas."

#: of sklearn.model_selection._search.RandomizedSearchCV:181
msgid "For instance the below given table"
msgstr "Por ejemplo, la siguiente tabla"

#: of sklearn.model_selection._search.RandomizedSearchCV:184
msgid "param_kernel"
msgstr "param_kernel"

#: of sklearn.model_selection._search.RandomizedSearchCV:184
msgid "param_gamma"
msgstr "param_gamma"

#: of sklearn.model_selection._search.RandomizedSearchCV:184
msgid "split0_test_score"
msgstr "split0_test_score"

#: of sklearn.model_selection._search.RandomizedSearchCV:184
#: sklearn.model_selection._search.RandomizedSearchCV:186
#: sklearn.model_selection._search.RandomizedSearchCV:188
#: sklearn.model_selection._search.RandomizedSearchCV:190
msgid "..."
msgstr "..."

#: of sklearn.model_selection._search.RandomizedSearchCV:184
msgid "rank_test_score"
msgstr "rank_test_score"

#: of sklearn.model_selection._search.RandomizedSearchCV:186
#: sklearn.model_selection._search.RandomizedSearchCV:188
#: sklearn.model_selection._search.RandomizedSearchCV:190
msgid "'rbf'"
msgstr "'rbf'"

#: of sklearn.model_selection._search.RandomizedSearchCV:186
msgid "0.1"
msgstr "0.1"

#: of sklearn.model_selection._search.RandomizedSearchCV:186
msgid "0.80"
msgstr "0.80"

#: of sklearn.model_selection._search.RandomizedSearchCV:186
msgid "1"
msgstr "1"

#: of sklearn.model_selection._search.RandomizedSearchCV:188
msgid "0.2"
msgstr "0.2"

#: of sklearn.model_selection._search.RandomizedSearchCV:188
msgid "0.84"
msgstr "0.84"

#: of sklearn.model_selection._search.RandomizedSearchCV:188
msgid "3"
msgstr "3"

#: of sklearn.model_selection._search.RandomizedSearchCV:190
msgid "0.3"
msgstr "0.3"

#: of sklearn.model_selection._search.RandomizedSearchCV:190
msgid "0.70"
msgstr "0.70"

#: of sklearn.model_selection._search.RandomizedSearchCV:190
msgid "2"
msgstr "2"

#: of sklearn.model_selection._search.RandomizedSearchCV:193
msgid "will be represented by a ``cv_results_`` dict of::"
msgstr "será representado por un ``cv_results_`` dict de::"

#: of sklearn.model_selection._search.RandomizedSearchCV:215
msgid "NOTE"
msgstr "NOTA"

#: of sklearn.model_selection._search.RandomizedSearchCV:217
msgid "The key ``'params'`` is used to store a list of parameter settings dicts for all the parameter candidates."
msgstr "La clave ``'params`` se utiliza para almacenar una lista de dictos de configuración de parámetros para todos los candidatos a parámetros."

#: of sklearn.model_selection._search.RandomizedSearchCV:220
msgid "The ``mean_fit_time``, ``std_fit_time``, ``mean_score_time`` and ``std_score_time`` are all in seconds."
msgstr "El ``mean_fit_time``, ``std_fit_time``, ``mean_score_time`` y ``std_score_time`` están todos en segundos."

#: of sklearn.model_selection._search.RandomizedSearchCV:223
msgid "For multi-metric evaluation, the scores for all the scorers are available in the ``cv_results_`` dict at the keys ending with that scorer's name (``'_<scorer_name>'``) instead of ``'_score'`` shown above. ('split0_test_precision', 'mean_train_precision' etc.)"
msgstr "Para la evaluación multimétrica, las puntuaciones de todos los puntuadores están disponibles en el dictado ``cv_results_`` en las claves que terminan con el nombre de ese puntuador (``'_<scorer_name>'``) en lugar de ``'_score`` mostradas anteriormente. ('split0_test_precision', 'mean_train_precision' etc.)"

#: of sklearn.model_selection._search.RandomizedSearchCV:236
msgid "**best_estimator_**"
msgstr "**best_estimator_**"

#: of
msgid "estimator"
msgstr "estimador"

#: of sklearn.model_selection._search.RandomizedSearchCV:229
msgid "Estimator that was chosen by the search, i.e. estimator which gave highest score (or smallest loss if specified) on the left out data. Not available if ``refit=False``."
msgstr "Estimador que fue elegido por la búsqueda, es decir, el estimador que dio la mayor puntuación (o la menor pérdida si se especifica) en los datos dejados de lado. No está disponible si ``refit=False``."

#: of sklearn.model_selection._search.RandomizedSearchCV:233
msgid "For multi-metric evaluation, this attribute is present only if ``refit`` is specified."
msgstr "Para la evaluación multimétrica, este atributo sólo está presente si se especifica ``refit``."

#: of sklearn.model_selection._search.RandomizedSearchCV:236
msgid "See ``refit`` parameter for more information on allowed values."
msgstr "Ver el parámetro ``refit`` para más información sobre los valores permitidos."

#: of sklearn.model_selection._search.RandomizedSearchCV:244
msgid "**best_score_**"
msgstr "**best_score_**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.model_selection._search.RandomizedSearchCV:239
msgid "Mean cross-validated score of the best_estimator."
msgstr "Puntuación media de validación cruzada del mejor estimador."

#: of sklearn.model_selection._search.RandomizedSearchCV:241
#: sklearn.model_selection._search.RandomizedSearchCV:249
#: sklearn.model_selection._search.RandomizedSearchCV:260
msgid "For multi-metric evaluation, this is not available if ``refit`` is ``False``. See ``refit`` parameter for more information."
msgstr "Para la evaluación multimétrica, esto no está disponible si ``refit`` es ``False``. Para más información, consulte el parámetro ``refit``."

#: of sklearn.model_selection._search.RandomizedSearchCV:244
msgid "This attribute is not available if ``refit`` is a function."
msgstr "Este atributo no está disponible si ``refit`` es una función."

#: of sklearn.model_selection._search.RandomizedSearchCV:250
msgid "**best_params_**"
msgstr "**best_params_**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.model_selection._search.RandomizedSearchCV:247
msgid "Parameter setting that gave the best results on the hold out data."
msgstr "Ajuste del parámetro que dio los mejores resultados en los datos de retención."

#: of sklearn.model_selection._search.RandomizedSearchCV:261
msgid "**best_index_**"
msgstr "**best_index_**"

#: of sklearn.model_selection._search.RandomizedSearchCV:253
msgid "The index (of the ``cv_results_`` arrays) which corresponds to the best candidate parameter setting."
msgstr "El índice (de los arreglos ``cv_results_``) que corresponde al mejor ajuste de parámetros candidato."

#: of sklearn.model_selection._search.RandomizedSearchCV:256
msgid "The dict at ``search.cv_results_['params'][search.best_index_]`` gives the parameter setting for the best model, that gives the highest mean score (``search.best_score_``)."
msgstr "El dict en ``search.cv_results_['params'][search.best_index_]`` da la configuración de parámetros para el mejor modelo, que da la puntuación media más alta (``search.best_score_``)."

#: of sklearn.model_selection._search.RandomizedSearchCV:268
msgid "**scorer_**"
msgstr "**scorer_**"

#: of
msgid "function or a dict"
msgstr "function o a dict"

#: of sklearn.model_selection._search.RandomizedSearchCV:264
msgid "Scorer function used on the held out data to choose the best parameters for the model."
msgstr "Función de puntuación utilizada en los datos retenidos para elegir los mejores parámetros para el modelo."

#: of sklearn.model_selection._search.RandomizedSearchCV:267
msgid "For multi-metric evaluation, this attribute holds the validated ``scoring`` dict which maps the scorer key to the scorer callable."
msgstr "En el caso de la evaluación multimétrica, este atributo contiene la sentencia ``scoring``validada que asigna la clave de puntuación a la puntuación invocable."

#: of sklearn.model_selection._search.RandomizedSearchCV:271
msgid "**n_splits_**"
msgstr "**n_splits_**"

#: of sklearn.model_selection._search.RandomizedSearchCV:271
msgid "The number of cross-validation splits (folds/iterations)."
msgstr "El número de separaciones de validación cruzada (pliegues/iteraciones)."

#: of sklearn.model_selection._search.RandomizedSearchCV:278
msgid "**refit_time_**"
msgstr "**refit_time_**"

#: of sklearn.model_selection._search.RandomizedSearchCV:274
msgid "Seconds used for refitting the best model on the whole dataset."
msgstr "Segundos utilizados para reajustar el mejor modelo en todo el conjunto de datos."

#: of sklearn.model_selection._search.RandomizedSearchCV:276
msgid "This is present only if ``refit`` is not False."
msgstr "Esto está presente sólo si ``refit`` no es False."

#: of sklearn.model_selection._search.RandomizedSearchCV:284
msgid "**multimetric_**"
msgstr "**multimetric_**"

#: of
msgid "bool"
msgstr "bool"

#: of sklearn.model_selection._search.RandomizedSearchCV:281
msgid "Whether or not the scorers compute several metrics."
msgstr "Si los puntuadores calculan o no varias métricas."

#: of sklearn.model_selection._search.RandomizedSearchCV:289
msgid ":obj:`GridSearchCV`"
msgstr ":obj:`GridSearchCV`"

#: of sklearn.model_selection._search.RandomizedSearchCV:290
msgid "Does exhaustive search over a grid of parameters."
msgstr "Realiza una búsqueda exhaustiva sobre una parrilla de parámetros."

#: of sklearn.model_selection._search.RandomizedSearchCV:291
msgid ":obj:`ParameterSampler`"
msgstr ":obj:`ParameterSampler`"

#: of sklearn.model_selection._search.RandomizedSearchCV:292
msgid "A generator over parameter settings, constructed from param_distributions."
msgstr "Un generador sobre los ajustes de los parámetros, construido a partir de param_distributions."

#: of sklearn.model_selection._search.RandomizedSearchCV:296
msgid "Notes"
msgstr "Notas"

#: of sklearn.model_selection._search.RandomizedSearchCV:297
msgid "The parameters selected are those that maximize the score of the held-out data, according to the scoring parameter."
msgstr "Los parámetros seleccionados son los que maximizan la puntuación de los datos retenidos, según el parámetro de puntuación."

#: of sklearn.model_selection._search.RandomizedSearchCV:300
msgid "If `n_jobs` was set to a value higher than one, the data is copied for each parameter setting(and not `n_jobs` times). This is done for efficiency reasons if individual jobs take very little time, but may raise errors if the dataset is large and not enough memory is available.  A workaround in this case is to set `pre_dispatch`. Then, the memory is copied only `pre_dispatch` many times. A reasonable value for `pre_dispatch` is `2 * n_jobs`."
msgstr "Si `n_jobs` se estableció en un valor superior a uno, los datos se copian para cada ajuste de parámetros (y no `n_jobs` veces). Esto se hace por razones de eficiencia si los trabajos individuales llevan muy poco tiempo, pero puede dar lugar a errores si el conjunto de datos es grande y no hay suficiente memoria disponible.  Una solución en este caso es establecer `pre_dispatch`. Entonces, la memoria se copia sólo `pre_dispatch` muchas veces. Un valor razonable para `pre_dispatch` es `2 * n_jobs`."

#: of sklearn.model_selection._search.RandomizedSearchCV:310
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.model_selection._search.RandomizedSearchCV:326
msgid "Methods"
msgstr "Métodos"

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`decision_function <sklearn.model_selection.RandomizedSearchCV.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.model_selection.RandomizedSearchCV.decision_function>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call decision_function on the estimator with the best found parameters."
msgstr "Llamar a función_decisión en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`fit <sklearn.model_selection.RandomizedSearchCV.fit>`\\"
msgstr ":obj:`fit <sklearn.model_selection.RandomizedSearchCV.fit>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.fit:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Run fit with all sets of parameters."
msgstr "Ejecutar el ajuste con todos los conjuntos de parámetros."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`get_params <sklearn.model_selection.RandomizedSearchCV.get_params>`\\"
msgstr ":obj:`get_params <sklearn.model_selection.RandomizedSearchCV.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtener los parámetros para este estimador."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.model_selection.RandomizedSearchCV.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.model_selection.RandomizedSearchCV.inverse_transform>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call inverse_transform on the estimator with the best found params."
msgstr "Llamar a inverse_transform en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`predict <sklearn.model_selection.RandomizedSearchCV.predict>`\\"
msgstr ":obj:`predict <sklearn.model_selection.RandomizedSearchCV.predict>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.predict:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call predict on the estimator with the best found parameters."
msgstr "Llamar a predict en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`predict_log_proba <sklearn.model_selection.RandomizedSearchCV.predict_log_proba>`\\"
msgstr ":obj:`predict_log_proba <sklearn.model_selection.RandomizedSearchCV.predict_log_proba>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.predict_log_proba:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call predict_log_proba on the estimator with the best found parameters."
msgstr "Llamar a predict_log_proba en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.model_selection.RandomizedSearchCV.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.model_selection.RandomizedSearchCV.predict_proba>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.predict_proba:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call predict_proba on the estimator with the best found parameters."
msgstr "Llamar a predict_proba en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`score <sklearn.model_selection.RandomizedSearchCV.score>`\\"
msgstr ":obj:`score <sklearn.model_selection.RandomizedSearchCV.score>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.score:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Returns the score on the given data, if the estimator has been refit."
msgstr "Devuelve la puntuación en los datos dados, si el estimador ha sido ajustado."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`score_samples <sklearn.model_selection.RandomizedSearchCV.score_samples>`\\"
msgstr ":obj:`score_samples <sklearn.model_selection.RandomizedSearchCV.score_samples>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call score_samples on the estimator with the best found parameters."
msgstr "Establece los paráLlamar a score_samples en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`set_params <sklearn.model_selection.RandomizedSearchCV.set_params>`\\"
msgstr ":obj:`set_params <sklearn.model_selection.RandomizedSearchCV.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid ":obj:`transform <sklearn.model_selection.RandomizedSearchCV.transform>`\\"
msgstr ":obj:`transform <sklearn.model_selection.RandomizedSearchCV.transform>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.transform:2
#: sklearn.model_selection._search.RandomizedSearchCV:340:<autosummary>:1
msgid "Call transform on the estimator with the best found parameters."
msgstr "Llama a la transformación del estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``decision_function``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``decision_function``."

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:23
#: sklearn.model_selection._search.BaseSearchCV.fit:9
#: sklearn.model_selection._search.BaseSearchCV.predict:23
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba:23
#: sklearn.model_selection._search.BaseSearchCV.predict_proba:23
#: sklearn.model_selection._search.BaseSearchCV.score:11
#: sklearn.model_selection._search.BaseSearchCV.score_samples:13
#: sklearn.model_selection._search.BaseSearchCV.transform:23
msgid "**X**"
msgstr "**X**"

#: of
msgid "indexable, length n_samples"
msgstr "indexable, longitud n_samples"

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:10
#: sklearn.model_selection._search.BaseSearchCV.inverse_transform:10
#: sklearn.model_selection._search.BaseSearchCV.predict:10
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba:10
#: sklearn.model_selection._search.BaseSearchCV.predict_proba:10
#: sklearn.model_selection._search.BaseSearchCV.transform:10
msgid "Must fulfill the input assumptions of the underlying estimator."
msgstr "Debe cumplir los supuestos de entrada del estimador subyacente."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "tipo de arreglo de forma (n_samples, n_features)"

#: of sklearn.model_selection._search.BaseSearchCV.fit:8
msgid "Training vector, where n_samples is the number of samples and n_features is the number of features."
msgstr "Vector de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.model_selection._search.BaseSearchCV.fit:13
#: sklearn.model_selection._search.BaseSearchCV.score:15
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples, n_output)             or (n_samples,), default=None"
msgstr "arreglo de forma (n_samples, n_output)             o (n_samples,), default=None"

#: of sklearn.model_selection._search.BaseSearchCV.fit:12
#: sklearn.model_selection._search.BaseSearchCV.score:14
msgid "Target relative to X for classification or regression; None for unsupervised learning."
msgstr "Objetivo relativo a X para la clasificación o la regresión; ninguno para el aprendizaje no supervisado."

#: of sklearn.model_selection._search.BaseSearchCV.fit:18
msgid "**groups**"
msgstr "**groups**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "arreglo tipo de forma (n_samples,), default=None"

#: of sklearn.model_selection._search.BaseSearchCV.fit:16
msgid "Group labels for the samples used while splitting the dataset into train/test set. Only used in conjunction with a \"Group\" :term:`cv` instance (e.g., :class:`~sklearn.model_selection.GroupKFold`)."
msgstr "Etiquetas de grupo para las muestras utilizadas al separar el conjunto de datos en conjunto de entrenamiento/prueba. Sólo se utiliza junto con una instancia de \"Grupo\" :term:`cv` (por ejemplo, :class:`~sklearn.model_selection.GroupKFold`)."

#: of sklearn.model_selection._search.BaseSearchCV.fit:33
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict of str -> object"
msgstr "dict de str -> object"

#: of sklearn.model_selection._search.BaseSearchCV.fit:21
msgid "Parameters passed to the ``fit`` method of the estimator"
msgstr "Parámetros pasados al método ``fit`` del estimador"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.model_selection._search.BaseSearchCV.score
#: sklearn.model_selection._search.BaseSearchCV.score_samples
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Los nombres de los parámetros se asignan a sus valores."

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:4
msgid "Only available if the underlying estimator implements ``inverse_transform`` and ``refit=True``."
msgstr "Sólo está disponible si el estimador subyacente implementa ``inverse_transform`` y ``refit=True``."

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:23
msgid "**Xt**"
msgstr "**Xt**"

#: of sklearn.model_selection._search.BaseSearchCV.predict:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``predict``."

#: of sklearn.model_selection._search.BaseSearchCV.predict_log_proba:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict_log_proba``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``predict_log_proba``."

#: of sklearn.model_selection._search.BaseSearchCV.predict_proba:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict_proba``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``predict_proba``."

#: of sklearn.model_selection._search.BaseSearchCV.score:4
msgid "This uses the score defined by ``scoring`` where provided, and the ``best_estimator_.score`` method otherwise."
msgstr "Se utiliza la puntuación definida por ``scoring`` cuando se proporciona, y el método ``best_estimator_.score`` en caso contrario."

#: of sklearn.model_selection._search.BaseSearchCV.score:10
msgid "Input data, where n_samples is the number of samples and n_features is the number of features."
msgstr "Datos de entrada, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.model_selection._search.BaseSearchCV.score:31
msgid "**score**"
msgstr "**score**"

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``score_samples``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``score_samples``."

#: of
msgid "iterable"
msgstr "iterable"

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:12
msgid "Data to predict on. Must fulfill input requirements of the underlying estimator."
msgstr "Datos para predecir. Deben cumplir los requisitos de entrada del estimador subyacente."

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:29
msgid "**y_score**"
msgstr "**y_score**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como con objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.model_selection._search.BaseSearchCV.transform:4
msgid "Only available if the underlying estimator supports ``transform`` and ``refit=True``."
msgstr "Sólo está disponible si el estimador subyacente soporta ``transform`` y ``refit=True``."

#: ../modules/generated/sklearn.model_selection.RandomizedSearchCV.examples:4
msgid "Examples using ``sklearn.model_selection.RandomizedSearchCV``"
msgstr "Ejemplos usando ``sklearn.model_selection.RandomizedSearchCV``"

#: ../modules/generated/sklearn.model_selection.RandomizedSearchCV.examples:15
#: ../modules/generated/sklearn.model_selection.RandomizedSearchCV.examples:23
msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"
msgstr ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_randomized_search.py`"
#~ msgstr ""

