msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-05 18:16\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.svm.NuSVC.po\n"
"X-Crowdin-File-ID: 5118\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.svm.NuSVC.rst:2
msgid ":mod:`sklearn.svm`.NuSVC"
msgstr ":mod:`sklearn.svm`.NuSVC"

#: of sklearn.svm._classes.NuSVC:2
msgid "Nu-Support Vector Classification."
msgstr "Clasificación de Vector Nu-Apoyo."

#: of sklearn.svm._classes.NuSVC:4
msgid "Similar to SVC but uses a parameter to control the number of support vectors."
msgstr "Similar al SVC pero usa un parámetro para controlar el número de vectores de soporte."

#: of sklearn.svm._classes.NuSVC:7
msgid "The implementation is based on libsvm."
msgstr "La implementación se basa en libsvm."

#: of sklearn.svm._classes.NuSVC:9
msgid "Read more in the :ref:`User Guide <svm_classification>`."
msgstr "Más información en el :ref:`Manual de usuario <svm_classification>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.svm.NuSVC.predict_log_proba sklearn.svm.NuSVC.predict_proba
#: sklearn.svm._base.BaseLibSVM.fit sklearn.svm._base.BaseSVC.decision_function
#: sklearn.svm._base.BaseSVC.predict sklearn.svm._classes.NuSVC
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.svm._classes.NuSVC:16
msgid "**nu**"
msgstr "**nu**"

#: of
msgid "float, default=0.5"
msgstr "flotante, default=0.5"

#: of sklearn.svm._classes.NuSVC:14
msgid "An upper bound on the fraction of margin errors (see :ref:`User Guide <nu_svc>`) and a lower bound of the fraction of support vectors. Should be in the interval (0, 1]."
msgstr "Un límite superior en la fracción de errores de margen (ver el :ref:`Manual de Usuario <nu_svc>`) y un límite inferior en la fracción de vectores de soporte. Debe estar en el intervalo (0, 1]."

#: of sklearn.svm._classes.NuSVC:23
msgid "**kernel**"
msgstr "**kernel**"

#: of
msgid "{'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}, default='rbf'"
msgstr "{'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}, default='rbf'"

#: of sklearn.svm._classes.NuSVC:19
msgid "Specifies the kernel type to be used in the algorithm. It must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or a callable. If none is given, 'rbf' will be used. If a callable is given it is used to precompute the kernel matrix."
msgstr "Especifica el tipo de núcleo a ser usado en el algoritmo. Debe ser uno de 'linear', 'poly', 'rby', 'sigmoid', 'precomputed' o un invocable. Si no se da ninguna, se utilizará 'rbf'. Si un invocable es dado se utilizara para precalcular la matriz del núcleo."

#: of sklearn.svm._classes.NuSVC:27
msgid "**degree**"
msgstr "**degree**"

#: of
msgid "int, default=3"
msgstr "entero, default=3"

#: of sklearn.svm._classes.NuSVC:26
msgid "Degree of the polynomial kernel function ('poly'). Ignored by all other kernels."
msgstr "Grado de la función de núcleo polinómico ('poly'). Ignorado por todos los otros núcleos."

#: of sklearn.svm._classes.NuSVC:37
msgid "**gamma**"
msgstr "**gamma**"

#: of
msgid "{'scale', 'auto'} or float, default='scale'"
msgstr "{'scale', 'auto'} o flotante, default='scale'"

#: of sklearn.svm._classes.NuSVC:30
msgid "Kernel coefficient for 'rbf', 'poly' and 'sigmoid'."
msgstr "Coeficiente de núcleo para 'rbf', 'poly' y 'sigmoid'."

#: of sklearn.svm._classes.NuSVC:32
msgid "if ``gamma='scale'`` (default) is passed then it uses 1 / (n_features * X.var()) as value of gamma,"
msgstr "si se pasa ``gamma='scale'`` (valor predeterminado), entonces se usa 1 / (n_features * X.var()) como valor de gamma,"

#: of sklearn.svm._classes.NuSVC:34
msgid "if 'auto', uses 1 / n_features."
msgstr "si 'auto', utiliza 1 / n_features."

#: of sklearn.svm._classes.NuSVC:36
msgid "The default value of ``gamma`` changed from 'auto' to 'scale'."
msgstr "El valor predeterminado de ``gamma`` cambió de 'auto' a 'scale'."

#: of sklearn.svm._classes.NuSVC:41
msgid "**coef0**"
msgstr "**coef0**"

#: of
msgid "float, default=0.0"
msgstr "flotante, default=0.0"

#: of sklearn.svm._classes.NuSVC:40
msgid "Independent term in kernel function. It is only significant in 'poly' and 'sigmoid'."
msgstr "Término independiente en la función del núcleo. Sólo es significativo en 'poly' y 'sigmoid'."

#: of sklearn.svm._classes.NuSVC:45
msgid "**shrinking**"
msgstr "**shrinking**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.svm._classes.NuSVC:44
msgid "Whether to use the shrinking heuristic. See the :ref:`User Guide <shrinking_svm>`."
msgstr "Si se usa o no la heurística de reducción. Vea el :ref:`Manual de usuario <shrinking_svm>`."

#: of sklearn.svm._classes.NuSVC:51
msgid "**probability**"
msgstr "**probability**"

#: of
msgid "bool, default=False"
msgstr "booleano, default=False"

#: of sklearn.svm._classes.NuSVC:48
msgid "Whether to enable probability estimates. This must be enabled prior to calling `fit`, will slow down that method as it internally uses 5-fold cross-validation, and `predict_proba` may be inconsistent with `predict`. Read more in the :ref:`User Guide <scores_probabilities>`."
msgstr "Si se habilitan los estimados de probabilidad. Esto se debe habilitar antes de llamar `fit`, ralentizará ese método ya que internamente utiliza la validación cruzada de 5 pliegues, y `predict_proba` podría ser inconsistente con `predict`. Lea más en el :ref:`Manual de Usuario <scores_probabilities>`."

#: of sklearn.svm._classes.NuSVC:54
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-3"
msgstr "flotante, default=1e-3"

#: of sklearn.svm._classes.NuSVC:54
msgid "Tolerance for stopping criterion."
msgstr "Tolerancia para el criterio de parada."

#: of sklearn.svm._classes.NuSVC:57
msgid "**cache_size**"
msgstr "**cache_size**"

#: of
msgid "float, default=200"
msgstr "flotante, default=200"

#: of sklearn.svm._classes.NuSVC:57
msgid "Specify the size of the kernel cache (in MB)."
msgstr "Específica el tamaño del caché del núcleo (en MB)."

#: of sklearn.svm._classes.NuSVC:64
msgid "**class_weight**"
msgstr "**class_weight**"

#: of
msgid "{dict, 'balanced'}, default=None"
msgstr "{dict, 'balanced'}, default=None"

#: of sklearn.svm._classes.NuSVC:60
msgid "Set the parameter C of class i to class_weight[i]*C for SVC. If not given, all classes are supposed to have weight one. The \"balanced\" mode uses the values of y to automatically adjust weights inversely proportional to class frequencies as ``n_samples / (n_classes * np.bincount(y))``"
msgstr "Establece el parámetro C de la clase i a class_weight[i]*C para SVC. Si no es dado, todas las clases se suponen que tienen peso uno. El modo \"balanced\" utiliza los valores de y para ajustar automáticamente los ponderados inversamente proporcionales a las frecuencias de clase como ``n_samples / (n_classes * np.bincount(y))``"

#: of sklearn.svm._classes.NuSVC:69
msgid "**verbose**"
msgstr "**verbose**"

#: of sklearn.svm._classes.NuSVC:67
msgid "Enable verbose output. Note that this setting takes advantage of a per-process runtime setting in libsvm that, if enabled, may not work properly in a multithreaded context."
msgstr "Activar salida detallada. Tenga en cuenta que esta configuración toma ventaja de una configuración por proceso en el tiempo de ejecución en libsvm que, si está habilitada, puede no funcionar correctamente en un contexto multihilo."

#: of sklearn.svm._classes.NuSVC:72
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=-1"
msgstr "int, default=-1"

#: of sklearn.svm._classes.NuSVC:72
msgid "Hard limit on iterations within solver, or -1 for no limit."
msgstr "Limite fuerte en iteraciones dentro del solucionador, o -1 para ningún límite."

#: of sklearn.svm._classes.NuSVC:89
msgid "**decision_function_shape**"
msgstr "**decision_function_shape**"

#: of
msgid "{'ovo', 'ovr'}, default='ovr'"
msgstr "{'ovo', 'ovr'}, default='ovr'"

#: of sklearn.svm._classes.NuSVC:75
msgid "Whether to return a one-vs-rest ('ovr') decision function of shape (n_samples, n_classes) as all other classifiers, or the original one-vs-one ('ovo') decision function of libsvm which has shape (n_samples, n_classes * (n_classes - 1) / 2). However, one-vs-one ('ovo') is always used as multi-class strategy. The parameter is ignored for binary classification."
msgstr "Devolver o no una función de decisión uno contra el resto ('ovr') de la forma (n_samples, n_classes) como todos los demás clasificadores, o la función original uno contra uno ('ovo') de la función de decisión de libsvm que tiene forma (n_samples, n_classes * (n_classes - 1) / 2). Sin embargo, uno contra uno ('ovo') siempre se utiliza como estrategia de multiclase. El parámetro se ignora para la clasificación binaria."

#: of sklearn.svm._classes.NuSVC:82
msgid "decision_function_shape is 'ovr' by default."
msgstr "decision_function_shape es 'ovr' por defecto."

#: of sklearn.svm._classes.NuSVC:85
msgid "*decision_function_shape='ovr'* is recommended."
msgstr "*decision_function_shape='ovr'* es recomendado."

#: of sklearn.svm._classes.NuSVC:88
msgid "Deprecated *decision_function_shape='ovo' and None*."
msgstr "*decision_function_shape='ovo' and None* se ha hecho obsoleto."

#: of sklearn.svm._classes.NuSVC:98
msgid "**break_ties**"
msgstr "**break_ties**"

#: of sklearn.svm._classes.NuSVC:92
msgid "If true, ``decision_function_shape='ovr'``, and number of classes > 2, :term:`predict` will break ties according to the confidence values of :term:`decision_function`; otherwise the first class among the tied classes is returned. Please note that breaking ties comes at a relatively high computational cost compared to a simple predict."
msgstr "Si es verdadero, ``decision_function_shape='ovr'``, y el número de clases > 2, :term:`predict` romperá vínculos de acuerdo a los valores de confianza de :term:`decision_function`; de lo contrario se devuelve la primera clase entre las clases enlazadas. Por favor note que romper enlaces tiene un costo computacional relativamente alto comparado a una predicción simple."

#: of sklearn.svm._classes.NuSVC:107
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, instancia RandomState o None, default=None"

#: of sklearn.svm._classes.NuSVC:101
msgid "Controls the pseudo random number generation for shuffling the data for probability estimates. Ignored when `probability` is False. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Controla la generación de números pseudo-aleatorios para barajear los datos para estimados de probabilidad. Ignorado cuando `probability` es Falso. Pase un int para salida reproducible a través de múltiples llamadas de función. Vea :term:`Glosario <random_state>`."

#: of sklearn.svm._classes.NuSVC
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.svm._classes.NuSVC:113
msgid "**class_weight_**"
msgstr "**class_weight_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray of shape (n_classes,)"

#: of sklearn.svm._classes.NuSVC:112
msgid "Multipliers of parameter C of each class. Computed based on the ``class_weight`` parameter."
msgstr "Multiplicadores del parámetro C de cada clase. Calculado basado en el parámetro ``class_weight``."

#: of sklearn.svm._classes.NuSVC:116
msgid "**classes_**"
msgstr "**classes_**"

#: of sklearn.svm._classes.NuSVC:116
msgid "The unique classes labels."
msgstr "Etiquetas de clase únicas."

#: of sklearn.svm._classes.NuSVC:123
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (n_classes * (n_classes -1) / 2, n_features)"
msgstr "ndarray de forma (n_classes * (n_classes -1) / 2, n_features)"

#: of sklearn.svm._classes.NuSVC:119
msgid "Weights assigned to the features (coefficients in the primal problem). This is only available in the case of a linear kernel."
msgstr "Ponderados asignados a las características (coeficientes en el problema primario). Esto solo está disponible en el caso de un núcleo lineal."

#: of sklearn.svm._classes.NuSVC:122
msgid "`coef_` is readonly property derived from `dual_coef_` and `support_vectors_`."
msgstr "`coef_` es propiedad de solo lectura derivada de `dual_coef_` y `support_vectors_`."

#: of sklearn.svm._classes.NuSVC:132
msgid "**dual_coef_**"
msgstr "**dual_coef_**"

#: of
msgid "ndarray of shape (n_classes - 1, n_SV)"
msgstr "ndarray de forma (n_classes - 1, n_SV)"

#: of sklearn.svm._classes.NuSVC:126
msgid "Dual coefficients of the support vector in the decision function (see :ref:`sgd_mathematical_formulation`), multiplied by their targets. For multiclass, coefficient for all 1-vs-1 classifiers. The layout of the coefficients in the multiclass case is somewhat non-trivial. See the :ref:`multi-class section of the User Guide <svm_multi_class>` for details."
msgstr "Coeficientes duales del vector de apoyo en la función de decisión (vea :ref:`sgd_mathematical_formulation`), multiplicado por sus objetivos. Para la multiclase, coeficiente para todos los clasificadores 1-vs-1. El diseño de los coeficientes en el caso multiclase es algo no-trivial. Vea la :ref:`sección multiclase del Manual de Usuario <svm_multi_class>` para más detalles."

#: of sklearn.svm._classes.NuSVC:135 sklearn.svm._classes.NuSVC:150
msgid "**fit_status_**"
msgstr "**fit_status_**"

#: of
msgid "int"
msgstr "entero"

#: of sklearn.svm._classes.NuSVC:135 sklearn.svm._classes.NuSVC:150
msgid "0 if correctly fitted, 1 if the algorithm did not converge."
msgstr "0 si se ajusta correctamente, 1 si el algoritmo no converge."

#: of sklearn.svm._classes.NuSVC:138
msgid "**intercept_**"
msgstr "**intercept_**"

#: of
msgid "ndarray of shape (n_classes * (n_classes - 1) / 2,)"
msgstr "ndarray de forma (n_classes * (n_classes - 1) / 2,)"

#: of sklearn.svm._classes.NuSVC:138
msgid "Constants in decision function."
msgstr "Constantes en la función de decisión."

#: of sklearn.svm._classes.NuSVC:141
msgid "**support_**"
msgstr "**support_**"

#: of
msgid "ndarray of shape (n_SV,)"
msgstr "ndarray de forma (n_SV,)"

#: of sklearn.svm._classes.NuSVC:141
msgid "Indices of support vectors."
msgstr "Indices de vectores de apoyo."

#: of sklearn.svm._classes.NuSVC:144
msgid "**support_vectors_**"
msgstr "**support_vectors_**"

#: of
msgid "ndarray of shape (n_SV, n_features)"
msgstr "ndarray de forma (n_SV, n_features)"

#: of sklearn.svm._classes.NuSVC:144
msgid "Support vectors."
msgstr "Vectores de apoyo."

#: of sklearn.svm._classes.NuSVC:147
msgid "**n_support_**"
msgstr "**n_support_**"

#: of
msgid "ndarray of shape (n_classes,), dtype=int32"
msgstr "ndarray de forma (n_classes,), dtype=int32"

#: of sklearn.svm._classes.NuSVC:147
msgid "Number of support vectors for each class."
msgstr "Número de vectores de soporte para cada clase."

#: of sklearn.svm._classes.NuSVC:153
msgid "**probA_**"
msgstr "**probA_**"

#: of sklearn.svm._classes.NuSVC:163
msgid "**probB_**"
msgstr "**probB_**"

#: of sklearn.svm._classes.NuSVC:156
msgid "If `probability=True`, it corresponds to the parameters learned in Platt scaling to produce probability estimates from decision values. If `probability=False`, it's an empty array. Platt scaling uses the logistic function ``1 / (1 + exp(decision_value * probA_ + probB_))`` where ``probA_`` and ``probB_`` are learned from the dataset [R9709ce4a60d3-2]_. For more information on the multiclass case and training procedure see section 8 of [R9709ce4a60d3-1]_."
msgstr "Si `probability=True`, corresponde a los parámetros aprendidos en el escalado de Platt para producir estimados de probabilidad de los valores de decisión. Si `probability=False`, es un arreglo vacio. El escalado de Platt utiliza la función logistica ``1 / (1 + exp(decision_value * probA_ + probB_))`` donde ``probA_`` y ``probB_`` son aprendidos del conjunto de datos [R9709ce4a60d3-2]_. Para más información en el caso multiclase y el procedimiento de entrenamiento vea la sección 8 de [R9709ce4a60d3-1]_."

#: of sklearn.svm._classes.NuSVC:169
msgid "**shape_fit_**"
msgstr "**shape_fit_**"

#: of
msgid "tuple of int of shape (n_dimensions_of_X,)"
msgstr "tupla de int de la forma (n_dimensions_of_X,)"

#: of sklearn.svm._classes.NuSVC:166
msgid "Array dimensions of training vector ``X``."
msgstr "Dimensiones del arreglo del vector de entrenamiento ``X``."

#: of sklearn.svm._classes.NuSVC:174
msgid ":obj:`SVC`"
msgstr ":obj:`SVC`"

#: of sklearn.svm._classes.NuSVC:175
msgid "Support Vector Machine for classification using libsvm."
msgstr "Maquina de Vectores de Soporte para clasificación usando libsvm."

#: of sklearn.svm._classes.NuSVC:176
msgid ":obj:`LinearSVC`"
msgstr ":obj:`LinearSVC`"

#: of sklearn.svm._classes.NuSVC:177
msgid "Scalable linear Support Vector Machine for classification using liblinear."
msgstr "Maquina de Vectores de Soporte escalable lineal para clasificación usando liblinear."

#: of sklearn.svm._classes.NuSVC:182
msgid "References"
msgstr "Referencias"

#: of sklearn.svm._classes.NuSVC:183
msgid "`LIBSVM: A Library for Support Vector Machines <http://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf>`_"
msgstr "`LIBSVM: A Library for Support Vector Machines <http://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf>`_"

#: of sklearn.svm._classes.NuSVC:186
msgid "`Platt, John (1999). \"Probabilistic outputs for support vector machines and comparison to regularizedlikelihood methods.\" <http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.1639>`_"
msgstr "`Platt, John (1999). \"Probabilistic outputs for support vector machines and comparison to regularizedlikelihood methods.\" <http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.1639>`_"

#: of sklearn.svm._classes.NuSVC:192
msgid "[R9709ce4a60d3-1]_, [R9709ce4a60d3-2]_"
msgstr "[R9709ce4a60d3-1]_, [R9709ce4a60d3-2]_"

#: of sklearn.svm._classes.NuSVC:195
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.svm._classes.NuSVC:209
msgid "Methods"
msgstr "Métodos"

#: of sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid ":obj:`decision_function <sklearn.svm.NuSVC.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.svm.NuSVC.decision_function>`\\"

#: of sklearn.svm._base.BaseSVC.decision_function:2
#: sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid "Evaluates the decision function for the samples in X."
msgstr "Evalúa la función de decisión para las muestras en X."

#: of sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid ":obj:`fit <sklearn.svm.NuSVC.fit>`\\"
msgstr ":obj:`fit <sklearn.svm.NuSVC.fit>`\\"

#: of sklearn.svm._base.BaseLibSVM.fit:2
#: sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid "Fit the SVM model according to the given training data."
msgstr "Ajusta el modelo SVM de acuerdo a los datos de entrenamiento dados."

#: of sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid ":obj:`get_params <sklearn.svm.NuSVC.get_params>`\\"
msgstr ":obj:`get_params<sklearn.svm.NuSVC.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid ":obj:`predict <sklearn.svm.NuSVC.predict>`\\"
msgstr ":obj:`predict <sklearn.svm.NuSVC.predict>`\\"

#: of sklearn.svm._base.BaseSVC.predict:2
#: sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid "Perform classification on samples in X."
msgstr "Realiza la clasificación en las muestras en X."

#: of sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid ":obj:`score <sklearn.svm.NuSVC.score>`\\"
msgstr ":obj:`score <sklearn.svm.NuSVC.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos de prueba y las etiquetas dados."

#: of sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid ":obj:`set_params <sklearn.svm.NuSVC.set_params>`\\"
msgstr ":obj:`set_params <sklearn.svm.NuSVC.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.svm._classes.NuSVC:218:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.svm.NuSVC.predict_log_proba:11 sklearn.svm.NuSVC.predict_proba:11
#: sklearn.svm._base.BaseLibSVM.fit:11
#: sklearn.svm._base.BaseSVC.decision_function:8
#: sklearn.svm._base.BaseSVC.decision_function:23
#: sklearn.svm._base.BaseSVC.predict:10
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "tipo arreglo de forma (n_samples, n_features)"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.svm.NuSVC.predict_log_proba sklearn.svm.NuSVC.predict_proba
#: sklearn.svm._base.BaseLibSVM.fit sklearn.svm._base.BaseSVC.decision_function
#: sklearn.svm._base.BaseSVC.predict
msgid "Returns"
msgstr "Devuelve"

#: of
msgid "ndarray of shape (n_samples, n_classes * (n_classes-1) / 2)"
msgstr "ndarray de forma (n_samples, n_classes * (n_classes-1) / 2)"

#: of sklearn.svm._base.BaseSVC.decision_function:13
msgid "Returns the decision function of the sample for each class in the model. If decision_function_shape='ovr', the shape is (n_samples, n_classes)."
msgstr "Devuelve la función de decisión de la muestra para cada clase en el modelo. Si decision_function_shape='ovr', la forma es (n_samples, n_classes)."

#: of sklearn.svm.NuSVC.predict_log_proba:28 sklearn.svm.NuSVC.predict_proba:28
#: sklearn.svm._base.BaseLibSVM.fit:34
#: sklearn.svm._base.BaseSVC.decision_function:26
msgid "Notes"
msgstr "Notas"

#: of sklearn.svm._base.BaseSVC.decision_function:27
msgid "If decision_function_shape='ovo', the function values are proportional to the distance of the samples X to the separating hyperplane. If the exact distances are required, divide the function values by the norm of the weight vector (``coef_``). See also `this question <https://stats.stackexchange.com/questions/14876/ interpreting-distance-from-hyperplane-in-svm>`_ for further details. If decision_function_shape='ovr', the decision function is a monotonic transformation of ovo decision function."
msgstr "Si decision_function_shape='ovo', los valores de función son proporcionales a la distancia de las muestras X al hiperplano separador. Si las distancias exactas son requeridas, divida los valores de función por la norma del vector de ponderado (``coef_``). Vea también `esta pregunta <https://stats.stackexchange.com/questions/14876/ interpreting-distance-from-hyperplane-in-svm>`_ para más detalles. Si decision_function_shape='ovr', la función de decisión es una transformación monotónica de la función de decisión ovo."

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)                 or (n_samples, n_samples)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)                 o (n_samples, n_samples)"

#: of sklearn.svm._base.BaseLibSVM.fit:8
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of features. For kernel=\"precomputed\", the expected shape of X is (n_samples, n_samples)."
msgstr "Vectores de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características. Para kernel=\"precomputed\", la forma esperada de X es (n_samples, n_samples)."

#: of sklearn.base.ClassifierMixin.score:14 sklearn.svm._base.BaseLibSVM.fit:15
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like de forma (n_samples,)"

#: of sklearn.svm._base.BaseLibSVM.fit:14
msgid "Target values (class labels in classification, real numbers in regression)."
msgstr "Valores objetivo (etiquetas de clase en clasificación, números reales en regresión)."

#: of sklearn.base.ClassifierMixin.score:17 sklearn.svm._base.BaseLibSVM.fit:19
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.svm._base.BaseLibSVM.fit:18
msgid "Per-sample weights. Rescale C per sample. Higher weights force the classifier to put more emphasis on these points."
msgstr "Ponderados por muestra. Reescalado de C por muestra. Los ponderados más altos obligan al clasificador a poner más énfasis en estos puntos."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.svm._base.BaseLibSVM.fit:31
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.svm._base.BaseLibSVM.fit:35
msgid "If X and y are not C-ordered and contiguous arrays of np.float64 and X is not a scipy.sparse.csr_matrix, X and/or y may be copied."
msgstr "Si X y y no son arreglos contiguos y C-ordenados de np.float64 y X no es un scipy.sparse.csr_matrix, X y/o y pueden ser copiados."

#: of sklearn.svm._base.BaseLibSVM.fit:38
msgid "If X is a dense array, then the other methods will not support sparse matrices as input."
msgstr "Si X es un arreglo denso, entonces los otros métodos no soportaran matrices dispersas como entrada."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.svm._base.BaseSVC.predict:4
msgid "For an one-class model, +1 or -1 is returned."
msgstr "Para un modelo de una clase, se devuelve +1 o -1."

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features) or                 (n_samples_test, n_samples_train)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features) o                 (n_samples_test, n_samples_train)"

#: of sklearn.svm.NuSVC.predict_log_proba:10 sklearn.svm.NuSVC.predict_proba:10
#: sklearn.svm._base.BaseSVC.predict:9
msgid "For kernel=\"precomputed\", the expected shape of X is (n_samples_test, n_samples_train)."
msgstr "Para kernel=\"precomputed\", la forma esperada de X es (n_samples_test, n_samples_train)."

#: of sklearn.svm._base.BaseSVC.predict:26
msgid "**y_pred**"
msgstr "**y_pred**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.svm._base.BaseSVC.predict:15
msgid "Class labels for samples in X."
msgstr "Etiquetas de clase para las muestras en X."

#: of sklearn.svm.NuSVC.predict_log_proba:2
msgid "Compute log probabilities of possible outcomes for samples in X."
msgstr "Calcula las probabilidades log de los posibles resultados de las muestras en X."

#: of sklearn.svm.NuSVC.predict_log_proba:4 sklearn.svm.NuSVC.predict_proba:4
msgid "The model need to have probability information computed at training time: fit with attribute `probability` set to True."
msgstr "El modelo necesita tener información de probabilidad calculada en el tiempo de entrenamiento: ajustar con el atributo `probabilidad` establecido como True."

#: of
msgid "array-like of shape (n_samples, n_features) or                 (n_samples_test, n_samples_train)"
msgstr "arreglo tipo de forma (n_samples, n_features) o (n_samples_test, n_samples_train)"

#: of sklearn.svm.NuSVC.predict_log_proba:25 sklearn.svm.NuSVC.predict_proba:25
msgid "**T**"
msgstr "**T**"

#: of
msgid "ndarray of shape (n_samples, n_classes)"
msgstr "ndarray de forma (n_samples, n_classes)"

#: of sklearn.svm.NuSVC.predict_log_proba:16
msgid "Returns the log-probabilities of the sample for each class in the model. The columns correspond to the classes in sorted order, as they appear in the attribute :term:`classes_`."
msgstr "Devuelve las probabilidades logarítmica de las muestras para cada clase del modelo. Las columnas corresponden a las clases ordenadas, tal y como aparecen en el atributo :term:`classes_`."

#: of sklearn.svm.NuSVC.predict_log_proba:29 sklearn.svm.NuSVC.predict_proba:29
msgid "The probability model is created using cross validation, so the results can be slightly different than those obtained by predict. Also, it will produce meaningless results on very small datasets."
msgstr "El modelo de probabilidad es creado utilizando la validación cruzada, así que los resultados pueden ser ligeramente diferentes que aquellos obtenidos mediante predict. También producirá resultandos sin sentido en conjuntos de datos muy pequeños."

#: of sklearn.svm.NuSVC.predict_proba:2
msgid "Compute probabilities of possible outcomes for samples in X."
msgstr "Calcula las probabilidades de los posibles resultados de las muestras en X."

#: of sklearn.svm.NuSVC.predict_proba:16
msgid "Returns the probability of the sample for each class in the model. The columns correspond to the classes in sorted order, as they appear in the attribute :term:`classes_`."
msgstr "Devuelve la probabilidad de las muestras para cada clase del modelo. Las columnas corresponden a las clases ordenadas, tal y como aparecen en el atributo :term:`classes_`."

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto que es una métrica rigurosa, ya que se requiere para cada muestra que cada conjunto de etiquetas sea predicho correctamente."

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "tipo de arreglo de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas True para `X`."

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "flotante/flotador"

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: ../modules/generated/sklearn.svm.NuSVC.examples:4
msgid "Examples using ``sklearn.svm.NuSVC``"
msgstr "Ejemplos usando ``sklearn.svm.NuSVC``"

#: ../modules/generated/sklearn.svm.NuSVC.examples:15
#: ../modules/generated/sklearn.svm.NuSVC.examples:23
msgid ":ref:`sphx_glr_auto_examples_svm_plot_svm_nonlinear.py`"
msgstr ":ref:`sphx_glr_auto_examples_svm_plot_svm_nonlinear.py`"

