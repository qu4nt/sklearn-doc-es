msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-21 20:53\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.kernel_approximation.RBFSampler.po\n"
"X-Crowdin-File-ID: 4972\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.kernel_approximation.RBFSampler.rst:2
msgid ":mod:`sklearn.kernel_approximation`.RBFSampler"
msgstr ":mod:`sklearn.kernel_aproximation`.RBFSampler"

#: of sklearn.kernel_approximation.RBFSampler:2
msgid "Approximates feature map of an RBF kernel by Monte Carlo approximation of its Fourier transform."
msgstr "Aproxima el mapa de características de un núcleo RBF por la aproximación de Monte Carlo de su transformación Fourier."

#: of sklearn.kernel_approximation.RBFSampler:5
msgid "It implements a variant of Random Kitchen Sinks.[1]"
msgstr "Implementa una variante de Random Kitchen Sinks.[1]"

#: of sklearn.kernel_approximation.RBFSampler:7
msgid "Read more in the :ref:`User Guide <rbf_kernel_approx>`."
msgstr "Más información en el :ref:`Manual de usuario <rbf_kernel_approx>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.kernel_approximation.RBFSampler
#: sklearn.kernel_approximation.RBFSampler.fit
#: sklearn.kernel_approximation.RBFSampler.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.kernel_approximation.RBFSampler:12
msgid "**gamma**"
msgstr "**gamma**"

#: of
msgid "float, default=1.0"
msgstr "float, default=1.0"

#: of sklearn.kernel_approximation.RBFSampler:12
msgid "Parameter of RBF kernel: exp(-gamma * x^2)"
msgstr "Parámetro del núcleo RBF: exp(-gamma * x^2)"

#: of sklearn.kernel_approximation.RBFSampler:16
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.kernel_approximation.RBFSampler:15
msgid "Number of Monte Carlo samples per original feature. Equals the dimensionality of the computed feature space."
msgstr "Número de muestras de Monte Carlo por característica original. Igual a la dimensionalidad del espacio de características calculado."

#: of sklearn.kernel_approximation.RBFSampler:25
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, RandomState instance o None, default=None"

#: of sklearn.kernel_approximation.RBFSampler:19
msgid "Pseudo-random number generator to control the generation of the random weights and random offset when fitting the training data. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Generador de números pseudo-aleatorios para controlar la generación de los ponderados aleatorios y el desplazamiento aleatorio al ajustar los datos de entrenamiento. Pasé un int para una salida reproducible a través de múltiples llamadas de función. Vea :term:`Glosario <random_state>`."

#: of sklearn.kernel_approximation.RBFSampler
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.kernel_approximation.RBFSampler:31
msgid "**random_offset_**"
msgstr "**random_offset_**"

#: of
msgid "ndarray of shape (n_components,), dtype=float64"
msgstr "ndarray de forma (n_components,), dtype=float64"

#: of sklearn.kernel_approximation.RBFSampler:30
msgid "Random offset used to compute the projection in the `n_components` dimensions of the feature space."
msgstr "Desplazamiento aleatorio usado para calcular la proyección en las dimensiones `n_components` del espacio de características."

#: of sklearn.kernel_approximation.RBFSampler:39
msgid "**random_weights_**"
msgstr "**random_weights_**"

#: of
msgid "ndarray of shape (n_features, n_components),        dtype=float64"
msgstr "ndarray de forma (n_features, n_components), dtype=float64"

#: of sklearn.kernel_approximation.RBFSampler:34
msgid "Random projection directions drawn from the Fourier transform of the RBF kernel."
msgstr "Direcciones de proyección aleatoria extraídas de la transformación Fourier del núcleo RBF."

#: of sklearn.kernel_approximation.RBFSampler:42
msgid "Notes"
msgstr "Notas"

#: of sklearn.kernel_approximation.RBFSampler:43
msgid "See \"Random Features for Large-Scale Kernel Machines\" by A. Rahimi and Benjamin Recht."
msgstr "Véase \"Random Features for Large-Scale Kernel Machines\" por A. Rahimi y Benjamin Recht."

#: of sklearn.kernel_approximation.RBFSampler:46
msgid "[1] \"Weighted Sums of Random Kitchen Sinks: Replacing minimization with randomization in learning\" by A. Rahimi and Benjamin Recht. (https://people.eecs.berkeley.edu/~brecht/papers/08.rah.rec.nips.pdf)"
msgstr "[1] \"Weighted Sums of Random Kitchen Sinks: Replacing minimization with randomization in learning\" por A. Rahimi y Benjamin Recht. (https://people.eecs.berkeley.edu/~brecht/papers/08.rah.rec.nips.pdf)"

#: of sklearn.kernel_approximation.RBFSampler:53
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.kernel_approximation.RBFSampler:67
msgid "Methods"
msgstr "Métodos"

#: of sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid ":obj:`fit <sklearn.kernel_approximation.RBFSampler.fit>`\\"
msgstr ":obj:`fit <sklearn.kernel_approximation.RBFSampler.fit>`\\"

#: of sklearn.kernel_approximation.RBFSampler.fit:2
#: sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid "Fit the model with X."
msgstr "Ajusta el modelo con X."

#: of sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.kernel_approximation.RBFSampler.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.kernel_approximation.RBFSampler.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Lo ajusta a los datos, y después lo transforma."

#: of sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid ":obj:`get_params <sklearn.kernel_approximation.RBFSampler.get_params>`\\"
msgstr ":obj:`get_params <sklearn.kernel_approximation.RBFSampler.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid ":obj:`set_params <sklearn.kernel_approximation.RBFSampler.set_params>`\\"
msgstr ":obj:`set_params <sklearn.kernel_approximation.RBFSampler.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid ":obj:`transform <sklearn.kernel_approximation.RBFSampler.transform>`\\"
msgstr ":obj:`transform <sklearn.kernel_approximation.RBFSampler.transform>`\\"

#: of sklearn.kernel_approximation.RBFSampler.transform:2
#: sklearn.kernel_approximation.RBFSampler:75:<autosummary>:1
msgid "Apply the approximate feature map to X."
msgstr "Aplica el mapa de características aproximado a X."

#: of sklearn.kernel_approximation.RBFSampler.fit:4
msgid "Samples random projection according to n_features."
msgstr "Realiza un muestreo a la proyección aleatoria de acuerdo a n_features."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.kernel_approximation.RBFSampler.fit:10
#: sklearn.kernel_approximation.RBFSampler.transform:9
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix}, shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix}, shape (n_samples, n_features)"

#: of sklearn.kernel_approximation.RBFSampler.fit:9
msgid "Training data, where n_samples in the number of samples and n_features is the number of features."
msgstr "Datos de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.kernel_approximation.RBFSampler.fit
#: sklearn.kernel_approximation.RBFSampler.transform
msgid "Returns"
msgstr "Salida"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.kernel_approximation.RBFSampler.fit:26
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.kernel_approximation.RBFSampler.fit:15
msgid "Returns the transformer."
msgstr "Devuelve el transformador."

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` y `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "tipo arreglo de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "tipo arreglo de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.kernel_approximation.RBFSampler.transform:25
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "ndarray arreglo de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>``` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.kernel_approximation.RBFSampler.transform:8
msgid "New data, where n_samples in the number of samples and n_features is the number of features."
msgstr "Nuevos datos, donde n_samples es el número de muestras y n_features es el número de características."

#: of
msgid "array-like, shape (n_samples, n_components)"
msgstr "array-like, shape (n_samples, n_components)"

