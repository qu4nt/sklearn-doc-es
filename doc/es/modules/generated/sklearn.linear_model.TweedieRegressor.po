msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-27 15:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.TweedieRegressor.po\n"
"X-Crowdin-File-ID: 4910\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.TweedieRegressor.rst:2
msgid ":mod:`sklearn.linear_model`.TweedieRegressor"
msgstr ":mod:`sklearn.linear_model`.TweedieRegressor"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:2
msgid "Generalized Linear Model with a Tweedie distribution."
msgstr "Modelo lineal generalizado con una distribución de Tweedie."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:4
msgid "This estimator can be used to model different GLMs depending on the ``power`` parameter, which determines the underlying distribution."
msgstr "Este estimador se puede utilizar para modelar diferentes GLMs dependiendo del parámetro ``power``, que determina la distribución subyacente."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:7
msgid "Read more in the :ref:`User Guide <Generalized_linear_regression>`."
msgstr "Más información en el :ref:`Manual de usuario <Generalized_linear_regression>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.predict
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score
#: sklearn.linear_model._glm.glm.TweedieRegressor
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:31
msgid "**power**"
msgstr "**power**"

#: of
msgid "float, default=0"
msgstr "float, default=0"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:14
msgid "The power determines the underlying target distribution according to the following table:"
msgstr "La potencia determina la distribución del objetivo subyacente de acuerdo con la siguiente tabla:"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:18
msgid "Power"
msgstr "Potencia"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:18
msgid "Distribution"
msgstr "Distribución"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:20
msgid "0"
msgstr "0"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:20
msgid "Normal"
msgstr "Normal"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:22
msgid "1"
msgstr "1"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:22
msgid "Poisson"
msgstr "Poisson"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:24
msgid "(1,2)"
msgstr "(1,2)"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:24
msgid "Compound Poisson Gamma"
msgstr "Compound Poisson Gamma"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:26
msgid "2"
msgstr "2"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:26
msgid "Gamma"
msgstr "Gamma"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:28
msgid "3"
msgstr "3"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:28
msgid "Inverse Gaussian"
msgstr "Inverse Gaussian"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:31
msgid "For ``0 < power < 1``, no distribution exists."
msgstr "Para ``0 < power < 1``, no existe ninguna distribución."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:37
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float, default=1"
msgstr "flotante, default=1"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:34
msgid "Constant that multiplies the penalty term and thus determines the regularization strength. ``alpha = 0`` is equivalent to unpenalized GLMs. In this case, the design matrix `X` must have full column rank (no collinearities)."
msgstr "Constante que multiplica el término de penalización y determina así la fuerza de regularización. ``alpha = 0`` es equivalente a MLG no penalizados. En este caso, la matriz de diseño `X`debe tener rango de columna completo (sin colinealidades)."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:45
msgid "**link**"
msgstr "**link**"

#: of
msgid "{'auto', 'identity', 'log'}, default='auto'"
msgstr "{'auto', 'identity', 'log'}, default='auto'"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:40
msgid "The link function of the GLM, i.e. mapping from linear predictor `X @ coeff + intercept` to prediction `y_pred`. Option 'auto' sets the link depending on the chosen family as follows:"
msgstr "La función de enlace del GLM, es decir, la asignación del predictor lineal `X @ coeff + intercept` a la predicción `y_pred`. La opción 'auto' establece el enlace dependiendo de la familia elegida como sigue:"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:44
msgid "'identity' for Normal distribution"
msgstr "'identity' para la Distribución Normal"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:45
msgid "'log' for Poisson,  Gamma and Inverse Gaussian distributions"
msgstr "'log' para las distribuciones Poisson, Gamma y Gaussiana Inversa"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:49
msgid "**fit_intercept**"
msgstr "**fit_intercept**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:48
msgid "Specifies if a constant (a.k.a. bias or intercept) should be added to the linear predictor (X @ coef + intercept)."
msgstr "Específica si una constante (también conocido como sesgo o intercepto) debería ser añadida al predictor lineal (X @ coef + intercept)."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:52
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:52
msgid "The maximal number of iterations for the solver."
msgstr "El número máximo de iteraciones para el solucionador."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:58
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-4"
msgstr "float, default=1e-4"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:55
msgid "Stopping criterion. For the lbfgs solver, the iteration will stop when ``max{|g_j|, j = 1, ..., d} <= tol`` where ``g_j`` is the j-th component of the gradient (derivative) of the objective function."
msgstr "Criterio de parada. Para el solucionador lbfgs, la iteración se detendrá cuando ``max{|g_j|, j = 1, ..., d} <= tol`` donde ``g_j`` es el j-ésimo componente del gradiente (derivativo) de la función objetiva."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:62
msgid "**warm_start**"
msgstr "**warm_start**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:61
msgid "If set to ``True``, reuse the solution of the previous call to ``fit`` as initialization for ``coef_`` and ``intercept_`` ."
msgstr "Si se establece como ``True``, reutiliza la solución de la llamada anterior a ``fit`` como inicialización para ``coef_`` y ``intercept_``."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:68
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int, default=0"
msgstr "int, default=0"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:65
msgid "For the lbfgs solver set verbose to any positive number for verbosity."
msgstr "Con el solucionador lbfgs, establece verbose a cualquier número positivo para la verbosidad."

#: of sklearn.linear_model._glm.glm.TweedieRegressor
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:74
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "array of shape (n_features,)"
msgstr "array of shape (n_features,)"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:73
msgid "Estimated coefficients for the linear predictor (`X @ coef_ + intercept_`) in the GLM."
msgstr "Coeficientes estimados para el predictor lineal (`X @ coef_ + intercept_`) en el GLM."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:77
msgid "**intercept_**"
msgstr "**intercept_**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:77
msgid "Intercept (a.k.a. bias) added to linear predictor."
msgstr "Intercepto (o sesgo) añadido al predictor lineal."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:86
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:80
msgid "Actual number of iterations used in the solver."
msgstr "Número actual de iteraciones utilizadas en el solucionador."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:89
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:106
msgid "Methods"
msgstr "Métodos"

#: of sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.TweedieRegressor.fit>`\\"
msgstr ":obj:`fit <sklearn.linear_model.TweedieRegressor.fit>`\\"

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit:2
#: sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid "Fit a Generalized Linear Model."
msgstr "Ajuste de un Modelo Lineal Generalizado."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.TweedieRegressor.get_params>`\\"
msgstr ":obj:`get_params <sklearn.linear_model.TweedieRegressor.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.TweedieRegressor.predict>`\\"
msgstr ":obj:`predict <sklearn.linear_model.TweedieRegressor.predict>`\\"

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.predict:2
#: sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid "Predict using GLM with feature matrix X."
msgstr "Predicción mediante GLM con la matriz de características X."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.TweedieRegressor.score>`\\"
msgstr ":obj:`score <sklearn.linear_model.TweedieRegressor.score>`\\"

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:2
#: sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid "Compute D^2, the percentage of deviance explained."
msgstr "Calcula D^2, el porcentaje de desviación explicado."

#: of sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.TweedieRegressor.set_params>`\\"
msgstr ":obj:`set_params <sklearn.linear_model.TweedieRegressor.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._glm.glm.TweedieRegressor:114:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit:8
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.predict:8
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:19
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} of shape (n_samples, n_features)"

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit:8
msgid "Training data."
msgstr "Datos de entrenamiento."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit:11
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:22
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like of shape (n_samples,)"

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit:11
msgid "Target values."
msgstr "Valores objetivo."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit:14
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:25
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like of shape (n_samples,), default=None"

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit:14
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:25
msgid "Sample weights."
msgstr "Ponderaciones de muestra."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.predict
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.fit:30
msgid "**self**"
msgstr "**self**"

#: of
msgid "returns an instance of self."
msgstr "devuelve una instancia de sí misma."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.predict:8
msgid "Samples."
msgstr "Muestras."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.predict:24
msgid "**y_pred**"
msgstr "**y_pred**"

#: of
msgid "array of shape (n_samples,)"
msgstr "array of shape (n_samples,)"

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.predict:13
msgid "Returns predicted values."
msgstr "Devuelve los valores previstos."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:4
msgid "D^2 is a generalization of the coefficient of determination R^2. R^2 uses squared error and D^2 deviance. Note that those two are equal for ``family='normal'``."
msgstr "D^2 es una generalización del coeficiente de determinación R^2. R^2 utiliza el error cuadrático y una desviación D^2. Note que los dos son iguales para ``family='normal'``."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:8
msgid "D^2 is defined as :math:`D^2 = 1-\\frac{D(y_{true},y_{pred})}{D_{null}}`, :math:`D_{null}` is the null deviance, i.e. the deviance of a model with intercept alone, which corresponds to :math:`y_{pred} = \\bar{y}`. The mean :math:`\\bar{y}` is averaged by sample_weight. Best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse)."
msgstr "D^2 se define como :math:`D^2 = 1-\\frac{D(y_{true},y_{pred})}{D_{null}`, :math:`D_{null}` es la desviación nula, es decir, la desviación de un modelo con intercepción solo, que corresponde a :math:`y_{pred} = \\bar{y}`. La media :math:`bar{y}` es promediada por sample_weight. La mejor puntuación posible es 1.0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor)."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:19
msgid "Test samples."
msgstr "Muestras de prueba."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:22
msgid "True values of target."
msgstr "Valores reales del objetivo."

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:41
msgid "**score**"
msgstr "**score**"

#: of sklearn.linear_model._glm.glm.GeneralizedLinearRegressor.score:30
msgid "D^2 of self.predict(X) w.r.t. y."
msgstr "D^2 of self.predict(X) w.r.t. y."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como con objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: ../modules/generated/sklearn.linear_model.TweedieRegressor.examples:4
msgid "Examples using ``sklearn.linear_model.TweedieRegressor``"
msgstr "Ejemplos usando ``sklearn.linear_model.TweedieRegressor``"

#: ../modules/generated/sklearn.linear_model.TweedieRegressor.examples:15
#: ../modules/generated/sklearn.linear_model.TweedieRegressor.examples:23
#: ../modules/generated/sklearn.linear_model.TweedieRegressor.examples:34
#: ../modules/generated/sklearn.linear_model.TweedieRegressor.examples:42
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_tweedie_regression_insurance_claims.py`"
msgstr ":ref:`sphx_glr_auto_examples_linear_model_plot_tweedie_regression_insurance_claims.py`"

