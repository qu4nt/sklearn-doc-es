msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-12 01:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.multioutput.MultiOutputClassifier.po\n"
"X-Crowdin-File-ID: 5160\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.multioutput.MultiOutputClassifier.rst:2
msgid ":mod:`sklearn.multioutput`.MultiOutputClassifier"
msgstr ":mod:`sklearn.multioutput`.MultiOutputClassifier"

#: of sklearn.multioutput.MultiOutputClassifier:2
msgid "Multi target classification"
msgstr "Clasificación multiobjetivo (multi-target)"

#: of sklearn.multioutput.MultiOutputClassifier:4
msgid "This strategy consists of fitting one classifier per target. This is a simple strategy for extending classifiers that do not natively support multi-target classification"
msgstr "Esta estrategia consiste en ajustar un clasificador por objetivo. Se trata de una estrategia sencilla para ampliar los clasificadores que no admiten de forma nativa la clasificación multiobjetivo"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.multioutput.MultiOutputClassifier
#: sklearn.multioutput.MultiOutputClassifier.fit
#: sklearn.multioutput.MultiOutputClassifier.predict_proba
#: sklearn.multioutput.MultiOutputClassifier.score
#: sklearn.multioutput._MultiOutputEstimator.partial_fit
#: sklearn.multioutput._MultiOutputEstimator.predict
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.multioutput.MultiOutputClassifier:12
msgid "**estimator**"
msgstr "**estimator**"

#: of
msgid "estimator object"
msgstr "objeto estimador"

#: of sklearn.multioutput.MultiOutputClassifier:11
msgid "An estimator object implementing :term:`fit`, :term:`score` and :term:`predict_proba`."
msgstr "Un objeto estimador que implementa :term:`fit`, :term:`score` y :term:`predict_proba`."

#: of sklearn.multioutput.MultiOutputClassifier:31
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int or None, optional (default=None)"
msgstr "int o None, opcional (default=None)"

#: of sklearn.multioutput.MultiOutputClassifier:15
msgid "The number of jobs to run in parallel. :meth:`fit`, :meth:`predict` and :meth:`partial_fit` (if supported by the passed estimator) will be parallelized for each target."
msgstr "El número de trabajos a ejecutar en paralelo. :meth:`fit`, :meth:`predict` y :meth:`partial_fit` (si lo soporta el estimador pasado) serán paralelizados para cada objetivo."

#: of sklearn.multioutput.MultiOutputClassifier:19
msgid "When individual estimators are fast to train or predict, using ``n_jobs > 1`` can result in slower performance due to the parallelism overhead."
msgstr "Cuando los estimadores individuales son rápidos de entrenar o predecir, el uso de ``n_jobs > 1`` puede resultar en un rendimiento más lento debido a la sobrecarga de paralelismo."

#: of sklearn.multioutput.MultiOutputClassifier:23
msgid "``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all available processes / threads. See :term:`Glossary <n_jobs>` for more details."
msgstr "``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesos / hilos disponibles. Ver :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.multioutput.MultiOutputClassifier:27
msgid "`n_jobs` default changed from 1 to None"
msgstr "`n_jobs` por defecto cambiado de 1 a None"

#: of sklearn.multioutput.MultiOutputClassifier
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.multioutput.MultiOutputClassifier:36
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "arreglo de forma (n_classes,)"

#: of sklearn.multioutput.MultiOutputClassifier:36
msgid "Class labels."
msgstr "Etiquetas de clase."

#: of sklearn.multioutput.MultiOutputClassifier:45
msgid "**estimators_** : list of ``n_output`` estimators"
msgstr "**estimators_** : lista de estimadores ``n_output``"

#: of
msgid "list of"
msgstr "lista de"

#: of sklearn.multioutput.MultiOutputClassifier:39
msgid "Estimators used for predictions."
msgstr "Estimadores usados para predicciones."

#: of sklearn.multioutput.MultiOutputClassifier:48
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.multioutput.MultiOutputClassifier:60
msgid "Methods"
msgstr "Métodos"

#: of sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid ":obj:`fit <sklearn.multioutput.MultiOutputClassifier.fit>`\\"
msgstr ":obj:`fit <sklearn.multioutput.MultiOutputClassifier.fit>`\\"

#: of sklearn.multioutput.MultiOutputClassifier.fit:2
#: sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid "Fit the model to data matrix X and targets Y."
msgstr "Ajusta el modelo a la matriz de datos X y a los objetivos Y."

#: of sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid ":obj:`get_params <sklearn.multioutput.MultiOutputClassifier.get_params>`\\"
msgstr ":obj:`get_params <sklearn.multioutput.MultiOutputClassifier.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.multioutput.MultiOutputClassifier.partial_fit>`\\"
msgstr ":obj:`partial_fit <sklearn.multioutput.MultiOutputClassifier.partial_fit>`\\"

#: of sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid "Incrementally fit the model to data."
msgstr "Ajustar incrementalmente el modelo a los datos."

#: of sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid ":obj:`predict <sklearn.multioutput.MultiOutputClassifier.predict>`\\"
msgstr ":obj:`predict <sklearn.multioutput.MultiOutputClassifier.predict>`\\"

#: of sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
#: sklearn.multioutput._MultiOutputEstimator.predict:4
msgid "Predict multi-output variable using a model"
msgstr "Predecir variable de salida múltiple utilizando un modelo"

#: of sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid ":obj:`score <sklearn.multioutput.MultiOutputClassifier.score>`\\"
msgstr ":obj:`score <sklearn.multioutput.MultiOutputClassifier.score>`\\"

#: of sklearn.multioutput.MultiOutputClassifier.score:2
#: sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid "Returns the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos de prueba y las etiquetas dadas."

#: of sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid ":obj:`set_params <sklearn.multioutput.MultiOutputClassifier.set_params>`\\"
msgstr ":obj:`set_params <sklearn.multioutput.MultiOutputClassifier.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.multioutput.MultiOutputClassifier:69:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.multioutput.MultiOutputClassifier.fit:8
#: sklearn.multioutput.MultiOutputClassifier.predict_proba:11
#: sklearn.multioutput.MultiOutputClassifier.score:8
#: sklearn.multioutput._MultiOutputEstimator.partial_fit:9
#: sklearn.multioutput._MultiOutputEstimator.predict:9
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.multioutput.MultiOutputClassifier.fit:8
msgid "The input data."
msgstr "Los datos de entrada."

#: of sklearn.multioutput.MultiOutputClassifier.fit:11
msgid "**Y**"
msgstr "**Y**"

#: of
msgid "array-like of shape (n_samples, n_classes)"
msgstr "array-like de forma (n_samples, n_classes)"

#: of sklearn.multioutput.MultiOutputClassifier.fit:11
msgid "The target values."
msgstr "Valores objetivo."

#: of sklearn.multioutput.MultiOutputClassifier.fit:16
#: sklearn.multioutput._MultiOutputEstimator.partial_fit:26
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "arreglo tipo de forma (n_samples,), default=None"

#: of sklearn.multioutput.MultiOutputClassifier.fit:14
msgid "Sample weights. If None, then samples are equally weighted. Only supported if the underlying classifier supports sample weights."
msgstr "Ponderación de las muestras. Si es None, las muestras se ponderan por igual. Sólo se admite si el clasificador subyacente admite ponderaciones de muestras."

#: of sklearn.multioutput.MultiOutputClassifier.fit:21
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict of string -> object"
msgstr "dict de str -> object"

#: of sklearn.multioutput.MultiOutputClassifier.fit:19
msgid "Parameters passed to the ``estimator.fit`` method of each step."
msgstr "Parámetros pasados al método ``estimator.fit`` de cada paso."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.multioutput.MultiOutputClassifier.fit
#: sklearn.multioutput.MultiOutputClassifier.predict_proba
#: sklearn.multioutput.MultiOutputClassifier.score
#: sklearn.multioutput._MultiOutputEstimator.partial_fit
#: sklearn.multioutput._MultiOutputEstimator.predict
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.multioutput.MultiOutputClassifier.fit:37
#: sklearn.multioutput._MultiOutputEstimator.partial_fit:42
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.multioutput._MultiOutputEstimator.partial_fit:2
msgid "Incrementally fit the model to data. Fit a separate model for each output variable."
msgstr "Ajustar el modelo a los datos de forma incremental. Ajusta un modelo distinto para cada variable de salida."

#: of sklearn.multioutput._MultiOutputEstimator.partial_fit:9
#: sklearn.multioutput._MultiOutputEstimator.predict:9
msgid "Data."
msgstr "Datos."

#: of sklearn.multioutput.MultiOutputClassifier.score:11
#: sklearn.multioutput._MultiOutputEstimator.partial_fit:12
#: sklearn.multioutput._MultiOutputEstimator.predict:26
msgid "**y**"
msgstr "**y**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_outputs)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_outputs)"

#: of sklearn.multioutput._MultiOutputEstimator.partial_fit:12
msgid "Multi-output targets."
msgstr "Objetivos de salida múltiple (multi-output targets)."

#: of sklearn.multioutput._MultiOutputEstimator.partial_fit:21
msgid "**classes**"
msgstr "**classes**"

#: of
msgid "list of ndarray of shape (n_outputs,)"
msgstr "lista de ndarray de forma (n_outputs,)"

#: of sklearn.multioutput._MultiOutputEstimator.partial_fit:15
msgid "Each array is unique classes for one output in str/int Can be obtained by via ``[np.unique(y[:, i]) for i in range(y.shape[1])]``, where y is the target matrix of the entire dataset. This argument is required for the first call to partial_fit and can be omitted in the subsequent calls. Note that y doesn't need to contain all labels in `classes`."
msgstr "Cada matriz es clases únicas para una salida en str/int. Se puede obtener mediante ``[np.unique(y[:, i]) for i in range(y.shape[1])]``, donde y es la matriz objetivo del conjunto de datos. Este argumento es necesario para la primera invocación a partial_fit y puede omitirse en las siguientes. Tenga en cuenta que y no necesita contener todas las etiquetas de `classes`."

#: of sklearn.multioutput._MultiOutputEstimator.partial_fit:24
msgid "Sample weights. If None, then samples are equally weighted. Only supported if the underlying regressor supports sample weights."
msgstr "Ponderación de las muestras. Si es None, las muestras se ponderan por igual. Sólo se admite si el regresor subyacente admite ponderaciones de muestras."

#: of sklearn.multioutput._MultiOutputEstimator.predict:3
msgid "trained for each target variable."
msgstr "entrenado para cada variable objetivo."

#: of sklearn.multioutput._MultiOutputEstimator.predict:14
msgid "Multi-output targets predicted across multiple predictors. Note: Separate models are generated for each predictor."
msgstr "Objetivos de salida múltiples predichos a través de múltiples predictores. Nota: se generan modelos separados para cada predictor."

#: of sklearn.multioutput.MultiOutputClassifier.predict_proba:2
msgid "Probability estimates. Returns prediction probabilities for each class of each output."
msgstr "Estimaciones de probabilidad. Devuelve las probabilidades de predicción para cada clase de cada salida."

#: of sklearn.multioutput.MultiOutputClassifier.predict_proba:5
msgid "This method will raise a ``ValueError`` if any of the estimators do not have ``predict_proba``."
msgstr "Este método lanzará un ``ValueError`` si alguno de los estimadores no tiene ``predict_proba``."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples_X, n_features)"

#: of sklearn.multioutput.MultiOutputClassifier.predict_proba:11
msgid "Data"
msgstr "Datos"

#: of sklearn.multioutput.MultiOutputClassifier.predict_proba:33
msgid "**p**"
msgstr "**p**"

#: of
msgid "array of shape (n_samples, n_classes), or a list of n_outputs             such arrays if n_outputs > 1."
msgstr "array of shape (n_samples, n_classes), or a list of n_outputs             such arrays if n_outputs > 1."

#: of sklearn.multioutput.MultiOutputClassifier.predict_proba:16
msgid "The class probabilities of the input samples. The order of the classes corresponds to that in the attribute :term:`classes_`."
msgstr "Las probabilidades de clase de las muestras de entrada. El orden de las clases corresponde a aquel en el atributo :term:`classes_`."

#: of sklearn.multioutput.MultiOutputClassifier.predict_proba:19
msgid "This function now returns a list of arrays where the length of the list is ``n_outputs``, and each array is (``n_samples``, ``n_classes``) for that particular output."
msgstr "Esta función devuelve una lista de arreglos donde la longitud de la lista es ``n_outputs``, y cada arreglo es (``n_samples``, ``n_classes``) para esa salida en particular."

#: of sklearn.multioutput.MultiOutputClassifier.score:8
msgid "Test samples"
msgstr "Muestras de prueba"

#: of
msgid "array-like of shape (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples, n_outputs)"

#: of sklearn.multioutput.MultiOutputClassifier.score:11
msgid "True values for X"
msgstr "Valores True para X"

#: of sklearn.multioutput.MultiOutputClassifier.score:27
msgid "**scores**"
msgstr "**scores**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.multioutput.MultiOutputClassifier.score:16
msgid "accuracy_score of self.predict(X) versus y"
msgstr "accuracy_score de self.predict(X) versus y"

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

