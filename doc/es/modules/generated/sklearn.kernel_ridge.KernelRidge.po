msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-23 02:33\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.kernel_ridge.KernelRidge.po\n"
"X-Crowdin-File-ID: 5186\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.kernel_ridge.KernelRidge.rst:2
msgid ":mod:`sklearn.kernel_ridge`.KernelRidge"
msgstr ":mod:`sklearn.kernel_ridge`.KernelRidge"

#: of sklearn.kernel_ridge.KernelRidge:2
msgid "Kernel ridge regression."
msgstr "Regresión de cresta de núcleo."

#: of sklearn.kernel_ridge.KernelRidge:4
msgid "Kernel ridge regression (KRR) combines ridge regression (linear least squares with l2-norm regularization) with the kernel trick. It thus learns a linear function in the space induced by the respective kernel and the data. For non-linear kernels, this corresponds to a non-linear function in the original space."
msgstr "La regresión de cresta del núcleo (Kernel Ridge Regression, KRR) combina regresión de cresta (mínimos cuadrados lineales con regularización de la norma l2) con el truco núcleo. Así aprende una función lineal en el espacio inducido por el núcleo respectivo y los datos. Para los núcleos no lineales, esto corresponde a una función no lineal en el espacio original."

#: of sklearn.kernel_ridge.KernelRidge:10
msgid "The form of the model learned by KRR is identical to support vector regression (SVR). However, different loss functions are used: KRR uses squared error loss while support vector regression uses epsilon-insensitive loss, both combined with l2 regularization. In contrast to SVR, fitting a KRR model can be done in closed-form and is typically faster for medium-sized datasets. On the other hand, the learned model is non-sparse and thus slower than SVR, which learns a sparse model for epsilon > 0, at prediction-time."
msgstr "La forma del modelo aprendido por la regresión cresta de núcleo (KRR) es idéntica a la regresión de vectores de soporte (SVR). Sin embargo, se utilizan diferentes funciones de pérdida: KRR utiliza la pérdida de error al cuadrado mientras que la regresión de vectores de soporte utiliza la pérdida insensible (insensitive loss) a épsilon, ambas combinadas con la regularización l2. A diferencia de SVR, el ajuste de un modelo KRR puede realizarse de forma cerrada y suele ser más rápido para conjuntos de datos de tamaño medio. Por otro lado, el modelo aprendido no es disperso y por lo tanto es más lento que SVR, que aprende un modelo disperso para epsilon > 0, en el tiempo de predicción."

#: of sklearn.kernel_ridge.KernelRidge:19
msgid "This estimator has built-in support for multi-variate regression (i.e., when y is a 2d-array of shape [n_samples, n_targets])."
msgstr "El estimador tiene soporte incorporado por regresión multivariante (es decir, cuando y es un arreglo 2d de forma [n_samples, n_targets])."

#: of sklearn.kernel_ridge.KernelRidge:22
msgid "Read more in the :ref:`User Guide <kernel_ridge>`."
msgstr "Más información en el :ref:`Manual de usuario <kernel_ridge>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.kernel_ridge.KernelRidge sklearn.kernel_ridge.KernelRidge.fit
#: sklearn.kernel_ridge.KernelRidge.predict
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.kernel_ridge.KernelRidge:34
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float or array-like of shape (n_targets,), default=1.0"
msgstr "flotante o tipo arreglo de forma (n_targets,), default=1.0"

#: of sklearn.kernel_ridge.KernelRidge:27
msgid "Regularization strength; must be a positive float. Regularization improves the conditioning of the problem and reduces the variance of the estimates. Larger values specify stronger regularization. Alpha corresponds to ``1 / (2C)`` in other linear models such as :class:`~sklearn.linear_model.LogisticRegression` or :class:`~sklearn.svm.LinearSVC`. If an array is passed, penalties are assumed to be specific to the targets. Hence they must correspond in number. See :ref:`ridge_regression` for formula."
msgstr "La fuerza de regularización; debe ser un flotante positivo. La regularización mejora el condicionamiento del problema y reduce la varianza de los estimados. Los valores mas grandes especifican una regularización mas fuerte. Alfa corresponde a ``1 / (2C)`` en otros modelos lineales como :class:`~sklearn.linear_model.LogisticRegression` o :class:`~sklearn.svm.LinearSVC`. Si se pasa un arreglo, las penalizaciones se asume que son específicas a los objetivos. Por lo tanto, deben corresponder en número. Vea :ref:`ridge_regression` para la formula."

#: of sklearn.kernel_ridge.KernelRidge:48
msgid "**kernel**"
msgstr "**kernel**"

#: of
msgid "string or callable, default=\"linear\""
msgstr "cadena o invocable, default=\"linear\""

#: of sklearn.kernel_ridge.KernelRidge:37
msgid "Kernel mapping used internally. This parameter is directly passed to :class:`~sklearn.metrics.pairwise.pairwise_kernel`. If `kernel` is a string, it must be one of the metrics in `pairwise.PAIRWISE_KERNEL_FUNCTIONS`. If `kernel` is \"precomputed\", X is assumed to be a kernel matrix. Alternatively, if `kernel` is a callable function, it is called on each pair of instances (rows) and the resulting value recorded. The callable should take two rows from X as input and return the corresponding kernel value as a single number. This means that callables from :mod:`sklearn.metrics.pairwise` are not allowed, as they operate on matrices, not single samples. Use the string identifying the kernel instead."
msgstr "El mapeado de núcleo usado internamente. Este parámetro es directamente pasado a :class:`~sklearn.metrics.pairwise.pairwise_kernel`. Si `kernel` es una cadena, entonces debe ser una de las metricas en `pairwise.PAIRWISE_KERNEL_FUNCTIONS`. Si `kernel` es \"precomputed\", X se asume que es una matriz de núcleo. Alternativamente, si `kernel` es una función invocable, es llamada en cada par de instancias (filas) y el valor resultante grabado. El invocable debería tomar dos filas de X como entrada y regresa el valor correspondiente de núcleo como un número único. Esto quiere decir que los invocables de :mod:`sklearn.metrics.pairwise` no están permitidos, ya que operan sobre matrices, no muestras únicas. Utilice la cadena identificando el kernel en su lugar."

#: of sklearn.kernel_ridge.KernelRidge:54
msgid "**gamma**"
msgstr "**gamma**"

#: of
msgid "float, default=None"
msgstr "float, default=None"

#: of sklearn.kernel_ridge.KernelRidge:51
msgid "Gamma parameter for the RBF, laplacian, polynomial, exponential chi2 and sigmoid kernels. Interpretation of the default value is left to the kernel; see the documentation for sklearn.metrics.pairwise. Ignored by other kernels."
msgstr "El parámetro Gamma para los núcleos RBF, laplacianos, polimoniales, exponenciales chi2 y sigmoides. La interpretación del valor por defecto se deja en manos del núcleo; vea la documentación para sklearn.metrics.pairwise. Ignorado por otros núcleos."

#: of sklearn.kernel_ridge.KernelRidge:57
msgid "**degree**"
msgstr "**degree**"

#: of
msgid "float, default=3"
msgstr "float, default=3"

#: of sklearn.kernel_ridge.KernelRidge:57
msgid "Degree of the polynomial kernel. Ignored by other kernels."
msgstr "Grado del kernel polinómico. Ignorado por otros kernels."

#: of sklearn.kernel_ridge.KernelRidge:61
msgid "**coef0**"
msgstr "**coef0**"

#: of
msgid "float, default=1"
msgstr "float, default=1"

#: of sklearn.kernel_ridge.KernelRidge:60
msgid "Zero coefficient for polynomial and sigmoid kernels. Ignored by other kernels."
msgstr "Coeficiente cero para los kernels o núcleos polinomiales y sigmoides. Ignorado por otros kernels."

#: of sklearn.kernel_ridge.KernelRidge:68
msgid "**kernel_params**"
msgstr "**kernel_params**"

#: of
msgid "mapping of string to any, default=None"
msgstr "mapeado de cadenas a cualquiera, default=None"

#: of sklearn.kernel_ridge.KernelRidge:64
msgid "Additional parameters (keyword arguments) for kernel function passed as callable object."
msgstr "Parámetros adicionales (argumentos de palabra clave) para la función del núcleo pasado como objeto invocable."

#: of sklearn.kernel_ridge.KernelRidge
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.kernel_ridge.KernelRidge:73
msgid "**dual_coef_**"
msgstr "**dual_coef_**"

#: of
msgid "ndarray of shape (n_samples,) or (n_samples, n_targets)"
msgstr "ndarray de forma (n_samples,) o (n_samples, n_targets)"

#: of sklearn.kernel_ridge.KernelRidge:73
msgid "Representation of weight vector(s) in kernel space"
msgstr "Representación de vectores de ponderado en el espacio de núcleo"

#: of sklearn.kernel_ridge.KernelRidge:81
msgid "**X_fit_**"
msgstr "**X_fit_**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.kernel_ridge.KernelRidge:76
msgid "Training data, which is also required for prediction. If kernel == \"precomputed\" this is instead the precomputed training matrix, of shape (n_samples, n_samples)."
msgstr "Datos de entrenamiento, el cual también esta requerido para la predicción, Si kernel == \"precomputed\"\" esta es la matriz de entrenamiento precalculado, de forma (n_samples, n_samples)."

#: of sklearn.kernel_ridge.KernelRidge:86
msgid ":obj:`sklearn.linear_model.Ridge`"
msgstr ":obj:`sklearn.linear_model.Ridge`"

#: of sklearn.kernel_ridge.KernelRidge:87
msgid "Linear ridge regression."
msgstr "Regresión de cresta lineal."

#: of sklearn.kernel_ridge.KernelRidge:88
msgid ":obj:`sklearn.svm.SVR`"
msgstr ":obj:`sklearn.svm.SVR`"

#: of sklearn.kernel_ridge.KernelRidge:89
msgid "Support Vector Regression implemented using libsvm."
msgstr "Regresión de Vector de Apoyo implementado utilizando libsvm."

#: of sklearn.kernel_ridge.KernelRidge:94
msgid "References"
msgstr "Referencias"

#: of sklearn.kernel_ridge.KernelRidge:95
msgid "Kevin P. Murphy \"Machine Learning: A Probabilistic Perspective\", The MIT Press chapter 14.4.3, pp. 492-493"
msgstr "Kevin P. Murphy \"Machine Learning: A Probabilistic Perspective\", The MIT Press chapter 14.4.3, pp. 492-493"

#: of sklearn.kernel_ridge.KernelRidge:104
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.kernel_ridge.KernelRidge:116
msgid "Methods"
msgstr "Métodos"

#: of sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid ":obj:`fit <sklearn.kernel_ridge.KernelRidge.fit>`\\"
msgstr ":obj:`fit <sklearn.kernel_ridge.KernelRidge.fit>`\\"

#: of sklearn.kernel_ridge.KernelRidge.fit:2
#: sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid "Fit Kernel Ridge regression model"
msgstr "Ajusta al modelo de regresión de Kernel de cresta"

#: of sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid ":obj:`get_params <sklearn.kernel_ridge.KernelRidge.get_params>`\\"
msgstr ":obj:`get_params <sklearn.kernel_ridge.KernelRidge.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid ":obj:`predict <sklearn.kernel_ridge.KernelRidge.predict>`\\"
msgstr ":obj:`predict <sklearn.kernel_ridge.KernelRidge.predict>`\\"

#: of sklearn.kernel_ridge.KernelRidge.predict:2
#: sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid "Predict using the kernel ridge model"
msgstr "Predice utilizando el modelo de núcleo de cresta"

#: of sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid ":obj:`score <sklearn.kernel_ridge.KernelRidge.score>`\\"
msgstr ":obj:`score <sklearn.kernel_ridge.KernelRidge.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid ":obj:`set_params <sklearn.kernel_ridge.KernelRidge.set_params>`\\"
msgstr ":obj:`set_params <sklearn.kernel_ridge.KernelRidge.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.kernel_ridge.KernelRidge:124:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.kernel_ridge.KernelRidge.fit:9
#: sklearn.kernel_ridge.KernelRidge.predict:11
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.kernel_ridge.KernelRidge.fit:8
msgid "Training data. If kernel == \"precomputed\" this is instead a precomputed kernel matrix, of shape (n_samples, n_samples)."
msgstr "Datos de entrenamiento. Si kernel == \"precomputed\" esto es una matriz de núcleo precalculada, de forma (n_samples, n_samples)."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.kernel_ridge.KernelRidge.fit:12
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_targets)"
msgstr "tipo arreglo de forma (n_samples,) o (n_samples, n_targets)"

#: of sklearn.kernel_ridge.KernelRidge.fit:12
msgid "Target values"
msgstr "Valores objetivo"

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.kernel_ridge.KernelRidge.fit:15
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "float or array-like of shape (n_samples,), default=None"
msgstr "flotante o tipo arreglo de forma (n_samples,), default=None"

#: of sklearn.kernel_ridge.KernelRidge.fit:15
msgid "Individual weights for each sample, ignored if None is passed."
msgstr "Ponderados individuales para cada muestra, ignorado si se pasa None."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.kernel_ridge.KernelRidge.fit
#: sklearn.kernel_ridge.KernelRidge.predict
msgid "Returns"
msgstr "Salida"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.kernel_ridge.KernelRidge.fit:31
msgid "**self**"
msgstr "**self**"

#: of
msgid "returns an instance of self."
msgstr "devuelve una instancia de sí misma."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.kernel_ridge.KernelRidge.predict:8
msgid "Samples. If kernel == \"precomputed\" this is instead a precomputed kernel matrix, shape = [n_samples, n_samples_fitted], where n_samples_fitted is the number of samples used in the fitting for this estimator."
msgstr "Muestras. Si kernel == \"precomputed\" esto es en su lugar una matriz de núcleo precalculada, forma = [n_samples, n_samples_fitted], donde n_samples_fitted es el número de muestras utilizadas en el ajuste de este estimador."

#: of sklearn.kernel_ridge.KernelRidge.predict:27
msgid "**C**"
msgstr "**C**"

#: of sklearn.kernel_ridge.KernelRidge.predict:16
msgid "Returns predicted values."
msgstr "Devuelve los valores previstos."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma residual de cuadrados ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1.0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0,0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "tipo arreglo de forma (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz de núcleo precalculada o una lista de objetos genéricos con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "tipo arreglo de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para `X`."

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "tipo arreglo de forma (n_samples,), default=None"

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderados de muestras."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "flotante/flotador"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` of ``self.predict(X)`` wrt. `y`."

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr "Notas"

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al llamar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la coherencia con el valor por defecto de :func:`~sklearn.metrics.r2_score``. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>``` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: ../modules/generated/sklearn.kernel_ridge.KernelRidge.examples:4
msgid "Examples using ``sklearn.kernel_ridge.KernelRidge``"
msgstr "Ejemplos usando ``sklearn.kernel_ridge.KernelRidge``"

#: ../modules/generated/sklearn.kernel_ridge.KernelRidge.examples:15
#: ../modules/generated/sklearn.kernel_ridge.KernelRidge.examples:23
#: ../modules/generated/sklearn.kernel_ridge.KernelRidge.examples:34
#: ../modules/generated/sklearn.kernel_ridge.KernelRidge.examples:42
msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_kernel_ridge_regression.py`"
msgstr ":ref:`sphx_glr_auto_examples_miscellaneous_plot_kernel_ridge_regression.py`"

