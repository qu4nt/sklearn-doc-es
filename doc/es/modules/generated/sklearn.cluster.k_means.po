msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:01\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.cluster.k_means.po\n"
"X-Crowdin-File-ID: 5054\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.cluster.k_means.rst:2
msgid ":mod:`sklearn.cluster`.k_means"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:2
msgid "K-means clustering algorithm."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:4
msgid "Read more in the :ref:`User Guide <k_means>`."
msgstr ""

#: of sklearn.cluster._kmeans.k_means
msgid "Parameters"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:11
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:9
msgid "The observations to cluster. It must be noted that the data will be converted to C ordering, which will cause a memory copy if the given data is not C-contiguous."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:15
msgid "**n_clusters**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:14
msgid "The number of clusters to form as well as the number of centroids to generate."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:19
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:18
msgid "The weights for each observation in X. If None, all observations are assigned equal weight."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:35
msgid "**init**"
msgstr ""

#: of
msgid "{'k-means++', 'random'}, callable or array-like of shape             (n_clusters, n_features), default='k-means++'"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:22
msgid "Method for initialization:"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:24
msgid "'k-means++' : selects initial cluster centers for k-mean clustering in a smart way to speed up convergence. See section Notes in k_init for more details."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:28
msgid "'random': choose `n_clusters` observations (rows) at random from data for the initial centroids."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:31
msgid "If an array is passed, it should be of shape (n_clusters, n_features) and gives the initial centers."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:34
msgid "If a callable is passed, it should take arguments X, n_clusters and a random state and return an initialization."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:50
msgid "**precompute_distances**"
msgstr ""

#: of
msgid "{'auto', True, False}"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:38
msgid "Precompute distances (faster but takes more memory)."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:40
msgid "'auto' : do not precompute distances if n_samples * n_clusters > 12 million. This corresponds to about 100MB overhead per job using double precision."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:44
msgid "True : always precompute distances"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:46
msgid "False : never precompute distances"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:48
msgid "'precompute_distances' was deprecated in version 0.23 and will be removed in 1.0 (renaming of 0.25). It has no effect."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:55
msgid "**n_init**"
msgstr ""

#: of
msgid "int, default=10"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:53
msgid "Number of time the k-means algorithm will be run with different centroid seeds. The final results will be the best output of n_init consecutive runs in terms of inertia."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:58
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=300"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:58
msgid "Maximum number of iterations of the k-means algorithm to run."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:61
msgid "**verbose**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:61
msgid "Verbosity mode."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:66
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-4"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:64
msgid "Relative tolerance with regards to Frobenius norm of the difference in the cluster centers of two consecutive iterations to declare convergence."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:71
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:69
msgid "Determines random number generation for centroid initialization. Use an int to make the randomness deterministic. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:81
msgid "**copy_x**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:74
msgid "When pre-computing distances it is more numerically accurate to center the data first. If copy_x is True (default), then the original data is not modified. If False, the original data is modified, and put back before the function returns, but small numerical differences may be introduced by subtracting and then adding the data mean. Note that if the original data is not C-contiguous, a copy will be made even if copy_x is False. If the original data is sparse, but not in CSR format, a copy will be made even if copy_x is False."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:92
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:84
msgid "The number of OpenMP threads to use for the computation. Parallelism is sample-wise on the main cython loop which assigns each sample to its closest center."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:88
msgid "``None`` or ``-1`` means using all processors."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:90
msgid "``n_jobs`` was deprecated in version 0.23 and will be removed in 1.0 (renaming of 0.25)."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:102
msgid "**algorithm**"
msgstr ""

#: of
msgid "{\"auto\", \"full\", \"elkan\"}, default=\"auto\""
msgstr ""

#: of sklearn.cluster._kmeans.k_means:95
msgid "K-means algorithm to use. The classical EM-style algorithm is \"full\". The \"elkan\" variation is more efficient on data with well-defined clusters, by using the triangle inequality. However it's more memory intensive due to the allocation of an extra array of shape (n_samples, n_clusters)."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:101
msgid "For now \"auto\" (kept for backward compatibiliy) chooses \"elkan\" but it might change in the future for a better heuristic."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:105
msgid "**return_n_iter**"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:105
msgid "Whether or not to return the number of iterations."
msgstr ""

#: of sklearn.cluster._kmeans.k_means
msgid "Returns"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:110
msgid "**centroid**"
msgstr ""

#: of
msgid "ndarray of shape (n_clusters, n_features)"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:110
msgid "Centroids found at the last iteration of k-means."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:114
msgid "**label**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:113
msgid "label[i] is the code or index of the centroid the i'th observation is closest to."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:118
msgid "**inertia**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:117
msgid "The final value of the inertia criterion (sum of squared distances to the closest centroid for all observations in the training set)."
msgstr ""

#: of sklearn.cluster._kmeans.k_means:133
msgid "**best_n_iter**"
msgstr ""

#: of sklearn.cluster._kmeans.k_means:121
msgid "Number of iterations corresponding to the best results. Returned only if `return_n_iter` is set to True."
msgstr ""

