msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-11 22:57\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.covariance.GraphicalLasso.po\n"
"X-Crowdin-File-ID: 5596\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.covariance.GraphicalLasso.rst:2
msgid ":mod:`sklearn.covariance`.GraphicalLasso"
msgstr ":mod:`sklearn.covariance`.GraphicalLasso"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:2
msgid "Sparse inverse covariance estimation with an l1-penalized estimator."
msgstr "Estimación dispersa de la covarianza inversa con un estimador de penalidad l1."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:4
msgid "Read more in the :ref:`User Guide <sparse_inverse_covariance>`."
msgstr "Más información en el :ref:`Manual de usuario <sparse_inverse_covariance>`."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:6
msgid "GraphLasso has been renamed to GraphicalLasso"
msgstr "GraphLasso ha sido renombrado a GraphicalLasso"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._graph_lasso.GraphicalLasso
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:14
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float, default=0.01"
msgstr "float, default=0.01"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:12
msgid "The regularization parameter: the higher alpha, the more regularization, the sparser the inverse covariance. Range is (0, inf]."
msgstr "El parámetro de regularización: mientras el alfa sea más alto, habra más regularización, y sera mas disperso la covarianza inversa. El rango es (0, inf]."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:19
msgid "**mode**"
msgstr "**mode**"

#: of
msgid "{'cd', 'lars'}, default='cd'"
msgstr "{'cd', 'lars'}, default='cd'"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:17
msgid "The Lasso solver to use: coordinate descent or LARS. Use LARS for very sparse underlying graphs, where p > n. Elsewhere prefer cd which is more numerically stable."
msgstr "El solucionador Lasso a usar: descenso de coordenadas o LARS. Use LARS para gráficos subyacentes muy dispersos, donde p > n. De otra forma se prefiere el dc (cd en inglés), que es más estable numéricamente."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:23
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-4"
msgstr "float, default=1e-4"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:22
msgid "The tolerance to declare convergence: if the dual gap goes below this value, iterations are stopped. Range is (0, inf]."
msgstr "La tolerancia para declarar la convergencia: si la brecha dual va por debajo de este valor, se detienen las iteraciones. El rango es (0, inf]."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:29
msgid "**enet_tol**"
msgstr "**enet_tol**"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:26
msgid "The tolerance for the elastic net solver used to calculate the descent direction. This parameter controls the accuracy of the search direction for a given column update, not of the overall parameter estimate. Only used for mode='cd'. Range is (0, inf]."
msgstr "La tolerancia para el solucionador de red elástica utilizado para calcular la dirección de descenso. Este parámetro controla la precisión de la dirección de búsqueda para una actualización de una columna determinada, no del estimado de parámetro general. Sólo se utiliza para mode='cd'. El rango es (0, inf]."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:32
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:32
msgid "The maximum number of iterations."
msgstr "Número máximo de iteraciones."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:36
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:35
msgid "If verbose is True, the objective function and dual gap are plotted at each iteration."
msgstr "Si verbose es True, la función objetiva y el vacío dual se grafican en cada iteración."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:45
msgid "**assume_centered**"
msgstr "**assume_centered**"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:39
msgid "If True, data are not centered before computation. Useful when working with data whose mean is almost, but not exactly zero. If False, data are centered before computation."
msgstr "Si es True, los datos no son centrados antes del calculó. Útil al trabajar con datos cuya media es casí, pero no igual a cero. Si es False, los datos son centrados antes del cálculo."

#: of sklearn.covariance._graph_lasso.GraphicalLasso
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:50
msgid "**location_**"
msgstr "**location_**"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:50
msgid "Estimated location, i.e. the estimated mean."
msgstr "Ubicación estimada, es decir, la media estimada."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:53
msgid "**covariance_**"
msgstr "**covariance_**"

#: of
msgid "ndarray of shape (n_features, n_features)"
msgstr "ndarray de forma (n_features, n_features)"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:53
msgid "Estimated covariance matrix"
msgstr "Matriz de covarianza estimada"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:20
#: sklearn.covariance._graph_lasso.GraphicalLasso:56
msgid "**precision_**"
msgstr "**precision_**"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:56
msgid "Estimated pseudo inverse matrix."
msgstr "Matrix pseudo inversa estimada."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:62
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:59
msgid "Number of iterations run."
msgstr "Número de iteraciones realizadas."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:67
msgid ":obj:`graphical_lasso`, :obj:`GraphicalLassoCV`"
msgstr ":obj:`graphical_lasso`, :obj:`GraphicalLassoCV`"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:73
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:94
msgid "Methods"
msgstr "Métodos"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`error_norm <sklearn.covariance.GraphicalLasso.error_norm>`\\"
msgstr ":obj:`error_norm <sklearn.covariance.GraphicalLasso.error_norm>`\\"

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Computes the Mean Squared Error between two covariance estimators."
msgstr "Calcula el Error Cuadrático Medio entre dos estimadores de covarianza."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`fit <sklearn.covariance.GraphicalLasso.fit>`\\"
msgstr ":obj:`fit <sklearn.covariance.GraphicalLasso.fit>`\\"

#: of sklearn.covariance._graph_lasso.GraphicalLasso.fit:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Fits the GraphicalLasso model to X."
msgstr "Ajusta el modelo GraphicalLasso a X."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`get_params <sklearn.covariance.GraphicalLasso.get_params>`\\"
msgstr ":obj:`get_params <sklearn.covariance.GraphicalLasso.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`get_precision <sklearn.covariance.GraphicalLasso.get_precision>`\\"
msgstr ":obj:`get_precision <sklearn.covariance.GraphicalLasso.get_precision>`\\"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Getter for the precision matrix."
msgstr "Colector para la matriz de precisión."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`mahalanobis <sklearn.covariance.GraphicalLasso.mahalanobis>`\\"
msgstr ":obj:`mahalanobis <sklearn.covariance.GraphicalLasso.mahalanobis>`\\"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Computes the squared Mahalanobis distances of given observations."
msgstr "Calcula las distancias de mahalanobis cuadráticas de las observaciones dadas."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`score <sklearn.covariance.GraphicalLasso.score>`\\"
msgstr ":obj:`score <sklearn.covariance.GraphicalLasso.score>`\\"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Computes the log-likelihood of a Gaussian data set with `self.covariance_` as an estimator of its covariance matrix."
msgstr "Calcula el log-likelihood de un conjunto de datos Gaussiano con `self.covariance_` como un estimador de su matriz de covarianza."

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`set_params <sklearn.covariance.GraphicalLasso.set_params>`\\"
msgstr ":obj:`set_params <sklearn.covariance.GraphicalLasso.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:2
msgid "Computes the Mean Squared Error between two covariance estimators. (In the sense of the Frobenius norm)."
msgstr "Calcula el Error Cuadrático Medio entre dos estimadores de covarianza. (En el sentido de la norma Frobenius)."

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "**comp_cov**"
msgstr "**comp_cov**"

#: of
msgid "array-like of shape (n_features, n_features)"
msgstr "array-like de forma (n_features, n_features)"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "The covariance to compare with."
msgstr "La covarianza con la cual se compara."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:15
msgid "**norm**"
msgstr "**norm**"

#: of
msgid "{\"frobenius\", \"spectral\"}, default=\"frobenius\""
msgstr "{\"frobenius\", \"spectral\"}, default=\"frobenius\""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:12
msgid "The type of norm used to compute the error. Available error types: - 'frobenius' (default): sqrt(tr(A^t.A)) - 'spectral': sqrt(max(eigenvalues(A^t.A)) where A is the error ``(comp_cov - self.covariance_)``."
msgstr "El tipo de norma utilizada para calcular el error. Tipos de error disponibles: - 'frobenius' (por defecto): sqrt(tr(A^t.)) - 'spectral': sqrt(max(eigenvalues(A^t.A)) donde A es el error ``(comp_cov - self.covariance_)``."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:19
msgid "**scaling**"
msgstr "**scaling**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:18
msgid "If True (default), the squared error norm is divided by n_features. If False, the squared error norm is not rescaled."
msgstr "Si es True (predeterminado), la norma de error cuadrático es dividida por n_features. Si es False, la norma de error cuadrático no es reescalada."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:24
msgid "**squared**"
msgstr "**squared**"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:22
msgid "Whether to compute the squared error norm or the error norm. If True (default), the squared error norm is returned. If False, the error norm is returned."
msgstr "Si se calcula la norma de error cuadrático o la norma de error. Si es True (predeterminado) se devuelve la norma de error cuadrático. Si es False, se devuelve la norma de error."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit
msgid "Returns"
msgstr "Devoluciones"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:41
msgid "**result**"
msgstr "**result**"

#: of
msgid "float"
msgstr "float"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:29
msgid "The Mean Squared Error (in the sense of the Frobenius norm) between `self` and `comp_cov` covariance estimators."
msgstr "El Error Cuadrático Medio (en el sentido de la norma Frobenius) entre los estimadores de covarianza `self` y `comp_cov`."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:10
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.covariance._graph_lasso.GraphicalLasso.fit:8
msgid "Data from which to compute the covariance estimate"
msgstr "Datos desde los cuales calcular la estimación de covarianza"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit:11
msgid "**y**"
msgstr "**y**"

#: of
msgid "Ignored"
msgstr "Ignorado"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit:11
msgid "Not used, present for API consistency by convention."
msgstr "No se utiliza, está presente para la coherencia de la API por convención."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit:27
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "objeto"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros asignados a sus valores."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:9
msgid "The precision matrix associated to the current covariance object."
msgstr "La matriz de precisión asociada al objeto de covarianza actual."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:8
msgid "The observations, the Mahalanobis distances of the which we compute. Observations are assumed to be drawn from the same distribution than the data used in fit."
msgstr "Las observaciones, las distancias Mahalanobis de lo que calculamos. Se asume que las observaciones se extraen de la misma distribución que utilizaron los datos en el ajuste."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:26
msgid "**dist**"
msgstr "**dist**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:15
msgid "Squared Mahalanobis distances of the observations."
msgstr "Distancias de Mahalanobis cuadráticas de las observaciones."

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:12
msgid "**X_test**"
msgstr "**X_test**"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:9
msgid "Test data of which we compute the likelihood, where n_samples is the number of samples and n_features is the number of features. X_test is assumed to be drawn from the same distribution than the data used in fit (including centering)."
msgstr "Los datos de prueba de los cuales calculamos la probabilidad, donde n_samples es el número de muestras y n_features es el número de características. Se asume que X_test se extrae de la misma distribución que los datos utilizados (incluyendo el centrado)."

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:32
msgid "**res**"
msgstr "**res**"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:20
msgid "The likelihood of the data set with `self.covariance_` as an estimator of its covariance matrix."
msgstr "La probabilidad del conjunto de datos con `self.covariance_` como un estimador de su matriz de covarianza."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

