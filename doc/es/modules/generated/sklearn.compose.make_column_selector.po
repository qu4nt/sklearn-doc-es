msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:12\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.compose.make_column_selector.po\n"
"X-Crowdin-File-ID: 5298\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.compose.make_column_selector.rst:2
msgid ":mod:`sklearn.compose`.make_column_selector"
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:2
msgid "Create a callable to select columns to be used with :class:`ColumnTransformer`."
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:5
msgid ":func:`make_column_selector` can select columns based on datatype or the columns name with a regex. When using multiple selection criteria, **all** criteria must match for a column to be selected."
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector
msgid "Parameters"
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:13
msgid "**pattern**"
msgstr ""

#: of
msgid "str, default=None"
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:12
msgid "Name of columns containing this regex pattern will be included. If None, column selection will not be selected based on pattern."
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:17
msgid "**dtype_include**"
msgstr ""

#: of
msgid "column dtype or list of column dtypes, default=None"
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:16
msgid "A selection of dtypes to include. For more details, see :meth:`pandas.DataFrame.select_dtypes`."
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:21
msgid "**dtype_exclude**"
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:20
msgid "A selection of dtypes to exclude. For more details, see :meth:`pandas.DataFrame.select_dtypes`."
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector
msgid "Returns"
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:33
msgid "**selector**"
msgstr ""

#: of
msgid "callable"
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:26
msgid "Callable for column selection to be used by a :class:`ColumnTransformer`."
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:38
msgid ":obj:`ColumnTransformer`"
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:39
msgid "Class that allows combining the outputs of multiple transformer objects used on column subsets of the data into a single feature space."
msgstr ""

#: of sklearn.compose._column_transformer.make_column_selector:45
msgid "Examples"
msgstr ""

#: ../modules/generated/sklearn.compose.make_column_selector.examples:4
msgid "Examples using ``sklearn.compose.make_column_selector``"
msgstr ""

#: ../modules/generated/sklearn.compose.make_column_selector.examples:15
#: ../modules/generated/sklearn.compose.make_column_selector.examples:23
msgid ":ref:`sphx_glr_auto_examples_ensemble_plot_gradient_boosting_categorical.py`"
msgstr ""

#: ../modules/generated/sklearn.compose.make_column_selector.examples:34
#: ../modules/generated/sklearn.compose.make_column_selector.examples:42
msgid ":ref:`sphx_glr_auto_examples_compose_plot_column_transformer_mixed_types.py`"
msgstr ""

