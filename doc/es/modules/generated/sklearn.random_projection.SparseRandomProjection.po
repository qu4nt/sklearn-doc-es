msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-30 01:33\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.random_projection.SparseRandomProjection.po\n"
"X-Crowdin-File-ID: 5338\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.random_projection.SparseRandomProjection.rst:2
msgid ":mod:`sklearn.random_projection`.SparseRandomProjection"
msgstr ":mod:`sklearn.random_projection`.SparseRandomProjection"

#: of sklearn.random_projection.SparseRandomProjection:2
msgid "Reduce dimensionality through sparse random projection."
msgstr "Reduce la dimensionalidad mediante la proyección aleatoria dispersa."

#: of sklearn.random_projection.SparseRandomProjection:4
msgid "Sparse random matrix is an alternative to dense random projection matrix that guarantees similar embedding quality while being much more memory efficient and allowing faster computation of the projected data."
msgstr "La matriz aleatoria dispersa es una alternativa a la matriz de proyección aleatoria densa que garantiza una calidad de inserción(embedding) similar a la vez que es mucho más eficiente en términos de memoria y permite un cálculo más rápido de los datos proyectados."

#: of sklearn.random_projection.SparseRandomProjection:9
msgid "If we note `s = 1 / density` the components of the random matrix are drawn from:"
msgstr "Si observamos `s = 1 / density` los componentes de la matriz aleatoria se extraen de:"

#: of sklearn.random_projection.SparseRandomProjection:12
msgid "-sqrt(s) / sqrt(n_components)   with probability 1 / 2s"
msgstr "-sqrt(s) / sqrt(n_components)    con probabilidad 1 / 2s"

#: of sklearn.random_projection.SparseRandomProjection:13
msgid "0                              with probability 1 - 1 / s"
msgstr "0                              con probabilidad 1 - 1 / s"

#: of sklearn.random_projection.SparseRandomProjection:14
msgid "+sqrt(s) / sqrt(n_components)   with probability 1 / 2s"
msgstr "+sqrt(s) / sqrt(n_components)   con probabilidad 1 / 2s"

#: of sklearn.random_projection.SparseRandomProjection:16
msgid "Read more in the :ref:`User Guide <sparse_random_matrix>`."
msgstr "Más información en el :ref:`Manual de usuario <sparse_random_matrix>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.random_projection.BaseRandomProjection.fit
#: sklearn.random_projection.BaseRandomProjection.transform
#: sklearn.random_projection.SparseRandomProjection
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.random_projection.SparseRandomProjection:32
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int or 'auto', default='auto'"
msgstr "int o 'auto', default='auto'"

#: of sklearn.random_projection.SparseRandomProjection:23
msgid "Dimensionality of the target projection space."
msgstr "Dimensionalidad del espacio de proyección objetivo."

#: of sklearn.random_projection.SparseRandomProjection:25
msgid "n_components can be automatically adjusted according to the number of samples in the dataset and the bound given by the Johnson-Lindenstrauss lemma. In that case the quality of the embedding is controlled by the ``eps`` parameter."
msgstr "n_components puede ajustarse automáticamente según el número de muestras del conjunto de datos y el límite dado por el lema de Johnson-Lindenstrauss. En ese caso, la calidad de la inserción se controla con el parámetro ``eps``."

#: of sklearn.random_projection.SparseRandomProjection:30
msgid "It should be noted that Johnson-Lindenstrauss lemma can yield very conservative estimated of the required number of components as it makes no assumption on the structure of the dataset."
msgstr "Hay que tener en cuenta que el lema de Johnson-Lindenstrauss puede producir una estimación muy conservadora del número de componentes necesarios, ya que no hace ninguna suposición sobre la estructura del conjunto de datos."

#: of sklearn.random_projection.SparseRandomProjection:42
msgid "**density**"
msgstr "**density**"

#: of
msgid "float or 'auto', default='auto'"
msgstr "float o 'auto', default='auto'"

#: of sklearn.random_projection.SparseRandomProjection:35
msgid "Ratio in the range (0, 1] of non-zero component in the random projection matrix."
msgstr "Razón en el rango (0, 1] del componente distinto de cero en la matriz de proyección aleatoria."

#: of sklearn.random_projection.SparseRandomProjection:38
msgid "If density = 'auto', the value is set to the minimum density as recommended by Ping Li et al.: 1 / sqrt(n_features)."
msgstr "Si density = 'auto', el valor se establece en la densidad mínima recomendada por Ping Li et al: 1 / sqrt(n_features)."

#: of sklearn.random_projection.SparseRandomProjection:41
msgid "Use density = 1 / 3.0 if you want to reproduce the results from Achlioptas, 2001."
msgstr "Utiliza density = 1 / 3,0 si deseas reproducir los resultados de Achlioptas, 2001."

#: of sklearn.random_projection.SparseRandomProjection:50
msgid "**eps**"
msgstr "**eps**"

#: of
msgid "float, default=0.1"
msgstr "float, default=0.1"

#: of sklearn.random_projection.SparseRandomProjection:45
msgid "Parameter to control the quality of the embedding according to the Johnson-Lindenstrauss lemma when n_components is set to 'auto'. This value should be strictly positive."
msgstr "Parámetro para controlar la calidad de la inserción según el lema de Johnson-Lindenstrauss cuando n_components se establece en 'auto'. Este valor debe ser estrictamente positivo."

#: of sklearn.random_projection.SparseRandomProjection:49
msgid "Smaller values lead to better embedding and higher number of dimensions (n_components) in the target projection space."
msgstr "Los valores más pequeños conducen a una mejor inserción y a un mayor número de dimensiones (n_components) en el espacio de proyección objetivo."

#: of sklearn.random_projection.SparseRandomProjection:61
msgid "**dense_output**"
msgstr "**dense_output**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.random_projection.SparseRandomProjection:53
msgid "If True, ensure that the output of the random projection is a dense numpy array even if the input and random projection matrix are both sparse. In practice, if the number of components is small the number of zero components in the projected data will be very small and it will be more CPU and memory efficient to use a dense representation."
msgstr "Si es True, asegura que la salida de la proyección aleatoria es un arreglo numpy denso incluso si la matriz de entrada y la de proyección aleatoria son ambas dispersas. En la práctica, si el número de componentes es pequeño, el número de componentes cero en los datos proyectados será muy pequeño y será más eficiente para la CPU y la memoria utilizar una representación densa."

#: of sklearn.random_projection.SparseRandomProjection:60
msgid "If False, the projected data uses a sparse representation if the input is sparse."
msgstr "Si es False, los datos proyectados utilizan una representación dispersa si la entrada es dispersa."

#: of sklearn.random_projection.SparseRandomProjection:70
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, instancia RandomState o None, default=None"

#: of sklearn.random_projection.SparseRandomProjection:64
msgid "Controls the pseudo random number generator used to generate the projection matrix at fit time. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Controla el generador de números pseudoaleatorios utilizado para generar la matriz de proyección en el momento del ajuste. Pase un int para una salida reproducible a través de múltiples llamadas a la función. Véase :term:`Glosario <random_state>`."

#: of sklearn.random_projection.SparseRandomProjection
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.random_projection.SparseRandomProjection:75
msgid "**n_components_**"
msgstr "**n_components_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.random_projection.SparseRandomProjection:75
msgid "Concrete number of components computed when n_components=\"auto\"."
msgstr "Número concreto de componentes calculado cuando n_components=\"auto\"."

#: of sklearn.random_projection.SparseRandomProjection:79
msgid "**components_**"
msgstr "**components_**"

#: of
msgid "sparse matrix of shape (n_components, n_features)"
msgstr "sparse matrix de forma (n_components, n_features)"

#: of sklearn.random_projection.SparseRandomProjection:78
msgid "Random matrix used for the projection. Sparse matrix will be of CSR format."
msgstr "Matriz aleatoria utilizada para la proyección. La matriz dispersa tendrá el formato CSR."

#: of sklearn.random_projection.SparseRandomProjection:85
msgid "**density_**"
msgstr "**density_**"

#: of
msgid "float in range 0.0 - 1.0"
msgstr "float en el rango 0.0 - 1.0"

#: of sklearn.random_projection.SparseRandomProjection:82
msgid "Concrete density computed from when density = \"auto\"."
msgstr "Densidad concreta calculada cuando density = \"auto\"."

#: of sklearn.random_projection.SparseRandomProjection:90
msgid ":obj:`GaussianRandomProjection`"
msgstr ":obj:`GaussianRandomProjection`"

#: of sklearn.random_projection.SparseRandomProjection:95
msgid "References"
msgstr "Referencias"

#: of sklearn.random_projection.SparseRandomProjection:96
msgid "Ping Li, T. Hastie and K. W. Church, 2006, \"Very Sparse Random Projections\". https://web.stanford.edu/~hastie/Papers/Ping/KDD06_rp.pdf"
msgstr "Ping Li, T. Hastie y K. W. Church, 2006, \"Very Sparse Random Projections\". https://web.stanford.edu/~hastie/Papers/Ping/KDD06_rp.pdf"

#: of sklearn.random_projection.SparseRandomProjection:100
msgid "D. Achlioptas, 2001, \"Database-friendly random projections\", https://users.soe.ucsc.edu/~optas/papers/jl.pdf"
msgstr "D. Achlioptas, 2001, \"Database-friendly random projections\", https://users.soe.ucsc.edu/~optas/papers/jl.pdf"

#: of sklearn.random_projection.SparseRandomProjection:105
msgid "[R0fecf191e4b8-1]_, [R0fecf191e4b8-2]_"
msgstr "[R0fecf191e4b8-1]_, [R0fecf191e4b8-2]_"

#: of sklearn.random_projection.SparseRandomProjection:108
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.random_projection.SparseRandomProjection:122
msgid "Methods"
msgstr "Métodos"

#: of sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid ":obj:`fit <sklearn.random_projection.SparseRandomProjection.fit>`\\"
msgstr ":obj:`fit <sklearn.random_projection.SparseRandomProjection.fit>`\\"

#: of sklearn.random_projection.BaseRandomProjection.fit:2
#: sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid "Generate a sparse random projection matrix."
msgstr "Genera una matriz de proyección aleatoria dispersa."

#: of sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.random_projection.SparseRandomProjection.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.random_projection.SparseRandomProjection.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta los datos y luego los transforma."

#: of sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid ":obj:`get_params <sklearn.random_projection.SparseRandomProjection.get_params>`\\"
msgstr ":obj:`get_params <sklearn.random_projection.SparseRandomProjection.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid ":obj:`set_params <sklearn.random_projection.SparseRandomProjection.set_params>`\\"
msgstr ":obj:`set_params <sklearn.random_projection.SparseRandomProjection.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid ":obj:`transform <sklearn.random_projection.SparseRandomProjection.transform>`\\"
msgstr ":obj:`transform <sklearn.random_projection.SparseRandomProjection.transform>`\\"

#: of sklearn.random_projection.BaseRandomProjection.transform:2
#: sklearn.random_projection.SparseRandomProjection:130:<autosummary>:1
msgid "Project the data by using matrix product with the random matrix"
msgstr "Proyecta los datos mediante el producto de matrices con la matriz aleatoria"

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.random_projection.BaseRandomProjection.fit:10
#: sklearn.random_projection.BaseRandomProjection.transform:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.random_projection.BaseRandomProjection.fit:8
msgid "Training set: only the shape is used to find optimal random matrix dimensions based on the theory referenced in the afore mentioned papers."
msgstr "Conjunto de entrenamiento: sólo se utiliza shape para encontrar las dimensiones óptimas de la matriz aleatoria basándose en la teoría referida en los artículos mencionados anteriormente."

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.random_projection.BaseRandomProjection.fit:13
msgid "**y**"
msgstr "**y**"

#: of sklearn.random_projection.BaseRandomProjection.fit:13
msgid "Ignored"
msgstr "Ignorado"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.random_projection.BaseRandomProjection.fit
#: sklearn.random_projection.BaseRandomProjection.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.random_projection.BaseRandomProjection.fit:29
msgid "self"
msgstr "self"

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` e `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.random_projection.BaseRandomProjection.transform:24
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "array ndarray de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.random_projection.BaseRandomProjection.transform:8
msgid "The input data to project into a smaller dimensional space."
msgstr "Los datos de entrada para proyectar en un espacio de menor dimensión."

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_components)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_components)"

#: of sklearn.random_projection.BaseRandomProjection.transform:13
msgid "Projected array."
msgstr "Arreglo proyectado."

#: ../modules/generated/sklearn.random_projection.SparseRandomProjection.examples:4
msgid "Examples using ``sklearn.random_projection.SparseRandomProjection``"
msgstr "Ejemplos utilizando ``sklearn.random_projection.SparseRandomProjection``"

#: ../modules/generated/sklearn.random_projection.SparseRandomProjection.examples:15
#: ../modules/generated/sklearn.random_projection.SparseRandomProjection.examples:23
msgid ":ref:`sphx_glr_auto_examples_manifold_plot_lle_digits.py`"
msgstr ":ref:`sphx_glr_auto_examples_manifold_plot_lle_digits.py`"

#: ../modules/generated/sklearn.random_projection.SparseRandomProjection.examples:34
#: ../modules/generated/sklearn.random_projection.SparseRandomProjection.examples:42
#: ../modules/generated/sklearn.random_projection.SparseRandomProjection.examples:53
#: ../modules/generated/sklearn.random_projection.SparseRandomProjection.examples:61
msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_johnson_lindenstrauss_bound.py`"
msgstr ":ref:`sphx_glr_auto_examples_miscellaneous_plot_johnson_lindenstrauss_bound.py`"

