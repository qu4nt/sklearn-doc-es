msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:56-0400\n"
"PO-Revision-Date: 2021-04-15 06:01\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.RidgeCV.po\n"
"X-Crowdin-File-ID: 4978\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.RidgeCV.rst:2
msgid ":mod:`sklearn.linear_model`.RidgeCV"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:2
msgid "Ridge regression with built-in cross-validation."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:4
msgid "See glossary entry for :term:`cross-validation estimator`."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:6
msgid "By default, it performs efficient Leave-One-Out Cross-Validation."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:8
msgid "Read more in the :ref:`User Guide <ridge_regression>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._ridge.RidgeCV
#: sklearn.linear_model._ridge._BaseRidgeCV.fit
msgid "Parameters"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:20
msgid "**alphas**"
msgstr ""

#: of
msgid "ndarray of shape (n_alphas,), default=(0.1, 1.0, 10.0)"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:13
msgid "Array of alpha values to try. Regularization strength; must be a positive float. Regularization improves the conditioning of the problem and reduces the variance of the estimates. Larger values specify stronger regularization. Alpha corresponds to ``1 / (2C)`` in other linear models such as :class:`~sklearn.linear_model.LogisticRegression` or :class:`~sklearn.svm.LinearSVC`. If using Leave-One-Out cross-validation, alphas must be positive."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:25
msgid "**fit_intercept**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:23
msgid "Whether to calculate the intercept for this model. If set to false, no intercept will be used in calculations (i.e. data is expected to be centered)."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:33
msgid "**normalize**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:28
msgid "This parameter is ignored when ``fit_intercept`` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm. If you wish to standardize, please use :class:`~sklearn.preprocessing.StandardScaler` before calling ``fit`` on an estimator with ``normalize=False``."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:41
msgid "**scoring**"
msgstr ""

#: of
msgid "string, callable, default=None"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:36
msgid "A string (see model evaluation documentation) or a scorer callable object / function with signature ``scorer(estimator, X, y)``. If None, the negative mean squared error if cv is 'auto' or None (i.e. when using leave-one-out cross-validation), and r2 score otherwise."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:57
msgid "**cv**"
msgstr ""

#: of
msgid "int, cross-validation generator or an iterable, default=None"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:44
msgid "Determines the cross-validation splitting strategy. Possible inputs for cv are:"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:47
msgid "None, to use the efficient Leave-One-Out cross-validation"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:48
msgid "integer, to specify the number of folds."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:49
msgid ":term:`CV splitter`,"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:50
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:52
msgid "For integer/None inputs, if ``y`` is binary or multiclass, :class:`~sklearn.model_selection.StratifiedKFold` is used, else, :class:`~sklearn.model_selection.KFold` is used."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:56
msgid "Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:69
msgid "**gcv_mode**"
msgstr ""

#: of
msgid "{'auto', 'svd', eigen'}, default='auto'"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:60
msgid "Flag indicating which strategy to use when performing Leave-One-Out Cross-Validation. Options are::"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:68
msgid "The 'auto' mode is the default and is intended to pick the cheaper option of the two depending on the shape of the training data."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:75
msgid "**store_cv_values**"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:72
msgid "Flag indicating if the cross-validation values corresponding to each alpha should be stored in the ``cv_values_`` attribute (see below). This flag is only compatible with ``cv=None`` (i.e. using Leave-One-Out Cross-Validation)."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:87
msgid "**alpha_per_target**"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:78
msgid "Flag indicating whether to optimize the alpha value (picked from the `alphas` parameter list) for each target separately (for multi-output settings: multiple prediction targets). When set to `True`, after fitting, the `alpha_` attribute will contain a value for each target. When set to `False`, a single alpha is used for all targets."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV
msgid "Attributes"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:96
msgid "**cv_values_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_alphas) or         shape (n_samples, n_targets, n_alphas), optional"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:92
msgid "Cross-validation values for each alpha (only available if ``store_cv_values=True`` and ``cv=None``). After ``fit()`` has been called, this attribute will contain the mean squared errors (by default) or the values of the ``{loss,score}_func`` function (if provided in the constructor)."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:99
msgid "**coef_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features) or (n_targets, n_features)"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:99
msgid "Weight vector(s)."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:103
msgid "**intercept_**"
msgstr ""

#: of
msgid "float or ndarray of shape (n_targets,)"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:102
msgid "Independent term in decision function. Set to 0.0 if ``fit_intercept = False``."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:107
msgid "**alpha_**"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:106
msgid "Estimated regularization parameter, or, if ``alpha_per_target=True``, the estimated regularization parameter for each target."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:116
msgid "**best_score_**"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:110
msgid "Score of base estimator with best alpha, or, if ``alpha_per_target=True``, a score for each target."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:121
msgid ":obj:`Ridge`"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:122
msgid "Ridge regression."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:123
msgid ":obj:`RidgeClassifier`"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:124
msgid "Ridge classifier."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:125
msgid ":obj:`RidgeClassifierCV`"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:126
msgid "Ridge classifier with built-in cross validation."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:132
msgid "Examples"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:141
msgid "Methods"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.RidgeCV.fit>`\\"
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
#: sklearn.linear_model._ridge._BaseRidgeCV.fit:2
msgid "Fit Ridge regression model with cv."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.RidgeCV.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.RidgeCV.predict>`\\"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:2
#: sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
msgid "Predict using the linear model."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.RidgeCV.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.RidgeCV.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._ridge.RidgeCV:149:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._base.LinearModel.predict:8
#: sklearn.linear_model._ridge._BaseRidgeCV.fit:9
msgid "**X**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._ridge._BaseRidgeCV.fit:8
msgid "Training data. If using GCV, will be cast to float64 if necessary."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._ridge._BaseRidgeCV.fit:12
msgid "**y**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,) or (n_samples, n_targets)"
msgstr ""

#: of sklearn.linear_model._ridge._BaseRidgeCV.fit:12
msgid "Target values. Will be cast to X's dtype if necessary."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.linear_model._ridge._BaseRidgeCV.fit:16
msgid "**sample_weight**"
msgstr ""

#: of
msgid "float or ndarray of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.linear_model._ridge._BaseRidgeCV.fit:15
msgid "Individual weights for each sample. If given a float, every sample will have the same weight."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._ridge._BaseRidgeCV.fit
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.linear_model._ridge._BaseRidgeCV.fit:28
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.linear_model._ridge._BaseRidgeCV.fit:31
msgid "Notes"
msgstr ""

#: of sklearn.linear_model._ridge._BaseRidgeCV.fit:32
msgid "When sample_weight is provided, the selected hyperparameter may depend on whether we use leave-one-out cross-validation (cv=None or cv='auto') or another form of cross-validation, because only leave-one-out cross-validation takes the sample weights into account when computing the validation score."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:8
msgid "Samples."
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:24
msgid "**C**"
msgstr ""

#: of
msgid "array, shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:13
msgid "Returns predicted values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.linear_model.RidgeCV.examples:4
msgid "Examples using ``sklearn.linear_model.RidgeCV``"
msgstr ""

#: ../modules/generated/sklearn.linear_model.RidgeCV.examples:15
#: ../modules/generated/sklearn.linear_model.RidgeCV.examples:23
msgid ":ref:`sphx_glr_auto_examples_inspection_plot_linear_model_coefficient_interpretation.py`"
msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_ensemble_plot_stack_predictors.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_multioutput_face_completion.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_transformed_target.py`"
#~ msgstr ""

