msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:11\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.feature_extraction.image.PatchExtractor.po\n"
"X-Crowdin-File-ID: 5412\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.feature_extraction.image.PatchExtractor.rst:2
msgid ":mod:`sklearn.feature_extraction.image`.PatchExtractor"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:2
msgid "Extracts patches from a collection of images"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:4
msgid "Read more in the :ref:`User Guide <image_feature_extraction>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.feature_extraction.image.PatchExtractor
#: sklearn.feature_extraction.image.PatchExtractor.fit
#: sklearn.feature_extraction.image.PatchExtractor.transform
msgid "Parameters"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:11
msgid "**patch_size**"
msgstr ""

#: of
msgid "tuple of int (patch_height, patch_width), default=None"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:11
msgid "The dimensions of one patch."
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:16
msgid "**max_patches**"
msgstr ""

#: of
msgid "int or float, default=None"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:14
msgid "The maximum number of patches per image to extract. If max_patches is a float in (0, 1), it is taken to mean a proportion of the total number of patches."
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:32
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance, default=None"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:19
msgid "Determines the random number generator used for random sampling when `max_patches` is not None. Use an int to make the randomness deterministic. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:35
msgid "Examples"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:49
msgid "Methods"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:56:<autosummary>:1
msgid ":obj:`fit <sklearn.feature_extraction.image.PatchExtractor.fit>`\\"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor.fit:2
#: sklearn.feature_extraction.image.PatchExtractor:56:<autosummary>:1
msgid "Do nothing and return the estimator unchanged."
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:56:<autosummary>:1
msgid ":obj:`get_params <sklearn.feature_extraction.image.PatchExtractor.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.feature_extraction.image.PatchExtractor:56:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:56:<autosummary>:1
msgid ":obj:`set_params <sklearn.feature_extraction.image.PatchExtractor.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.feature_extraction.image.PatchExtractor:56:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor:56:<autosummary>:1
msgid ":obj:`transform <sklearn.feature_extraction.image.PatchExtractor.transform>`\\"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor.transform:2
#: sklearn.feature_extraction.image.PatchExtractor:56:<autosummary>:1
msgid "Transforms the image samples in X into a matrix of patch data."
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor.fit:4
msgid "This method is just there to implement the usual API and hence work in pipelines."
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor.fit:22
#: sklearn.feature_extraction.image.PatchExtractor.transform:10
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor.fit:10
msgid "Training data."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.feature_extraction.image.PatchExtractor.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, image_height, image_width) or             (n_samples, image_height, image_width, n_channels)"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor.transform:8
msgid "Array of images from which to extract patches. For color images, the last dimension specifies the channel: a RGB image would have `n_channels=3`."
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor.transform:28
msgid "**patches**"
msgstr ""

#: of
msgid "array of shape (n_patches, patch_height, patch_width) or              (n_patches, patch_height, patch_width, n_channels)"
msgstr ""

#: of sklearn.feature_extraction.image.PatchExtractor.transform:15
msgid "The collection of patches extracted from the images, where `n_patches` is either `n_samples * max_patches` or the total number of patches that can be extracted."
msgstr ""

