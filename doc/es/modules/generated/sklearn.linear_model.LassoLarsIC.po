msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 00:00\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.LassoLarsIC.po\n"
"X-Crowdin-File-ID: 3282\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.LassoLarsIC.rst:2
msgid ":mod:`sklearn.linear_model`.LassoLarsIC"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:2
msgid "Lasso model fit with Lars using BIC or AIC for model selection"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:4
msgid "The optimization objective for Lasso is::"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:8
msgid "AIC is the Akaike information criterion and BIC is the Bayes Information criterion. Such criteria are useful to select the value of the regularization parameter by making a trade-off between the goodness of fit and the complexity of the model. A good model should explain well the data while being simple."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:14
msgid "Read more in the :ref:`User Guide <least_angle_regression>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._least_angle.LassoLarsIC
#: sklearn.linear_model._least_angle.LassoLarsIC.fit
msgid "Parameters"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:19
msgid "**criterion**"
msgstr ""

#: of
msgid "{'bic' , 'aic'}, default='aic'"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:19
msgid "The type of criterion to use."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:24
msgid "**fit_intercept**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:22
msgid "whether to calculate the intercept for this model. If set to false, no intercept will be used in calculations (i.e. data is expected to be centered)."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:27
msgid "**verbose**"
msgstr ""

#: of
msgid "bool or int, default=False"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:27
msgid "Sets the verbosity amount."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:35
msgid "**normalize**"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:30
msgid "This parameter is ignored when ``fit_intercept`` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm. If you wish to standardize, please use :class:`~sklearn.preprocessing.StandardScaler` before calling ``fit`` on an estimator with ``normalize=False``."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:40
msgid "**precompute**"
msgstr ""

#: of
msgid "bool, 'auto' or array-like, default='auto'"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:38
msgid "Whether to use a precomputed Gram matrix to speed up calculations. If set to ``'auto'`` let us decide. The Gram matrix can also be passed as argument."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:44
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=500"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:43
msgid "Maximum number of iterations to perform. Can be used for early stopping."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:51
msgid "**eps**"
msgstr ""

#: of
msgid "float, default=np.finfo(float).eps"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:47
msgid "The machine-precision regularization in the computation of the Cholesky diagonal factors. Increase this for very ill-conditioned systems. Unlike the ``tol`` parameter in some iterative optimization-based algorithms, this parameter does not control the tolerance of the optimization."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:54
#: sklearn.linear_model._least_angle.LassoLarsIC.fit:16
msgid "**copy_X**"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:54
msgid "If True, X will be copied; else, it may be overwritten."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:69
msgid "**positive**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:57
msgid "Restrict coefficients to be >= 0. Be aware that you might want to remove fit_intercept which is set True by default. Under the positive restriction the model coefficients do not converge to the ordinary-least-squares solution for small values of alpha. Only coefficients up to the smallest alpha value (``alphas_[alphas_ > 0.].min()`` when fit_path=True) reached by the stepwise Lars-Lasso algorithm are typically in congruence with the solution of the coordinate descent Lasso estimator. As a consequence using LassoLarsIC only makes sense for problems where a sparse solution is expected and/or reached."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC
msgid "Attributes"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:74
msgid "**coef_**"
msgstr ""

#: of
msgid "array-like of shape (n_features,)"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:74
msgid "parameter vector (w in the formulation formula)"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:77
msgid "**intercept_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:77
msgid "independent term in decision function."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:80
msgid "**alpha_**"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:80
msgid "the alpha parameter chosen by the information criterion"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:86
msgid "**alphas_**"
msgstr ""

#: of
msgid "array-like of shape (n_alphas + 1,) or list of such arrays"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:83
msgid "Maximum of covariances (in absolute value) at each iteration. ``n_alphas`` is either ``max_iter``, ``n_features`` or the number of nodes in the path with ``alpha >= alpha_min``, whichever is smaller. If a list, it will be of length `n_targets`."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:90
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:89
msgid "number of iterations run by lars_path to find the grid of alphas."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:99
msgid "**criterion_**"
msgstr ""

#: of
msgid "array-like of shape (n_alphas,)"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:93
msgid "The value of the information criteria ('aic', 'bic') across all alphas. The alpha which has the smallest information criterion is chosen. This value is larger by a factor of ``n_samples`` compared to Eqns. 2.15 and 2.16 in (Zou et al, 2007)."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:104
msgid ":obj:`lars_path`, :obj:`LassoLars`, :obj:`LassoLarsCV`"
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.linear_model._least_angle.LassoLarsIC:108
msgid "Notes"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:109
msgid "The estimation of the number of degrees of freedom is given by:"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:111
msgid "\"On the degrees of freedom of the lasso\" Hui Zou, Trevor Hastie, and Robert Tibshirani Ann. Statist. Volume 35, Number 5 (2007), 2173-2192."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:115
msgid "https://en.wikipedia.org/wiki/Akaike_information_criterion https://en.wikipedia.org/wiki/Bayesian_information_criterion"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:120
msgid "Examples"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:129
msgid "Methods"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.LassoLarsIC.fit>`\\"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC.fit:2
#: sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid "Fit the model using X, y as training data."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.LassoLarsIC.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.LassoLarsIC.predict>`\\"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:2
#: sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid "Predict using the linear model."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.LassoLarsIC.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.LassoLarsIC.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._least_angle.LassoLarsIC:137:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._base.LinearModel.predict:8
#: sklearn.linear_model._least_angle.LassoLarsIC.fit:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC.fit:8
msgid "training data."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._least_angle.LassoLarsIC.fit:11
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC.fit:11
msgid "target values. Will be cast to X's dtype if necessary"
msgstr ""

#: of
msgid "bool, default=None"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC.fit:14
msgid "If provided, this parameter will override the choice of copy_X made at instance creation. If ``True``, X will be copied; else, it may be overwritten."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._least_angle.LassoLarsIC.fit
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.linear_model._least_angle.LassoLarsIC.fit:32
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.linear_model._least_angle.LassoLarsIC.fit:21
msgid "returns an instance of self."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:8
msgid "Samples."
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:24
msgid "**C**"
msgstr ""

#: of
msgid "array, shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:13
msgid "Returns predicted values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.linear_model.LassoLarsIC.examples:4
msgid "Examples using ``sklearn.linear_model.LassoLarsIC``"
msgstr ""

#: ../modules/generated/sklearn.linear_model.LassoLarsIC.examples:15
#: ../modules/generated/sklearn.linear_model.LassoLarsIC.examples:23
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_lasso_model_selection.py`"
msgstr ""

