msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:10\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.StackingRegressor.po\n"
"X-Crowdin-File-ID: 5196\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.StackingRegressor.rst:2
msgid ":mod:`sklearn.ensemble`.StackingRegressor"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:2
msgid "Stack of estimators with a final regressor."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:4
msgid "Stacked generalization consists in stacking the output of individual estimator and use a regressor to compute the final prediction. Stacking allows to use the strength of each individual estimator by using their output as input of a final estimator."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:9
msgid "Note that `estimators_` are fitted on the full `X` while `final_estimator_` is trained using cross-validated predictions of the base estimators using `cross_val_predict`."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:13
msgid "Read more in the :ref:`User Guide <stacking>`."
msgstr ""

#: of sklearn.base.RegressorMixin.score
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params
#: sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params
#: sklearn.ensemble._stacking.StackingRegressor
#: sklearn.ensemble._stacking.StackingRegressor.fit
#: sklearn.ensemble._stacking.StackingRegressor.transform
#: sklearn.ensemble._stacking._BaseStacking.predict
msgid "Parameters"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:22
msgid "**estimators**"
msgstr ""

#: of
msgid "list of (str, estimator)"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:20
msgid "Base estimators which will be stacked together. Each element of the list is defined as a tuple of string (i.e. name) and an estimator instance. An estimator can be set to 'drop' using `set_params`."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:26
msgid "**final_estimator**"
msgstr ""

#: of
msgid "estimator, default=None"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:25
msgid "A regressor which will be used to combine the base estimators. The default regressor is a :class:`~sklearn.linear_model.RidgeCV`."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:50
msgid "**cv**"
msgstr ""

#: of
msgid "int, cross-validation generator or an iterable, default=None"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:29
msgid "Determines the cross-validation splitting strategy used in `cross_val_predict` to train `final_estimator`. Possible inputs for cv are:"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:33
msgid "None, to use the default 5-fold cross validation,"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:34
msgid "integer, to specify the number of folds in a (Stratified) KFold,"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:35
msgid "An object to be used as a cross-validation generator,"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:36
msgid "An iterable yielding train, test splits."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:38
msgid "For integer/None inputs, if the estimator is a classifier and y is either binary or multiclass, :class:`~sklearn.model_selection.StratifiedKFold` is used. In all other cases, :class:`~sklearn.model_selection.KFold` is used."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:43
msgid "Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:47
msgid "A larger number of split will provide no benefits if the number of training samples is large enough. Indeed, the training time will increase. ``cv`` is not used for model evaluation but for prediction."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:55
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:53
msgid "The number of jobs to run in parallel for `fit` of all `estimators`. `None` means 1 unless in a `joblib.parallel_backend` context. -1 means using all processors. See Glossary for more details."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:61
msgid "**passthrough**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:58
msgid "When False, only the predictions of estimators will be used as training data for `final_estimator`. When True, the `final_estimator` is trained on the predictions as well as the original training data."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:67
msgid "**verbose**"
msgstr ""

#: of
msgid "int, default=0"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:64
msgid "Verbosity level."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor
msgid "Attributes"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:74
msgid "**estimators_**"
msgstr ""

#: of
msgid "list of estimator"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:72
msgid "The elements of the estimators parameter, having been fitted on the training data. If an estimator has been set to `'drop'`, it will not appear in `estimators_`."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:77
msgid "**named_estimators_** : :class:`~sklearn.utils.Bunch`"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:76
msgid "Bunch"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:77
msgid "Attribute to access any fitted sub-estimators by name."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:85
msgid "**final_estimator_**"
msgstr ""

#: of
msgid "estimator"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:80
msgid "The regressor to stacked the base estimators fitted."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:88
msgid "References"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:89
msgid "Wolpert, David H. \"Stacked generalization.\" Neural networks 5.2 (1992): 241-259."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:94
msgid "[R606df7ffad02-1]_"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:97
msgid "Examples"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:121
msgid "Methods"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.StackingRegressor.fit>`\\"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor.fit:2
#: sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid "Fit the estimators."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.ensemble.StackingRegressor.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.StackingRegressor.get_params>`\\"
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:2
#: sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid "Get the parameters of an estimator from the ensemble."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.StackingRegressor.predict>`\\"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
#: sklearn.ensemble._stacking._BaseStacking.predict:2
msgid "Predict target for X."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid ":obj:`score <sklearn.ensemble.StackingRegressor.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.StackingRegressor.set_params>`\\"
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:2
#: sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid "Set the parameters of an estimator from the ensemble."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid ":obj:`transform <sklearn.ensemble.StackingRegressor.transform>`\\"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor.transform:2
#: sklearn.ensemble._stacking.StackingRegressor:131:<autosummary>:1
msgid "Return the predictions for X for each estimator."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.ensemble._stacking.StackingRegressor.fit:9
#: sklearn.ensemble._stacking.StackingRegressor.transform:9
#: sklearn.ensemble._stacking._BaseStacking.predict:9
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor.fit:8
#: sklearn.ensemble._stacking._BaseStacking.predict:8
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.ensemble._stacking.StackingRegressor.fit:12
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor.fit:12
msgid "Target values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.ensemble._stacking.StackingRegressor.fit:17
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor.fit:15
msgid "Sample weights. If None, then samples are equally weighted. Note that this is supported only if all underlying estimators support sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.ensemble._stacking.StackingRegressor.fit
#: sklearn.ensemble._stacking.StackingRegressor.transform
#: sklearn.ensemble._stacking._BaseStacking.predict
msgid "Returns"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor.fit:33
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:4
msgid "Returns the parameters given in the constructor as well as the estimators contained within the `estimators` parameter."
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:23
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:10
msgid "Setting it to True gets the various estimators and the parameters of the estimators as well."
msgstr ""

#: of sklearn.ensemble.StackingRegressor.n_features_in_:2
msgid "Number of features seen during :term:`fit`."
msgstr ""

#: of sklearn.ensemble._stacking._BaseStacking.predict:15
msgid "**\\*\\*predict_params**"
msgstr ""

#: of
msgid "dict of str -> obj"
msgstr ""

#: of sklearn.ensemble._stacking._BaseStacking.predict:12
msgid "Parameters to the `predict` called by the `final_estimator`. Note that this may be used to return uncertainties from some estimators with `return_std` or `return_cov`. Be aware that it will only accounts for uncertainty in the final estimator."
msgstr ""

#: of sklearn.ensemble._stacking._BaseStacking.predict:31
msgid "**y_pred**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,) or (n_samples, n_output)"
msgstr ""

#: of sklearn.ensemble._stacking._BaseStacking.predict:20
msgid "Predicted targets."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:4
msgid "Valid parameter keys can be listed with `get_params()`. Note that you can directly set the parameters of the estimators contained in `estimators`."
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:27
msgid "**\\*\\*params**"
msgstr ""

#: of
msgid "keyword arguments"
msgstr ""

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:11
msgid "Specific parameters using e.g. `set_params(parameter_name=new_value)`. In addition, to setting the parameters of the estimator, the individual estimator of the estimators can also be set, or can be removed by setting them to 'drop'."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor.transform:8
msgid "Training vectors, where `n_samples` is the number of samples and `n_features` is the number of features."
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor.transform:25
msgid "**y_preds**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_estimators)"
msgstr ""

#: of sklearn.ensemble._stacking.StackingRegressor.transform:14
msgid "Prediction outputs for each estimator."
msgstr ""

#: ../modules/generated/sklearn.ensemble.StackingRegressor.examples:4
msgid "Examples using ``sklearn.ensemble.StackingRegressor``"
msgstr ""

#: ../modules/generated/sklearn.ensemble.StackingRegressor.examples:15
#: ../modules/generated/sklearn.ensemble.StackingRegressor.examples:23
msgid ":ref:`sphx_glr_auto_examples_ensemble_plot_stack_predictors.py`"
msgstr ""

