msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-16 12:19\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.utils.check_X_y.po\n"
"X-Crowdin-File-ID: 5104\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.utils.check_X_y.rst:2
msgid ":mod:`sklearn.utils`.check_X_y"
msgstr ":mod:`sklearn.utils`.check_X_y"

#: of sklearn.utils.validation.check_X_y:2
msgid "Input validation for standard estimators."
msgstr "Validación de entrada para estimadores estándar."

#: of sklearn.utils.validation.check_X_y:4
msgid "Checks X and y for consistent length, enforces X to be 2D and y 1D. By default, X is checked to be non-empty and containing only finite values. Standard input checks are also applied to y, such as checking that y does not have np.nan or np.inf targets. For multi-label y, set multi_output=True to allow 2D and sparse y. If the dtype of X is object, attempt converting to float, raising on failure."
msgstr "Comprueba X e y si hay una longitud consistente, obliga a X a ser 2D e y 1D. De forma predeterminada, X está marcado como no vacío y contiene sólo valores finitos. Los controles de entrada estándar también se aplican a y, como comprobar que y no tiene objetivos np.nan o np.inf. Para la etiqueta múltiple y, establece multi_output=True para permitir 2D y Sparse y. Si el tipo de X es un objeto, intente convertir a flotante, generando un fallo."

#: of sklearn.utils.validation.check_X_y
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.utils.validation.check_X_y:14
msgid "**X**"
msgstr "**X**"

#: of
msgid "{ndarray, list, sparse matrix}"
msgstr "{ndarray, list, sparse matrix}"

#: of sklearn.utils.validation.check_X_y:14
msgid "Input data."
msgstr "Datos de entrada."

#: of sklearn.utils.validation.check_X_y:17
msgid "**y**"
msgstr "**y**"

#: of sklearn.utils.validation.check_X_y:17
msgid "Labels."
msgstr "Etiquetas."

#: of sklearn.utils.validation.check_X_y:24
msgid "**accept_sparse**"
msgstr "**accept_sparse**"

#: of
msgid "str, bool or list of str, default=False"
msgstr "str, bool o lista de str, default=False"

#: of sklearn.utils.validation.check_X_y:20
msgid "String[s] representing allowed sparse matrix formats, such as 'csc', 'csr', etc. If the input is sparse but not in the allowed format, it will be converted to the first listed format. True allows the input to be any format. False means that a sparse matrix input will raise an error."
msgstr "Cadena[s] que representa los formatos de matriz dispersa permitidos, como 'csc', 'csr', etc. Si la entrada es dispersa pero no está en el formato permitido, se convertirá al primer formato de la lista. True permite que la entrada sea cualquier formato. False significa que una entrada de matriz dispersa dará lugar a un error."

#: of sklearn.utils.validation.check_X_y:31
msgid "**accept_large_sparse**"
msgstr "**accept_large_sparse**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.utils.validation.check_X_y:27
msgid "If a CSR, CSC, COO or BSR sparse matrix is supplied and accepted by accept_sparse, accept_large_sparse will cause it to be accepted only if its indices are stored with a 32-bit dtype."
msgstr "Si se suministra una matriz dispersa CSR, CSC, COO o BSR y se acepta mediante accept_sparse, accept_large_sparse=False hará que se acepte sólo si sus índices se almacenan con un dtype de 32 bits."

#: of sklearn.utils.validation.check_X_y:37
msgid "**dtype**"
msgstr "**dtype**"

#: of
msgid "'numeric', type, list of type or None, default='numeric'"
msgstr "'numeric', tipo, lista de tipos o None, default='numeric'"

#: of sklearn.utils.validation.check_X_y:34
msgid "Data type of result. If None, the dtype of the input is preserved. If \"numeric\", dtype is preserved unless array.dtype is object. If dtype is a list of types, conversion on the first type is only performed if the dtype of the input is not in the list."
msgstr "Tipo de datos del resultado. Si es None, se conserva el dtype de la entrada. Si es \"numeric\", se preserva el tipo de datos a menos que array.dtype sea un objeto. Si dtype es una lista de tipos, la conversión en el primer tipo sólo se realiza si el dtype de la entrada no está en la lista."

#: of sklearn.utils.validation.check_X_y:40
msgid "**order**"
msgstr "**order**"

#: of
msgid "{'F', 'C'}, default=None"
msgstr "{'F', 'C'}, default=None"

#: of sklearn.utils.validation.check_X_y:40
msgid "Whether an array will be forced to be fortran or c-style."
msgstr "Si un arreglo será forzado a ser de estilo fortran o c."

#: of sklearn.utils.validation.check_X_y:44
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.utils.validation.check_X_y:43
msgid "Whether a forced copy will be triggered. If copy=False, a copy might be triggered by a conversion."
msgstr "Si se activará una copia forzada. Si copy=False, una copia podría ser desencadenada por una conversión."

#: of sklearn.utils.validation.check_X_y:60
msgid "**force_all_finite**"
msgstr "**force_all_finite**"

#: of
msgid "bool or 'allow-nan', default=True"
msgstr "bool o 'allow-nan', default=True"

#: of sklearn.utils.validation.check_X_y:47
msgid "Whether to raise an error on np.inf, np.nan, pd.NA in X. This parameter does not influence whether y can have np.inf, np.nan, pd.NA values. The possibilities are:"
msgstr "Si se produce un error sobre np.inf, np.nan, pd.NA en X. Este parámetro no influye en si y puede tener valores np.inf, np.nan, pd.NA. Las posibilidades son:"

#: of sklearn.utils.validation.check_X_y:51
msgid "True: Force all values of X to be finite."
msgstr "True: Fuerza que todos los valores X sean finitos."

#: of sklearn.utils.validation.check_X_y:52
msgid "False: accepts np.inf, np.nan, pd.NA in X."
msgstr "False: acepta en X np.inf, np.nan, pd.NA."

#: of sklearn.utils.validation.check_X_y:53
msgid "'allow-nan': accepts only np.nan or pd.NA values in X. Values cannot be infinite."
msgstr "'allow-nan': sólo acepta en X valores np.nan y pd.NA. Los valores no pueden ser infinitos."

#: of sklearn.utils.validation.check_X_y:56
msgid "``force_all_finite`` accepts the string ``'allow-nan'``."
msgstr "``force_all_finite`` acepta la cadena ``'allow-nan'``."

#: of sklearn.utils.validation.check_X_y:59
msgid "Accepts `pd.NA` and converts it into `np.nan`"
msgstr "Acepta `pd.NA` y lo convierte en `np.nan`"

#: of sklearn.utils.validation.check_X_y:63
msgid "**ensure_2d**"
msgstr "**ensure_2d**"

#: of sklearn.utils.validation.check_X_y:63
msgid "Whether to raise a value error if X is not 2D."
msgstr "Si se produce un error de valor si X no es 2D."

#: of sklearn.utils.validation.check_X_y:66
msgid "**allow_nd**"
msgstr "**allow_nd**"

#: of sklearn.utils.validation.check_X_y:66
msgid "Whether to allow X.ndim > 2."
msgstr "Permitir o no X.ndim > 2."

#: of sklearn.utils.validation.check_X_y:71
msgid "**multi_output**"
msgstr "**multi_output**"

#: of sklearn.utils.validation.check_X_y:69
msgid "Whether to allow 2D y (array or sparse matrix). If false, y will be validated as a vector. y cannot have np.nan or np.inf values if multi_output=True."
msgstr "Si permitir y 2D (arreglo o matriz dispersa). Si es falso, y será validado como un vector. y no puede tener valores np.nan o np.inf si multi_output=True."

#: of sklearn.utils.validation.check_X_y:75
msgid "**ensure_min_samples**"
msgstr "**ensure_min_samples**"

#: of
msgid "int, default=1"
msgstr "int, default=1"

#: of sklearn.utils.validation.check_X_y:74
msgid "Make sure that X has a minimum number of samples in its first axis (rows for a 2D array)."
msgstr "Asegúrate de que X tiene un número mínimo de muestras en su primer eje (filas para un arreglo 2D)."

#: of sklearn.utils.validation.check_X_y:82
msgid "**ensure_min_features**"
msgstr "**ensure_min_features**"

#: of sklearn.utils.validation.check_X_y:78
msgid "Make sure that the 2D array has some minimum number of features (columns). The default value of 1 rejects empty datasets. This check is only enforced when X has effectively 2 dimensions or is originally 1D and ``ensure_2d`` is True. Setting to 0 disables this check."
msgstr "Asegúrate de que el arreglo 2D tiene un número mínimo de características (columnas). El valor por defecto de 1 rechaza los conjuntos de datos vacíos. Esta comprobación sólo se aplica cuando los datos de entrada tienen efectivamente 2 dimensiones o son originalmente 1D y ``ensure_2d`` es True. El valor 0 desactiva esta comprobación."

#: of sklearn.utils.validation.check_X_y:87
msgid "**y_numeric**"
msgstr "**y_numeric**"

#: of sklearn.utils.validation.check_X_y:85
msgid "Whether to ensure that y has a numeric type. If dtype of y is object, it is converted to float64. Should only be used for regression algorithms."
msgstr "Si asegurarse de que y tiene un tipo numérico. Si dtype de y es un objeto, se convierte a float64. Sólo debe utilizarse para algoritmos de regresión."

#: of sklearn.utils.validation.check_X_y:90
msgid "**estimator**"
msgstr "**estimator**"

#: of
msgid "str or estimator instance, default=None"
msgstr "str o instancia del estimador, default=None"

#: of sklearn.utils.validation.check_X_y:90
msgid "If passed, include the name of the estimator in warning messages."
msgstr "Si se pasa, incluye el nombre del estimador en los mensajes de advertencia."

#: of sklearn.utils.validation.check_X_y
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.utils.validation.check_X_y:95
msgid "**X_converted**"
msgstr "**X_converted**"

#: of
msgid "object"
msgstr "objeto"

#: of sklearn.utils.validation.check_X_y:95
msgid "The converted and validated X."
msgstr "El X convertido y validado."

#: of sklearn.utils.validation.check_X_y:109
msgid "**y_converted**"
msgstr "**y_converted**"

#: of sklearn.utils.validation.check_X_y:98
msgid "The converted and validated y."
msgstr "El y convertido y validado."

