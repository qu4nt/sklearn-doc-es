msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 00:15\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.utils.check_X_y.po\n"
"X-Crowdin-File-ID: 3788\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.utils.check_X_y.rst:2
msgid ":mod:`sklearn.utils`.check_X_y"
msgstr ""

#: of sklearn.utils.validation.check_X_y:2
msgid "Input validation for standard estimators."
msgstr ""

#: of sklearn.utils.validation.check_X_y:4
msgid "Checks X and y for consistent length, enforces X to be 2D and y 1D. By default, X is checked to be non-empty and containing only finite values. Standard input checks are also applied to y, such as checking that y does not have np.nan or np.inf targets. For multi-label y, set multi_output=True to allow 2D and sparse y. If the dtype of X is object, attempt converting to float, raising on failure."
msgstr ""

#: of sklearn.utils.validation.check_X_y
msgid "Parameters"
msgstr ""

#: of sklearn.utils.validation.check_X_y:14
msgid "**X**"
msgstr ""

#: of
msgid "{ndarray, list, sparse matrix}"
msgstr ""

#: of sklearn.utils.validation.check_X_y:14
msgid "Input data."
msgstr ""

#: of sklearn.utils.validation.check_X_y:17
msgid "**y**"
msgstr ""

#: of sklearn.utils.validation.check_X_y:17
msgid "Labels."
msgstr ""

#: of sklearn.utils.validation.check_X_y:24
msgid "**accept_sparse**"
msgstr ""

#: of
msgid "str, bool or list of str, default=False"
msgstr ""

#: of sklearn.utils.validation.check_X_y:20
msgid "String[s] representing allowed sparse matrix formats, such as 'csc', 'csr', etc. If the input is sparse but not in the allowed format, it will be converted to the first listed format. True allows the input to be any format. False means that a sparse matrix input will raise an error."
msgstr ""

#: of sklearn.utils.validation.check_X_y:31
msgid "**accept_large_sparse**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.utils.validation.check_X_y:27
msgid "If a CSR, CSC, COO or BSR sparse matrix is supplied and accepted by accept_sparse, accept_large_sparse will cause it to be accepted only if its indices are stored with a 32-bit dtype."
msgstr ""

#: of sklearn.utils.validation.check_X_y:37
msgid "**dtype**"
msgstr ""

#: of
msgid "'numeric', type, list of type or None, default='numeric'"
msgstr ""

#: of sklearn.utils.validation.check_X_y:34
msgid "Data type of result. If None, the dtype of the input is preserved. If \"numeric\", dtype is preserved unless array.dtype is object. If dtype is a list of types, conversion on the first type is only performed if the dtype of the input is not in the list."
msgstr ""

#: of sklearn.utils.validation.check_X_y:40
msgid "**order**"
msgstr ""

#: of
msgid "{'F', 'C'}, default=None"
msgstr ""

#: of sklearn.utils.validation.check_X_y:40
msgid "Whether an array will be forced to be fortran or c-style."
msgstr ""

#: of sklearn.utils.validation.check_X_y:44
msgid "**copy**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.utils.validation.check_X_y:43
msgid "Whether a forced copy will be triggered. If copy=False, a copy might be triggered by a conversion."
msgstr ""

#: of sklearn.utils.validation.check_X_y:60
msgid "**force_all_finite**"
msgstr ""

#: of
msgid "bool or 'allow-nan', default=True"
msgstr ""

#: of sklearn.utils.validation.check_X_y:47
msgid "Whether to raise an error on np.inf, np.nan, pd.NA in X. This parameter does not influence whether y can have np.inf, np.nan, pd.NA values. The possibilities are:"
msgstr ""

#: of sklearn.utils.validation.check_X_y:51
msgid "True: Force all values of X to be finite."
msgstr ""

#: of sklearn.utils.validation.check_X_y:52
msgid "False: accepts np.inf, np.nan, pd.NA in X."
msgstr ""

#: of sklearn.utils.validation.check_X_y:53
msgid "'allow-nan': accepts only np.nan or pd.NA values in X. Values cannot be infinite."
msgstr ""

#: of sklearn.utils.validation.check_X_y:56
msgid "``force_all_finite`` accepts the string ``'allow-nan'``."
msgstr ""

#: of sklearn.utils.validation.check_X_y:59
msgid "Accepts `pd.NA` and converts it into `np.nan`"
msgstr ""

#: of sklearn.utils.validation.check_X_y:63
msgid "**ensure_2d**"
msgstr ""

#: of sklearn.utils.validation.check_X_y:63
msgid "Whether to raise a value error if X is not 2D."
msgstr ""

#: of sklearn.utils.validation.check_X_y:66
msgid "**allow_nd**"
msgstr ""

#: of sklearn.utils.validation.check_X_y:66
msgid "Whether to allow X.ndim > 2."
msgstr ""

#: of sklearn.utils.validation.check_X_y:71
msgid "**multi_output**"
msgstr ""

#: of sklearn.utils.validation.check_X_y:69
msgid "Whether to allow 2D y (array or sparse matrix). If false, y will be validated as a vector. y cannot have np.nan or np.inf values if multi_output=True."
msgstr ""

#: of sklearn.utils.validation.check_X_y:75
msgid "**ensure_min_samples**"
msgstr ""

#: of
msgid "int, default=1"
msgstr ""

#: of sklearn.utils.validation.check_X_y:74
msgid "Make sure that X has a minimum number of samples in its first axis (rows for a 2D array)."
msgstr ""

#: of sklearn.utils.validation.check_X_y:82
msgid "**ensure_min_features**"
msgstr ""

#: of sklearn.utils.validation.check_X_y:78
msgid "Make sure that the 2D array has some minimum number of features (columns). The default value of 1 rejects empty datasets. This check is only enforced when X has effectively 2 dimensions or is originally 1D and ``ensure_2d`` is True. Setting to 0 disables this check."
msgstr ""

#: of sklearn.utils.validation.check_X_y:87
msgid "**y_numeric**"
msgstr ""

#: of sklearn.utils.validation.check_X_y:85
msgid "Whether to ensure that y has a numeric type. If dtype of y is object, it is converted to float64. Should only be used for regression algorithms."
msgstr ""

#: of sklearn.utils.validation.check_X_y:90
msgid "**estimator**"
msgstr ""

#: of
msgid "str or estimator instance, default=None"
msgstr ""

#: of sklearn.utils.validation.check_X_y:90
msgid "If passed, include the name of the estimator in warning messages."
msgstr ""

#: of sklearn.utils.validation.check_X_y
msgid "Returns"
msgstr ""

#: of sklearn.utils.validation.check_X_y:95
msgid "**X_converted**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.utils.validation.check_X_y:95
msgid "The converted and validated X."
msgstr ""

#: of sklearn.utils.validation.check_X_y:109
msgid "**y_converted**"
msgstr ""

#: of sklearn.utils.validation.check_X_y:98
msgid "The converted and validated y."
msgstr ""

