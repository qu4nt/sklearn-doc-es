msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 00:16\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.utils.metaestimators.if_delegate_has_method.po\n"
"X-Crowdin-File-ID: 3830\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.utils.metaestimators.if_delegate_has_method.rst:2
msgid ":mod:`sklearn.utils.metaestimators`.if_delegate_has_method"
msgstr ""

#: of sklearn.utils.metaestimators.if_delegate_has_method:2
msgid "Create a decorator for methods that are delegated to a sub-estimator"
msgstr ""

#: of sklearn.utils.metaestimators.if_delegate_has_method:4
msgid "This enables ducktyping by hasattr returning True according to the sub-estimator."
msgstr ""

#: of sklearn.utils.metaestimators.if_delegate_has_method
msgid "Parameters"
msgstr ""

#: of sklearn.utils.metaestimators.if_delegate_has_method:24
msgid "**delegate**"
msgstr ""

#: of
msgid "string, list of strings or tuple of strings"
msgstr ""

#: of sklearn.utils.metaestimators.if_delegate_has_method:10
msgid "Name of the sub-estimator that can be accessed as an attribute of the base object. If a list or a tuple of names are provided, the first sub-estimator that is an attribute of the base object will be used."
msgstr ""

