msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:00\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.covariance.EllipticEnvelope.po\n"
"X-Crowdin-File-ID: 4980\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.covariance.EllipticEnvelope.rst:2
msgid ":mod:`sklearn.covariance`.EllipticEnvelope"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:2
msgid "An object for detecting outliers in a Gaussian distributed dataset."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:4
msgid "Read more in the :ref:`User Guide <outlier_detection>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.OutlierMixin.fit_predict
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.decision_function
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.fit
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.predict
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.score
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.score_samples
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._robust_covariance.MinCovDet.correct_covariance
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance
msgid "Parameters"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:9
msgid "**store_precision**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:9
msgid "Specify if the estimated precision is stored."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:18
msgid "**assume_centered**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:12
msgid "If True, the support of robust location and covariance estimates is computed, and a covariance estimate is recomputed from it, without centering the data. Useful to work with data whose mean is significantly equal to zero but is not exactly zero. If False, the robust location and covariance are directly computed with the FastMCD algorithm without additional treatment."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:24
msgid "**support_fraction**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:21
msgid "The proportion of points to be included in the support of the raw MCD estimate. If None, the minimum value of support_fraction will be used within the algorithm: `[n_sample + n_features + 1] / 2`. Range is (0, 1)."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:28
msgid "**contamination**"
msgstr ""

#: of
msgid "float, default=0.1"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:27
msgid "The amount of contamination of the data set, i.e. the proportion of outliers in the data set. Range is (0, 0.5)."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:36
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:31
msgid "Determines the pseudo random number generator for shuffling the data. Pass an int for reproducible results across multiple function calls. See :term: `Glossary <random_state>`."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope
msgid "Attributes"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:41
msgid "**location_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:41
msgid "Estimated robust location."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:44
msgid "**covariance_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:44
msgid "Estimated robust covariance matrix."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:48
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:20
msgid "**precision_**"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:47
msgid "Estimated pseudo inverse matrix. (stored only if store_precision is True)"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:52
msgid "**support_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:51
msgid "A mask of the observations that have been used to compute the robust estimates of location and shape."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:61
msgid "**offset_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:55
msgid "Offset used to define the decision function from the raw scores. We have the relation: ``decision_function = score_samples - offset_``. The offset depends on the contamination parameter and is defined in such a way we obtain the expected number of outliers (samples with decision function < 0) in training."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:64
msgid "**raw_location_**"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:64
msgid "The raw robust estimated location before correction and re-weighting."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:67
msgid "**raw_covariance_**"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:67
msgid "The raw robust estimated covariance before correction and re-weighting."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:72
msgid "**raw_support_**"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:70
msgid "A mask of the observations that have been used to compute the raw robust estimates of location and shape, before correction and re-weighting."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:79
msgid "**dist_**"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:75
msgid "Mahalanobis distances of the training set (on which :meth:`fit` is called) observations."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:84
msgid ":obj:`EmpiricalCovariance`, :obj:`MinCovDet`"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:88
msgid "Notes"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:89
msgid "Outlier detection from covariance estimation may break or not perform well in high-dimensional settings. In particular, one will always take care to work with ``n_samples > n_features ** 2``."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:94
#: sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:28
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:37
msgid "References"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:95
msgid "Rousseeuw, P.J., Van Driessen, K. \"A fast algorithm for the minimum covariance determinant estimator\" Technometrics 41(3), 212 (1999)"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:101
msgid "[R68ae096da0e4-1]_"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:104
msgid "Examples"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope:124
msgid "Methods"
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`correct_covariance <sklearn.covariance.EllipticEnvelope.correct_covariance>`\\"
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
#: sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:2
msgid "Apply a correction to raw Minimum Covariance Determinant estimates."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`decision_function <sklearn.covariance.EllipticEnvelope.decision_function>`\\"
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.decision_function:2
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid "Compute the decision function of the given observations."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`error_norm <sklearn.covariance.EllipticEnvelope.error_norm>`\\"
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid "Computes the Mean Squared Error between two covariance estimators."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`fit <sklearn.covariance.EllipticEnvelope.fit>`\\"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.fit:2
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid "Fit the EllipticEnvelope model."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`fit_predict <sklearn.covariance.EllipticEnvelope.fit_predict>`\\"
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:2
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid "Perform fit on X and returns labels for X."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`get_params <sklearn.covariance.EllipticEnvelope.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`get_precision <sklearn.covariance.EllipticEnvelope.get_precision>`\\"
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:2
msgid "Getter for the precision matrix."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`mahalanobis <sklearn.covariance.EllipticEnvelope.mahalanobis>`\\"
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:2
msgid "Computes the squared Mahalanobis distances of given observations."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`predict <sklearn.covariance.EllipticEnvelope.predict>`\\"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.predict:2
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid "Predict the labels (1 inlier, -1 outlier) of X according to the fitted model."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`reweight_covariance <sklearn.covariance.EllipticEnvelope.reweight_covariance>`\\"
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:2
msgid "Re-weight raw Minimum Covariance Determinant estimates."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`score <sklearn.covariance.EllipticEnvelope.score>`\\"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:2
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid "Returns the mean accuracy on the given test data and labels."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`score_samples <sklearn.covariance.EllipticEnvelope.score_samples>`\\"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score_samples:2
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid "Compute the negative Mahalanobis distances."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid ":obj:`set_params <sklearn.covariance.EllipticEnvelope.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope:140:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:4
msgid "Correction using the empirical correction factor suggested by Rousseeuw and Van Driessen in [Rbb2ba44703ed-RVD]_."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:12
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:14
msgid "**data**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:10
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:12
msgid "The data matrix, with p features and n samples. The data set must be the one which was used to compute the raw estimates."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.OutlierMixin.fit_predict
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.decision_function
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.predict
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.score
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.score_samples
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._robust_covariance.MinCovDet.correct_covariance
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance
msgid "Returns"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:25
msgid "**covariance_corrected**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:17
msgid "Corrected robust covariance estimate."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:29
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:38
msgid "A Fast Algorithm for the Minimum Covariance Determinant Estimator, 1999, American Statistical Association and the American Society for Quality, TECHNOMETRICS"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:35
msgid "[Rbb2ba44703ed-RVD]_"
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:9
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.decision_function:8
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.fit:8
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.predict:9
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:11
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.score_samples:8
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:10
msgid "**X**"
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.decision_function:8
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.predict:9
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.score_samples:8
msgid "The data matrix."
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.decision_function:27
msgid "**decision**"
msgstr ""

#: of
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.decision_function:13
msgid "Decision function of the samples. It is equal to the shifted Mahalanobis distances. The threshold for being an outlier is 0, which ensures a compatibility with other outlier detection algorithms."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:2
msgid "Computes the Mean Squared Error between two covariance estimators. (In the sense of the Frobenius norm)."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "**comp_cov**"
msgstr ""

#: of
msgid "array-like of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "The covariance to compare with."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:15
msgid "**norm**"
msgstr ""

#: of
msgid "{\"frobenius\", \"spectral\"}, default=\"frobenius\""
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:12
msgid "The type of norm used to compute the error. Available error types: - 'frobenius' (default): sqrt(tr(A^t.A)) - 'spectral': sqrt(max(eigenvalues(A^t.A)) where A is the error ``(comp_cov - self.covariance_)``."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:19
msgid "**scaling**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:18
msgid "If True (default), the squared error norm is divided by n_features. If False, the squared error norm is not rescaled."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:24
msgid "**squared**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:22
msgid "Whether to compute the squared error norm or the error norm. If True (default), the squared error norm is returned. If False, the error norm is returned."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:41
msgid "**result**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:29
msgid "The Mean Squared Error (in the sense of the Frobenius norm) between `self` and `comp_cov` covariance estimators."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.fit:8
msgid "Training data."
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:12
#: sklearn.base.OutlierMixin.fit_predict:28
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.fit:23
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:14
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:12
#: sklearn.covariance._elliptic_envelope.EllipticEnvelope.fit:11
msgid "Not used, present for API consistency by convention."
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:4
msgid "Returns -1 for outliers and 1 for inliers."
msgstr ""

#: of
msgid "{array-like, sparse matrix, dataframe} of shape             (n_samples, n_features)"
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:17
msgid "1 for inliers, -1 for outliers."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:9
msgid "The precision matrix associated to the current covariance object."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:8
msgid "The observations, the Mahalanobis distances of the which we compute. Observations are assumed to be drawn from the same distribution than the data used in fit."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:26
msgid "**dist**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:15
msgid "Squared Mahalanobis distances of the observations."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.predict:25
msgid "**is_inlier**"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.predict:14
msgid "Returns -1 for anomalies/outliers and +1 for inliers."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:4
msgid "Re-weight observations using Rousseeuw's method (equivalent to deleting outlying observations from the data set before computing location and covariance estimates) described in [Rd2c89e63f1c9-RVDriessen]_."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:19
msgid "**location_reweighted**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:19
msgid "Re-weighted robust location estimate."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:22
msgid "**covariance_reweighted**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:22
msgid "Re-weighted robust covariance estimate."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:34
msgid "**support_reweighted**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,), dtype=bool"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:25
msgid "A mask of the observations that have been used to compute the re-weighted robust location and covariance estimates."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:44
msgid "[Rd2c89e63f1c9-RVDriessen]_"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:11
msgid "Test samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:14
msgid "True labels for X."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:17
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:17
msgid "Sample weights."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:33
msgid "**score**"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score:22
msgid "Mean accuracy of self.predict(X) w.r.t. y."
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score_samples:24
msgid "**negative_mahal_distances**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.covariance._elliptic_envelope.EllipticEnvelope.score_samples:13
msgid "Opposite of the Mahalanobis distances."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.covariance.EllipticEnvelope.examples:4
msgid "Examples using ``sklearn.covariance.EllipticEnvelope``"
msgstr ""

#: ../modules/generated/sklearn.covariance.EllipticEnvelope.examples:15
#: ../modules/generated/sklearn.covariance.EllipticEnvelope.examples:23
msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_anomaly_comparison.py`"
msgstr ""

