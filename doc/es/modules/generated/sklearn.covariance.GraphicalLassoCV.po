msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:12\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.covariance.GraphicalLassoCV.po\n"
"X-Crowdin-File-ID: 5292\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.covariance.GraphicalLassoCV.rst:2
msgid ":mod:`sklearn.covariance`.GraphicalLassoCV"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:2
msgid "Sparse inverse covariance w/ cross-validated choice of the l1 penalty."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:4
msgid "See glossary entry for :term:`cross-validation estimator`."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:6
msgid "Read more in the :ref:`User Guide <sparse_inverse_covariance>`."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:8
msgid "GraphLassoCV has been renamed to GraphicalLassoCV"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._graph_lasso.GraphicalLassoCV
#: sklearn.covariance._graph_lasso.GraphicalLassoCV.fit
msgid "Parameters"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:17
msgid "**alphas**"
msgstr ""

#: of
msgid "int or array-like of shape (n_alphas,), dtype=float, default=4"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:14
msgid "If an integer is given, it fixes the number of points on the grids of alpha to be used. If a list is given, it gives the grid to be used. See the notes in the class docstring for more details. Range is (0, inf] when floats given."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:21
msgid "**n_refinements**"
msgstr ""

#: of
msgid "int, default=4"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:20
msgid "The number of times the grid is refined. Not used if explicit values of alphas are passed. Range is [1, inf)."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:38
msgid "**cv**"
msgstr ""

#: of
msgid "int, cross-validation generator or iterable, default=None"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:24
msgid "Determines the cross-validation splitting strategy. Possible inputs for cv are:"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:27
msgid "None, to use the default 5-fold cross-validation,"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:28
msgid "integer, to specify the number of folds."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:29
msgid ":term:`CV splitter`,"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:30
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:32
msgid "For integer/None inputs :class:`KFold` is used."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:34
msgid "Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:37
msgid "``cv`` default value if None changed from 3-fold to 5-fold."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:42
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-4"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:41
msgid "The tolerance to declare convergence: if the dual gap goes below this value, iterations are stopped. Range is (0, inf]."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:48
msgid "**enet_tol**"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:45
msgid "The tolerance for the elastic net solver used to calculate the descent direction. This parameter controls the accuracy of the search direction for a given column update, not of the overall parameter estimate. Only used for mode='cd'. Range is (0, inf]."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:51
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:51
msgid "Maximum number of iterations."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:57
msgid "**mode**"
msgstr ""

#: of
msgid "{'cd', 'lars'}, default='cd'"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:54
msgid "The Lasso solver to use: coordinate descent or LARS. Use LARS for very sparse underlying graphs, where number of features is greater than number of samples. Elsewhere prefer cd which is more numerically stable."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:66
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:60
msgid "number of jobs to run in parallel. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:65
msgid "`n_jobs` default changed from 1 to None"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:70
msgid "**verbose**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:69
msgid "If verbose is True, the objective function and duality gap are printed at each iteration."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:79
msgid "**assume_centered**"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:73
msgid "If True, data are not centered before computation. Useful when working with data whose mean is almost, but not exactly zero. If False, data are centered before computation."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV
msgid "Attributes"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:84
msgid "**location_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:84
msgid "Estimated location, i.e. the estimated mean."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:87
msgid "**covariance_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:87
msgid "Estimated covariance matrix."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:20
#: sklearn.covariance._graph_lasso.GraphicalLassoCV:90
msgid "**precision_**"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:90
msgid "Estimated precision matrix (inverse covariance)."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:93
msgid "**alpha_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:93
msgid "Penalization parameter selected."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:101
msgid "**cv_alphas_**"
msgstr ""

#: of
msgid "list of shape (n_alphas,), dtype=float"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:96
#: sklearn.covariance._graph_lasso.GraphicalLassoCV:115
msgid "All penalization parameters explored."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:98
msgid "The `cv_alphas_` attribute is deprecated in version 0.24 in favor of `cv_results_['alphas']` and will be removed in version 1.1 (renaming of 0.26)."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:109
msgid "**grid_scores_**"
msgstr ""

#: of
msgid "ndarray of shape (n_alphas, n_folds)"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:104
msgid "Log-likelihood score on left-out data across folds."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:106
msgid "The `grid_scores_` attribute is deprecated in version 0.24 in favor of `cv_results_` and will be removed in version 1.1 (renaming of 0.26)."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:126
msgid "**cv_results_**"
msgstr ""

#: of
msgid "dict of ndarrays"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:112
msgid "A dict with keys:"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:115
msgid "alphas"
msgstr ""

#: of
msgid "ndarray of shape (n_alphas,)"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:118
msgid "split(k)_score"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:118
msgid "Log-likelihood score on left-out data across (k)th fold."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:121
msgid "mean_score"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:121
msgid "Mean of scores over the folds."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:124
msgid "std_score"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:124
msgid "Standard deviation of scores over the folds."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:132
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:129
msgid "Number of iterations run for the optimal alpha."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:137
msgid ":obj:`graphical_lasso`, :obj:`GraphicalLasso`"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:141
msgid "Notes"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:142
msgid "The search for the optimal penalization parameter (alpha) is done on an iteratively refined grid: first the cross-validated scores on a grid are computed, then a new refined grid is centered around the maximum, and so on."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:147
msgid "One of the challenges which is faced here is that the solvers can fail to converge to a well-conditioned estimate. The corresponding values of alpha then come out as missing values, but the optimum may be close to these missing values."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:154
msgid "Examples"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:175
msgid "Methods"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid ":obj:`error_norm <sklearn.covariance.GraphicalLassoCV.error_norm>`\\"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid "Computes the Mean Squared Error between two covariance estimators."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid ":obj:`fit <sklearn.covariance.GraphicalLassoCV.fit>`\\"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV.fit:2
#: sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid "Fits the GraphicalLasso covariance model to X."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid ":obj:`get_params <sklearn.covariance.GraphicalLassoCV.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid ":obj:`get_precision <sklearn.covariance.GraphicalLassoCV.get_precision>`\\"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:2
#: sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid "Getter for the precision matrix."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid ":obj:`mahalanobis <sklearn.covariance.GraphicalLassoCV.mahalanobis>`\\"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:2
#: sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid "Computes the squared Mahalanobis distances of given observations."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid ":obj:`score <sklearn.covariance.GraphicalLassoCV.score>`\\"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:2
#: sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid "Computes the log-likelihood of a Gaussian data set with `self.covariance_` as an estimator of its covariance matrix."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid ":obj:`set_params <sklearn.covariance.GraphicalLassoCV.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.covariance._graph_lasso.GraphicalLassoCV:185:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:2
msgid "Computes the Mean Squared Error between two covariance estimators. (In the sense of the Frobenius norm)."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "**comp_cov**"
msgstr ""

#: of
msgid "array-like of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "The covariance to compare with."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:15
msgid "**norm**"
msgstr ""

#: of
msgid "{\"frobenius\", \"spectral\"}, default=\"frobenius\""
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:12
msgid "The type of norm used to compute the error. Available error types: - 'frobenius' (default): sqrt(tr(A^t.A)) - 'spectral': sqrt(max(eigenvalues(A^t.A)) where A is the error ``(comp_cov - self.covariance_)``."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:19
msgid "**scaling**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:18
msgid "If True (default), the squared error norm is divided by n_features. If False, the squared error norm is not rescaled."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:24
msgid "**squared**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:22
msgid "Whether to compute the squared error norm or the error norm. If True (default), the squared error norm is returned. If False, the error norm is returned."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._graph_lasso.GraphicalLassoCV.fit
msgid "Returns"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:41
msgid "**result**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:29
msgid "The Mean Squared Error (in the sense of the Frobenius norm) between `self` and `comp_cov` covariance estimators."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:10
#: sklearn.covariance._graph_lasso.GraphicalLassoCV.fit:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLassoCV.fit:8
msgid "Data from which to compute the covariance estimate"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._graph_lasso.GraphicalLassoCV.fit:11
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._graph_lasso.GraphicalLassoCV.fit:11
msgid "Not used, present for API consistency by convention."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.covariance._graph_lasso.GraphicalLassoCV.fit:27
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:9
msgid "The precision matrix associated to the current covariance object."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:8
msgid "The observations, the Mahalanobis distances of the which we compute. Observations are assumed to be drawn from the same distribution than the data used in fit."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:26
msgid "**dist**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:15
msgid "Squared Mahalanobis distances of the observations."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:12
msgid "**X_test**"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:9
msgid "Test data of which we compute the likelihood, where n_samples is the number of samples and n_features is the number of features. X_test is assumed to be drawn from the same distribution than the data used in fit (including centering)."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:32
msgid "**res**"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:20
msgid "The likelihood of the data set with `self.covariance_` as an estimator of its covariance matrix."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.covariance.GraphicalLassoCV.examples:4
msgid "Examples using ``sklearn.covariance.GraphicalLassoCV``"
msgstr ""

#: ../modules/generated/sklearn.covariance.GraphicalLassoCV.examples:15
#: ../modules/generated/sklearn.covariance.GraphicalLassoCV.examples:23
#: ../modules/generated/sklearn.covariance.GraphicalLassoCV.examples:34
#: ../modules/generated/sklearn.covariance.GraphicalLassoCV.examples:42
msgid ":ref:`sphx_glr_auto_examples_applications_plot_stock_market.py`"
msgstr ""

