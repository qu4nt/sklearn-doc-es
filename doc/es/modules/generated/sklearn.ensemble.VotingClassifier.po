msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-13 02:00\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.VotingClassifier.po\n"
"X-Crowdin-File-ID: 5848\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.VotingClassifier.rst:2
msgid ":mod:`sklearn.ensemble`.VotingClassifier"
msgstr ":mod:`sklearn.ensemble`.VotingClassifier"

#: of sklearn.ensemble._voting.VotingClassifier:2
msgid "Soft Voting/Majority Rule classifier for unfitted estimators."
msgstr "Clasificador de votación Soft/Regla de Mayoría para estimadores no ajustados."

#: of sklearn.ensemble._voting.VotingClassifier:4
msgid "Read more in the :ref:`User Guide <voting_classifier>`."
msgstr "Más información en el :ref:`Manual de usuario <voting_classifier>`."

#: of sklearn.base.ClassifierMixin.score
#: sklearn.ensemble.VotingClassifier.predict_proba
#: sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params
#: sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params
#: sklearn.ensemble._voting.VotingClassifier
#: sklearn.ensemble._voting.VotingClassifier.fit
#: sklearn.ensemble._voting.VotingClassifier.predict
#: sklearn.ensemble._voting.VotingClassifier.transform
#: sklearn.ensemble._voting._BaseVoting.fit_transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.ensemble._voting.VotingClassifier:18
msgid "**estimators**"
msgstr "**estimators**"

#: of
msgid "list of (str, estimator) tuples"
msgstr "lista de tuplas (str, estimator)"

#: of sklearn.ensemble._voting.VotingClassifier:11
msgid "Invoking the ``fit`` method on the ``VotingClassifier`` will fit clones of those original estimators that will be stored in the class attribute ``self.estimators_``. An estimator can be set to ``'drop'`` using ``set_params``."
msgstr "Al invocar el método ``fit`` en el ``VotingClassifier`` se ajustarán clones de esos estimadores originales que se almacenarán en el atributo de la clase ``self.estimators_``. Un estimador puede establecerse en ``'drop'`` utilizando ``set_params``."

#: of sklearn.ensemble._voting.VotingClassifier:16
msgid "``'drop'`` is accepted. Using None was deprecated in 0.22 and support was removed in 0.24."
msgstr "``'drop'`` es aceptado. El uso de None quedó obsoleto en la versión 0.22 y se eliminó el soporte en la 0.24."

#: of sklearn.ensemble._voting.VotingClassifier:24
msgid "**voting**"
msgstr "**voting**"

#: of
msgid "{'hard', 'soft'}, default='hard'"
msgstr "{'hard', 'soft'}, default='hard'"

#: of sklearn.ensemble._voting.VotingClassifier:21
msgid "If 'hard', uses predicted class labels for majority rule voting. Else if 'soft', predicts the class label based on the argmax of the sums of the predicted probabilities, which is recommended for an ensemble of well-calibrated classifiers."
msgstr "Si es 'hard', utiliza las etiquetas de clase predichas para la votación por regla de la mayoría. Si es 'soft', predice la etiqueta de clase basándose en el argmax de las sumas de las probabilidades predichas, lo que se recomienda para un conjunto (ensemble) de clasificadores bien calibrados."

#: of sklearn.ensemble._voting.VotingClassifier:29
msgid "**weights**"
msgstr "**weights**"

#: of
msgid "array-like of shape (n_classifiers,), default=None"
msgstr "array-like de forma (n_classifiers,), default=None"

#: of sklearn.ensemble._voting.VotingClassifier:27
msgid "Sequence of weights (`float` or `int`) to weight the occurrences of predicted class labels (`hard` voting) or class probabilities before averaging (`soft` voting). Uses uniform weights if `None`."
msgstr "Secuencia de ponderaciones (`float` o `int`) para ponderar las ocurrencias de las etiquetas de clase predichas (votación `hard`) o las probabilidades de clase antes de promediar (votación `soft`). Utiliza ponderaciones uniformes si es `None`."

#: of sklearn.ensemble._voting.VotingClassifier:37
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.ensemble._voting.VotingClassifier:32
msgid "The number of jobs to run in parallel for ``fit``. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "El número de trabajos a ejecutar en paralelo para ``fit``. ``None`` significa 1 a menos que sea en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa usar todos los procesadores. Véase :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.ensemble._voting.VotingClassifier:44
msgid "**flatten_transform**"
msgstr "**flatten_transform**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.ensemble._voting.VotingClassifier:40
msgid "Affects shape of transform output only when voting='soft' If voting='soft' and flatten_transform=True, transform method returns matrix with shape (n_samples, n_classifiers * n_classes). If flatten_transform=False, it returns (n_classifiers, n_samples, n_classes)."
msgstr "Afecta a la forma de la salida de la transformación sólo cuando voting='soft'. Si voting='soft' y flatten_transform=True, el método de transformación devuelve una matriz con forma (n_samples, n_classifiers * n_classes). Si flatten_transform=False, devuelve (n_classifiers, n_samples, n_classes)."

#: of sklearn.ensemble._voting.VotingClassifier:53
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.ensemble._voting.VotingClassifier:47
msgid "If True, the time elapsed while fitting will be printed as it is completed."
msgstr "Si es True, el tiempo transcurrido durante el ajuste se imprimirá a medida que se complete."

#: of sklearn.ensemble._voting.VotingClassifier
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.ensemble._voting.VotingClassifier:59
msgid "**estimators_**"
msgstr "**estimators_**"

#: of
msgid "list of classifiers"
msgstr "lista de clasificadores"

#: of sklearn.ensemble._voting.VotingClassifier:58
msgid "The collection of fitted sub-estimators as defined in ``estimators`` that are not 'drop'."
msgstr "La colección de subestimadores ajustados tal y como se definen en ``estimators`` que no son 'drop'."

#: of sklearn.ensemble._voting.VotingClassifier:64
msgid "**named_estimators_** : :class:`~sklearn.utils.Bunch`"
msgstr "**named_estimators_** : :class:`~sklearn.utils.Bunch`"

#: of sklearn.ensemble._voting.VotingClassifier:63
msgid "Bunch"
msgstr "Bunch"

#: of sklearn.ensemble._voting.VotingClassifier:62
msgid "Attribute to access any fitted sub-estimators by name."
msgstr "Atributo para acceder a cualquier subestimador ajustado por su nombre."

#: of sklearn.ensemble._voting.VotingClassifier:70
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "array-like of shape (n_predictions,)"
msgstr "array-like de forma (n_predictions,)"

#: of sklearn.ensemble._voting.VotingClassifier:67
msgid "The classes labels."
msgstr "Las etiquetas de las clases."

#: of sklearn.ensemble._voting.VotingClassifier:75
msgid ":obj:`VotingRegressor`"
msgstr ":obj:`VotingRegressor`"

#: of sklearn.ensemble._voting.VotingClassifier:76
msgid "Prediction voting regressor."
msgstr "Regresor de predicción de voto."

#: of sklearn.ensemble._voting.VotingClassifier:82
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.ensemble._voting.VotingClassifier:117
msgid "Methods"
msgstr "Métodos"

#: of sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.VotingClassifier.fit>`\\"
msgstr ":obj:`fit <sklearn.ensemble.VotingClassifier.fit>`\\"

#: of sklearn.ensemble._voting.VotingClassifier.fit:2
#: sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid "Fit the estimators."
msgstr "Ajusta los estimadores."

#: of sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.ensemble.VotingClassifier.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.ensemble.VotingClassifier.fit_transform>`\\"

#: of sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
#: sklearn.ensemble._voting._BaseVoting.fit_transform:2
msgid "Return class labels or probabilities for each estimator."
msgstr "Devuelve las etiquetas de clase o probabilidades para cada estimador."

#: of sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.VotingClassifier.get_params>`\\"
msgstr ":obj:`get_params <sklearn.ensemble.VotingClassifier.get_params>`\\"

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:2
#: sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid "Get the parameters of an estimator from the ensemble."
msgstr "Obtiene los parámetros de un estimador del conjunto (ensemble)."

#: of sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.VotingClassifier.predict>`\\"
msgstr ":obj:`predict <sklearn.ensemble.VotingClassifier.predict>`\\"

#: of sklearn.ensemble._voting.VotingClassifier.predict:2
#: sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid "Predict class labels for X."
msgstr "Predice etiquetas de clase para X."

#: of sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid ":obj:`score <sklearn.ensemble.VotingClassifier.score>`\\"
msgstr ":obj:`score <sklearn.ensemble.VotingClassifier.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos de prueba y las etiquetas dadas."

#: of sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.VotingClassifier.set_params>`\\"
msgstr ":obj:`set_params <sklearn.ensemble.VotingClassifier.set_params>`\\"

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:2
#: sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid "Set the parameters of an estimator from the ensemble."
msgstr "Obtiene los parámetros de un estimador del conjunto (ensemble)."

#: of sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid ":obj:`transform <sklearn.ensemble.VotingClassifier.transform>`\\"
msgstr ":obj:`transform <sklearn.ensemble.VotingClassifier.transform>`\\"

#: of sklearn.ensemble._voting.VotingClassifier.transform:2
#: sklearn.ensemble._voting.VotingClassifier:127:<autosummary>:1
msgid "Return class labels or probabilities for X for each estimator."
msgstr "Devuelve las etiquetas de clase o las probabilidades de X para cada estimador."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.ensemble.VotingClassifier.predict_proba:8
#: sklearn.ensemble._voting.VotingClassifier.fit:9
#: sklearn.ensemble._voting.VotingClassifier.predict:8
#: sklearn.ensemble._voting.VotingClassifier.transform:9
#: sklearn.ensemble._voting._BaseVoting.fit_transform:9
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.ensemble._voting.VotingClassifier.fit:8
#: sklearn.ensemble._voting.VotingClassifier.transform:8
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of features."
msgstr "Vectores de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.ensemble._voting.VotingClassifier.fit:12
#: sklearn.ensemble._voting._BaseVoting.fit_transform:12
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like de forma (n_samples,)"

#: of sklearn.ensemble._voting.VotingClassifier.fit:12
msgid "Target values."
msgstr "Valores objetivo."

#: of sklearn.base.ClassifierMixin.score:17
#: sklearn.ensemble._voting.VotingClassifier.fit:19
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.ensemble._voting.VotingClassifier.fit:15
msgid "Sample weights. If None, then samples are equally weighted. Note that this is supported only if all underlying estimators support sample weights."
msgstr "Ponderaciones de la muestra. Si es None, entonces las muestras están igualmente ponderadas. Ten en cuenta que esto sólo es soportado si todos los estimadores subyacentes soportan ponderaciones de muestra."

#: of sklearn.base.ClassifierMixin.score
#: sklearn.ensemble.VotingClassifier.predict_proba
#: sklearn.ensemble._voting.VotingClassifier.fit
#: sklearn.ensemble._voting.VotingClassifier.predict
#: sklearn.ensemble._voting.VotingClassifier.transform
#: sklearn.ensemble._voting._BaseVoting.fit_transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.ensemble._voting.VotingClassifier.fit:35
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:4
msgid "Return predictions for X for each estimator."
msgstr "Devuelve las predicciones de X para cada estimador."

#: of
msgid "{array-like, sparse matrix, dataframe} of shape                 (n_samples, n_features)"
msgstr "{array-like, sparse matrix, dataframe} de forma                 (n_samples, n_features)"

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:9
msgid "Input samples"
msgstr "Muestras de entrada"

#: of
msgid "ndarray of shape (n_samples,), default=None"
msgstr "ndarray de forma (n_classes,), default=None"

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:12
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:15
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:15
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:31
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "arreglo ndarray de forma (n_samples, n_features_new)"

#: of sklearn.ensemble._voting._BaseVoting.fit_transform:20
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:4
msgid "Returns the parameters given in the constructor as well as the estimators contained within the `estimators` parameter."
msgstr "Devuelve los parámetros dados en el constructor así como los estimadores contenidos en el parámetro `estimators`."

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:23
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.get_params:10
msgid "Setting it to True gets the various estimators and the parameters of the estimators as well."
msgstr "Al establecerlo como True se obtienen los distintos estimadores y los parámetros de los mismos."

#: of sklearn.ensemble.VotingClassifier.predict_proba:8
#: sklearn.ensemble._voting.VotingClassifier.predict:8
msgid "The input samples."
msgstr "Las muestras de entrada."

#: of sklearn.ensemble._voting.VotingClassifier.predict:24
msgid "**maj**"
msgstr "**maj**"

#: of sklearn.ensemble._voting.VotingClassifier.predict:13
msgid "Predicted class labels."
msgstr "Etiquetas de clase predichas."

#: of sklearn.ensemble.VotingClassifier.predict_proba:2
msgid "Compute probabilities of possible outcomes for samples in X."
msgstr "Calcula las probabilidades de los posibles resultados de las muestras en X."

#: of sklearn.ensemble.VotingClassifier.predict_proba:24
msgid "**avg**"
msgstr "**avg**"

#: of
msgid "array-like of shape (n_samples, n_classes)"
msgstr "array-like de forma (n_samples, n_classes)"

#: of sklearn.ensemble.VotingClassifier.predict_proba:13
msgid "Weighted average probability for each class per sample."
msgstr "Probabilidad media ponderada de cada clase por muestra."

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto que es una métrica rigurosa, ya que se requiere para cada muestra que cada conjunto de etiquetas sea predicho correctamente."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas True para `X`."

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:4
msgid "Valid parameter keys can be listed with `get_params()`. Note that you can directly set the parameters of the estimators contained in `estimators`."
msgstr "Las claves de los parámetros válidos se pueden listar con `get_params()`. Ten en cuenta que puede establecer directamente los parámetros de los estimadores contenidos en `estimators`."

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:27
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of
msgid "keyword arguments"
msgstr "keyword arguments"

#: of sklearn.ensemble._base._BaseHeterogeneousEnsemble.set_params:11
msgid "Specific parameters using e.g. `set_params(parameter_name=new_value)`. In addition, to setting the parameters of the estimator, the individual estimator of the estimators can also be set, or can be removed by setting them to 'drop'."
msgstr "Parámetros específicos utilizando, por ejemplo, `set_params(parameter_name=new_value)`. Además de establecer los parámetros del estimador, también se puede establecer el estimador individual de los estimadores, o se puede eliminar estableciéndolos en `drop`."

#: of sklearn.ensemble._voting.VotingClassifier.transform:33
msgid "probabilities_or_labels"
msgstr "probabilidades_o_etiquetas"

#: of sklearn.ensemble._voting.VotingClassifier.transform:16
msgid "If `voting='soft'` and `flatten_transform=True`:"
msgstr "Si `voting='soft'` y `flatten_transform=True`:"

#: of sklearn.ensemble._voting.VotingClassifier.transform:15
msgid "returns ndarray of shape (n_classifiers, n_samples * n_classes), being class probabilities calculated by each classifier."
msgstr "devuelve ndarray de forma (n_classifiers, n_samples * n_classes), siendo las probabilidades de clase calculadas por cada clasificador."

#: of sklearn.ensemble._voting.VotingClassifier.transform:18
msgid "If `voting='soft' and `flatten_transform=False`:"
msgstr "Si `voting='soft' y `flatten_transform=False`:"

#: of sklearn.ensemble._voting.VotingClassifier.transform:19
msgid "ndarray of shape (n_classifiers, n_samples, n_classes)"
msgstr "ndarray de forma (n_classifiers, n_samples, n_classes)"

#: of sklearn.ensemble._voting.VotingClassifier.transform:33
msgid "If `voting='hard'`:"
msgstr "Si `voting='hard'`:"

#: of sklearn.ensemble._voting.VotingClassifier.transform:21
msgid "ndarray of shape (n_samples, n_classifiers), being class labels predicted by each classifier."
msgstr "ndarray de forma (n_samples, n_classifiers), siendo las etiquetas de clase predichas por cada clasificador."

