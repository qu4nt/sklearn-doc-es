msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 00:11\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.cluster.DBSCAN.po\n"
"X-Crowdin-File-ID: 2864\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.cluster.DBSCAN.rst:2
msgid ":mod:`sklearn.cluster`.DBSCAN"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:2
msgid "Perform DBSCAN clustering from vector array or distance matrix."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:4
msgid "DBSCAN - Density-Based Spatial Clustering of Applications with Noise. Finds core samples of high density and expands clusters from them. Good for data which contains clusters of similar density."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:8
msgid "Read more in the :ref:`User Guide <dbscan>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.cluster._dbscan.DBSCAN
#: sklearn.cluster._dbscan.DBSCAN.fit
#: sklearn.cluster._dbscan.DBSCAN.fit_predict
msgid "Parameters"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:17
msgid "**eps**"
msgstr ""

#: of
msgid "float, default=0.5"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:13
msgid "The maximum distance between two samples for one to be considered as in the neighborhood of the other. This is not a maximum bound on the distances of points within a cluster. This is the most important DBSCAN parameter to choose appropriately for your data set and distance function."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:21
msgid "**min_samples**"
msgstr ""

#: of
msgid "int, default=5"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:20
msgid "The number of samples (or total weight) in a neighborhood for a point to be considered as a core point. This includes the point itself."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:33
msgid "**metric**"
msgstr ""

#: of
msgid "string, or callable, default='euclidean'"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:24
msgid "The metric to use when calculating distance between instances in a feature array. If metric is a string or callable, it must be one of the options allowed by :func:`sklearn.metrics.pairwise_distances` for its metric parameter. If metric is \"precomputed\", X is assumed to be a distance matrix and must be square. X may be a :term:`Glossary <sparse graph>`, in which case only \"nonzero\" elements may be considered neighbors for DBSCAN."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:32
msgid "metric *precomputed* to accept precomputed sparse matrix."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:38
msgid "**metric_params**"
msgstr ""

#: of
msgid "dict, default=None"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:36
msgid "Additional keyword arguments for the metric function."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:43
msgid "**algorithm**"
msgstr ""

#: of
msgid "{'auto', 'ball_tree', 'kd_tree', 'brute'}, default='auto'"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:41
msgid "The algorithm to be used by the NearestNeighbors module to compute pointwise distances and find nearest neighbors. See NearestNeighbors module documentation for details."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:49
msgid "**leaf_size**"
msgstr ""

#: of
msgid "int, default=30"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:46
msgid "Leaf size passed to BallTree or cKDTree. This can affect the speed of the construction and query, as well as the memory required to store the tree. The optimal value depends on the nature of the problem."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:54
msgid "**p**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:52
msgid "The power of the Minkowski metric to be used to calculate distance between points. If None, then ``p=2`` (equivalent to the Euclidean distance)."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:63
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:57
msgid "The number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN
msgid "Attributes"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:68
msgid "**core_sample_indices_**"
msgstr ""

#: of
msgid "ndarray of shape (n_core_samples,)"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:68
msgid "Indices of core samples."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:71
msgid "**components_**"
msgstr ""

#: of
msgid "ndarray of shape (n_core_samples, n_features)"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:71
msgid "Copy of each core sample found by training."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:78
msgid "**labels_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples)"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:74
msgid "Cluster labels for each point in the dataset given to fit(). Noisy samples are given the label -1."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:83
msgid ":obj:`OPTICS`"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:84
msgid "A similar clustering at multiple values of eps. Our implementation is optimized for memory usage."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:88
msgid "Notes"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:89
msgid "For an example, see :ref:`examples/cluster/plot_dbscan.py <sphx_glr_auto_examples_cluster_plot_dbscan.py>`."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:92
msgid "This implementation bulk-computes all neighborhood queries, which increases the memory complexity to O(n.d) where d is the average number of neighbors, while original DBSCAN had memory complexity O(n). It may attract a higher memory complexity when querying these nearest neighborhoods, depending on the ``algorithm``."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:98
msgid "One way to avoid the query complexity is to pre-compute sparse neighborhoods in chunks using :func:`NearestNeighbors.radius_neighbors_graph <sklearn.neighbors.NearestNeighbors.radius_neighbors_graph>` with ``mode='distance'``, then using ``metric='precomputed'`` here."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:104
msgid "Another way to reduce memory and computation time is to remove (near-)duplicate points and use ``sample_weight`` instead."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:107
msgid ":class:`cluster.OPTICS` provides a similar clustering with lower memory usage."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:111
msgid "References"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:112
msgid "Ester, M., H. P. Kriegel, J. Sander, and X. Xu, \"A Density-Based Algorithm for Discovering Clusters in Large Spatial Databases with Noise\". In: Proceedings of the 2nd International Conference on Knowledge Discovery and Data Mining, Portland, OR, AAAI Press, pp. 226-231. 1996"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:117
msgid "Schubert, E., Sander, J., Ester, M., Kriegel, H. P., & Xu, X. (2017). DBSCAN revisited, revisited: why and how you should (still) use DBSCAN. ACM Transactions on Database Systems (TODS), 42(3), 19."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:126
msgid "Examples"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:138
msgid "Methods"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:145:<autosummary>:1
msgid ":obj:`fit <sklearn.cluster.DBSCAN.fit>`\\"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit:2
#: sklearn.cluster._dbscan.DBSCAN:145:<autosummary>:1
msgid "Perform DBSCAN clustering from features, or distance matrix."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:145:<autosummary>:1
msgid ":obj:`fit_predict <sklearn.cluster.DBSCAN.fit_predict>`\\"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit_predict:2
#: sklearn.cluster._dbscan.DBSCAN:145:<autosummary>:1
msgid "Perform DBSCAN clustering from features or distance matrix, and return cluster labels."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:145:<autosummary>:1
msgid ":obj:`get_params <sklearn.cluster.DBSCAN.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.cluster._dbscan.DBSCAN:145:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN:145:<autosummary>:1
msgid ":obj:`set_params <sklearn.cluster.DBSCAN.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.cluster._dbscan.DBSCAN:145:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit:10
#: sklearn.cluster._dbscan.DBSCAN.fit_predict:11
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features), or             (n_samples, n_samples)"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit:8
#: sklearn.cluster._dbscan.DBSCAN.fit_predict:9
msgid "Training instances to cluster, or distances between instances if ``metric='precomputed'``. If a sparse matrix is provided, it will be converted into a sparse ``csr_matrix``."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit:16
#: sklearn.cluster._dbscan.DBSCAN.fit_predict:17
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit:13
#: sklearn.cluster._dbscan.DBSCAN.fit_predict:14
msgid "Weight of each sample, such that a sample with a weight of at least ``min_samples`` is by itself a core sample; a sample with a negative weight may inhibit its eps-neighbor from being core. Note that weights are absolute, and default to 1."
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit:19
#: sklearn.cluster._dbscan.DBSCAN.fit_predict:20
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit:19
#: sklearn.cluster._dbscan.DBSCAN.fit_predict:20
msgid "Not used, present here for API consistency by convention."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.cluster._dbscan.DBSCAN.fit
#: sklearn.cluster._dbscan.DBSCAN.fit_predict
msgid "Returns"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit:35
msgid "self"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit_predict:36
msgid "**labels**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.cluster._dbscan.DBSCAN.fit_predict:25
msgid "Cluster labels. Noisy samples are given the label -1."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

