msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:56-0400\n"
"PO-Revision-Date: 2021-06-05 14:03\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.neighbors.KNeighborsTransformer.po\n"
"X-Crowdin-File-ID: 5346\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.neighbors.KNeighborsTransformer.rst:2
msgid ":mod:`sklearn.neighbors`.KNeighborsTransformer"
msgstr ":mod:`sklearn.neighbors`.KNeighborsTransformer"

#: of sklearn.neighbors._graph.KNeighborsTransformer:2
msgid "Transform X into a (weighted) graph of k nearest neighbors"
msgstr "Transformar X en un gráfico (ponderado) de k vecinos más cercanos"

#: of sklearn.neighbors._graph.KNeighborsTransformer:4
msgid "The transformed data is a sparse graph as returned by kneighbors_graph."
msgstr "Los datos transformados son un gráfico disperso devuelto por kneighbors_graph."

#: of sklearn.neighbors._graph.KNeighborsTransformer:6
msgid "Read more in the :ref:`User Guide <neighbors_transformer>`."
msgstr "Más información en el :ref:`Manual de usuario <neighbors_transformer>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph
#: sklearn.neighbors._graph.KNeighborsTransformer
#: sklearn.neighbors._graph.KNeighborsTransformer.fit
#: sklearn.neighbors._graph.KNeighborsTransformer.fit_transform
#: sklearn.neighbors._graph.KNeighborsTransformer.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:22
#: sklearn.neighbors._graph.KNeighborsTransformer:15
msgid "**mode**"
msgstr "**mode**"

#: of
msgid "{'distance', 'connectivity'}, default='distance'"
msgstr "{'distance', 'connectivity'}, default='distance'"

#: of sklearn.neighbors._graph.KNeighborsTransformer:13
msgid "Type of returned matrix: 'connectivity' will return the connectivity matrix with ones and zeros, and 'distance' will return the distances between neighbors according to the given metric."
msgstr "Tipo de matriz devuelta: 'connectivity' devolverá la matriz de conectividad con unos y ceros, y 'distance' devolverá las distancias entre vecinos según la métrica dada."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:15
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:17
#: sklearn.neighbors._graph.KNeighborsTransformer:21
msgid "**n_neighbors**"
msgstr "**n_neighbors**"

#: of
msgid "int, default=5"
msgstr "int, default=5"

#: of sklearn.neighbors._graph.KNeighborsTransformer:18
msgid "Number of neighbors for each sample in the transformed sparse graph. For compatibility reasons, as each sample is considered as its own neighbor, one extra neighbor will be computed when mode == 'distance'. In this case, the sparse graph contains (n_neighbors + 1) neighbors."
msgstr "Número de vecinos para cada muestra en el gráfico disperso transformado. Por razones de compatibilidad, ya que cada muestra se considera como su propio vecino, se calculará un vecino adicional cuando mode == 'distance'. En este caso, el gráfico disperso contiene (n_neighbors + 1) vecinos."

#: of sklearn.neighbors._graph.KNeighborsTransformer:33
msgid "**algorithm**"
msgstr "**algorithm**"

#: of
msgid "{'auto', 'ball_tree', 'kd_tree', 'brute'}, default='auto'"
msgstr "{'auto', 'ball_tree', 'kd_tree', 'brute'}, default='auto'"

#: of sklearn.neighbors._graph.KNeighborsTransformer:24
msgid "Algorithm used to compute the nearest neighbors:"
msgstr "Algoritmo usado para calcular los vecinos más cercanos:"

#: of sklearn.neighbors._graph.KNeighborsTransformer:26
msgid "'ball_tree' will use :class:`BallTree`"
msgstr "'ball_tree' will use :class:`BallTree`"

#: of sklearn.neighbors._graph.KNeighborsTransformer:27
msgid "'kd_tree' will use :class:`KDTree`"
msgstr "'kd_tree' will use :class:`KDTree`"

#: of sklearn.neighbors._graph.KNeighborsTransformer:28
msgid "'brute' will use a brute-force search."
msgstr "'brute' usará una búsqueda de fuerza bruta."

#: of sklearn.neighbors._graph.KNeighborsTransformer:29
msgid "'auto' will attempt to decide the most appropriate algorithm based on the values passed to :meth:`fit` method."
msgstr "'auto' intentará decidir el algoritmo más apropiado basado en los valores pasados al método :meth:`fit`."

#: of sklearn.neighbors._graph.KNeighborsTransformer:32
msgid "Note: fitting on sparse input will override the setting of this parameter, using brute force."
msgstr "Nota: el ajuste en la entrada dispersa anulará el ajuste de este parámetro, utilizando la fuerza bruta."

#: of sklearn.neighbors._graph.KNeighborsTransformer:39
msgid "**leaf_size**"
msgstr "**leaf_size**"

#: of
msgid "int, default=30"
msgstr "int, default=30"

#: of sklearn.neighbors._graph.KNeighborsTransformer:36
msgid "Leaf size passed to BallTree or KDTree.  This can affect the speed of the construction and query, as well as the memory required to store the tree.  The optimal value depends on the nature of the problem."
msgstr "Tamaño de hoja pasado a BallTree o KDTree. Esto puede afectar la velocidad de la construcción y la consulta, así como la memoria necesaria para almacenar el árbol. El valor óptimo depende de la naturaleza del problema."

#: of sklearn.neighbors._graph.KNeighborsTransformer:65
msgid "**metric**"
msgstr "**metric**"

#: of
msgid "str or callable, default='minkowski'"
msgstr "str or callable, default='minkowski'"

#: of sklearn.neighbors._graph.KNeighborsTransformer:42
msgid "metric to use for distance computation. Any metric from scikit-learn or scipy.spatial.distance can be used."
msgstr "métrica a utilizar para el cálculo de la distancia. Se puede utilizar cualquier métrica de scikit-learn o scipy.spatial.distance."

#: of sklearn.neighbors._graph.KNeighborsTransformer:45
msgid "If metric is a callable function, it is called on each pair of instances (rows) and the resulting value recorded. The callable should take two arrays as input and return one value indicating the distance between them. This works for Scipy's metrics, but is less efficient than passing the metric name as a string."
msgstr "Si la métrica es una función invocable, se llama a cada par de instancias (filas) y se registra el valor resultante. El invocable debe tomar dos arreglos como entrada y devolver un valor que indique la distancia entre ellos. Esto funciona para las métricas de Scipy, pero es menos eficiente que pasar el nombre de la métrica como una cadena."

#: of sklearn.neighbors._graph.KNeighborsTransformer:51
msgid "Distance matrices are not supported."
msgstr "Las matrices de distancia no son compatibles."

#: of sklearn.neighbors._graph.KNeighborsTransformer:53
msgid "Valid values for metric are:"
msgstr "Valores válidos para la métrica son:"

#: of sklearn.neighbors._graph.KNeighborsTransformer:55
msgid "from scikit-learn: ['cityblock', 'cosine', 'euclidean', 'l1', 'l2', 'manhattan']"
msgstr "de scikit-learn: ['cityblock', 'cosine', 'euclidean', 'l1', 'l2', 'manhattan']"

#: of sklearn.neighbors._graph.KNeighborsTransformer:58
msgid "from scipy.spatial.distance: ['braycurtis', 'canberra', 'chebyshev', 'correlation', 'dice', 'hamming', 'jaccard', 'kulsinski', 'mahalanobis', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule']"
msgstr "de scipy.spatial.distance: ['braycurtis', 'canberra', 'chebyshev', 'correlation', 'dice', 'hamming', 'jaccard', 'kulsinski', 'mahalanobis', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule']"

#: of sklearn.neighbors._graph.KNeighborsTransformer:64
msgid "See the documentation for scipy.spatial.distance for details on these metrics."
msgstr "Consulta la documentación de scipy.spatial.distance para obtener detalles sobre estas métricas."

#: of sklearn.neighbors._graph.KNeighborsTransformer:71
msgid "**p**"
msgstr "**p**"

#: of
msgid "int, default=2"
msgstr "int, default=2"

#: of sklearn.neighbors._graph.KNeighborsTransformer:68
msgid "Parameter for the Minkowski metric from sklearn.metrics.pairwise.pairwise_distances. When p = 1, this is equivalent to using manhattan_distance (l1), and euclidean_distance (l2) for p = 2. For arbitrary p, minkowski_distance (l_p) is used."
msgstr "Parámetro para la métrica de Minkowski de sklearn.metrics.pairwise.pairwise_distances. Cuando p = 1, esto es equivalente a usar manhattan_distance (l1), y euclidean_distance (l2) para p = 2. Para p arbitrario, se utiliza minkowski_distance (l_p)."

#: of sklearn.neighbors._graph.KNeighborsTransformer:74
msgid "**metric_params**"
msgstr "**metric_params**"

#: of
msgid "dict, default=None"
msgstr "dict, default=None"

#: of sklearn.neighbors._graph.KNeighborsTransformer:74
msgid "Additional keyword arguments for the metric function."
msgstr "Argumentos adicionales de palabras clave para la función métrica."

#: of sklearn.neighbors._graph.KNeighborsTransformer:81
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=1"
msgstr "int, default=1"

#: of sklearn.neighbors._graph.KNeighborsTransformer:77
msgid "The number of parallel jobs to run for neighbors search. If ``-1``, then the number of jobs is set to the number of CPU cores."
msgstr "El número de trabajos paralelos a ejecutar para la búsqueda de vecinos. Si ``-1``, el número de trabajos se establece en el número de núcleos de la CPU."

#: of sklearn.neighbors._graph.KNeighborsTransformer
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.neighbors._graph.KNeighborsTransformer:88
msgid "**effective_metric_**"
msgstr "**effective_metric_**"

#: of
msgid "str or callable"
msgstr "str or callable"

#: of sklearn.neighbors._graph.KNeighborsTransformer:86
msgid "The distance metric used. It will be same as the `metric` parameter or a synonym of it, e.g. 'euclidean' if the `metric` parameter set to 'minkowski' and `p` parameter set to 2."
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:94
msgid "**effective_metric_params_**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:91
msgid "Additional keyword arguments for the metric function. For most metrics will be same with `metric_params` parameter, but may also contain the `p` parameter value if the `effective_metric_` attribute is set to 'minkowski'."
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:103
msgid "**n_samples_fit_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:97
msgid "Number of samples in the fitted data."
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:39
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:46
#: sklearn.neighbors._graph.KNeighborsTransformer:106
msgid "Examples"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:115
msgid "Methods"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid ":obj:`fit <sklearn.neighbors.KNeighborsTransformer.fit>`\\"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.fit:2
#: sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid "Fit the k-nearest neighbors transformer from the training dataset."
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.neighbors.KNeighborsTransformer.fit_transform>`\\"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.fit_transform:2
#: sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid ":obj:`get_params <sklearn.neighbors.KNeighborsTransformer.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid ":obj:`kneighbors <sklearn.neighbors.KNeighborsTransformer.kneighbors>`\\"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:2
#: sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid "Finds the K-neighbors of a point."
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid ":obj:`kneighbors_graph <sklearn.neighbors.KNeighborsTransformer.kneighbors_graph>`\\"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:2
#: sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid "Computes the (weighted) graph of k-Neighbors for points in X"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid ":obj:`set_params <sklearn.neighbors.KNeighborsTransformer.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid ":obj:`transform <sklearn.neighbors.KNeighborsTransformer.transform>`\\"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.transform:2
#: sklearn.neighbors._graph.KNeighborsTransformer:125:<autosummary>:1
msgid "Computes the (weighted) graph of Neighbors for points in X"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:11
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:13
#: sklearn.neighbors._graph.KNeighborsTransformer.fit:8
#: sklearn.neighbors._graph.KNeighborsTransformer.fit_transform:10
#: sklearn.neighbors._graph.KNeighborsTransformer.transform:8
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features) or                 (n_samples, n_samples) if metric='precomputed'"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.fit:8
msgid "Training data."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph
#: sklearn.neighbors._graph.KNeighborsTransformer.fit
#: sklearn.neighbors._graph.KNeighborsTransformer.fit_transform
#: sklearn.neighbors._graph.KNeighborsTransformer.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.neighbors._graph.KNeighborsTransformer.fit:24
msgid "**self**"
msgstr ""

#: of
msgid "KNeighborsTransformer"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.fit:13
msgid "The fitted k-nearest neighbors transformer."
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.fit_transform:4
msgid "Fits transformer to X and y with optional parameters fit_params and returns a transformed version of X."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.fit_transform:10
msgid "Training set."
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.fit_transform:13
msgid "**y**"
msgstr ""

#: of
msgid "ignored"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.fit_transform:32
#: sklearn.neighbors._graph.KNeighborsTransformer.transform:27
msgid "**Xt**"
msgstr ""

#: of
msgid "sparse matrix of shape (n_samples, n_samples)"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.fit_transform:18
#: sklearn.neighbors._graph.KNeighborsTransformer.transform:13
msgid "Xt[i, j] is assigned the weight of edge that connects i to j. Only the neighbors have an explicit value. The diagonal is always explicit. The matrix is of CSR format."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:4
msgid "Returns indices of and distances to the neighbors of each point."
msgstr ""

#: of
msgid "array-like, shape (n_queries, n_features),             or (n_queries, n_indexed) if metric == 'precomputed',                 default=None"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:9
msgid "The query point or points. If not provided, neighbors of each indexed point are returned. In this case, the query point is not considered its own neighbor."
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:14
msgid "Number of neighbors required for each sample. The default is the value passed to the constructor."
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:18
msgid "**return_distance**"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:18
msgid "Whether or not to return the distances."
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:24
msgid "**neigh_dist**"
msgstr ""

#: of
msgid "ndarray of shape (n_queries, n_neighbors)"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:23
msgid "Array representing the lengths to points, only present if return_distance=True"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:36
msgid "**neigh_ind**"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:27
msgid "Indices of the nearest points in the population matrix."
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:40
msgid "In the following example, we construct a NearestNeighbors class from an array representing our data set and ask who's the closest point to [1,1,1]"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:52
msgid "As you can see, it returns [[0.5]], and [[2]], which means that the element is at distance 0.5 and is the third element of samples (indexes start at 0). You can also query for multiple points:"
msgstr ""

#: of
msgid "array-like of shape (n_queries, n_features),                 or (n_queries, n_indexed) if metric == 'precomputed',                 default=None"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:8
msgid "The query point or points. If not provided, neighbors of each indexed point are returned. In this case, the query point is not considered its own neighbor. For ``metric='precomputed'`` the shape should be (n_queries, n_indexed). Otherwise the shape should be (n_queries, n_features)."
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:16
msgid "Number of neighbors for each sample. The default is the value passed to the constructor."
msgstr ""

#: of
msgid "{'connectivity', 'distance'}, default='connectivity'"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:20
msgid "Type of returned matrix: 'connectivity' will return the connectivity matrix with ones and zeros, in 'distance' the edges are Euclidean distance between points."
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:35
msgid "**A**"
msgstr ""

#: of
msgid "sparse-matrix of shape (n_queries, n_samples_fit)"
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:27
msgid "`n_samples_fit` is the number of samples in the fitted data `A[i, j]` is assigned the weight of edge that connects `i` to `j`. The matrix is of CSR format."
msgstr ""

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:40
msgid ":obj:`NearestNeighbors.radius_neighbors_graph`"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of
msgid "array-like of shape (n_samples_transform, n_features)"
msgstr ""

#: of sklearn.neighbors._graph.KNeighborsTransformer.transform:8
msgid "Sample data."
msgstr ""

#: of
msgid "sparse matrix of shape (n_samples_transform, n_samples_fit)"
msgstr ""

#: ../modules/generated/sklearn.neighbors.KNeighborsTransformer.examples:4
msgid "Examples using ``sklearn.neighbors.KNeighborsTransformer``"
msgstr ""

#: ../modules/generated/sklearn.neighbors.KNeighborsTransformer.examples:15
#: ../modules/generated/sklearn.neighbors.KNeighborsTransformer.examples:23
msgid ":ref:`sphx_glr_auto_examples_neighbors_approximate_nearest_neighbors.py`"
msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_22_0.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_caching_nearest_neighbors.py`"
#~ msgstr ""

