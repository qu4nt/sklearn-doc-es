msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-05 02:55\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.datasets.make_blobs.po\n"
"X-Crowdin-File-ID: 5806\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.datasets.make_blobs.rst:2
msgid ":mod:`sklearn.datasets`.make_blobs"
msgstr ":mod:`sklearn.datasets`.make_blobs"

#: of sklearn.datasets._samples_generator.make_blobs:2
msgid "Generate isotropic Gaussian blobs for clustering."
msgstr "Genera blobs Gaussianos isotrópicos para el análisis de conglomerados."

#: of sklearn.datasets._samples_generator.make_blobs:4
msgid "Read more in the :ref:`User Guide <sample_generators>`."
msgstr "Leer más en el :ref:`Manual de Usuario <sample_generators>`."

#: of sklearn.datasets._samples_generator.make_blobs
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.datasets._samples_generator.make_blobs:15
msgid "**n_samples**"
msgstr "**n_samples**"

#: of
msgid "int or array-like, default=100"
msgstr "int o array-like, default=100"

#: of sklearn.datasets._samples_generator.make_blobs:9
msgid "If int, it is the total number of points equally divided among clusters. If array-like, each element of the sequence indicates the number of samples per cluster."
msgstr "Si es int, es el número total de puntos dividido equitativamente entre los conglomerados. Si es array-like, cada elemento de la secuencia indica el número de muestras por conglomerado."

#: of sklearn.datasets._samples_generator.make_blobs:14
msgid "one can now pass an array-like to the ``n_samples`` parameter"
msgstr "ahora se puede pasar un array-like al parámetro ``n_samples``"

#: of sklearn.datasets._samples_generator.make_blobs:18
msgid "**n_features**"
msgstr "**n_features**"

#: of
msgid "int, default=2"
msgstr "int, default=2"

#: of sklearn.datasets._samples_generator.make_blobs:18
msgid "The number of features for each sample."
msgstr "El número de características de cada muestra."

#: of sklearn.datasets._samples_generator.make_blobs:24
#: sklearn.datasets._samples_generator.make_blobs:62
msgid "**centers**"
msgstr "**centers**"

#: of
msgid "int or ndarray of shape (n_centers, n_features), default=None"
msgstr "int o ndarray de forma (n_centers, n_features), default=None"

#: of sklearn.datasets._samples_generator.make_blobs:21
msgid "The number of centers to generate, or the fixed center locations. If n_samples is an int and centers is None, 3 centers are generated. If n_samples is array-like, centers must be either None or an array of length equal to the length of n_samples."
msgstr "El número de centros a generar, o las ubicaciones fijas de los centros. Si n_samples es un entero y centers es None, se generan 3 centros. Si n_samples es un array-like, centers debe ser None o un arreglo de longitud igual a la de n_samples."

#: of sklearn.datasets._samples_generator.make_blobs:27
msgid "**cluster_std**"
msgstr "**cluster_std**"

#: of
msgid "float or array-like of float, default=1.0"
msgstr "float o array-like de float, default=1.0"

#: of sklearn.datasets._samples_generator.make_blobs:27
msgid "The standard deviation of the clusters."
msgstr "La desviación estándar de los conglomerados."

#: of sklearn.datasets._samples_generator.make_blobs:31
msgid "**center_box**"
msgstr "**center_box**"

#: of
msgid "tuple of float (min, max), default=(-10.0, 10.0)"
msgstr "tupla de flotantes (min, max), default=(-10.0, 10.0)"

#: of sklearn.datasets._samples_generator.make_blobs:30
msgid "The bounding box for each cluster center when centers are generated at random."
msgstr "La caja delimitadora de cada centro de conglomerado cuando los centros se generan al azar."

#: of sklearn.datasets._samples_generator.make_blobs:34
msgid "**shuffle**"
msgstr "**shuffle**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.datasets._samples_generator.make_blobs:34
msgid "Shuffle the samples."
msgstr "Revuelve las muestras."

#: of sklearn.datasets._samples_generator.make_blobs:39
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "entero, instancia de RandomState o None, default=None"

#: of sklearn.datasets._samples_generator.make_blobs:37
msgid "Determines random number generation for dataset creation. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Determina la generación de números aleatorios para la creación de conjuntos de datos. Pasa un int para una salida reproducible a través de múltiples llamadas a la función. Ver :term:`Glosario <random_state>`."

#: of sklearn.datasets._samples_generator.make_blobs:44
msgid "**return_centers**"
msgstr "**return_centers**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.datasets._samples_generator.make_blobs:42
msgid "If True, then return the centers of each cluster"
msgstr "Si es True, devuelve los centros de cada conglomerado"

#: of sklearn.datasets._samples_generator.make_blobs
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.datasets._samples_generator.make_blobs:49
msgid "**X**"
msgstr "**X**"

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr "ndarray de forma (n_samples, n_features)"

#: of sklearn.datasets._samples_generator.make_blobs:49
msgid "The generated samples."
msgstr "Las muestras generadas."

#: of sklearn.datasets._samples_generator.make_blobs:52
msgid "**y**"
msgstr "**y**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.datasets._samples_generator.make_blobs:52
msgid "The integer labels for cluster membership of each sample."
msgstr "Las etiquetas enteras para la pertenencia a un conglomerado de cada muestra."

#: of
msgid "ndarray of shape (n_centers, n_features)"
msgstr "ndarray de forma (n_centers, n_features)"

#: of sklearn.datasets._samples_generator.make_blobs:55
msgid "The centers of each cluster. Only returned if ``return_centers=True``."
msgstr "Los centros de cada conglomerado. Sólo se devuelve si ``return_centers=True``."

#: of sklearn.datasets._samples_generator.make_blobs:67
msgid ":obj:`make_classification`"
msgstr ":obj:`make_classification`"

#: of sklearn.datasets._samples_generator.make_blobs:68
msgid "A more intricate variant."
msgstr "Una variante más intrincada."

#: of sklearn.datasets._samples_generator.make_blobs:74
msgid "Examples"
msgstr "Ejemplos"

#: ../modules/generated/sklearn.datasets.make_blobs.examples:4
msgid "Examples using ``sklearn.datasets.make_blobs``"
msgstr "Ejemplos usando ``sklearn.datasets.make_blobs``"

#: ../modules/generated/sklearn.datasets.make_blobs.examples:15
#: ../modules/generated/sklearn.datasets.make_blobs.examples:23
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_sgd_separating_hyperplane.py`"
msgstr ":ref:`sphx_glr_auto_examples_linear_model_plot_sgd_separating_hyperplane.py`"

#: ../modules/generated/sklearn.datasets.make_blobs.examples:34
#: ../modules/generated/sklearn.datasets.make_blobs.examples:42
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_logistic_multinomial.py`"
msgstr ":ref:`sphx_glr_auto_examples_linear_model_plot_logistic_multinomial.py`"

#: ../modules/generated/sklearn.datasets.make_blobs.examples:53
#: ../modules/generated/sklearn.datasets.make_blobs.examples:61
#: ../modules/generated/sklearn.datasets.make_blobs.examples:72
#: ../modules/generated/sklearn.datasets.make_blobs.examples:80
msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_anomaly_comparison.py`"
msgstr ":ref:`sphx_glr_auto_examples_miscellaneous_plot_anomaly_comparison.py`"

#: ../modules/generated/sklearn.datasets.make_blobs.examples:91
#: ../modules/generated/sklearn.datasets.make_blobs.examples:99
msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_discretization_strategies.py`"
msgstr ":ref:`sphx_glr_auto_examples_preprocessing_plot_discretization_strategies.py`"

#: ../modules/generated/sklearn.datasets.make_blobs.examples:110
#: ../modules/generated/sklearn.datasets.make_blobs.examples:118
msgid ":ref:`sphx_glr_auto_examples_svm_plot_separating_hyperplane.py`"
msgstr ":ref:`sphx_glr_auto_examples_svm_plot_separating_hyperplane.py`"

#: ../modules/generated/sklearn.datasets.make_blobs.examples:129
#: ../modules/generated/sklearn.datasets.make_blobs.examples:137
msgid ":ref:`sphx_glr_auto_examples_svm_plot_svm_tie_breaking.py`"
msgstr ":ref:`sphx_glr_auto_examples_svm_plot_svm_tie_breaking.py`"

#: ../modules/generated/sklearn.datasets.make_blobs.examples:148
#: ../modules/generated/sklearn.datasets.make_blobs.examples:156
msgid ":ref:`sphx_glr_auto_examples_svm_plot_linearsvc_support_vectors.py`"
msgstr ":ref:`sphx_glr_auto_examples_svm_plot_linearsvc_support_vectors.py`"

#: ../modules/generated/sklearn.datasets.make_blobs.examples:167
#: ../modules/generated/sklearn.datasets.make_blobs.examples:175
msgid ":ref:`sphx_glr_auto_examples_svm_plot_separating_hyperplane_unbalanced.py`"
msgstr ":ref:`sphx_glr_auto_examples_svm_plot_separating_hyperplane_unbalanced.py`"

