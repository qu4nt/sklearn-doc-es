msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-08-12 22:26\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.svm.SVR.po\n"
"X-Crowdin-File-ID: 5694\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.svm.SVR.rst:2
msgid ":mod:`sklearn.svm`.SVR"
msgstr ":mod:`sklearn.svm`.SVR"

#: of sklearn.svm._classes.SVR:2
msgid "Epsilon-Support Vector Regression."
msgstr "Regresión de Vector de Soporte-Épsilon."

#: of sklearn.svm._classes.SVR:4
msgid "The free parameters in the model are C and epsilon."
msgstr "Los parámetros libres en el modelo son C y épsilon."

#: of sklearn.svm._classes.SVR:6
msgid "The implementation is based on libsvm. The fit time complexity is more than quadratic with the number of samples which makes it hard to scale to datasets with more than a couple of 10000 samples. For large datasets consider using :class:`~sklearn.svm.LinearSVR` or :class:`~sklearn.linear_model.SGDRegressor` instead, possibly after a :class:`~sklearn.kernel_approximation.Nystroem` transformer."
msgstr "La implementación se basa en libsvm. La complejidad del tiempo de ajuste es más que cuadrática con el número de muestras lo cual lo hace dificil para escalar a conjuntos de datos con más de un par de 10000 muestras. Para conjuntos de datos mas grandes consideré usar :class:`~sklearn.svm.LinearSVR` o :class:`~sklearn.linear_model.SGDRegressor` en su lugar, posiblemente después de un transformador :class:`~sklearn.kernel_approximation.Nystroem`."

#: of sklearn.svm._classes.SVR:13
msgid "Read more in the :ref:`User Guide <svm_regression>`."
msgstr "Lee más en el :ref:`Manual de usuario <svm_regression>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.svm._base.BaseLibSVM.fit sklearn.svm._base.BaseLibSVM.predict
#: sklearn.svm._classes.SVR
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.svm._classes.SVR:22
msgid "**kernel**"
msgstr "**kernel**"

#: of
msgid "{'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}, default='rbf'"
msgstr "{'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}, default='rbf'"

#: of sklearn.svm._classes.SVR:18
msgid "Specifies the kernel type to be used in the algorithm. It must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or a callable. If none is given, 'rbf' will be used. If a callable is given it is used to precompute the kernel matrix."
msgstr "Especifica el tipo de núcleo a ser usado en el algoritmo. Debe ser uno de 'linear', 'poly', 'rby', 'sigmoid', 'precomputed' o un invocable. Si no se da ninguna, se utilizará 'rbf'. Si un invocable es dado se utilizara para precalcular la matriz del núcleo."

#: of sklearn.svm._classes.SVR:26
msgid "**degree**"
msgstr "**degree**"

#: of
msgid "int, default=3"
msgstr "entero, default=3"

#: of sklearn.svm._classes.SVR:25
msgid "Degree of the polynomial kernel function ('poly'). Ignored by all other kernels."
msgstr "Grado de la función de núcleo polinómico ('poly'). Ignorado por todos los otros núcleos."

#: of sklearn.svm._classes.SVR:36
msgid "**gamma**"
msgstr "**gamma**"

#: of
msgid "{'scale', 'auto'} or float, default='scale'"
msgstr "{'scale', 'auto'} o flotante, default='scale'"

#: of sklearn.svm._classes.SVR:29
msgid "Kernel coefficient for 'rbf', 'poly' and 'sigmoid'."
msgstr "Coeficiente de núcleo para 'rbf', 'poly' y 'sigmoid'."

#: of sklearn.svm._classes.SVR:31
msgid "if ``gamma='scale'`` (default) is passed then it uses 1 / (n_features * X.var()) as value of gamma,"
msgstr "si se pasa ``gamma='scale'`` (valor predeterminado), entonces se usa 1 / (n_features * X.var()) como valor de gamma,"

#: of sklearn.svm._classes.SVR:33
msgid "if 'auto', uses 1 / n_features."
msgstr "si es 'auto', utiliza 1 / n_features."

#: of sklearn.svm._classes.SVR:35
msgid "The default value of ``gamma`` changed from 'auto' to 'scale'."
msgstr "El valor predeterminado de ``gamma`` cambió de 'auto' a 'scale'."

#: of sklearn.svm._classes.SVR:40
msgid "**coef0**"
msgstr "**coef0**"

#: of
msgid "float, default=0.0"
msgstr "flotante, default=0.0"

#: of sklearn.svm._classes.SVR:39
msgid "Independent term in kernel function. It is only significant in 'poly' and 'sigmoid'."
msgstr "Término independiente en la función del núcleo. Sólo es significativo en 'poly' y 'sigmoid'."

#: of sklearn.svm._classes.SVR:43
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-3"
msgstr "flotante, default=1e-3"

#: of sklearn.svm._classes.SVR:43
msgid "Tolerance for stopping criterion."
msgstr "Tolerancia para el criterio de parada."

#: of sklearn.svm._classes.SVR:48
msgid "**C**"
msgstr "**C**"

#: of
msgid "float, default=1.0"
msgstr "flotante, default=1.0"

#: of sklearn.svm._classes.SVR:46
msgid "Regularization parameter. The strength of the regularization is inversely proportional to C. Must be strictly positive. The penalty is a squared l2 penalty."
msgstr "Parámetro de regularización. La fuerza de la regularización es inversamente proporcional a C. Debe ser estrictamente positiva. La penalidad es una penalidad l2 cuadrática."

#: of sklearn.svm._classes.SVR:54
msgid "**epsilon**"
msgstr "**epsilon**"

#: of
msgid "float, default=0.1"
msgstr "flotante, default=0.1"

#: of sklearn.svm._classes.SVR:51
msgid "Epsilon in the epsilon-SVR model. It specifies the epsilon-tube within which no penalty is associated in the training loss function with points predicted within a distance epsilon from the actual value."
msgstr "Épsilon en el modelo epsilon-SVR. Especifica el épsilon-tubo dentro del cual no se asocia ninguna penalización en la función de pérdida de entrenamiento con puntos predichos dentro de un épsilon de distancia del valor real."

#: of sklearn.svm._classes.SVR:58
msgid "**shrinking**"
msgstr "**shrinking**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.svm._classes.SVR:57
msgid "Whether to use the shrinking heuristic. See the :ref:`User Guide <shrinking_svm>`."
msgstr "Si se usa o no la heurística de reducción. Ver el :ref:`Manual de usuario <shrinking_svm>`."

#: of sklearn.svm._classes.SVR:61
msgid "**cache_size**"
msgstr "**cache_size**"

#: of
msgid "float, default=200"
msgstr "flotante, default=200"

#: of sklearn.svm._classes.SVR:61
msgid "Specify the size of the kernel cache (in MB)."
msgstr "Específica el tamaño del caché del núcleo (en MB)."

#: of sklearn.svm._classes.SVR:66
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool, default=False"
msgstr "booleano, default=False"

#: of sklearn.svm._classes.SVR:64
msgid "Enable verbose output. Note that this setting takes advantage of a per-process runtime setting in libsvm that, if enabled, may not work properly in a multithreaded context."
msgstr "Activar salida detallada. Ten en cuenta que esta configuración toma ventaja de una configuración por proceso en el tiempo de ejecución en libsvm que, si está habilitada, puede no funcionar correctamente en un contexto multihilo."

#: of sklearn.svm._classes.SVR:72
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=-1"
msgstr "entero, default=-1"

#: of sklearn.svm._classes.SVR:69
msgid "Hard limit on iterations within solver, or -1 for no limit."
msgstr "Limite fuerte en iteraciones dentro del solucionador, o -1 para ningún límite."

#: of sklearn.svm._classes.SVR
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.svm._classes.SVR:78
msgid "**class_weight_**"
msgstr "**class_weight_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.svm._classes.SVR:77
msgid "Multipliers of parameter C for each class. Computed based on the ``class_weight`` parameter."
msgstr "Multiplicadores del parámetro C para cada clase. Calculado basado en el parámetro ``class_weight``."

#: of sklearn.svm._classes.SVR:85
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (1, n_features)"
msgstr "ndarray de forma (1, n_features)"

#: of sklearn.svm._classes.SVR:81
msgid "Weights assigned to the features (coefficients in the primal problem). This is only available in the case of a linear kernel."
msgstr "Ponderaciones asignadas a las características (coeficientes en el problema primario). Esto solo está disponible en el caso de un kernel lineal."

#: of sklearn.svm._classes.SVR:84
msgid "`coef_` is readonly property derived from `dual_coef_` and `support_vectors_`."
msgstr "`coef_` es propiedad de solo lectura derivada de `dual_coef_` y `support_vectors_`."

#: of sklearn.svm._classes.SVR:88
msgid "**dual_coef_**"
msgstr "**dual_coef_**"

#: of
msgid "ndarray of shape (1, n_SV)"
msgstr "ndarray de forma (1, n_SV)"

#: of sklearn.svm._classes.SVR:88
msgid "Coefficients of the support vector in the decision function."
msgstr "Coeficientes de los vectores de soporte en la función de decisión."

#: of sklearn.svm._classes.SVR:91
msgid "**fit_status_**"
msgstr "**fit_status_**"

#: of
msgid "int"
msgstr "entero"

#: of sklearn.svm._classes.SVR:91
msgid "0 if correctly fitted, 1 otherwise (will raise warning)"
msgstr "0 si se ajusta correctamente, 1 en caso contrario (producirá una advertencia)"

#: of sklearn.svm._classes.SVR:94
msgid "**intercept_**"
msgstr "**intercept_**"

#: of
msgid "ndarray of shape (1,)"
msgstr "ndarray de forma (1,)"

#: of sklearn.svm._classes.SVR:94
msgid "Constants in decision function."
msgstr "Constantes en la función de decisión."

#: of sklearn.svm._classes.SVR:97
msgid "**n_support_**"
msgstr "**n_support_**"

#: of
msgid "ndarray of shape (n_classes,), dtype=int32"
msgstr "ndarray de forma (n_classes,), dtype=int32"

#: of sklearn.svm._classes.SVR:97
msgid "Number of support vectors for each class."
msgstr "Número de vectores de soporte para cada clase."

#: of sklearn.svm._classes.SVR:100
msgid "**shape_fit_**"
msgstr "**shape_fit_**"

#: of
msgid "tuple of int of shape (n_dimensions_of_X,)"
msgstr "tupla de int de la forma (n_dimensions_of_X,)"

#: of sklearn.svm._classes.SVR:100
msgid "Array dimensions of training vector ``X``."
msgstr "Dimensiones del arreglo del vector de entrenamiento ``X``."

#: of sklearn.svm._classes.SVR:103
msgid "**support_**"
msgstr "**support_**"

#: of
msgid "ndarray of shape (n_SV,)"
msgstr "ndarray de forma (n_SV,)"

#: of sklearn.svm._classes.SVR:103
msgid "Indices of support vectors."
msgstr "Indices de vectores de apoyo."

#: of sklearn.svm._classes.SVR:109
msgid "**support_vectors_**"
msgstr "**support_vectors_**"

#: of
msgid "ndarray of shape (n_SV, n_features)"
msgstr "ndarray de forma (n_SV, n_features)"

#: of sklearn.svm._classes.SVR:106
msgid "Support vectors."
msgstr "Vectores de apoyo."

#: of sklearn.svm._classes.SVR:114
msgid ":obj:`NuSVR`"
msgstr ":obj:`NuSVR`"

#: of sklearn.svm._classes.SVR:115
msgid "Support Vector Machine for regression implemented using libsvm using a parameter to control the number of support vectors."
msgstr "Maquína de Vector de Soporte para la regresión implementada usando libsvm con un parámetro para controlar el número de vectores de soporte."

#: of sklearn.svm._classes.SVR:116
msgid ":obj:`LinearSVR`"
msgstr ":obj:`LinearSVR`"

#: of sklearn.svm._classes.SVR:117
msgid "Scalable Linear Support Vector Machine for regression implemented using liblinear."
msgstr "Maquina de Vectores de Soporte Escalable Lineal para regresión implementada usando liblinear."

#: of sklearn.svm._classes.SVR:122
msgid "References"
msgstr "Referencias"

#: of sklearn.svm._classes.SVR:123
msgid "`LIBSVM: A Library for Support Vector Machines <http://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf>`_"
msgstr "`LIBSVM: A Library for Support Vector Machines <http://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf>`_"

#: of sklearn.svm._classes.SVR:126
msgid "`Platt, John (1999). \"Probabilistic outputs for support vector machines and comparison to regularizedlikelihood methods.\" <http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.1639>`_"
msgstr "`Platt, John (1999). \"Probabilistic outputs for support vector machines and comparison to regularizedlikelihood methods.\" <http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.1639>`_"

#: of sklearn.svm._classes.SVR:132
msgid "[R4ae6a8049c28-1]_, [R4ae6a8049c28-2]_"
msgstr "[R4ae6a8049c28-1]_, [R4ae6a8049c28-2]_"

#: of sklearn.svm._classes.SVR:135
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.svm._classes.SVR:150
msgid "Methods"
msgstr "Métodos"

#: of sklearn.svm._classes.SVR:158:<autosummary>:1
msgid ":obj:`fit <sklearn.svm.SVR.fit>`\\"
msgstr ":obj:`fit <sklearn.svm.SVR.fit>`\\"

#: of sklearn.svm._base.BaseLibSVM.fit:2
#: sklearn.svm._classes.SVR:158:<autosummary>:1
msgid "Fit the SVM model according to the given training data."
msgstr "Ajusta el modelo SVM de acuerdo a los datos de entrenamiento dados."

#: of sklearn.svm._classes.SVR:158:<autosummary>:1
msgid ":obj:`get_params <sklearn.svm.SVR.get_params>`\\"
msgstr ":obj:`get_params <sklearn.svm.SVR.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.svm._classes.SVR:158:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.svm._classes.SVR:158:<autosummary>:1
msgid ":obj:`predict <sklearn.svm.SVR.predict>`\\"
msgstr ":obj:`predict <sklearn.svm.SVR.predict>`\\"

#: of sklearn.svm._base.BaseLibSVM.predict:2
#: sklearn.svm._classes.SVR:158:<autosummary>:1
msgid "Perform regression on samples in X."
msgstr "Realiza la regresión en las muestras en X."

#: of sklearn.svm._classes.SVR:158:<autosummary>:1
msgid ":obj:`score <sklearn.svm.SVR.score>`\\"
msgstr ":obj:`score <sklearn.svm.SVR.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.svm._classes.SVR:158:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.svm._classes.SVR:158:<autosummary>:1
msgid ":obj:`set_params <sklearn.svm.SVR.set_params>`\\"
msgstr ":obj:`set_params <sklearn.svm.SVR.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.svm._classes.SVR:158:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.RegressorMixin.score:20 sklearn.svm._base.BaseLibSVM.fit:11
#: sklearn.svm._base.BaseLibSVM.predict:10
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)                 or (n_samples, n_samples)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)                 o (n_samples, n_samples)"

#: of sklearn.svm._base.BaseLibSVM.fit:8
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of features. For kernel=\"precomputed\", the expected shape of X is (n_samples, n_samples)."
msgstr "Vectores de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características. Para kernel=\"precomputed\", la forma esperada de X es (n_samples, n_samples)."

#: of sklearn.base.RegressorMixin.score:23 sklearn.svm._base.BaseLibSVM.fit:15
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like de forma (n_samples,)"

#: of sklearn.svm._base.BaseLibSVM.fit:14
msgid "Target values (class labels in classification, real numbers in regression)."
msgstr "Valores objetivo (etiquetas de clase en clasificación, números reales en regresión)."

#: of sklearn.base.RegressorMixin.score:26 sklearn.svm._base.BaseLibSVM.fit:19
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,) default=None"

#: of sklearn.svm._base.BaseLibSVM.fit:18
msgid "Per-sample weights. Rescale C per sample. Higher weights force the classifier to put more emphasis on these points."
msgstr "Ponderados por muestra. Reescalado de C por muestra. Los ponderados más altos obligan al clasificador a poner más énfasis en estos puntos."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.svm._base.BaseLibSVM.fit sklearn.svm._base.BaseLibSVM.predict
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.svm._base.BaseLibSVM.fit:31
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "objeto"

#: of sklearn.base.RegressorMixin.score:41 sklearn.svm._base.BaseLibSVM.fit:34
msgid "Notes"
msgstr "Notas"

#: of sklearn.svm._base.BaseLibSVM.fit:35
msgid "If X and y are not C-ordered and contiguous arrays of np.float64 and X is not a scipy.sparse.csr_matrix, X and/or y may be copied."
msgstr "Si X y y no son arreglos contiguos y C-ordenados de np.float64 y X no es un scipy.sparse.csr_matrix, X y/o y pueden ser copiados."

#: of sklearn.svm._base.BaseLibSVM.fit:38
msgid "If X is a dense array, then the other methods will not support sparse matrices as input."
msgstr "Si X es un arreglo denso, entonces los otros métodos no soportaran matrices dispersas como entrada."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Los nombres de los parámetros asignados a sus valores."

#: of sklearn.svm._base.BaseLibSVM.predict:4
msgid "For an one-class model, +1 (inlier) or -1 (outlier) is returned."
msgstr "Para un modelo de una clase, se devuelve +1 (valor típico) o -1 (valor atípico)."

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.svm._base.BaseLibSVM.predict:9
msgid "For kernel=\"precomputed\", the expected shape of X is (n_samples_test, n_samples_train)."
msgstr "Para kernel=\"precomputed\", la forma esperada de X es (n_samples_test, n_samples_train)."

#: of sklearn.svm._base.BaseLibSVM.predict:26
msgid "**y_pred**"
msgstr "**y_pred**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma de cuadrados de los residuos ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1.0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0.0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples_X, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores esto puede ser una matriz de núcleo precalculada o una lista de objetos genéricos con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para `X`."

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderaciones de muestras."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "de punto flotante (float)"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al llamar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la consistencia con el valor predeterminado de :func:`~sklearn.metrics.r2_score`. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: ../modules/generated/sklearn.svm.SVR.examples:4
msgid "Examples using ``sklearn.svm.SVR``"
msgstr "Ejemplos usando ``sklearn.svm.SVR``"

#: ../modules/generated/sklearn.svm.SVR.examples:15
#: ../modules/generated/sklearn.svm.SVR.examples:23
#: ../modules/generated/sklearn.svm.SVR.examples:34
#: ../modules/generated/sklearn.svm.SVR.examples:42
msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_kernel_ridge_regression.py`"
msgstr ":ref:`sphx_glr_auto_examples_miscellaneous_plot_kernel_ridge_regression.py`"

#: ../modules/generated/sklearn.svm.SVR.examples:53
#: ../modules/generated/sklearn.svm.SVR.examples:61
msgid ":ref:`sphx_glr_auto_examples_svm_plot_svm_regression.py`"
msgstr ":ref:`sphx_glr_auto_examples_svm_plot_svm_regression.py`"

