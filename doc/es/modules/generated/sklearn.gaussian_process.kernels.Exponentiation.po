msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-14 23:58\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.gaussian_process.kernels.Exponentiation.po\n"
"X-Crowdin-File-ID: 3202\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.gaussian_process.kernels.Exponentiation.rst:2
msgid ":mod:`sklearn.gaussian_process.kernels`.Exponentiation"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:2
msgid "The Exponentiation kernel takes one base kernel and a scalar parameter :math:`p` and combines them via"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:5
msgid "k_{exp}(X, Y) = k(X, Y) ^p\n\n"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:8
msgid "Note that the `__pow__` magic method is overridden, so `Exponentiation(RBF(), 2)` is equivalent to using the ** operator with `RBF() ** 2`."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:12
msgid "Read more in the :ref:`User Guide <gp_kernels>`."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation
#: sklearn.gaussian_process.kernels.Exponentiation.__call__
#: sklearn.gaussian_process.kernels.Exponentiation.diag
#: sklearn.gaussian_process.kernels.Exponentiation.get_params
#: sklearn.gaussian_process.kernels.Kernel.clone_with_theta
msgid "Parameters"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:19
msgid "**kernel**"
msgstr ""

#: of
msgid "Kernel"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:19
msgid "The base kernel"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:25
msgid "**exponent**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:22
msgid "The exponent for the base kernel"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation
msgid "Attributes"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:30
msgid ":obj:`bounds <bounds>`"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:30
#: sklearn.gaussian_process.kernels.Exponentiation.bounds:2
msgid "Returns the log-transformed bounds on the theta."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:33
msgid ":obj:`hyperparameters <hyperparameters>`"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:33
#: sklearn.gaussian_process.kernels.Exponentiation.hyperparameters:2
msgid "Returns a list of all hyperparameter."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:36
msgid ":obj:`n_dims <n_dims>`"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:36
#: sklearn.gaussian_process.kernels.Exponentiation.n_dims:2
msgid "Returns the number of non-fixed hyperparameters of the kernel."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:39
msgid ":obj:`requires_vector_input <requires_vector_input>`"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:39
#: sklearn.gaussian_process.kernels.Exponentiation.requires_vector_input:2
msgid "Returns whether the kernel is defined on discrete structures."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:48
msgid ":obj:`theta <theta>`"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:42
#: sklearn.gaussian_process.kernels.Exponentiation.theta:2
msgid "Returns the (flattened, log-transformed) non-fixed hyperparameters."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:51
msgid "Examples"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:66
msgid "Methods"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid ":obj:`__call__ <sklearn.gaussian_process.kernels.Exponentiation.__call__>`\\"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:2
#: sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid "Return the kernel k(X, Y) and optionally its gradient."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid ":obj:`clone_with_theta <sklearn.gaussian_process.kernels.Exponentiation.clone_with_theta>`\\"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
#: sklearn.gaussian_process.kernels.Kernel.clone_with_theta:2
msgid "Returns a clone of self with given hyperparameters theta."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid ":obj:`diag <sklearn.gaussian_process.kernels.Exponentiation.diag>`\\"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.diag:2
#: sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid "Returns the diagonal of the kernel k(X, X)."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid ":obj:`get_params <sklearn.gaussian_process.kernels.Exponentiation.get_params>`\\"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.get_params:2
#: sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid "Get parameters of this kernel."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid ":obj:`is_stationary <sklearn.gaussian_process.kernels.Exponentiation.is_stationary>`\\"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.is_stationary:2
#: sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid "Returns whether the kernel is stationary."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
msgid ":obj:`set_params <sklearn.gaussian_process.kernels.Exponentiation.set_params>`\\"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation:75:<autosummary>:1
#: sklearn.gaussian_process.kernels.Kernel.set_params:2
msgid "Set the parameters of this kernel."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:8
#: sklearn.gaussian_process.kernels.Exponentiation.diag:11
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples_X, n_features) or list of object"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:8
msgid "Left argument of the returned kernel k(X, Y)"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:12
msgid "**Y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples_Y, n_features) or list of object,            default=None"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:11
msgid "Right argument of the returned kernel k(X, Y). If None, k(X, X) is evaluated instead."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:16
msgid "**eval_gradient**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:15
msgid "Determines whether the gradient with respect to the log of the kernel hyperparameter is computed."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__
#: sklearn.gaussian_process.kernels.Exponentiation.bounds
#: sklearn.gaussian_process.kernels.Exponentiation.diag
#: sklearn.gaussian_process.kernels.Exponentiation.get_params
#: sklearn.gaussian_process.kernels.Exponentiation.theta
#: sklearn.gaussian_process.kernels.Kernel.set_params
msgid "Returns"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:21
msgid "**K**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples_X, n_samples_Y)"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:21
msgid "Kernel k(X, Y)"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:37
msgid "**K_gradient**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples_X, n_samples_X, n_dims),                optional"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.__call__:24
msgid "The gradient of the kernel k(X, X) with respect to the log of the hyperparameter of the kernel. Only returned when `eval_gradient` is True."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.bounds:20
msgid "**bounds**"
msgstr ""

#: of
msgid "ndarray of shape (n_dims, 2)"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.bounds:9
msgid "The log-transformed bounds on the kernel's hyperparameters theta"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.theta:24
#: sklearn.gaussian_process.kernels.Kernel.clone_with_theta:20
msgid "**theta**"
msgstr ""

#: of
msgid "ndarray of shape (n_dims,)"
msgstr ""

#: of sklearn.gaussian_process.kernels.Kernel.clone_with_theta:8
msgid "The hyperparameters"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.diag:4
msgid "The result of this method is identical to np.diag(self(X)); however, it can be evaluated more efficiently since only the diagonal is evaluated."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.diag:11
msgid "Argument to the kernel."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.diag:27
msgid "**K_diag**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples_X,)"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.diag:16
msgid "Diagonal of kernel k(X, X)"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.gaussian_process.kernels.Kernel.set_params:4
msgid "The method works on simple kernels as well as on nested kernels. The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.gaussian_process.kernels.Kernel.set_params:23
msgid "self"
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.theta:4
msgid "Note that theta are typically the log-transformed values of the kernel's hyperparameters as this representation of the search space is more amenable for hyperparameter search, as hyperparameters like length-scales naturally live on a log-scale."
msgstr ""

#: of sklearn.gaussian_process.kernels.Exponentiation.theta:13
msgid "The non-fixed, log-transformed hyperparameters of the kernel"
msgstr ""

