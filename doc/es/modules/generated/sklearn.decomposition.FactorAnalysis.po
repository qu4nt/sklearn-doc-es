msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-26 00:40\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.decomposition.FactorAnalysis.po\n"
"X-Crowdin-File-ID: 5648\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.decomposition.FactorAnalysis.rst:2
msgid ":mod:`sklearn.decomposition`.FactorAnalysis"
msgstr ":mod:`sklearn.decomposition`.FactorAnalysis"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:2
msgid "Factor Analysis (FA)."
msgstr "Análisis Factorial (Factor Analysis, AF)."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:4
msgid "A simple linear generative model with Gaussian latent variables."
msgstr "Un modelo generativo lineal simple con variables latentes Gaussianas."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:6
msgid "The observations are assumed to be caused by a linear transformation of lower dimensional latent factors and added Gaussian noise. Without loss of generality the factors are distributed according to a Gaussian with zero mean and unit covariance. The noise is also zero mean and has an arbitrary diagonal covariance matrix."
msgstr "Se supone que las observaciones son causadas por una transformación lineal de factores latentes de baja dimensión y un ruido Gaussiano añadido. Sin pérdida de generalidad, los factores se distribuyen según una Gaussiana con media cero y covarianza unitaria. El ruido también es de media cero y tiene una matriz de covarianza diagonal arbitraria."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:12
msgid "If we would restrict the model further, by assuming that the Gaussian noise is even isotropic (all diagonal entries are the same) we would obtain :class:`PPCA`."
msgstr "Si restringimos aún más el modelo, suponiendo que el ruido Gaussiano es incluso isotrópico (todas las entradas diagonales son iguales) obtendríamos :class:`PPCA`."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:16
msgid "FactorAnalysis performs a maximum likelihood estimate of the so-called `loading` matrix, the transformation of the latent variables to the observed ones, using SVD based approach."
msgstr "FactorAnalysis realiza una estimación de máxima verosimilitud de la llamada matriz `loading` (de carga), la transformación de las variables latentes a las observadas, utilizando un enfoque basado en la SVD."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:20
msgid "Read more in the :ref:`User Guide <FA>`."
msgstr "Lee más en el :ref:`Manual de usuario <FA>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._factor_analysis.FactorAnalysis
#: sklearn.decomposition._factor_analysis.FactorAnalysis.fit
#: sklearn.decomposition._factor_analysis.FactorAnalysis.score
#: sklearn.decomposition._factor_analysis.FactorAnalysis.score_samples
#: sklearn.decomposition._factor_analysis.FactorAnalysis.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:29
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:27
msgid "Dimensionality of latent space, the number of components of ``X`` that are obtained after ``transform``. If None, n_components is set to the number of features."
msgstr "Dimensionalidad del espacio latente, el número de componentes de ``X`` que se obtienen después de ``transform``. Si es None, n_components se establece en el número de características."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:32
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, defaul=1e-2"
msgstr "float, defaul=1e-2"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:32
msgid "Stopping tolerance for log-likelihood increase."
msgstr "Tolerancia de parada para el aumento del logaritmo de la verosimilitud."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:36
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:35
msgid "Whether to make a copy of X. If ``False``, the input X gets overwritten during fitting."
msgstr "Si se hace una copia de X. Si es ``False``, la a entrada X se sobrescribe durante el ajuste."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:39
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=1000"
msgstr "int, default=1000"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:39
msgid "Maximum number of iterations."
msgstr "Número máximo de iteraciones."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:43
msgid "**noise_variance_init**"
msgstr "**noise_variance_init**"

#: of
msgid "ndarray of shape (n_features,), default=None"
msgstr "ndarray de forma (n_features,), default=None"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:42
msgid "The initial guess of the noise variance for each feature. If None, it defaults to np.ones(n_features)."
msgstr "La estimación inicial de la varianza del ruido para cada característica. Si es None, el valor predeterminado es np.ones(n_features)."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:52
msgid "**svd_method**"
msgstr "**svd_method**"

#: of
msgid "{'lapack', 'randomized'}, default='randomized'"
msgstr "{'lapack', 'randomized'}, default='randomized'"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:46
msgid "Which SVD method to use. If 'lapack' use standard SVD from scipy.linalg, if 'randomized' use fast ``randomized_svd`` function. Defaults to 'randomized'. For most applications 'randomized' will be sufficiently precise while providing significant speed gains. Accuracy can also be improved by setting higher values for `iterated_power`. If this is not sufficient, for maximum precision you should choose 'lapack'."
msgstr "Qué método SVD utilizar. Si es 'lapack' se usa la SVD estándar de scipy.linalg, si es 'randomized' se usa la función rápida ``randomized_svd``. Por defecto es 'randomized'. Para la mayoría de las aplicaciones, 'randomized' será suficientemente preciso y proporcionará ganancias de velocidad significativas. La precisión también puede mejorarse estableciendo valores más altos para `iterated_power`. Si esto no es suficiente, para obtener la máxima precisión debe elegir 'lapack'."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:56
msgid "**iterated_power**"
msgstr "**iterated_power**"

#: of
msgid "int, default=3"
msgstr "int, default=3"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:55
msgid "Number of iterations for the power method. 3 by default. Only used if ``svd_method`` equals 'randomized'."
msgstr "Número de iteraciones para el método de potencia (power). 3 por defecto. Sólo se utiliza si ``svd_method`` es igual a 'randomized'."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:65
msgid "**rotation**"
msgstr "**rotation**"

#: of
msgid "{'varimax', 'quartimax'}, default=None"
msgstr "{'varimax', 'quartimax'}, default=None"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:59
#, python-format
msgid "If not None, apply the indicated rotation. Currently, varimax and quartimax are implemented. See `\"The varimax criterion for analytic rotation in factor analysis\" <https://link.springer.com/article/10.1007%2FBF02289233>`_ H. F. Kaiser, 1958."
msgstr "Si es None, aplica la rotación indicada. Actualmente, se aplican varimax y quartimax. Véase `\"The varimax criterion for analytic rotation in factor analysis\" <https://link.springer.com/article/10.1007%2FBF02289233>`_ H. F. Kaiser, 1958."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:73
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int or RandomState instance, default=0"
msgstr "int o RandomState instance, default=0"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:68
msgid "Only used when ``svd_method`` equals 'randomized'. Pass an int for reproducible results across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Sólo se utiliza cuando ``svd_method`` es igual a 'randomized'. Pasa un número entero (int) para resultados reproducibles a través de múltiples llamadas a la función. Ver :term:`Glosario <random_state>."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:78
msgid "**components_**"
msgstr "**components_**"

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr "ndarray de forma (n_components, n_features)"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:78
msgid "Components with maximum variance."
msgstr "Componentes con máxima varianza."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:81
msgid "**loglike_**"
msgstr "**loglike_**"

#: of
msgid "list of shape (n_iterations,)"
msgstr "list de forma (n_iterations,)"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:81
msgid "The log likelihood at each iteration."
msgstr "El logaritmo de la verosimilitud en cada iteración."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:84
msgid "**noise_variance_**"
msgstr "**noise_variance_**"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:84
msgid "The estimated noise variance for each feature."
msgstr "La varianza del ruido estimada para cada característica."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:87
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:87
msgid "Number of iterations run."
msgstr "Número de iteraciones ejecutadas."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:93
msgid "**mean_**"
msgstr "**mean_**"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:90
msgid "Per-feature empirical mean, estimated from the training set."
msgstr "Media empírica por característica, estimada a partir del conjunto de entrenamiento."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:98
msgid ":obj:`PCA`"
msgstr ":obj:`PCA`"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:99
msgid "Principal component analysis is also a latent linear variable model which however assumes equal noise variance for each feature. This extra assumption makes probabilistic PCA faster as it can be computed in closed form."
msgstr "El análisis de componentes principales es también un modelo de variables lineales latentes que, sin embargo, asume una varianza del ruido igual para cada característica. Esta suposición adicional hace que el PCA probabilístico sea más rápido, ya que puede calcularse de forma cerrada."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:100
msgid ":obj:`FastICA`"
msgstr ":obj:`FastICA`"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:101
msgid "Independent component analysis, a latent variable model with non-Gaussian latent variables."
msgstr "Análisis de componentes independientes, un modelo de variables latentes con variables latentes no Gaussianas."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:106
msgid "References"
msgstr "Referencias"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:107
msgid "David Barber, Bayesian Reasoning and Machine Learning, Algorithm 21.1."
msgstr "David Barber, Bayesian Reasoning and Machine Learning, Algorithm 21.1."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:110
msgid "Christopher M. Bishop: Pattern Recognition and Machine Learning, Chapter 12.2.4."
msgstr "Christopher M. Bishop: Pattern Recognition and Machine Learning, Chapter 12.2.4."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:118
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:128
msgid "Methods"
msgstr "Métodos"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.FactorAnalysis.fit>`\\"
msgstr ":obj:`fit <sklearn.decomposition.FactorAnalysis.fit>`\\"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.fit:2
#: sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid "Fit the FactorAnalysis model to X using SVD based approach"
msgstr "Ajusta el modelo FactorAnalysis a X utilizando un enfoque basado en SVD"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.decomposition.FactorAnalysis.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.decomposition.FactorAnalysis.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta a los datos y luego los transforma."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid ":obj:`get_covariance <sklearn.decomposition.FactorAnalysis.get_covariance>`\\"
msgstr ":obj:`get_covariance <sklearn.decomposition.FactorAnalysis.get_covariance>`\\"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.get_covariance:2
#: sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid "Compute data covariance with the FactorAnalysis model."
msgstr "Calcula la covarianza de los datos con el modelo FactorAnalysis."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.FactorAnalysis.get_params>`\\"
msgstr ":obj:`get_params <sklearn.decomposition.FactorAnalysis.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid ":obj:`get_precision <sklearn.decomposition.FactorAnalysis.get_precision>`\\"
msgstr ":obj:`get_precision <sklearn.decomposition.FactorAnalysis.get_precision>`\\"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.get_precision:2
#: sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid "Compute data precision matrix with the FactorAnalysis model."
msgstr "Calcula la matriz de precisión de los datos con el modelo FactorAnalysis."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid ":obj:`score <sklearn.decomposition.FactorAnalysis.score>`\\"
msgstr ":obj:`score <sklearn.decomposition.FactorAnalysis.score>`\\"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.score:2
#: sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid "Compute the average log-likelihood of the samples"
msgstr "Calcula el promedio del log-verosimilitud de todas las muestras"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid ":obj:`score_samples <sklearn.decomposition.FactorAnalysis.score_samples>`\\"
msgstr ":obj:`score_samples <sklearn.decomposition.FactorAnalysis.score_samples>`\\"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.score_samples:2
#: sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid "Compute the log-likelihood of each sample"
msgstr "Calcula el log-verosimilitud de cada muestra"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid ":obj:`set_params <sklearn.decomposition.FactorAnalysis.set_params>`\\"
msgstr ":obj:`set_params <sklearn.decomposition.FactorAnalysis.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.FactorAnalysis.transform>`\\"
msgstr ":obj:`transform <sklearn.decomposition.FactorAnalysis.transform>`\\"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.transform:2
#: sklearn.decomposition._factor_analysis.FactorAnalysis:140:<autosummary>:1
msgid "Apply dimensionality reduction to X using the model."
msgstr "Aplica la reducción de dimensionalidad a X utilizando el modelo."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.decomposition._factor_analysis.FactorAnalysis.fit:8
#: sklearn.decomposition._factor_analysis.FactorAnalysis.score:8
#: sklearn.decomposition._factor_analysis.FactorAnalysis.score_samples:8
#: sklearn.decomposition._factor_analysis.FactorAnalysis.transform:10
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.fit:8
#: sklearn.decomposition._factor_analysis.FactorAnalysis.transform:10
msgid "Training data."
msgstr "Datos de entrenamiento."

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.decomposition._factor_analysis.FactorAnalysis.fit:11
#: sklearn.decomposition._factor_analysis.FactorAnalysis.score:11
msgid "**y**"
msgstr "**y**"

#: of
msgid "Ignored"
msgstr "Ignored"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._factor_analysis.FactorAnalysis.fit
#: sklearn.decomposition._factor_analysis.FactorAnalysis.get_covariance
#: sklearn.decomposition._factor_analysis.FactorAnalysis.get_precision
#: sklearn.decomposition._factor_analysis.FactorAnalysis.score
#: sklearn.decomposition._factor_analysis.FactorAnalysis.score_samples
#: sklearn.decomposition._factor_analysis.FactorAnalysis.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.fit:27
msgid "self"
msgstr "self"

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` e `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.decomposition._factor_analysis.FactorAnalysis.transform:26
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "ndarray array de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.get_covariance:4
msgid "``cov = components_.T * components_ + diag(noise_variance)``"
msgstr "``cov = components_.T * components_ + diag(noise_variance)``"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.get_covariance:21
msgid "**cov**"
msgstr "**cov**"

#: of
msgid "ndarray of shape (n_features, n_features)"
msgstr "ndarray de forma (n_features, n_features)"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.get_covariance:10
msgid "Estimated covariance of data."
msgstr "Covarianza estimada de los datos."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.get_precision:20
msgid "**precision**"
msgstr "**precision**"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.get_precision:9
msgid "Estimated precision of data."
msgstr "Precisión estimada de los datos."

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr "ndarray de forma (n_samples, n_features)"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.score:8
#: sklearn.decomposition._factor_analysis.FactorAnalysis.score_samples:8
msgid "The data"
msgstr "Los datos"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.score:27
#: sklearn.decomposition._factor_analysis.FactorAnalysis.score_samples:24
msgid "**ll**"
msgstr "**ll**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.score:16
msgid "Average log-likelihood of the samples under the current model"
msgstr "Promedio del log-verosimilitud de las muestras según el modelo actual"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.score_samples:13
msgid "Log-likelihood of each sample under the current model"
msgstr "Log-verosimilitud de cada muestra según el modelo actual"

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.transform:4
msgid "Compute the expected mean of the latent variables. See Barber, 21.2.33 (or Bishop, 12.66)."
msgstr "Calcula la media esperada de las variables latentes. Ver Barber, 21.2.33 (o Bishop, 12.66)."

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr "ndarray de forma (n_samples, n_components)"

#: of sklearn.decomposition._factor_analysis.FactorAnalysis.transform:15
msgid "The latent variables of X."
msgstr "Las variables latentes de X."

