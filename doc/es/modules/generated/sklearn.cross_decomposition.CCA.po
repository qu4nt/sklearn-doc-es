msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:07\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.cross_decomposition.CCA.po\n"
"X-Crowdin-File-ID: 5870\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.cross_decomposition.CCA.rst:2
msgid ":mod:`sklearn.cross_decomposition`.CCA"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:2
msgid "Canonical Correlation Analysis, also known as \"Mode B\" PLS."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:4
msgid "Read more in the :ref:`User Guide <cross_decomposition>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.cross_decomposition._pls.CCA
#: sklearn.cross_decomposition._pls._PLS.fit
#: sklearn.cross_decomposition._pls._PLS.fit_transform
#: sklearn.cross_decomposition._pls._PLS.inverse_transform
#: sklearn.cross_decomposition._pls._PLS.predict
#: sklearn.cross_decomposition._pls._PLS.transform
msgid "Parameters"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:10
msgid "**n_components**"
msgstr ""

#: of
msgid "int, default=2"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:9
msgid "Number of components to keep. Should be in `[1, min(n_samples, n_features, n_targets)]`."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:13
msgid "**scale**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:13
msgid "Whether to scale `X` and `Y`."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:16
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=500"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:16
msgid "the maximum number of iterations of the power method."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:21
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-06"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:19
msgid "The tolerance used as convergence criteria in the power method: the algorithm stops whenever the squared norm of `u_i - u_{i-1}` is less than `tol`, where `u` corresponds to the left singular vector."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:29
#: sklearn.cross_decomposition._pls._PLS.predict:19
#: sklearn.cross_decomposition._pls._PLS.transform:14
msgid "**copy**"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:24
msgid "Whether to copy `X` and `Y` in fit before applying centering, and potentially scaling. If False, these operations will be done inplace, modifying both arrays."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA
msgid "Attributes"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:35
msgid "**x_weights_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_components)"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:34
msgid "The left singular vectors of the cross-covariance matrices of each iteration."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:39
msgid "**y_weights_**"
msgstr ""

#: of
msgid "ndarray of shape (n_targets, n_components)"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:38
msgid "The right singular vectors of the cross-covariance matrices of each iteration."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:42
msgid "**x_loadings_**"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:42
msgid "The loadings of `X`."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:45
msgid "**y_loadings_**"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:45
msgid "The loadings of `Y`."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:53
msgid "**x_scores_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:48
msgid "The transformed training samples."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:50
msgid "`x_scores_` is deprecated in 0.24 and will be removed in 1.1 (renaming of 0.26). You can just call `transform` on the training data instead."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:61
msgid "**y_scores_**"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:56
msgid "The transformed training targets."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:58
msgid "`y_scores_` is deprecated in 0.24 and will be removed in 1.1 (renaming of 0.26). You can just call `transform` on the training data instead."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:64
msgid "**x_rotations_**"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:64
msgid "The projection matrix used to transform `X`."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:67
msgid "**y_rotations_**"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:67
msgid "The projection matrix used to transform `Y`."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:71
msgid "**coef_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_targets)"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:70
msgid "The coefficients of the linear model such that `Y` is approximated as `Y = X @ coef_`."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:78
msgid "**n_iter_**"
msgstr ""

#: of
msgid "list of shape (n_components,)"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:74
msgid "Number of iterations of the power method, for each component."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:83
msgid ":obj:`PLSCanonical`"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:85
msgid ":obj:`PLSSVD`"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:91
msgid "Examples"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:101
msgid "Methods"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid ":obj:`fit <sklearn.cross_decomposition.CCA.fit>`\\"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.fit:2
msgid "Fit model to data."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.cross_decomposition.CCA.fit_transform>`\\"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.fit_transform:2
msgid "Learn and apply the dimension reduction on the train data."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid ":obj:`get_params <sklearn.cross_decomposition.CCA.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.cross_decomposition.CCA.inverse_transform>`\\"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.inverse_transform:2
msgid "Transform data back to its original space."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid ":obj:`predict <sklearn.cross_decomposition.CCA.predict>`\\"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.predict:2
msgid "Predict targets of given samples."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid ":obj:`score <sklearn.cross_decomposition.CCA.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid ":obj:`set_params <sklearn.cross_decomposition.CCA.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
msgid ":obj:`transform <sklearn.cross_decomposition.CCA.transform>`\\"
msgstr ""

#: of sklearn.cross_decomposition._pls.CCA:112:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.transform:2
msgid "Apply the dimension reduction."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.cross_decomposition._pls._PLS.fit:9
#: sklearn.cross_decomposition._pls._PLS.fit_transform:9
#: sklearn.cross_decomposition._pls._PLS.inverse_transform:9
#: sklearn.cross_decomposition._pls._PLS.predict:8
#: sklearn.cross_decomposition._pls._PLS.transform:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.fit:8
msgid "Training vectors, where `n_samples` is the number of samples and `n_features` is the number of predictors."
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.fit:25
#: sklearn.cross_decomposition._pls._PLS.transform:11
msgid "**Y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_targets)"
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.fit:12
msgid "Target vectors, where `n_samples` is the number of samples and `n_targets` is the number of response variables."
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.fit_transform:8
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of predictors."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.cross_decomposition._pls._PLS.fit_transform:13
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_targets), default=None"
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.fit_transform:12
msgid "Target vectors, where n_samples is the number of samples and n_targets is the number of response variables."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.cross_decomposition._pls._PLS.fit_transform
#: sklearn.cross_decomposition._pls._PLS.inverse_transform
#: sklearn.cross_decomposition._pls._PLS.transform
msgid "Returns"
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.fit_transform:29
msgid "x_scores if Y is not given, (x_scores, y_scores) otherwise."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.inverse_transform:8
msgid "New data, where `n_samples` is the number of samples and `n_components` is the number of pls components."
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.inverse_transform:21
msgid "**x_reconstructed**"
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.cross_decomposition._pls._PLS.inverse_transform:24
#: sklearn.cross_decomposition._pls._PLS.predict:22
msgid "Notes"
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.inverse_transform:25
msgid "This transformation will only be exact if `n_components=n_features`."
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.predict:8
msgid "Samples."
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.predict:11
#: sklearn.cross_decomposition._pls._PLS.transform:14
msgid "Whether to copy `X` and `Y`, or perform in-place normalization."
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.predict:23
msgid "This call requires the estimation of a matrix of shape `(n_features, n_targets)`, which may be an issue in high dimensional space."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.transform:8
msgid "Samples to transform."
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.transform:11
msgid "Target vectors."
msgstr ""

#: of sklearn.cross_decomposition._pls._PLS.transform:30
msgid "`x_scores` if `Y` is not given, `(x_scores, y_scores)` otherwise."
msgstr ""

