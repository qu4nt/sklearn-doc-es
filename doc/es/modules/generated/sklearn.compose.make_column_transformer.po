msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:56-0400\n"
"PO-Revision-Date: 2021-05-11 22:57\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.compose.make_column_transformer.po\n"
"X-Crowdin-File-ID: 5646\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.compose.make_column_transformer.rst:2
msgid ":mod:`sklearn.compose`.make_column_transformer"
msgstr ":mod:`sklearn.compose`.make_column_transformer"

#: of sklearn.compose._column_transformer.make_column_transformer:2
msgid "Construct a ColumnTransformer from the given transformers."
msgstr "Construye un ColumnTransformer a partir de los transformadores dados."

#: of sklearn.compose._column_transformer.make_column_transformer:4
msgid "This is a shorthand for the ColumnTransformer constructor; it does not require, and does not permit, naming the transformers. Instead, they will be given names automatically based on their types. It also does not allow weighting with ``transformer_weights``."
msgstr "Esto es una abreviatura para el constructor ColumnTransformer; no requiere, y no permite, nombrar a los transformadores. En su lugar, serán dados nombres automáticamente basados en sus tipos. Tampoco permite ponderar con ``transformer_weights``."

#: of sklearn.compose._column_transformer.make_column_transformer:9
msgid "Read more in the :ref:`User Guide <make_column_transformer>`."
msgstr "Más información en el :ref:`Manual de usuario <make_column_transformer>`."

#: of sklearn.compose._column_transformer.make_column_transformer
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.compose._column_transformer.make_column_transformer:30
msgid "**\\*transformers**"
msgstr "**\\*transformers**"

#: of
msgid "tuples"
msgstr "tuples"

#: of sklearn.compose._column_transformer.make_column_transformer:14
msgid "Tuples of the form (transformer, columns) specifying the transformer objects to be applied to subsets of the data."
msgstr "Tuplas de la forma (transformer, columns) que especifican los objetos transformadores que se aplicarán a subconjuntos de los datos."

#: of sklearn.compose._column_transformer.make_column_transformer:20
msgid "transformer"
msgstr "transformer"

#: of
msgid "{'drop', 'passthrough'} or estimator"
msgstr "{'drop', 'passthrough'} or estimator"

#: of sklearn.compose._column_transformer.make_column_transformer:18
msgid "Estimator must support :term:`fit` and :term:`transform`. Special-cased strings 'drop' and 'passthrough' are accepted as well, to indicate to drop the columns or to pass them through untransformed, respectively."
msgstr "El estimador debe soportar :term:`fit` y :term:`transform`. También se aceptan las cadenas especiales 'drop' y 'passthrough', para indicar que se eliminen las columnas o que se pasen sin transformar, respectivamente."

#: of sklearn.compose._column_transformer.make_column_transformer:30
msgid "columns"
msgstr "columns"

#: of
msgid "str,  array-like of str, int, array-like of int, slice,                 array-like of bool or callable"
msgstr "str,  array-like de str, int, array-like o int, slice,                 array-like of bool o callable"

#: of sklearn.compose._column_transformer.make_column_transformer:23
msgid "Indexes the data on its second axis. Integers are interpreted as positional columns, while strings can reference DataFrame columns by name. A scalar string or int should be used where ``transformer`` expects X to be a 1d array-like (vector), otherwise a 2d array will be passed to the transformer. A callable is passed the input data `X` and can return any of the above. To select multiple columns by name or dtype, you can use :obj:`make_column_selector`."
msgstr "Indexa los datos en su segundo eje. Los enteros se interpretan como columnas posicionales, mientras que las cadenas pueden hacer referencia a las columnas del DataFrame por su nombre. Se debe utilizar una cadena escalar o un int cuando ``transformer`` espera que X sea un arreglo 1d (vector), de lo contrario se pasará un arreglo 2d al transformador. A un callable se le pasan los datos de entrada `X` y puede devolver cualquiera de los anteriores. Para seleccionar varias columnas por nombre o tipo de datos, puede utilizar :obj:`make_column_selector`."

#: of sklearn.compose._column_transformer.make_column_transformer:42
msgid "**remainder**"
msgstr "**remainder**"

#: of
msgid "{'drop', 'passthrough'} or estimator, default='drop'"
msgstr "{'drop', 'passthrough'} or estimator, default='drop'"

#: of sklearn.compose._column_transformer.make_column_transformer:33
msgid "By default, only the specified columns in `transformers` are transformed and combined in the output, and the non-specified columns are dropped. (default of ``'drop'``). By specifying ``remainder='passthrough'``, all remaining columns that were not specified in `transformers` will be automatically passed through. This subset of columns is concatenated with the output of the transformers. By setting ``remainder`` to be an estimator, the remaining non-specified columns will use the ``remainder`` estimator. The estimator must support :term:`fit` and :term:`transform`."
msgstr "Por defecto, sólo las columnas especificadas en `transformers` son transformadas y combinadas en la salida, y las columnas no especificadas son descartadas. (por defecto ``'drop'``). Especificando ``remainder='passthrough'``, todas las columnas restantes que no fueron especificadas en `transformers` serán automáticamente pasadas. Este subconjunto de columnas se concatena con la salida de los transformadores. Al establecer que ``remainder`` sea un estimador, las columnas restantes no especificadas utilizarán el estimador ``remainder``. El estimador debe soportar :term:`fit` y :term:`transform`."

#: of sklearn.compose._column_transformer.make_column_transformer:50
msgid "**sparse_threshold**"
msgstr "**sparse_threshold**"

#: of
msgid "float, default=0.3"
msgstr "float, default=0.3"

#: of sklearn.compose._column_transformer.make_column_transformer:45
msgid "If the transformed output consists of a mix of sparse and dense data, it will be stacked as a sparse matrix if the density is lower than this value. Use ``sparse_threshold=0`` to always return dense. When the transformed output consists of all sparse or all dense data, the stacked result will be sparse or dense, respectively, and this keyword will be ignored."
msgstr "Si la salida transformada consiste de una mezcla de datos dispersos y densos, serán apilados como una matriz dispersa si la densidad es menor que este valor. Utilice ``sparse_thershold=0`` para siempre devolver densos. Cuando la salida trasnformada consiste de datos todos dispersos o todos densos, el resultado apilado sera disperso o denso, respectivamente, y esta palabra clave sera ignorada."

#: of sklearn.compose._column_transformer.make_column_transformer:56
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.compose._column_transformer.make_column_transformer:53
msgid "Number of jobs to run in parallel. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "Número de trabajos a ejecutar en paralelo. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesadores. Ver :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.compose._column_transformer.make_column_transformer:60
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.compose._column_transformer.make_column_transformer:59
msgid "If True, the time elapsed while fitting each transformer will be printed as it is completed."
msgstr "Si es True, se mostrará el tiempo transcurrido durante el ajuste de cada transformador a medida que se vaya completando."

#: of sklearn.compose._column_transformer.make_column_transformer
msgid "Returns"
msgstr "Devoluciones"

#: of sklearn.compose._column_transformer.make_column_transformer:71
msgid "**ct**"
msgstr "**ct**"

#: of
msgid "ColumnTransformer"
msgstr "ColumnTransformer"

#: of sklearn.compose._column_transformer.make_column_transformer:76
msgid ":obj:`ColumnTransformer`"
msgstr ":obj:`ColumnTransformer`"

#: of sklearn.compose._column_transformer.make_column_transformer:77
msgid "Class that allows combining the outputs of multiple transformer objects used on column subsets of the data into a single feature space."
msgstr "Clase que permite combinar las salidas de múltiples objetos transformadores utilizados en los subconjuntos de columnas de los datos en un único espacio de características."

#: of sklearn.compose._column_transformer.make_column_transformer:83
msgid "Examples"
msgstr "Ejemplos"

#: ../modules/generated/sklearn.compose.make_column_transformer.examples:4
msgid "Examples using ``sklearn.compose.make_column_transformer``"
msgstr "Ejemplos usando ``sklearn.compose.make_column_transformer``"

#: ../modules/generated/sklearn.compose.make_column_transformer.examples:15
#: ../modules/generated/sklearn.compose.make_column_transformer.examples:23
msgid ":ref:`sphx_glr_auto_examples_inspection_plot_linear_model_coefficient_interpretation.py`"
msgstr ":ref:`sphx_glr_auto_examples_inspection_plot_linear_model_coefficient_interpretation.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_ensemble_plot_gradient_boosting_categorical.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_ensemble_plot_stack_predictors.py`"
#~ msgstr ""

