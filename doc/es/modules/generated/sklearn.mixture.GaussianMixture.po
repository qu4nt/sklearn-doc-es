msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-04 00:19\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.mixture.GaussianMixture.po\n"
"X-Crowdin-File-ID: 4902\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.mixture.GaussianMixture.rst:2
msgid ":mod:`sklearn.mixture`.GaussianMixture"
msgstr ":mod:`sklearn.mixture`.GaussianMixture"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:2
msgid "Gaussian Mixture."
msgstr "Mezcla Gaussiana."

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:4
msgid "Representation of a Gaussian mixture model probability distribution. This class allows to estimate the parameters of a Gaussian mixture distribution."
msgstr "Representación de una distribución de probabilidad del modelo de mezcla Gaussiana. Esta clase permite estimar los parámetros de una distribución de mezcla Gaussiana."

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:8
msgid "Read more in the :ref:`User Guide <gmm>`."
msgstr "Lee más en el :ref:`Manual de usuario <gmm>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.mixture._base.BaseMixture.fit
#: sklearn.mixture._base.BaseMixture.fit_predict
#: sklearn.mixture._base.BaseMixture.predict
#: sklearn.mixture._base.BaseMixture.predict_proba
#: sklearn.mixture._base.BaseMixture.sample
#: sklearn.mixture._base.BaseMixture.score
#: sklearn.mixture._base.BaseMixture.score_samples
#: sklearn.mixture._gaussian_mixture.GaussianMixture
#: sklearn.mixture._gaussian_mixture.GaussianMixture.aic
#: sklearn.mixture._gaussian_mixture.GaussianMixture.bic
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:15
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=1"
msgstr "int, default=1"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:15
msgid "The number of mixture components."
msgstr "El número de componentes de la mezcla."

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:28
msgid "**covariance_type**"
msgstr "**covariance_type**"

#: of
msgid "{'full', 'tied', 'diag', 'spherical'}, default='full'"
msgstr "{'full', 'tied', 'diag', 'spherical'}, default='full'"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:18
msgid "String describing the type of covariance parameters to use. Must be one of:"
msgstr "Cadena que describe el tipo de parámetros de covarianza a utilizar. Debe ser uno de:"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:21
msgid "'full'"
msgstr "'full'"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:22
msgid "each component has its own general covariance matrix"
msgstr "cada componente tiene su propia matriz de covarianza general"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:23
msgid "'tied'"
msgstr "'tied'"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:24
msgid "all components share the same general covariance matrix"
msgstr "todos los componentes comparten la misma matriz de covarianza general"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:25
msgid "'diag'"
msgstr "'diag'"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:26
msgid "each component has its own diagonal covariance matrix"
msgstr "cada componente tiene su propia matriz de covarianza diagonal"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:28
msgid "'spherical'"
msgstr "'spherical'"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:28
msgid "each component has its own single variance"
msgstr "cada componente tiene su propia varianza"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:32
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-3"
msgstr "float, default=1e-3"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:31
msgid "The convergence threshold. EM iterations will stop when the lower bound average gain is below this threshold."
msgstr "El umbral de convergencia. Las iteraciones EM se detendrán cuando la ganancia promedio del límite inferior esté por debajo de este umbral."

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:36
msgid "**reg_covar**"
msgstr "**reg_covar**"

#: of
msgid "float, default=1e-6"
msgstr "float, default=1e-6"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:35
msgid "Non-negative regularization added to the diagonal of covariance. Allows to assure that the covariance matrices are all positive."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:39
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:39
msgid "The number of EM iterations to perform."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:42
msgid "**n_init**"
msgstr "**n_init**"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:42
msgid "The number of initializations to perform. The best results are kept."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:50
msgid "**init_params**"
msgstr "**init_params**"

#: of
msgid "{'kmeans', 'random'}, default='kmeans'"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:45
msgid "The method used to initialize the weights, the means and the precisions. Must be one of::"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:54
msgid "**weights_init**"
msgstr "**weights_init**"

#: of
msgid "array-like of shape (n_components, ), default=None"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:53
msgid "The user-provided initial weights. If it is None, weights are initialized using the `init_params` method."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:58
msgid "**means_init**"
msgstr "**means_init**"

#: of
msgid "array-like of shape (n_components, n_features), default=None"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:57
msgid "The user-provided initial means, If it is None, means are initialized using the `init_params` method."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:70
msgid "**precisions_init**"
msgstr "**precisions_init**"

#: of
msgid "array-like, default=None"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:61
msgid "The user-provided initial precisions (inverse of the covariance matrices). If it is None, precisions are initialized using the 'init_params' method. The shape depends on 'covariance_type'::"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:78
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, instancia RandomState o None, default=None"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:73
msgid "Controls the random seed given to the method chosen to initialize the parameters (see `init_params`). In addition, it controls the generation of random samples from the fitted distribution (see the method `sample`). Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:86
msgid "**warm_start**"
msgstr "**warm_start**"

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:81
msgid "If 'warm_start' is True, the solution of the last fitting is used as initialization for the next call of fit(). This can speed up convergence when fit is called several times on similar problems. In that case, 'n_init' is ignored and only a single initialization occurs upon the first call. See :term:`the Glossary <warm_start>`."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:92
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int, default=0"
msgstr "int, default=0"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:89
msgid "Enable verbose output. If 1 then it prints the current initialization and each iteration step. If greater than 1 then it prints also the log probability and the time needed for each step."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:98
msgid "**verbose_interval**"
msgstr "**verbose_interval**"

#: of
msgid "int, default=10"
msgstr "int, default=10"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:95
msgid "Number of iteration done before the next print."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture
msgid "Attributes"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:103
msgid "**weights_**"
msgstr "**weights_**"

#: of
msgid "array-like of shape (n_components,)"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:103
msgid "The weights of each mixture components."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:106
msgid "**means_**"
msgstr "**means_**"

#: of
msgid "array-like of shape (n_components, n_features)"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:106
msgid "The mean of each mixture component."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:115
msgid "**covariances_**"
msgstr "**covariances_**"

#: of
msgid "array-like"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:109
msgid "The covariance of each mixture component. The shape depends on `covariance_type`::"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:129
msgid "**precisions_**"
msgstr "**precisions_**"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:118
msgid "The precision matrices for each component in the mixture. A precision matrix is the inverse of a covariance matrix. A covariance matrix is symmetric positive definite so the mixture of Gaussian can be equivalently parameterized by the precision matrices. Storing the precision matrices instead of the covariance matrices makes it more efficient to compute the log-likelihood of new samples at test time. The shape depends on `covariance_type`::"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:143
msgid "**precisions_cholesky_**"
msgstr "**precisions_cholesky_**"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:132
msgid "The cholesky decomposition of the precision matrices of each mixture component. A precision matrix is the inverse of a covariance matrix. A covariance matrix is symmetric positive definite so the mixture of Gaussian can be equivalently parameterized by the precision matrices. Storing the precision matrices instead of the covariance matrices makes it more efficient to compute the log-likelihood of new samples at test time. The shape depends on `covariance_type`::"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:146
msgid "**converged_**"
msgstr "**converged_**"

#: of
msgid "bool"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:146
msgid "True when convergence was reached in fit(), False otherwise."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:149
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "int"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:149
msgid "Number of step used by the best fit of EM to reach the convergence."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:156
msgid "**lower_bound_**"
msgstr "**lower_bound_**"

#: of
msgid "float"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:152
msgid "Lower bound value on the log-likelihood (of the training data with respect to the model) of the best fit of EM."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:161
msgid ":obj:`BayesianGaussianMixture`"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:162
msgid "Gaussian mixture model fit with a variational inference."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:168
msgid "Examples"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:180
msgid "Methods"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`aic <sklearn.mixture.GaussianMixture.aic>`\\"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture.aic:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Akaike information criterion for the current model on the input X."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`bic <sklearn.mixture.GaussianMixture.bic>`\\"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture.bic:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Bayesian information criterion for the current model on the input X."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`fit <sklearn.mixture.GaussianMixture.fit>`\\"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.fit:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Estimate model parameters with the EM algorithm."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`fit_predict <sklearn.mixture.GaussianMixture.fit_predict>`\\"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.fit_predict:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Estimate model parameters using X and predict the labels for X."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`get_params <sklearn.mixture.GaussianMixture.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`predict <sklearn.mixture.GaussianMixture.predict>`\\"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.predict:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Predict the labels for the data samples in X using trained model."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.mixture.GaussianMixture.predict_proba>`\\"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.predict_proba:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Predict posterior probability of each component given the data."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`sample <sklearn.mixture.GaussianMixture.sample>`\\"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.sample:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Generate random samples from the fitted Gaussian distribution."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`score <sklearn.mixture.GaussianMixture.score>`\\"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.score:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Compute the per-sample average log-likelihood of the given data X."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`score_samples <sklearn.mixture.GaussianMixture.score_samples>`\\"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.score_samples:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Compute the weighted log probabilities for each sample."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid ":obj:`set_params <sklearn.mixture.GaussianMixture.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.mixture._gaussian_mixture.GaussianMixture:194:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.mixture._base.BaseMixture.fit:17
#: sklearn.mixture._base.BaseMixture.fit_predict:18
#: sklearn.mixture._base.BaseMixture.predict:9
#: sklearn.mixture._base.BaseMixture.predict_proba:9
#: sklearn.mixture._base.BaseMixture.sample:13
#: sklearn.mixture._base.BaseMixture.score:9
#: sklearn.mixture._base.BaseMixture.score_samples:9
#: sklearn.mixture._gaussian_mixture.GaussianMixture.aic:8
#: sklearn.mixture._gaussian_mixture.GaussianMixture.bic:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "array of shape (n_samples, n_dimensions)"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.mixture._base.BaseMixture.fit
#: sklearn.mixture._base.BaseMixture.fit_predict
#: sklearn.mixture._base.BaseMixture.predict
#: sklearn.mixture._base.BaseMixture.predict_proba
#: sklearn.mixture._base.BaseMixture.sample
#: sklearn.mixture._base.BaseMixture.score
#: sklearn.mixture._base.BaseMixture.score_samples
#: sklearn.mixture._gaussian_mixture.GaussianMixture.aic
#: sklearn.mixture._gaussian_mixture.GaussianMixture.bic
msgid "Returns"
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture.aic:24
msgid "**aic**"
msgstr "**aic**"

#: of sklearn.mixture._gaussian_mixture.GaussianMixture.aic:13
#: sklearn.mixture._gaussian_mixture.GaussianMixture.bic:13
msgid "The lower the better."
msgstr ""

#: of sklearn.mixture._gaussian_mixture.GaussianMixture.bic:24
msgid "**bic**"
msgstr "**bic**"

#: of sklearn.mixture._base.BaseMixture.fit:4
msgid "The method fits the model ``n_init`` times and sets the parameters with which the model has the largest likelihood or lower bound. Within each trial, the method iterates between E-step and M-step for ``max_iter`` times until the change of likelihood or lower bound is less than ``tol``, otherwise, a ``ConvergenceWarning`` is raised. If ``warm_start`` is ``True``, then ``n_init`` is ignored and a single initialization is performed upon the first call. Upon consecutive calls, training starts where it left off."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.fit:16
#: sklearn.mixture._base.BaseMixture.fit_predict:17
#: sklearn.mixture._base.BaseMixture.predict:8
#: sklearn.mixture._base.BaseMixture.predict_proba:8
#: sklearn.mixture._base.BaseMixture.score:8
#: sklearn.mixture._base.BaseMixture.score_samples:8
msgid "List of n_features-dimensional data points. Each row corresponds to a single data point."
msgstr ""

#: of sklearn.mixture._base.BaseMixture.fit:33
msgid "self"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.fit_predict:4
msgid "The method fits the model n_init times and sets the parameters with which the model has the largest likelihood or lower bound. Within each trial, the method iterates between E-step and M-step for `max_iter` times until the change of likelihood or lower bound is less than `tol`, otherwise, a :class:`~sklearn.exceptions.ConvergenceWarning` is raised. After fitting, it predicts the most probable label for the input data points."
msgstr ""

#: of sklearn.mixture._base.BaseMixture.fit_predict:34
#: sklearn.mixture._base.BaseMixture.predict:25
msgid "**labels**"
msgstr "**labels**"

#: of
msgid "array, shape (n_samples,)"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.fit_predict:23
#: sklearn.mixture._base.BaseMixture.predict:14
msgid "Component labels."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.mixture._base.BaseMixture.predict_proba:26
msgid "**resp**"
msgstr "**resp**"

#: of
msgid "array, shape (n_samples, n_components)"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.predict_proba:14
msgid "Returns the probability each Gaussian (state) in the model given each sample."
msgstr ""

#: of sklearn.mixture._base.BaseMixture.sample:8
msgid "**n_samples**"
msgstr "**n_samples**"

#: of sklearn.mixture._base.BaseMixture.sample:8
msgid "Number of samples to generate."
msgstr ""

#: of
msgid "array, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.sample:13
msgid "Randomly generated sample"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.sample:27
msgid "**y**"
msgstr "**y**"

#: of
msgid "array, shape (nsamples,)"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.sample:16
msgid "Component labels"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_dimensions)"
msgstr ""

#: of sklearn.mixture._base.BaseMixture.score:25
msgid "**log_likelihood**"
msgstr "**log_likelihood**"

#: of sklearn.mixture._base.BaseMixture.score:14
msgid "Log likelihood of the Gaussian mixture given X."
msgstr ""

#: of sklearn.mixture._base.BaseMixture.score_samples:25
msgid "**log_prob**"
msgstr "**log_prob**"

#: of sklearn.mixture._base.BaseMixture.score_samples:14
msgid "Log probabilities of each data point in X."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:4
msgid "Examples using ``sklearn.mixture.GaussianMixture``"
msgstr ""

#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:15
#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:23
msgid ":ref:`sphx_glr_auto_examples_mixture_plot_gmm_pdf.py`"
msgstr ""

#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:34
#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:42
msgid ":ref:`sphx_glr_auto_examples_mixture_plot_gmm.py`"
msgstr ""

#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:53
#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:61
msgid ":ref:`sphx_glr_auto_examples_mixture_plot_gmm_selection.py`"
msgstr ""

#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:72
#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:80
msgid ":ref:`sphx_glr_auto_examples_mixture_plot_gmm_covariances.py`"
msgstr ""

#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:91
#: ../modules/generated/sklearn.mixture.GaussianMixture.examples:99
msgid ":ref:`sphx_glr_auto_examples_mixture_plot_gmm_sin.py`"
msgstr ""

