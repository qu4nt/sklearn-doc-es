msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-08-14 21:55\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.naive_bayes.BernoulliNB.po\n"
"X-Crowdin-File-ID: 5116\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.naive_bayes.BernoulliNB.rst:2
msgid ":mod:`sklearn.naive_bayes`.BernoulliNB"
msgstr ":mod:`sklearn.naive_bayes`.BernoulliNB"

#: of sklearn.naive_bayes.BernoulliNB:2
msgid "Naive Bayes classifier for multivariate Bernoulli models."
msgstr "Clasificador Naive Bayes para modelos Bernoulli multinomiales."

#: of sklearn.naive_bayes.BernoulliNB:4
msgid "Like MultinomialNB, this classifier is suitable for discrete data. The difference is that while MultinomialNB works with occurrence counts, BernoulliNB is designed for binary/boolean features."
msgstr "Al igual que MultinomialNB, este clasificador es adecuado para datos discretos. La diferencia es que mientras MultinomialNB trabaja con recuentos de ocurrencias, BernoulliNB está diseñado para características binarias/booleanas."

#: of sklearn.naive_bayes.BernoulliNB:8
msgid "Read more in the :ref:`User Guide <bernoulli_naive_bayes>`."
msgstr "Más información en :ref:`Manual de usuario <bernoulli_naive_bayes>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.naive_bayes.BernoulliNB sklearn.naive_bayes._BaseDiscreteNB.fit
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit
#: sklearn.naive_bayes._BaseNB.predict
#: sklearn.naive_bayes._BaseNB.predict_log_proba
#: sklearn.naive_bayes._BaseNB.predict_proba
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.naive_bayes.BernoulliNB:14
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float, default=1.0"
msgstr "float, default=1.0"

#: of sklearn.naive_bayes.BernoulliNB:13
msgid "Additive (Laplace/Lidstone) smoothing parameter (0 for no smoothing)."
msgstr "Parámetro de suavizado aditivo (Laplace/Lidstone) (0 para no suavizar)."

#: of sklearn.naive_bayes.BernoulliNB:18
msgid "**binarize**"
msgstr "**binarize**"

#: of
msgid "float or None, default=0.0"
msgstr "float o None, default=0.0"

#: of sklearn.naive_bayes.BernoulliNB:17
msgid "Threshold for binarizing (mapping to booleans) of sample features. If None, input is presumed to already consist of binary vectors."
msgstr "Umbral para la binarización (mapeo a booleanos) de las características de la muestra. Si es None, se supone que la entrada consiste en vectores binarios."

#: of sklearn.naive_bayes.BernoulliNB:22
msgid "**fit_prior**"
msgstr "**fit_prior**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.naive_bayes.BernoulliNB:21
msgid "Whether to learn class prior probabilities or not. If false, a uniform prior will be used."
msgstr "Si se aprenden las probabilidades a priori de la clase o no. Si es false, se utilizará una distribución a priori uniforme."

#: of sklearn.naive_bayes.BernoulliNB:29
msgid "**class_prior**"
msgstr "**class_prior**"

#: of
msgid "array-like of shape (n_classes,), default=None"
msgstr "array-like de forma (n_classes,), default=None"

#: of sklearn.naive_bayes.BernoulliNB:25
msgid "Prior probabilities of the classes. If specified the priors are not adjusted according to the data."
msgstr "Probabilidades a priori de las clases. Si se especifica, las probabilidades a priori no se ajustan en función de los datos."

#: of sklearn.naive_bayes.BernoulliNB
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.naive_bayes.BernoulliNB:35
msgid "**class_count_**"
msgstr "**class_count_**"

#: of
msgid "ndarray of shape (n_classes)"
msgstr "ndarray de forma (n_classes)"

#: of sklearn.naive_bayes.BernoulliNB:34
msgid "Number of samples encountered for each class during fitting. This value is weighted by the sample weight when provided."
msgstr "Número de muestras encontradas para cada clase durante el ajuste. Este valor es ponderado por el peso de la muestra cuando se proporciona."

#: of sklearn.naive_bayes.BernoulliNB:38
msgid "**class_log_prior_**"
msgstr "**class_log_prior_**"

#: of sklearn.naive_bayes.BernoulliNB:38
msgid "Log probability of each class (smoothed)."
msgstr "Probabilidad logarítmica de cada clase (suavizada)."

#: of sklearn.naive_bayes.BernoulliNB:41
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.naive_bayes.BernoulliNB:41
msgid "Class labels known to the classifier"
msgstr "Etiquetas de clase conocidas por el clasificador"

#: of sklearn.naive_bayes.BernoulliNB:45
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (n_classes, n_features)"
msgstr "ndarray de forma (n_classes, n_features)"

#: of sklearn.naive_bayes.BernoulliNB:44
msgid "Mirrors ``feature_log_prob_`` for interpreting `BernoulliNB` as a linear model."
msgstr "Refleja ``feature_log_prob_`` para interpretar `BernoulliNB` como un modelo lineal."

#: of sklearn.naive_bayes.BernoulliNB:50
msgid "**feature_count_**"
msgstr "**feature_count_**"

#: of sklearn.naive_bayes.BernoulliNB:48
msgid "Number of samples encountered for each (class, feature) during fitting. This value is weighted by the sample weight when provided."
msgstr "Número de muestras encontradas para cada (clase, característica) durante el ajuste. Este valor es ponderado por el ponderado de la muestra cuando se proporciona."

#: of sklearn.naive_bayes.BernoulliNB:53
msgid "**feature_log_prob_**"
msgstr "**feature_log_prob_**"

#: of sklearn.naive_bayes.BernoulliNB:53
msgid "Empirical log probability of features given a class, P(x_i|y)."
msgstr "Probabilidad logarítmica empírica de las características dada una clase, P(x_i|y)."

#: of sklearn.naive_bayes.BernoulliNB:57
msgid "**intercept_**"
msgstr "**intercept_**"

#: of sklearn.naive_bayes.BernoulliNB:56
msgid "Mirrors ``class_log_prior_`` for interpreting `BernoulliNB` as a linear model."
msgstr "Refleja ``class_log_prior_`` para interpretar `BernoulliNB` como un modelo lineal."

#: of sklearn.naive_bayes.BernoulliNB:65
msgid "**n_features_**"
msgstr "**n_features_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.naive_bayes.BernoulliNB:60
msgid "Number of features of each sample."
msgstr "Número de características de cada muestra."

#: of sklearn.naive_bayes.BernoulliNB:68
msgid "References"
msgstr "Referencias"

#: of sklearn.naive_bayes.BernoulliNB:69
msgid "C.D. Manning, P. Raghavan and H. Schuetze (2008). Introduction to Information Retrieval. Cambridge University Press, pp. 234-265. https://nlp.stanford.edu/IR-book/html/htmledition/the-bernoulli-model-1.html"
msgstr "C.D. Manning, P. Raghavan and H. Schuetze (2008). Introduction to Information Retrieval. Cambridge University Press, pp. 234-265. https://nlp.stanford.edu/IR-book/html/htmledition/the-bernoulli-model-1.html"

#: of sklearn.naive_bayes.BernoulliNB:73
msgid "A. McCallum and K. Nigam (1998). A comparison of event models for naive Bayes text classification. Proc. AAAI/ICML-98 Workshop on Learning for Text Categorization, pp. 41-48."
msgstr "A. McCallum and K. Nigam (1998). `A comparison of event models for Naive Bayes text classification. `_ Proc. AAAI/ICML-98 Workshop on Learning for Text Categorization, pp. 41-48."

#: of sklearn.naive_bayes.BernoulliNB:77
msgid "V. Metsis, I. Androutsopoulos and G. Paliouras (2006). Spam filtering with naive Bayes -- Which naive Bayes? 3rd Conf. on Email and Anti-Spam (CEAS)."
msgstr "V. Metsis, I. Androutsopoulos and G. Paliouras (2006). `Spam filtering with Naive Bayes -- Which Naive Bayes? `_ 3rd Conf. on Email and Anti-Spam (CEAS)."

#: of sklearn.naive_bayes.BernoulliNB:85
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.naive_bayes.BernoulliNB:98
msgid "Methods"
msgstr "Métodos"

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid ":obj:`fit <sklearn.naive_bayes.BernoulliNB.fit>`\\"
msgstr ":obj:`fit <sklearn.naive_bayes.BernoulliNB.fit>`\\"

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
#: sklearn.naive_bayes._BaseDiscreteNB.fit:2
msgid "Fit Naive Bayes classifier according to X, y"
msgstr "Ajustar el clasificador Naive Bayes según X, y"

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid ":obj:`get_params <sklearn.naive_bayes.BernoulliNB.get_params>`\\"
msgstr ":obj:`get_params <sklearn.naive_bayes.BernoulliNB.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.naive_bayes.BernoulliNB.partial_fit>`\\"
msgstr ":obj:`partial_fit <sklearn.naive_bayes.BernoulliNB.partial_fit>`\\"

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:2
msgid "Incremental fit on a batch of samples."
msgstr "Ajuste incremental en un lote de muestras."

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid ":obj:`predict <sklearn.naive_bayes.BernoulliNB.predict>`\\"
msgstr ":obj:`predict <sklearn.naive_bayes.BernoulliNB.predict>`\\"

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
#: sklearn.naive_bayes._BaseNB.predict:2
msgid "Perform classification on an array of test vectors X."
msgstr "Realiza la clasificación en un arreglo de vectores de prueba X."

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid ":obj:`predict_log_proba <sklearn.naive_bayes.BernoulliNB.predict_log_proba>`\\"
msgstr ":obj:`predict_log_proba <sklearn.naive_bayes.BernoulliNB.predict_log_proba>`\\"

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
#: sklearn.naive_bayes._BaseNB.predict_log_proba:2
msgid "Return log-probability estimates for the test vector X."
msgstr "Devuelve estimaciones de probabilidad logarítmica para el vector de prueba X."

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.naive_bayes.BernoulliNB.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.naive_bayes.BernoulliNB.predict_proba>`\\"

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
#: sklearn.naive_bayes._BaseNB.predict_proba:2
msgid "Return probability estimates for the test vector X."
msgstr "Devuelve estimaciones de probabilidad para el vector de prueba X."

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid ":obj:`score <sklearn.naive_bayes.BernoulliNB.score>`\\"
msgstr ":obj:`score <sklearn.naive_bayes.BernoulliNB.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos y etiquetas de prueba dados."

#: of sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid ":obj:`set_params <sklearn.naive_bayes.BernoulliNB.set_params>`\\"
msgstr ":obj:`set_params <sklearn.naive_bayes.BernoulliNB.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.naive_bayes.BernoulliNB:109:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.naive_bayes._BaseDiscreteNB.fit:9
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:19
#: sklearn.naive_bayes._BaseNB.predict:8
#: sklearn.naive_bayes._BaseNB.predict_log_proba:8
#: sklearn.naive_bayes._BaseNB.predict_proba:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.naive_bayes._BaseDiscreteNB.fit:8
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:18
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of features."
msgstr "Vectores de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.naive_bayes._BaseDiscreteNB.fit:12
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:22
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like de forma (n_samples,)"

#: of sklearn.naive_bayes._BaseDiscreteNB.fit:12
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:22
msgid "Target values."
msgstr "Valores objetivo."

#: of sklearn.base.ClassifierMixin.score:17
#: sklearn.naive_bayes._BaseDiscreteNB.fit:15
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:31
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.naive_bayes._BaseDiscreteNB.fit:15
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:31
msgid "Weights applied to individual samples (1. for unweighted)."
msgstr "Ponderaciones aplicadas a las muestras individuales (1. para las no ponderadas)."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.naive_bayes._BaseDiscreteNB.fit
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit
#: sklearn.naive_bayes._BaseNB.predict
#: sklearn.naive_bayes._BaseNB.predict_log_proba
#: sklearn.naive_bayes._BaseNB.predict_proba
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.naive_bayes._BaseDiscreteNB.fit:31
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:47
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:4
msgid "This method is expected to be called several times consecutively on different chunks of a dataset so as to implement out-of-core or online learning."
msgstr "Se espera que este método sea llamado varias veces consecutivamente en diferentes trozos de un conjunto de datos para implementar el aprendizaje fuera del núcleo o en línea."

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:8
msgid "This is especially useful when the whole dataset is too big to fit in memory at once."
msgstr "Esto es especialmente útil cuando todo el conjunto de datos es demasiado grande para caber en la memoria de una sola vez."

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:11
msgid "This method has some performance overhead hence it is better to call partial_fit on chunks of data that are as large as possible (as long as fitting in the memory budget) to hide the overhead."
msgstr "Este método tiene una cierta sobrecarga de rendimiento, por lo que es mejor llamar a partial_fit en porciones de datos tan grandes como sea posible (siempre que se ajusten al presupuesto de memoria) para ocultar la sobrecarga."

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:28
msgid "**classes**"
msgstr "**classes**"

#: of
msgid "array-like of shape (n_classes), default=None"
msgstr "array-like de forma (n_classes), default=None"

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:25
msgid "List of all the classes that can possibly appear in the y vector."
msgstr "Lista de todas las clases que pueden aparecer en el vector y."

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:27
msgid "Must be provided at the first call to partial_fit, can be omitted in subsequent calls."
msgstr "Debe proporcionarse en la primera llamada a partial_fit, puede omitirse en las invocaciones posteriores."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.naive_bayes._BaseNB.predict:24
#: sklearn.naive_bayes._BaseNB.predict_log_proba:26
#: sklearn.naive_bayes._BaseNB.predict_proba:26
msgid "**C**"
msgstr "**C**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.naive_bayes._BaseNB.predict:13
msgid "Predicted target values for X"
msgstr "Valores objetivo predichos para X"

#: of
msgid "array-like of shape (n_samples, n_classes)"
msgstr "array-like de forma (n_samples, n_classes)"

#: of sklearn.naive_bayes._BaseNB.predict_log_proba:13
msgid "Returns the log-probability of the samples for each class in the model. The columns correspond to the classes in sorted order, as they appear in the attribute :term:`classes_`."
msgstr "Devuelve la probabilidad logarítmica de las muestras para cada clase del modelo. Las columnas corresponden a las clases ordenadas, tal y como aparecen en el atributo :term:`classes_`."

#: of sklearn.naive_bayes._BaseNB.predict_proba:13
msgid "Returns the probability of the samples for each class in the model. The columns correspond to the classes in sorted order, as they appear in the attribute :term:`classes_`."
msgstr "Devuelve la probabilidad de las muestras para cada clase del modelo. Las columnas corresponden a las clases ordenadas, tal y como aparecen en el atributo :term:`classes_`."

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto, que es una métrica rigurosa, ya que se requiere para cada muestra que cada conjunto de etiquetas sea predicho correctamente."

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas True para `X`."

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: ../modules/generated/sklearn.naive_bayes.BernoulliNB.examples:4
msgid "Examples using ``sklearn.naive_bayes.BernoulliNB``"
msgstr "Ejemplos utilizando ``sklearn.naive_bayes.BernoulliNB``"

#: ../modules/generated/sklearn.naive_bayes.BernoulliNB.examples:15
#: ../modules/generated/sklearn.naive_bayes.BernoulliNB.examples:23
msgid ":ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py`"
msgstr ":ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py`"

