msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-21 12:20\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.svm.NuSVR.po\n"
"X-Crowdin-File-ID: 5322\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.svm.NuSVR.rst:2
msgid ":mod:`sklearn.svm`.NuSVR"
msgstr ":mod:`sklearn.svm`.NuSVR"

#: of sklearn.svm._classes.NuSVR:2
msgid "Nu Support Vector Regression."
msgstr "Regresión de Vector de Soporte Nu."

#: of sklearn.svm._classes.NuSVR:4
msgid "Similar to NuSVC, for regression, uses a parameter nu to control the number of support vectors. However, unlike NuSVC, where nu replaces C, here nu replaces the parameter epsilon of epsilon-SVR."
msgstr "Similar a NuSVC, para regresión, utiliza un parámetro nu para controlar el número de vectores de soporte. Sin embargo, a diferencia de NuSVC, donde nu sustituye C, aquí nu reemplaza el parámetro epsilon de epsilon-SVR."

#: of sklearn.svm._classes.NuSVR:8
msgid "The implementation is based on libsvm."
msgstr "La implementación se basa en libsvm."

#: of sklearn.svm._classes.NuSVR:10
msgid "Read more in the :ref:`User Guide <svm_regression>`."
msgstr "Lee más en el :ref:`Manual de usuario <svm_regression>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.svm._base.BaseLibSVM.fit sklearn.svm._base.BaseLibSVM.predict
#: sklearn.svm._classes.NuSVR
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.svm._classes.NuSVR:17
msgid "**nu**"
msgstr "**nu**"

#: of
msgid "float, default=0.5"
msgstr "flotante, default=0.5"

#: of sklearn.svm._classes.NuSVR:15
msgid "An upper bound on the fraction of training errors and a lower bound of the fraction of support vectors. Should be in the interval (0, 1].  By default 0.5 will be taken."
msgstr "Límite superior en la fracción de errores de entrenamiento y un límite inferior de la fracción de vectores de soporte. Debe estar en el intervalo (0, 1]. Por defecto se tomará 0.5."

#: of sklearn.svm._classes.NuSVR:20
msgid "**C**"
msgstr "**C**"

#: of
msgid "float, default=1.0"
msgstr "flotante, default=1.0"

#: of sklearn.svm._classes.NuSVR:20
msgid "Penalty parameter C of the error term."
msgstr "Parámetro de penalización C del término de error."

#: of sklearn.svm._classes.NuSVR:27
msgid "**kernel**"
msgstr "**kernel**"

#: of
msgid "{'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}, default='rbf'"
msgstr "{'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}, default='rbf'"

#: of sklearn.svm._classes.NuSVR:23
msgid "Specifies the kernel type to be used in the algorithm. It must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or a callable. If none is given, 'rbf' will be used. If a callable is given it is used to precompute the kernel matrix."
msgstr "Especifica el tipo de núcleo a ser usado en el algoritmo. Debe ser uno de 'linear', 'poly', 'rby', 'sigmoid', 'precomputed' o un invocable. Si no se da ninguna, se utilizará 'rbf'. Si un invocable es dado se utilizara para precalcular la matriz del núcleo."

#: of sklearn.svm._classes.NuSVR:31
msgid "**degree**"
msgstr "**degree**"

#: of
msgid "int, default=3"
msgstr "entero, default=3"

#: of sklearn.svm._classes.NuSVR:30
msgid "Degree of the polynomial kernel function ('poly'). Ignored by all other kernels."
msgstr "Grado de la función de núcleo polinómico ('poly'). Ignorado por todos los otros núcleos."

#: of sklearn.svm._classes.NuSVR:41
msgid "**gamma**"
msgstr "**gamma**"

#: of
msgid "{'scale', 'auto'} or float, default='scale'"
msgstr "{'scale', 'auto'} o flotanto, default='scale'"

#: of sklearn.svm._classes.NuSVR:34
msgid "Kernel coefficient for 'rbf', 'poly' and 'sigmoid'."
msgstr "Coeficiente de núcleo para 'rbf', 'poly' y 'sigmoid'."

#: of sklearn.svm._classes.NuSVR:36
msgid "if ``gamma='scale'`` (default) is passed then it uses 1 / (n_features * X.var()) as value of gamma,"
msgstr "si se pasa ``gamma='scale'`` (valor por defecto), entonces se usa 1 / (n_features * X.var()) como valor de gamma,"

#: of sklearn.svm._classes.NuSVR:38
msgid "if 'auto', uses 1 / n_features."
msgstr "si 'auto', utiliza 1 / n_features."

#: of sklearn.svm._classes.NuSVR:40
msgid "The default value of ``gamma`` changed from 'auto' to 'scale'."
msgstr "El valor por defecto de ``gamma`` cambió de 'auto' a 'scale'."

#: of sklearn.svm._classes.NuSVR:45
msgid "**coef0**"
msgstr "**coef0**"

#: of
msgid "float, default=0.0"
msgstr "flotante, default=0.0"

#: of sklearn.svm._classes.NuSVR:44
msgid "Independent term in kernel function. It is only significant in 'poly' and 'sigmoid'."
msgstr "Término independiente en la función del núcleo. Sólo es significativo en 'poly' y 'sigmoid'."

#: of sklearn.svm._classes.NuSVR:49
msgid "**shrinking**"
msgstr "**shrinking**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.svm._classes.NuSVR:48
msgid "Whether to use the shrinking heuristic. See the :ref:`User Guide <shrinking_svm>`."
msgstr "Si se usa o no la heurística de reducción. Vea el :ref:`Manual de usuario <shrinking_svm>`."

#: of sklearn.svm._classes.NuSVR:52
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-3"
msgstr "flotante, default=1e-3"

#: of sklearn.svm._classes.NuSVR:52
msgid "Tolerance for stopping criterion."
msgstr "Tolerancia para el criterio de parada."

#: of sklearn.svm._classes.NuSVR:55
msgid "**cache_size**"
msgstr "**cache_size**"

#: of
msgid "float, default=200"
msgstr "flotante, default=200"

#: of sklearn.svm._classes.NuSVR:55
msgid "Specify the size of the kernel cache (in MB)."
msgstr "Específica el tamaño del caché del núcleo (en MB)."

#: of sklearn.svm._classes.NuSVR:60
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool, default=False"
msgstr "booleano, default=False"

#: of sklearn.svm._classes.NuSVR:58
msgid "Enable verbose output. Note that this setting takes advantage of a per-process runtime setting in libsvm that, if enabled, may not work properly in a multithreaded context."
msgstr "Activar salida detallada. Tenga en cuenta que esta configuración toma ventaja de una configuración por proceso en el tiempo de ejecución en libsvm que, si está habilitada, puede no funcionar correctamente en un contexto multihilo."

#: of sklearn.svm._classes.NuSVR:66
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=-1"
msgstr "int, default=-1"

#: of sklearn.svm._classes.NuSVR:63
msgid "Hard limit on iterations within solver, or -1 for no limit."
msgstr "Limite fuerte en iteraciones dentro del solucionador, o -1 para ningún límite."

#: of sklearn.svm._classes.NuSVR
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.svm._classes.NuSVR:72
msgid "**class_weight_**"
msgstr "**class_weight_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.svm._classes.NuSVR:71
msgid "Multipliers of parameter C for each class. Computed based on the ``class_weight`` parameter."
msgstr "Multiplicadores del parámetro C para cada clase. Calculado basado en el parámetro ``class_weight``."

#: of sklearn.svm._classes.NuSVR:79
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (1, n_features)"
msgstr "ndarray of shape (1, n_features)"

#: of sklearn.svm._classes.NuSVR:75
msgid "Weights assigned to the features (coefficients in the primal problem). This is only available in the case of a linear kernel."
msgstr "Ponderados asignados a las características (coeficientes en el problema primario). Esto solo está disponible en el caso de un núcleo lineal."

#: of sklearn.svm._classes.NuSVR:78
msgid "`coef_` is readonly property derived from `dual_coef_` and `support_vectors_`."
msgstr "`coef_` es propiedad de solo lectura derivada de `dual_coef_` y `support_vectors_`."

#: of sklearn.svm._classes.NuSVR:82
msgid "**dual_coef_**"
msgstr "**dual_coef_**"

#: of
msgid "ndarray of shape (1, n_SV)"
msgstr "ndarray de forma (1, n_SV)"

#: of sklearn.svm._classes.NuSVR:82
msgid "Coefficients of the support vector in the decision function."
msgstr "Coeficientes de los vectores de soporte en la función de decisión."

#: of sklearn.svm._classes.NuSVR:85
msgid "**fit_status_**"
msgstr "**fit_status_**"

#: of
msgid "int"
msgstr "entero"

#: of sklearn.svm._classes.NuSVR:85
msgid "0 if correctly fitted, 1 otherwise (will raise warning)"
msgstr "0 si se ajusta correctamente, 1 en caso contrario (producirá una advertencia)"

#: of sklearn.svm._classes.NuSVR:88
msgid "**intercept_**"
msgstr "**intercept_**"

#: of
msgid "ndarray of shape (1,)"
msgstr "ndarray de forma (1,)"

#: of sklearn.svm._classes.NuSVR:88
msgid "Constants in decision function."
msgstr "Constantes en la función de decisión."

#: of sklearn.svm._classes.NuSVR:91
msgid "**n_support_**"
msgstr "**n_support_**"

#: of
msgid "ndarray of shape (n_classes,), dtype=int32"
msgstr "ndarray de forma (n_classes,), dtype=int32"

#: of sklearn.svm._classes.NuSVR:91
msgid "Number of support vectors for each class."
msgstr "Número de vectores de soporte para cada clase."

#: of sklearn.svm._classes.NuSVR:94
msgid "**shape_fit_**"
msgstr "**shape_fit_**"

#: of
msgid "tuple of int of shape (n_dimensions_of_X,)"
msgstr "tupla de int de la forma (n_dimensions_of_X,)"

#: of sklearn.svm._classes.NuSVR:94
msgid "Array dimensions of training vector ``X``."
msgstr "Dimensiones del arreglo del vector de entrenamiento ``X``."

#: of sklearn.svm._classes.NuSVR:97
msgid "**support_**"
msgstr "**support_**"

#: of
msgid "ndarray of shape (n_SV,)"
msgstr "ndarray de forma (n_SV,)"

#: of sklearn.svm._classes.NuSVR:97
msgid "Indices of support vectors."
msgstr "Indices de vectores de apoyo."

#: of sklearn.svm._classes.NuSVR:103
msgid "**support_vectors_**"
msgstr "**support_vectors_**"

#: of
msgid "ndarray of shape (n_SV, n_features)"
msgstr "ndarray de forma (n_SV, n_features)"

#: of sklearn.svm._classes.NuSVR:100
msgid "Support vectors."
msgstr "Vectores de apoyo."

#: of sklearn.svm._classes.NuSVR:108
msgid ":obj:`NuSVC`"
msgstr ":obj:`NuSVC`"

#: of sklearn.svm._classes.NuSVR:109
msgid "Support Vector Machine for classification implemented with libsvm with a parameter to control the number of support vectors."
msgstr "Maquína de Vector de Soporte para la clasificación implementada con libsvm con un parámetro para controlar el número de vectores de soporte."

#: of sklearn.svm._classes.NuSVR:110
msgid ":obj:`SVR`"
msgstr ":obj:`SVR`"

#: of sklearn.svm._classes.NuSVR:111
msgid "Epsilon Support Vector Machine for regression implemented with libsvm."
msgstr "Maquína de Vector de Soporte de Epsilon para regresión implementado con libsvm."

#: of sklearn.svm._classes.NuSVR:116
msgid "References"
msgstr "Referencias"

#: of sklearn.svm._classes.NuSVR:117
msgid "`LIBSVM: A Library for Support Vector Machines <http://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf>`_"
msgstr "`LIBSVM: A Library for Support Vector Machines <http://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf>`_"

#: of sklearn.svm._classes.NuSVR:120
msgid "`Platt, John (1999). \"Probabilistic outputs for support vector machines and comparison to regularizedlikelihood methods.\" <http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.1639>`_"
msgstr "`Platt, John (1999). \"Probabilistic outputs for support vector machines and comparison to regularizedlikelihood methods.\" <http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.1639>`_"

#: of sklearn.svm._classes.NuSVR:126
msgid "[R495acb08bb55-1]_, [R495acb08bb55-2]_"
msgstr "[R495acb08bb55-1]_, [R495acb08bb55-2]_"

#: of sklearn.svm._classes.NuSVR:129
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.svm._classes.NuSVR:144
msgid "Methods"
msgstr "Métodos"

#: of sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid ":obj:`fit <sklearn.svm.NuSVR.fit>`\\"
msgstr ":obj:`fit <sklearn.svm.NuSVR.fit>`\\"

#: of sklearn.svm._base.BaseLibSVM.fit:2
#: sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid "Fit the SVM model according to the given training data."
msgstr "Ajusta el modelo SVM de acuerdo a los datos de entrenamiento dados."

#: of sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid ":obj:`get_params <sklearn.svm.NuSVR.get_params>`\\"
msgstr ":obj:`get_params <sklearn.svm.NuSVR.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid ":obj:`predict <sklearn.svm.NuSVR.predict>`\\"
msgstr ":obj:`predict <sklearn.svm.NuSVR.predict>`\\"

#: of sklearn.svm._base.BaseLibSVM.predict:2
#: sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid "Perform regression on samples in X."
msgstr ""

#: of sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid ":obj:`score <sklearn.svm.NuSVR.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid ":obj:`set_params <sklearn.svm.NuSVR.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.svm._classes.NuSVR:152:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20 sklearn.svm._base.BaseLibSVM.fit:11
#: sklearn.svm._base.BaseLibSVM.predict:10
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)                 or (n_samples, n_samples)"
msgstr ""

#: of sklearn.svm._base.BaseLibSVM.fit:8
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of features. For kernel=\"precomputed\", the expected shape of X is (n_samples, n_samples)."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23 sklearn.svm._base.BaseLibSVM.fit:15
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.svm._base.BaseLibSVM.fit:14
msgid "Target values (class labels in classification, real numbers in regression)."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26 sklearn.svm._base.BaseLibSVM.fit:19
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.svm._base.BaseLibSVM.fit:18
msgid "Per-sample weights. Rescale C per sample. Higher weights force the classifier to put more emphasis on these points."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.svm._base.BaseLibSVM.fit sklearn.svm._base.BaseLibSVM.predict
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.svm._base.BaseLibSVM.fit:31
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.RegressorMixin.score:41 sklearn.svm._base.BaseLibSVM.fit:34
msgid "Notes"
msgstr ""

#: of sklearn.svm._base.BaseLibSVM.fit:35
msgid "If X and y are not C-ordered and contiguous arrays of np.float64 and X is not a scipy.sparse.csr_matrix, X and/or y may be copied."
msgstr ""

#: of sklearn.svm._base.BaseLibSVM.fit:38
msgid "If X is a dense array, then the other methods will not support sparse matrices as input."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.svm._base.BaseLibSVM.predict:4
msgid "For an one-class model, +1 (inlier) or -1 (outlier) is returned."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.svm._base.BaseLibSVM.predict:9
msgid "For kernel=\"precomputed\", the expected shape of X is (n_samples_test, n_samples_train)."
msgstr ""

#: of sklearn.svm._base.BaseLibSVM.predict:26
msgid "**y_pred**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.svm.NuSVR.examples:4
msgid "Examples using ``sklearn.svm.NuSVR``"
msgstr ""

#: ../modules/generated/sklearn.svm.NuSVR.examples:15
#: ../modules/generated/sklearn.svm.NuSVR.examples:23
msgid ":ref:`sphx_glr_auto_examples_applications_plot_model_complexity_influence.py`"
msgstr ""

