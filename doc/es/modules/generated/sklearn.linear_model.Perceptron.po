msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-28 00:37\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.Perceptron.po\n"
"X-Crowdin-File-ID: 4922\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.Perceptron.rst:2
msgid ":mod:`sklearn.linear_model`.Perceptron"
msgstr ":mod:`sklearn.linear_model`.Perceptron"

#: of sklearn.linear_model._perceptron.Perceptron:2
msgid "Read more in the :ref:`User Guide <perceptron>`."
msgstr "Más información en el :ref:`User Guide <perceptron>`."

#: of sklearn.base.BaseEstimator.get_params sklearn.base.ClassifierMixin.score
#: sklearn.linear_model._base.LinearClassifierMixin.decision_function
#: sklearn.linear_model._base.LinearClassifierMixin.predict
#: sklearn.linear_model._perceptron.Perceptron
#: sklearn.linear_model._stochastic_gradient.BaseSGD.set_params
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.linear_model._perceptron.Perceptron:8
msgid "**penalty**"
msgstr "**penalty**"

#: of
msgid "{'l2','l1','elasticnet'}, default=None"
msgstr "{'l2','l1','elasticnet'}, default=None"

#: of sklearn.linear_model._perceptron.Perceptron:8
msgid "The penalty (aka regularization term) to be used."
msgstr "La penalización (término de regularización, también conocido como \"penalty\") que se utilizará."

#: of sklearn.linear_model._perceptron.Perceptron:12
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float, default=0.0001"
msgstr "float, default=0.0001"

#: of sklearn.linear_model._perceptron.Perceptron:11
msgid "Constant that multiplies the regularization term if regularization is used."
msgstr "Constante que multiplica el término de regularización si se utiliza la regularización."

#: of sklearn.linear_model._perceptron.Perceptron:19
msgid "**l1_ratio**"
msgstr "**l1_ratio**"

#: of
msgid "float, default=0.15"
msgstr "float, default=0.15"

#: of sklearn.linear_model._perceptron.Perceptron:15
msgid "The Elastic Net mixing parameter, with `0 <= l1_ratio <= 1`. `l1_ratio=0` corresponds to L2 penalty, `l1_ratio=1` to L1. Only used if `penalty='elasticnet'`."
msgstr "El parámetro de mezcla de la Elastic Net, con `0 <= l1_ratio <= 1`. La `l1_ratio=0` corresponde a la penalización L2, la `l1_ratio=1` a la L1. Sólo se utiliza si `penalty='elasticnet'`."

#: of sklearn.linear_model._perceptron.Perceptron:23
msgid "**fit_intercept**"
msgstr "**fit_intercept**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.linear_model._perceptron.Perceptron:22
msgid "Whether the intercept should be estimated or not. If False, the data is assumed to be already centered."
msgstr "Si el intercepto debe ser estimado o no. Si es False, se asume que los datos ya están centrados."

#: of sklearn.linear_model._perceptron.Perceptron:30
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=1000"
msgstr "int, default=1000"

#: of sklearn.linear_model._perceptron.Perceptron:26
msgid "The maximum number of passes over the training data (aka epochs). It only impacts the behavior in the ``fit`` method, and not the :meth:`partial_fit` method."
msgstr "El número máximo de pasadas sobre los datos de entrenamiento (también conocido como épocas o epochs). Sólo afecta al comportamiento del método ``fit``, y no al método :meth:`partial_fit`."

#: of sklearn.linear_model._perceptron.Perceptron:36
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-3"
msgstr "float, default=1e-3"

#: of sklearn.linear_model._perceptron.Perceptron:33
msgid "The stopping criterion. If it is not None, the iterations will stop when (loss > previous_loss - tol)."
msgstr "El criterio de parada. Si no es None, las iteraciones se detendrán cuando (loss > previous_loss - tol)."

#: of sklearn.linear_model._perceptron.Perceptron:39
msgid "**shuffle**"
msgstr "**shuffle**"

#: of sklearn.linear_model._perceptron.Perceptron:39
msgid "Whether or not the training data should be shuffled after each epoch."
msgstr "Si los datos de entrenamiento deben ser aleatorizados o no después de cada época."

#: of sklearn.linear_model._perceptron.Perceptron:42
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int, default=0"
msgstr "int, default=0"

#: of sklearn.linear_model._perceptron.Perceptron:42
msgid "The verbosity level"
msgstr "Nivel de verbosidad"

#: of sklearn.linear_model._perceptron.Perceptron:45
msgid "**eta0**"
msgstr "**eta0**"

#: of
msgid "double, default=1"
msgstr "double, default=1"

#: of sklearn.linear_model._perceptron.Perceptron:45
msgid "Constant by which the updates are multiplied."
msgstr "Constante por la que se multiplican las actualizaciones."

#: of sklearn.linear_model._perceptron.Perceptron:52
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.linear_model._perceptron.Perceptron:48
msgid "The number of CPUs to use to do the OVA (One Versus All, for multi-class problems) computation. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "El número de CPUs a utilizar para realizar el cálculo OVA (Uno Contra Todos, One Versus All, para problemas multiclase). ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesadores. Ver :term:`Glossary <n_jobs>` para más detalles."

#: of sklearn.linear_model._perceptron.Perceptron:58
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance, default=None"
msgstr "int, RandomState instance, default=None"

#: of sklearn.linear_model._perceptron.Perceptron:55
msgid "Used to shuffle the training data, when ``shuffle`` is set to ``True``. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Se utiliza para reorganizar al azar los datos de entrenamiento, cuando ``shuffle`` se establece en ``True``. Introduce un int para una salida reproducible a través de múltiples invocaciones de la función. Ver :term:`Glossary <random_state>`."

#: of sklearn.linear_model._perceptron.Perceptron:67
msgid "**early_stopping**"
msgstr "**early_stopping**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.linear_model._perceptron.Perceptron:61
msgid "Whether to use early stopping to terminate training when validation. score is not improving. If set to True, it will automatically set aside a stratified fraction of training data as validation and terminate training when validation score is not improving by at least tol for n_iter_no_change consecutive epochs."
msgstr "Indica si se utiliza la parada anticipada para finalizar el entrenamiento cuando la puntuación de validación no mejora. Si se establece en True, se reservará automáticamente una fracción estratificada de los datos de entrenamiento como validación y se finalizará el entrenamiento cuando la puntuación de validación no mejore en al menos tol para n_iter_no_change épocas consecutivas."

#: of sklearn.linear_model._perceptron.Perceptron:74
msgid "**validation_fraction**"
msgstr "**validation_fraction**"

#: of
msgid "float, default=0.1"
msgstr "float, default=0.1"

#: of sklearn.linear_model._perceptron.Perceptron:70
msgid "The proportion of training data to set aside as validation set for early stopping. Must be between 0 and 1. Only used if early_stopping is True."
msgstr "La proporción de los datos de entrenamiento que se reservan como conjunto de validación para la parada anticipada. Debe estar entre 0 y 1. Sólo se utiliza si early_stopping es True."

#: of sklearn.linear_model._perceptron.Perceptron:79
msgid "**n_iter_no_change**"
msgstr "**n_iter_no_change**"

#: of
msgid "int, default=5"
msgstr "int, default=5"

#: of sklearn.linear_model._perceptron.Perceptron:77
msgid "Number of iterations with no improvement to wait before early stopping."
msgstr "Número de iteraciones sin mejora que hay que esperar antes de la parada anticipada."

#: of sklearn.linear_model._perceptron.Perceptron:89
msgid "**class_weight**"
msgstr "**class_weight**"

#: of
msgid "dict, {class_label: weight} or \"balanced\", default=None"
msgstr "dict, {class_label: weight} or \"balanced\", default=None"

#: of sklearn.linear_model._perceptron.Perceptron:82
msgid "Preset for the class_weight fit parameter."
msgstr "Preajuste para el parámetro de ajuste class_weight."

#: of sklearn.linear_model._perceptron.Perceptron:84
msgid "Weights associated with classes. If not given, all classes are supposed to have weight one."
msgstr "Ponderación asociada a las clases. Si no se da, se supone que todas las clases tienen ponderación uno."

#: of sklearn.linear_model._perceptron.Perceptron:87
msgid "The \"balanced\" mode uses the values of y to automatically adjust weights inversely proportional to class frequencies in the input data as ``n_samples / (n_classes * np.bincount(y))``"
msgstr "El modo \"balanced\" utiliza los valores de y para ajustar automáticamente las ponderaciones inversamente proporcionales a las frecuencias de clase en los datos de entrada como ``n_samples / (n_classes * np.bincount(y))``"

#: of sklearn.linear_model._perceptron.Perceptron:97
msgid "**warm_start**"
msgstr "**warm_start**"

#: of sklearn.linear_model._perceptron.Perceptron:92
msgid "When set to True, reuse the solution of the previous call to fit as initialization, otherwise, just erase the previous solution. See :term:`the Glossary <warm_start>`."
msgstr "Cuando se establece a True, reutiliza la solución de la invocación anterior para ajustar como inicialización, de lo contrario, solamente borrará la solución anterior. Ver :term:`Glossary <warm_start>`."

#: of sklearn.linear_model._perceptron.Perceptron
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.linear_model._perceptron.Perceptron:102
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "array of shape (n_classes,)"

#: of sklearn.linear_model._perceptron.Perceptron:102
msgid "The unique classes labels."
msgstr "Etiquetas de clase únicas."

#: of sklearn.linear_model._perceptron.Perceptron:105
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (1, n_features) if n_classes == 2 else             (n_classes, n_features)"
msgstr "ndarray of shape (1, n_features) if n_classes == 2 else             (n_classes, n_features)"

#: of sklearn.linear_model._perceptron.Perceptron:105
msgid "Weights assigned to the features."
msgstr "Ponderaciones asignadas a las características."

#: of sklearn.linear_model._perceptron.Perceptron:108
msgid "**intercept_**"
msgstr "**intercept_**"

#: of
msgid "ndarray of shape (1,) if n_classes == 2 else (n_classes,)"
msgstr "ndarray of shape (1,) if n_classes == 2 else (n_classes,)"

#: of sklearn.linear_model._perceptron.Perceptron:108
msgid "Constants in decision function."
msgstr "Constantes en la función de decisión."

#: of sklearn.linear_model._perceptron.Perceptron:112
msgid "**loss_function_**"
msgstr "**loss_function_**"

#: of
msgid "concrete LossFunction"
msgstr "concrete LossFunction"

#: of sklearn.linear_model._perceptron.Perceptron:111
msgid "The function that determines the loss, or difference between the output of the algorithm and the target values."
msgstr "La función que determina la pérdida, o la diferencia entre la salida del algoritmo y los valores objetivo."

#: of sklearn.linear_model._perceptron.Perceptron:116
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.linear_model._perceptron.Perceptron:115
msgid "The actual number of iterations to reach the stopping criterion. For multiclass fits, it is the maximum over every binary fit."
msgstr "El número real de iteraciones para alcanzar el criterio de parada. Para los ajustes multiclase, es el máximo sobre cada ajuste binario."

#: of sklearn.linear_model._perceptron.Perceptron:123
msgid "**t_**"
msgstr "**t_**"

#: of sklearn.linear_model._perceptron.Perceptron:119
msgid "Number of weight updates performed during training. Same as ``(n_iter_ * n_samples)``."
msgstr "Número de actualizaciones de ponderación realizadas durante el entrenamiento. Igual que``(n_iter_ * n_samples)``."

#: of sklearn.linear_model._perceptron.Perceptron:128
msgid ":obj:`SGDClassifier`"
msgstr ":obj:`SGDClassifier`"

#: of sklearn.linear_model._base.SparseCoefMixin.sparsify:24
#: sklearn.linear_model._perceptron.Perceptron:132
msgid "Notes"
msgstr "Notas"

#: of sklearn.linear_model._perceptron.Perceptron:133
msgid "``Perceptron`` is a classification algorithm which shares the same underlying implementation with ``SGDClassifier``. In fact, ``Perceptron()`` is equivalent to `SGDClassifier(loss=\"perceptron\", eta0=1, learning_rate=\"constant\", penalty=None)`."
msgstr "``Perceptron`` es un algoritmo de clasificación que comparte la misma implementación subyacente con ``SGDClassifier``. De hecho, ``Perceptron()`` es equivalente a `SGDClassifier(loss=\"perceptron\", eta0=1, learning_rate=\"constant\", penalty=None)`."

#: of sklearn.linear_model._perceptron.Perceptron:139
msgid "References"
msgstr "Referencias"

#: of sklearn.linear_model._perceptron.Perceptron:140
msgid "https://en.wikipedia.org/wiki/Perceptron and references therein."
msgstr "https://es.wikipedia.org/wiki/Perceptron y las referencias en ella."

#: of sklearn.linear_model._perceptron.Perceptron:147
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.linear_model._perceptron.Perceptron:158
msgid "Methods"
msgstr "Métodos"

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid ":obj:`decision_function <sklearn.linear_model.Perceptron.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.linear_model.Perceptron.decision_function>`\\"

#: of sklearn.linear_model._base.LinearClassifierMixin.decision_function:2
#: sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid "Predict confidence scores for samples."
msgstr "Predice las puntuaciones de confianza de las muestras."

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid ":obj:`densify <sklearn.linear_model.Perceptron.densify>`\\"
msgstr ":obj:`densify <sklearn.linear_model.Perceptron.densify>`\\"

#: of sklearn.linear_model._base.SparseCoefMixin.densify:2
#: sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid "Convert coefficient matrix to dense array format."
msgstr "Convierte la matriz de coeficientes en formato de arreglo denso."

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.Perceptron.fit>`\\"
msgstr ":obj:`fit <sklearn.linear_model.Perceptron.fit>`\\"

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:2
msgid "Fit linear model with Stochastic Gradient Descent."
msgstr "Ajustar el modelo lineal con el Descenso Gradiente Estocástico."

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.Perceptron.get_params>`\\"
msgstr ":obj:`get_params <sklearn.linear_model.Perceptron.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.linear_model.Perceptron.partial_fit>`\\"
msgstr ":obj:`partial_fit <sklearn.linear_model.Perceptron.partial_fit>`\\"

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:2
msgid "Perform one epoch of stochastic gradient descent on given samples."
msgstr "Realiza una época de descenso de gradiente estocástico en las muestras dadas."

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.Perceptron.predict>`\\"
msgstr ":obj:`predict <sklearn.linear_model.Perceptron.predict>`\\"

#: of sklearn.linear_model._base.LinearClassifierMixin.predict:2
#: sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid "Predict class labels for samples in X."
msgstr "Predice las etiquetas de clase para las muestras en X."

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.Perceptron.score>`\\"
msgstr ":obj:`score <sklearn.linear_model.Perceptron.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos de prueba y las etiquetas dados."

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.Perceptron.set_params>`\\"
msgstr ":obj:`set_params <sklearn.linear_model.Perceptron.set_params>`\\"

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
#: sklearn.linear_model._stochastic_gradient.BaseSGD.set_params:2
msgid "Set and validate the parameters of estimator."
msgstr "Establecer y validar los parámetros del estimador."

#: of sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid ":obj:`sparsify <sklearn.linear_model.Perceptron.sparsify>`\\"
msgstr ":obj:`sparsify <sklearn.linear_model.Perceptron.sparsify>`\\"

#: of sklearn.linear_model._base.SparseCoefMixin.sparsify:2
#: sklearn.linear_model._perceptron.Perceptron:170:<autosummary>:1
msgid "Convert coefficient matrix to sparse format."
msgstr "Convierte la matriz de coeficientes en formato disperso."

#: of sklearn.linear_model._base.LinearClassifierMixin.decision_function:4
msgid "The confidence score for a sample is proportional to the signed distance of that sample to the hyperplane."
msgstr "La puntuación de confianza de una muestra es proporcional a la distancia con signo de esa muestra al hiperplano."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.linear_model._base.LinearClassifierMixin.decision_function:10
#: sklearn.linear_model._base.LinearClassifierMixin.predict:8
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:8
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:12
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr "array-like or sparse matrix, shape (n_samples, n_features)"

#: of sklearn.linear_model._base.LinearClassifierMixin.decision_function:10
#: sklearn.linear_model._base.LinearClassifierMixin.predict:8
msgid "Samples."
msgstr "Muestras."

#: of sklearn.base.BaseEstimator.get_params sklearn.base.ClassifierMixin.score
#: sklearn.linear_model._base.LinearClassifierMixin.decision_function
#: sklearn.linear_model._base.LinearClassifierMixin.predict
#: sklearn.linear_model._base.SparseCoefMixin.densify
#: sklearn.linear_model._base.SparseCoefMixin.sparsify
#: sklearn.linear_model._stochastic_gradient.BaseSGD.set_params
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.linear_model._base.LinearClassifierMixin.decision_function:28
msgid "array, shape=(n_samples,) if n_classes == 2 else (n_samples, n_classes)"
msgstr "array, shape=(n_samples,) if n_classes == 2 else (n_samples, n_classes)"

#: of sklearn.linear_model._base.LinearClassifierMixin.decision_function:15
msgid "Confidence scores per (sample, class) combination. In the binary case, confidence score for self.classes_[1] where >0 means this class would be predicted."
msgstr "Puntuaciones de confianza por combinación (muestra, clase). En el caso binario, la puntuación de confianza para self.classes_[1] donde >0 significa que esta clase sería predicha."

#: of sklearn.linear_model._base.SparseCoefMixin.densify:4
msgid "Converts the ``coef_`` member (back) to a numpy.ndarray. This is the default format of ``coef_`` and is required for fitting, so calling this method is only required on models that have previously been sparsified; otherwise, it is a no-op."
msgstr "Convierte el miembro ``coef_`` (de vuelta) en un numpy.ndarray. Este es el formato por defecto de ``coef_`` y se requiere para el ajuste, por lo que invocar este método sólo es necesario en los modelos que han sido previamente dispersados (sparsified); de lo contrario, es un no-op."

#: of sklearn.linear_model._base.SparseCoefMixin.densify:24
#: sklearn.linear_model._base.SparseCoefMixin.sparsify:21
msgid "self"
msgstr "self"

#: of sklearn.linear_model._base.SparseCoefMixin.densify:13
#: sklearn.linear_model._base.SparseCoefMixin.sparsify:14
msgid "Fitted estimator."
msgstr "Estimador ajustado."

#: of
msgid "{array-like, sparse matrix}, shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix}, shape (n_samples, n_features)"

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:8
msgid "Training data."
msgstr "Datos del entrenamiento."

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:11
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:15
msgid "**y**"
msgstr "**y**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray of shape (n_samples,)"

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:11
msgid "Target values."
msgstr "Valores objetivo."

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:14
msgid "**coef_init**"
msgstr "**coef_init**"

#: of
msgid "ndarray of shape (n_classes, n_features), default=None"
msgstr "ndarray of shape (n_classes, n_features), default=None"

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:14
msgid "The initial coefficients to warm-start the optimization."
msgstr "Los coeficientes iniciales para iniciar la optimización en caliente (warm-start)."

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:17
msgid "**intercept_init**"
msgstr "**intercept_init**"

#: of
msgid "ndarray of shape (n_classes,), default=None"
msgstr "ndarray of shape (n_classes,), default=None"

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:17
msgid "The initial intercept to warm-start the optimization."
msgstr "El intercepto inicial para el arranque en caliente de la optimización."

#: of sklearn.base.ClassifierMixin.score:17
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:23
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:27
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like, shape (n_samples,), default=None"
msgstr "array-like, shape (n_samples,), default=None"

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:20
msgid "Weights applied to individual samples. If not provided, uniform weights are assumed. These weights will be multiplied with class_weight (passed through the constructor) if class_weight is specified."
msgstr "Ponderaciones aplicadas a las muestras individuales. Si no se proporciona, se asumen ponderados uniformes. Estas ponderaciones se multiplicarán por el peso de la clase (pasado a través del constructor) si se especifica el peso de la clase."

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:39
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:43
msgid "self :"
msgstr "self :"

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.fit:28
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:32
msgid "Returns an instance of self."
msgstr "Devuelve una instancia de sí misma."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:4
msgid "Internally, this method uses ``max_iter = 1``. Therefore, it is not guaranteed that a minimum of the cost function is reached after calling it once. Matters such as objective convergence and early stopping should be handled by the user."
msgstr "Internamente, este método utiliza ``max_iter = 1``. Por lo tanto, no se garantiza que se alcance un mínimo de la función de coste después de invocarlo una sola vez. Cuestiones como la convergencia del objetivo y la parada anticipada deben ser manejadas por el usuario."

#: of
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:12
msgid "Subset of the training data."
msgstr "Subconjunto de los datos de entrenamiento."

#: of
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:15
msgid "Subset of the target values."
msgstr "Subconjunto de los valores objetivos."

#: of
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:23
msgid "**classes**"
msgstr "**classes**"

#: of
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:18
msgid "Classes across all calls to partial_fit. Can be obtained by via `np.unique(y_all)`, where y_all is the target vector of the entire dataset. This argument is required for the first call to partial_fit and can be omitted in the subsequent calls. Note that y doesn't need to contain all labels in `classes`."
msgstr "Clases a través de todas las invocaciones a partial_fit. Puede obtenerse mediante `np.unique(y_all)`, donde y_all es el vector objetivo de todo el conjunto de datos. Este argumento es necesario para la primera invocación a partial_fit y puede omitirse en las siguientes. Ten en cuenta que no es necesario que y contenga todas las etiquetas de `classes`."

#: of
#: sklearn.linear_model._stochastic_gradient.BaseSGDClassifier.partial_fit:26
msgid "Weights applied to individual samples. If not provided, uniform weights are assumed."
msgstr "Ponderaciones aplicadas a las muestras individuales. Si no se proporciona, se suponen ponderados uniformes."

#: of sklearn.linear_model._base.LinearClassifierMixin.predict:24
msgid "**C**"
msgstr "**C**"

#: of
msgid "array, shape [n_samples]"
msgstr "array, shape [n_samples]"

#: of sklearn.linear_model._base.LinearClassifierMixin.predict:13
msgid "Predicted class label per sample."
msgstr "Etiqueta de clase predicha por muestra."

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto, que es una métrica dura, ya que se requiere para cada muestra que cada conjunto de etiquetas se prediga correctamente."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like of shape (n_samples, n_features)"

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like of shape (n_samples,) or (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas verdaderas (True) para `X`."

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like of shape (n_samples,), default=None"

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr "Ponderación de muestras."

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con relación a `y`."

#: of sklearn.linear_model._stochastic_gradient.BaseSGD.set_params:8
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: of sklearn.linear_model._stochastic_gradient.BaseSGD.set_params:8
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of sklearn.linear_model._stochastic_gradient.BaseSGD.set_params:24
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.linear_model._stochastic_gradient.BaseSGD.set_params:13
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: of sklearn.linear_model._base.SparseCoefMixin.sparsify:4
msgid "Converts the ``coef_`` member to a scipy.sparse matrix, which for L1-regularized models can be much more memory- and storage-efficient than the usual numpy.ndarray representation."
msgstr "Convierte el miembro ``coef_`` en una matriz scipy.sparse, que para los modelos L1-regularizados puede ser mucho más eficiente en cuanto a memoria y almacenamiento que la representación numpy.ndarray habitual."

#: of sklearn.linear_model._base.SparseCoefMixin.sparsify:8
msgid "The ``intercept_`` member is not converted."
msgstr "El miembro ``intercept_`` no se convierte."

#: of sklearn.linear_model._base.SparseCoefMixin.sparsify:25
#, python-format
msgid "For non-sparse models, i.e. when there are not many zeros in ``coef_``, this may actually *increase* memory usage, so use this method with care. A rule of thumb is that the number of zero elements, which can be computed with ``(coef_ == 0).sum()``, must be more than 50% for this to provide significant benefits."
msgstr "Para los modelos no dispersos, es decir, cuando no hay muchos ceros en ``coef_``, esto puede en realidad *aumentar* el uso de la memoria, así que utilice este método con cuidado. Una regla general es que el número de elementos cero, que puede ser calculado con ``(coef_ == 0).sum()``, debe ser más del 50% para que esto proporcione beneficios significativos."

#: of sklearn.linear_model._base.SparseCoefMixin.sparsify:31
msgid "After calling this method, further fitting with the partial_fit method (if any) will not work until you call densify."
msgstr "Después de invocar a este método, el ajuste posterior con el método partial_fit (si lo hay) no funcionará hasta que llame a densify."

#: ../modules/generated/sklearn.linear_model.Perceptron.examples:4
msgid "Examples using ``sklearn.linear_model.Perceptron``"
msgstr "Ejemplos usando ``sklearn.linear_model.Perceptron``"

#: ../modules/generated/sklearn.linear_model.Perceptron.examples:15
#: ../modules/generated/sklearn.linear_model.Perceptron.examples:23
msgid ":ref:`sphx_glr_auto_examples_applications_plot_out_of_core_classification.py`"
msgstr ":ref:`sphx_glr_auto_examples_applications_plot_out_of_core_classification.py`"

#: ../modules/generated/sklearn.linear_model.Perceptron.examples:34
#: ../modules/generated/sklearn.linear_model.Perceptron.examples:42
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_sgd_comparison.py`"
msgstr ":ref:`sphx_glr_auto_examples_linear_model_plot_sgd_comparison.py`"

#: ../modules/generated/sklearn.linear_model.Perceptron.examples:53
#: ../modules/generated/sklearn.linear_model.Perceptron.examples:61
msgid ":ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py`"
msgstr ":ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py`"

