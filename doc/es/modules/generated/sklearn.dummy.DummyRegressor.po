msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-08 21:20\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.dummy.DummyRegressor.po\n"
"X-Crowdin-File-ID: 4892\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.dummy.DummyRegressor.rst:2
msgid ":mod:`sklearn.dummy`.DummyRegressor"
msgstr ":mod:`sklearn.dummy`.DummyRegressor"

#: of sklearn.dummy.DummyRegressor:2
msgid "DummyRegressor is a regressor that makes predictions using simple rules."
msgstr ""

#: of sklearn.dummy.DummyRegressor:5
msgid "This regressor is useful as a simple baseline to compare with other (real) regressors. Do not use it for real problems."
msgstr ""

#: of sklearn.dummy.DummyRegressor:8
msgid "Read more in the :ref:`User Guide <dummy_estimators>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.dummy.DummyRegressor
#: sklearn.dummy.DummyRegressor.fit sklearn.dummy.DummyRegressor.predict
#: sklearn.dummy.DummyRegressor.score
msgid "Parameters"
msgstr ""

#: of sklearn.dummy.DummyRegressor:22
msgid "**strategy**"
msgstr ""

#: of
msgid "{\"mean\", \"median\", \"quantile\", \"constant\"}, default=\"mean\""
msgstr ""

#: of sklearn.dummy.DummyRegressor:15
msgid "Strategy to use to generate predictions."
msgstr ""

#: of sklearn.dummy.DummyRegressor:17
msgid "\"mean\": always predicts the mean of the training set"
msgstr ""

#: of sklearn.dummy.DummyRegressor:18
msgid "\"median\": always predicts the median of the training set"
msgstr ""

#: of sklearn.dummy.DummyRegressor:19
msgid "\"quantile\": always predicts a specified quantile of the training set, provided with the quantile parameter."
msgstr ""

#: of sklearn.dummy.DummyRegressor:21
msgid "\"constant\": always predicts a constant value that is provided by the user."
msgstr ""

#: of sklearn.dummy.DummyRegressor:26
msgid "**constant**"
msgstr ""

#: of
msgid "int or float or array-like of shape (n_outputs,), default=None"
msgstr ""

#: of sklearn.dummy.DummyRegressor:25
msgid "The explicit constant as predicted by the \"constant\" strategy. This parameter is useful only for the \"constant\" strategy."
msgstr ""

#: of sklearn.dummy.DummyRegressor:34
msgid "**quantile**"
msgstr ""

#: of
msgid "float in [0.0, 1.0], default=None"
msgstr ""

#: of sklearn.dummy.DummyRegressor:29
msgid "The quantile to predict using the \"quantile\" strategy. A quantile of 0.5 corresponds to the median, while 0.0 to the minimum and 1.0 to the maximum."
msgstr ""

#: of sklearn.dummy.DummyRegressor
msgid "Attributes"
msgstr ""

#: of sklearn.dummy.DummyRegressor:40
msgid "**constant_**"
msgstr ""

#: of
msgid "ndarray of shape (1, n_outputs)"
msgstr ""

#: of sklearn.dummy.DummyRegressor:39
msgid "Mean or median or quantile of the training targets or constant value given by the user."
msgstr ""

#: of sklearn.dummy.DummyRegressor:49
msgid "**n_outputs_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.dummy.DummyRegressor:43
msgid "Number of outputs."
msgstr ""

#: of sklearn.dummy.DummyRegressor:52
msgid "Examples"
msgstr ""

#: of sklearn.dummy.DummyRegressor:66
msgid "Methods"
msgstr ""

#: of sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid ":obj:`fit <sklearn.dummy.DummyRegressor.fit>`\\"
msgstr ""

#: of sklearn.dummy.DummyRegressor.fit:2
#: sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid "Fit the random regressor."
msgstr ""

#: of sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid ":obj:`get_params <sklearn.dummy.DummyRegressor.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid ":obj:`predict <sklearn.dummy.DummyRegressor.predict>`\\"
msgstr ""

#: of sklearn.dummy.DummyRegressor.predict:2
#: sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid "Perform classification on test vectors X."
msgstr ""

#: of sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid ":obj:`score <sklearn.dummy.DummyRegressor.score>`\\"
msgstr ""

#: of sklearn.dummy.DummyRegressor.score:2
#: sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid "Returns the coefficient of determination R^2 of the prediction."
msgstr ""

#: of sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid ":obj:`set_params <sklearn.dummy.DummyRegressor.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.dummy.DummyRegressor:74:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.dummy.DummyRegressor.fit:8 sklearn.dummy.DummyRegressor.predict:8
#: sklearn.dummy.DummyRegressor.score:17
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.dummy.DummyRegressor.fit:8
msgid "Training data."
msgstr ""

#: of sklearn.dummy.DummyRegressor.fit:11
#: sklearn.dummy.DummyRegressor.predict:19
#: sklearn.dummy.DummyRegressor.score:20
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.dummy.DummyRegressor.fit:11
msgid "Target values."
msgstr ""

#: of sklearn.dummy.DummyRegressor.fit:14 sklearn.dummy.DummyRegressor.score:23
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.dummy.DummyRegressor.fit:14 sklearn.dummy.DummyRegressor.score:23
msgid "Sample weights."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.dummy.DummyRegressor.fit
#: sklearn.dummy.DummyRegressor.predict sklearn.dummy.DummyRegressor.score
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.dummy.DummyRegressor.fit:30
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.dummy.DummyRegressor.predict:8
msgid "Test data."
msgstr ""

#: of sklearn.dummy.DummyRegressor.predict:14
msgid "**return_std**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.dummy.DummyRegressor.predict:11
msgid "Whether to return the standard deviation of posterior prediction. All zeros in this case."
msgstr ""

#: of sklearn.dummy.DummyRegressor.predict:19
msgid "Predicted target values for X."
msgstr ""

#: of sklearn.dummy.DummyRegressor.predict:33
msgid "**y_std**"
msgstr ""

#: of sklearn.dummy.DummyRegressor.predict:22
msgid "Standard deviation of predictive distribution of query points."
msgstr ""

#: of sklearn.dummy.DummyRegressor.score:4
msgid "The coefficient R^2 is defined as (1 - u/v), where u is the residual sum of squares ((y_true - y_pred) ** 2).sum() and v is the total sum of squares ((y_true - y_true.mean()) ** 2).sum(). The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of y, disregarding the input features, would get a R^2 score of 0.0."
msgstr ""

#: of
msgid "None or array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.dummy.DummyRegressor.score:15
msgid "Test samples. Passing None as test samples gives the same result as passing real test samples, since DummyRegressor operates independently of the sampled observations."
msgstr ""

#: of sklearn.dummy.DummyRegressor.score:20
msgid "True values for X."
msgstr ""

#: of sklearn.dummy.DummyRegressor.score:39
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.dummy.DummyRegressor.score:28
msgid "R^2 of self.predict(X) wrt. y."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.dummy.DummyRegressor.examples:4
msgid "Examples using ``sklearn.dummy.DummyRegressor``"
msgstr ""

#: ../modules/generated/sklearn.dummy.DummyRegressor.examples:15
#: ../modules/generated/sklearn.dummy.DummyRegressor.examples:23
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_poisson_regression_non_normal_loss.py`"
msgstr ""

