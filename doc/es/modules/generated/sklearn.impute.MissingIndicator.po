msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-14 23:58\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.impute.MissingIndicator.po\n"
"X-Crowdin-File-ID: 3228\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.impute.MissingIndicator.rst:2
msgid ":mod:`sklearn.impute`.MissingIndicator"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:2
msgid "Binary indicators for missing values."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:4
msgid "Note that this component typically should not be used in a vanilla :class:`Pipeline` consisting of transformers and a classifier, but rather could be added using a :class:`FeatureUnion` or :class:`ColumnTransformer`."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:8
msgid "Read more in the :ref:`User Guide <impute>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.impute._base.MissingIndicator
#: sklearn.impute._base.MissingIndicator.fit
#: sklearn.impute._base.MissingIndicator.fit_transform
#: sklearn.impute._base.MissingIndicator.transform
msgid "Parameters"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:18
msgid "**missing_values**"
msgstr ""

#: of
msgid "int, float, string, np.nan or None, default=np.nan"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:15
msgid "The placeholder for the missing values. All occurrences of `missing_values` will be imputed. For pandas' dataframes with nullable integer dtypes with missing values, `missing_values` should be set to `np.nan`, since `pd.NA` will be converted to `np.nan`."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:26
msgid "**features**"
msgstr ""

#: of
msgid "{'missing-only', 'all'}, default='missing-only'"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:21
msgid "Whether the imputer mask should represent all or a subset of features."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:24
msgid "If 'missing-only' (default), the imputer mask will only represent features containing missing values during fit time."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:26
msgid "If 'all', the imputer mask will represent all features."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:34
msgid "**sparse**"
msgstr ""

#: of
msgid "bool or 'auto', default='auto'"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:29
msgid "Whether the imputer mask format should be sparse or dense."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:31
msgid "If 'auto' (default), the imputer mask will be of same type as input."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:33
msgid "If True, the imputer mask will be a sparse matrix."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:34
msgid "If False, the imputer mask will be a numpy array."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:42
msgid "**error_on_new**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:37
msgid "If True, transform will raise an error when there are features with missing values in transform that have no missing values in fit. This is applicable only when `features='missing-only'`."
msgstr ""

#: of sklearn.impute._base.MissingIndicator
msgid "Attributes"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:55
msgid "**features_**"
msgstr ""

#: of
msgid "ndarray, shape (n_missing_features,) or (n_features,)"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:47
msgid "The features indices which will be returned when calling ``transform``. They are computed during ``fit``. For ``features='all'``, it is to ``range(n_features)``."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:58
msgid "Examples"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:77
msgid "Methods"
msgstr ""

#: of sklearn.impute._base.MissingIndicator:85:<autosummary>:1
msgid ":obj:`fit <sklearn.impute.MissingIndicator.fit>`\\"
msgstr ""

#: of sklearn.impute._base.MissingIndicator.fit:2
#: sklearn.impute._base.MissingIndicator:85:<autosummary>:1
msgid "Fit the transformer on X."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:85:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.impute.MissingIndicator.fit_transform>`\\"
msgstr ""

#: of sklearn.impute._base.MissingIndicator.fit_transform:2
#: sklearn.impute._base.MissingIndicator.transform:2
#: sklearn.impute._base.MissingIndicator:85:<autosummary>:1
msgid "Generate missing values indicator for X."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:85:<autosummary>:1
msgid ":obj:`get_params <sklearn.impute.MissingIndicator.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.impute._base.MissingIndicator:85:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:85:<autosummary>:1
msgid ":obj:`set_params <sklearn.impute.MissingIndicator.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.impute._base.MissingIndicator:85:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.impute._base.MissingIndicator:85:<autosummary>:1
msgid ":obj:`transform <sklearn.impute.MissingIndicator.transform>`\\"
msgstr ""

#: of sklearn.impute._base.MissingIndicator.fit:9
#: sklearn.impute._base.MissingIndicator.fit_transform:8
#: sklearn.impute._base.MissingIndicator.transform:8
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix}, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.impute._base.MissingIndicator.fit:8
msgid "Input data, where ``n_samples`` is the number of samples and ``n_features`` is the number of features."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.impute._base.MissingIndicator.fit
#: sklearn.impute._base.MissingIndicator.fit_transform
#: sklearn.impute._base.MissingIndicator.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.impute._base.MissingIndicator.fit:25
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.impute._base.MissingIndicator.fit:14
msgid "Returns self."
msgstr ""

#: of sklearn.impute._base.MissingIndicator.fit_transform:8
#: sklearn.impute._base.MissingIndicator.transform:8
msgid "The input data to complete."
msgstr ""

#: of sklearn.impute._base.MissingIndicator.fit_transform:25
#: sklearn.impute._base.MissingIndicator.transform:25
msgid "**Xt**"
msgstr ""

#: of
msgid "{ndarray or sparse matrix}, shape (n_samples, n_features)         or (n_samples, n_features_with_missing)"
msgstr ""

#: of sklearn.impute._base.MissingIndicator.fit_transform:13
#: sklearn.impute._base.MissingIndicator.transform:13
msgid "The missing indicator for input data. The data type of ``Xt`` will be boolean."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

