msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-06 23:44\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.RandomTreesEmbedding.po\n"
"X-Crowdin-File-ID: 5252\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.RandomTreesEmbedding.rst:2
msgid ":mod:`sklearn.ensemble`.RandomTreesEmbedding"
msgstr ":mod:`sklearn.ensemble`.RandomTreesEmbedding"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:2
msgid "An ensemble of totally random trees."
msgstr "Un conjunto de árboles totalmente aleatorios."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:4
msgid "An unsupervised transformation of a dataset to a high-dimensional sparse representation. A datapoint is coded according to which leaf of each tree it is sorted into. Using a one-hot encoding of the leaves, this leads to a binary coding with as many ones as there are trees in the forest."
msgstr "Una transformación no supervisada de un conjunto de datos a una representación dispersa de alta dimensión. Un punto de datos se codifica según la hoja de cada árbol en la que se clasifica. Utilizando una codificación one-hot de las hojas, se obtiene una codificación binaria con tantos unos como árboles hay en el bosque."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:10
msgid "The dimensionality of the resulting representation is ``n_out <= n_estimators * max_leaf_nodes``. If ``max_leaf_nodes == None``, the number of leaf nodes is at most ``n_estimators * 2 ** max_depth``."
msgstr "La dimensionalidad de la representación resultante es ``n_out <= n_estimators * max_leaf_nodes``. Si ``max_leaf_nodes == None``, el número de nodos hoja es como máximo ``n_estimators * 2 ** max_depth``."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:14
msgid "Read more in the :ref:`User Guide <random_trees_embedding>`."
msgstr "Más información en el :ref:`Manual de usuario <random_trees_embedding>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.ensemble._forest.BaseForest.apply
#: sklearn.ensemble._forest.BaseForest.decision_path
#: sklearn.ensemble._forest.RandomTreesEmbedding
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform
#: sklearn.ensemble._forest.RandomTreesEmbedding.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:23
msgid "**n_estimators**"
msgstr "**n_estimators**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:19
msgid "Number of trees in the forest."
msgstr "Número de árboles en el bosque."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:21
msgid "The default value of ``n_estimators`` changed from 10 to 100 in 0.22."
msgstr "El valor por defecto de ``n_estimators`` cambió de 10 a 100 en 0.22."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:28
msgid "**max_depth**"
msgstr "**max_depth**"

#: of
msgid "int, default=5"
msgstr "int, default=5"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:26
msgid "The maximum depth of each tree. If None, then nodes are expanded until all leaves are pure or until all leaves contain less than min_samples_split samples."
msgstr "La profundidad máxima de cada árbol. Si es None, los nodos se expanden hasta que todas las hojas sean puras o hasta que todas las hojas contengan menos de min_samples_split muestras."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:39
msgid "**min_samples_split**"
msgstr "**min_samples_split**"

#: of
msgid "int or float, default=2"
msgstr "int o float, default=2"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:31
msgid "The minimum number of samples required to split an internal node:"
msgstr "El número mínimo de muestras requeridas para dividir un nodo interno:"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:33
msgid "If int, then consider `min_samples_split` as the minimum number."
msgstr "Si es int, entonces considera `min_samples_split` como el número mínimo."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:34
msgid "If float, then `min_samples_split` is a fraction and `ceil(min_samples_split * n_samples)` is the minimum number of samples for each split."
msgstr "Si es float, entonces `min_samples_split` es una fracción y `ceil(min_samples_split * n_samples)` es el número mínimo de muestras para cada división."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:38
#: sklearn.ensemble._forest.RandomTreesEmbedding:53
msgid "Added float values for fractions."
msgstr "Se han añadido valores float para las fracciones."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:54
msgid "**min_samples_leaf**"
msgstr "**min_samples_leaf**"

#: of
msgid "int or float, default=1"
msgstr "int o float, default=1"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:42
msgid "The minimum number of samples required to be at a leaf node. A split point at any depth will only be considered if it leaves at least ``min_samples_leaf`` training samples in each of the left and right branches.  This may have the effect of smoothing the model, especially in regression."
msgstr "El número mínimo de muestras requerido para estar en un nodo hoja. Un punto de división en cualquier profundidad sólo se considerará si deja al menos ``min_samples_leaf`` muestras de entrenamiento en cada una de las ramas izquierda y derecha.  Esto puede tener el efecto de suavizar el modelo, especialmente en la regresión."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:48
msgid "If int, then consider `min_samples_leaf` as the minimum number."
msgstr "Si es int, entonces considera `min_samples_leaf` como el número mínimo."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:49
msgid "If float, then `min_samples_leaf` is a fraction and `ceil(min_samples_leaf * n_samples)` is the minimum number of samples for each node."
msgstr "Si es float, entonces `min_samples_leaf` es una fracción y `ceil(min_samples_leaf * n_samples)` es el número mínimo de muestras para cada nodo."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:59
msgid "**min_weight_fraction_leaf**"
msgstr "**min_weight_fraction_leaf**"

#: of
msgid "float, default=0.0"
msgstr "float, default=0.0"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:57
msgid "The minimum weighted fraction of the sum total of weights (of all the input samples) required to be at a leaf node. Samples have equal weight when sample_weight is not provided."
msgstr "La fracción mínima ponderada de la suma total de las ponderaciones (de todas las muestras de entrada) requerida para estar en un nodo de hoja. Las muestras tienen la misma ponderación cuando no se proporciona sample_weight."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:64
msgid "**max_leaf_nodes**"
msgstr "**max_leaf_nodes**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:62
msgid "Grow trees with ``max_leaf_nodes`` in best-first fashion. Best nodes are defined as relative reduction in impurity. If None then unlimited number of leaf nodes."
msgstr "Hacer crecer árboles con ``max_leaf_nodes`` en modo best-first. Los mejores nodos se definen como una reducción relativa de la impureza. Si es None, el número de nodos hoja es ilimitado."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:82
msgid "**min_impurity_decrease**"
msgstr "**min_impurity_decrease**"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:67
msgid "A node will be split if this split induces a decrease of the impurity greater than or equal to this value."
msgstr "Un nodo se dividirá si esta división induce una disminución de la impureza mayor o igual a este valor."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:70
msgid "The weighted impurity decrease equation is the following::"
msgstr "La ecuación de disminución de impurezas ponderada es la siguiente::"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:75
msgid "where ``N`` is the total number of samples, ``N_t`` is the number of samples at the current node, ``N_t_L`` is the number of samples in the left child, and ``N_t_R`` is the number of samples in the right child."
msgstr "donde ``N`` es el número total de muestras, ``N_t`` es el número de muestras en el nodo actual, ``N_t_L`` es el número de muestras en el hijo izquierdo, y ``N_t_R`` es el número de muestras en el hijo derecho."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:79
msgid "``N``, ``N_t``, ``N_t_R`` and ``N_t_L`` all refer to the weighted sum, if ``sample_weight`` is passed."
msgstr "``N``, ``N_t``, ``N_t_R`` y ``N_t_L`` se refieren a la suma ponderada, si se le pasa ``sample_weight``."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:93
msgid "**min_impurity_split**"
msgstr "**min_impurity_split**"

#: of
msgid "float, default=None"
msgstr "float, default=None"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:85
msgid "Threshold for early stopping in tree growth. A node will split if its impurity is above the threshold, otherwise it is a leaf."
msgstr "El umbral para la parada anticipada del crecimiento del árbol. Un nodo se dividirá si su impureza está por encima del umbral, de lo contrario será una hoja."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:88
msgid "``min_impurity_split`` has been deprecated in favor of ``min_impurity_decrease`` in 0.19. The default value of ``min_impurity_split`` has changed from 1e-7 to 0 in 0.23 and it will be removed in 1.0 (renaming of 0.25). Use ``min_impurity_decrease`` instead."
msgstr "El valor de ``min_impurity_split`` ha quedado obsoleto en favor de ``min_impurity_decrease`` en la versión 0.19. El valor por defecto de ``min_impurity_split`` ha cambiado de 1e-7 a 0 en 0.23 y se eliminará en 1.0 (cambio de nombre de 0.25). Utilice ``min_impurity_decrease`` en su lugar."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:97
msgid "**sparse_output**"
msgstr "**sparse_output**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:96
msgid "Whether or not to return a sparse CSR matrix, as default behavior, or to return a dense array compatible with dense pipeline operators."
msgstr "Ya sea para devolver o no una matriz de CSR dispersa, como comportamiento por defecto, o para devolver un arreglo denso compatible con operadores de pipeline densos."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:104
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:100
msgid "The number of jobs to run in parallel. :meth:`fit`, :meth:`transform`, :meth:`decision_path` and :meth:`apply` are all parallelized over the trees. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "El número de trabajos a ejecutar en paralelo. :meth:`fit`, :meth:`transform`, :meth:`decision_path` y :meth:`apply` se paralelizan sobre los árboles. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa que se utilizan todos los procesadores. Véase :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:109
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, instancia RandomState o None, default=None"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:107
msgid "Controls the generation of the random `y` used to fit the trees and the draw of the splits for each feature at the trees' nodes. See :term:`Glossary <random_state>` for details."
msgstr "Controla la generación del estado 'y' aleatorio utilizado para ajustar los árboles y escoger las divisiones para cada característica en los nodos de los árboles. Véase :term:`Glosario <random_state>` para más detalles."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:112
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int, default=0"
msgstr "int, default=0"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:112
msgid "Controls the verbosity when fitting and predicting."
msgstr "Controla la verbosidad al ajustar y predecir."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:120
msgid "**warm_start**"
msgstr "**warm_start**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:115
msgid "When set to ``True``, reuse the solution of the previous call to fit and add more estimators to the ensemble, otherwise, just fit a whole new forest. See :term:`the Glossary <warm_start>`."
msgstr "Cuando se establece como ``True``, se reutiliza la solución de la llamada anterior para ajustar y añadir más estimadores al conjunto(ensemble), de lo contrario, sólo se ajusta un bosque nuevo. Véase :term:`el Glosario <warm_start>`."

#: of sklearn.ensemble._forest.RandomTreesEmbedding
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:126
msgid "**base_estimator_**"
msgstr "**base_estimator_**"

#: of
msgid "DecisionTreeClassifier instance"
msgstr "Instancia DecisionTreeClassifier"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:125
msgid "The child estimator template used to create the collection of fitted sub-estimators."
msgstr "La plantilla del estimador hijo utilizada para crear la colección de sub-estimadores ajustados."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:129
msgid "**estimators_**"
msgstr "**estimators_**"

#: of
msgid "list of DecisionTreeClassifier instances"
msgstr "list de instancias DecisionTreeClassifier"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:129
msgid "The collection of fitted sub-estimators."
msgstr "La colección de sub-estimadores ajustados."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:132
msgid ":obj:`feature_importances_ <feature_importances_>`"
msgstr ":obj:`feature_importances_ <feature_importances_>`"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.ensemble.RandomTreesEmbedding.feature_importances_:2
#: sklearn.ensemble._forest.RandomTreesEmbedding:132
msgid "The impurity-based feature importances."
msgstr "La importancia de las características basadas en la impureza."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:135
msgid "**n_features_**"
msgstr "**n_features_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:135
msgid "The number of features when ``fit`` is performed."
msgstr "El número de características cuando se realiza ``fit``."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:138
msgid "**n_outputs_**"
msgstr "**n_outputs_**"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:138
msgid "The number of outputs when ``fit`` is performed."
msgstr "El número de salidas cuando se realiza ``fit``."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:146
msgid "**one_hot_encoder_**"
msgstr "**one_hot_encoder_**"

#: of
msgid "OneHotEncoder instance"
msgstr "Instancia OneHotEncoder"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:141
msgid "One-hot encoder used to create the sparse embedding."
msgstr "Codificador one-hot utilizado para crear la incrustación dispersa."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:149
msgid "References"
msgstr "Referencias"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:150
msgid "P. Geurts, D. Ernst., and L. Wehenkel, \"Extremely randomized trees\", Machine Learning, 63(1), 3-42, 2006."
msgstr "P. Geurts, D. Ernst., y L. Wehenkel, \"Extremely randomized trees\", Machine Learning, 63(1), 3-42, 2006."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:152
msgid "Moosmann, F. and Triggs, B. and Jurie, F.  \"Fast discriminative visual codebooks using randomized clustering forests\" NIPS 2007"
msgstr "Moosmann, F. and Triggs, B. y Jurie, F.  \"Fast discriminative visual codebooks using randomized clustering forests\" NIPS 2007"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:158
msgid "[R6e47e53bacbd-1]_, [R6e47e53bacbd-2]_"
msgstr "[R6e47e53bacbd-1]_, [R6e47e53bacbd-2]_"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:161
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:175
msgid "Methods"
msgstr "Métodos"

#: of sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid ":obj:`apply <sklearn.ensemble.RandomTreesEmbedding.apply>`\\"
msgstr ":obj:`apply <sklearn.ensemble.RandomTreesEmbedding.apply>`\\"

#: of sklearn.ensemble._forest.BaseForest.apply:2
#: sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid "Apply trees in the forest to X, return leaf indices."
msgstr "Aplica los árboles del bosque a X, devuelve los índices de las hojas."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid ":obj:`decision_path <sklearn.ensemble.RandomTreesEmbedding.decision_path>`\\"
msgstr ":obj:`decision_path <sklearn.ensemble.RandomTreesEmbedding.decision_path>`\\"

#: of sklearn.ensemble._forest.BaseForest.decision_path:2
#: sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid "Return the decision path in the forest."
msgstr "Devuelve la ruta de decisión en el bosque."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.RandomTreesEmbedding.fit>`\\"
msgstr ":obj:`fit <sklearn.ensemble.RandomTreesEmbedding.fit>`\\"

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit:2
#: sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid "Fit estimator."
msgstr "Ajusta el estimador."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.ensemble.RandomTreesEmbedding.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.ensemble.RandomTreesEmbedding.fit_transform>`\\"

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform:2
#: sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid "Fit estimator and transform dataset."
msgstr "Ajusta el estimador y transforma el conjunto de datos."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.RandomTreesEmbedding.get_params>`\\"
msgstr ":obj:`get_params <sklearn.ensemble.RandomTreesEmbedding.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.RandomTreesEmbedding.set_params>`\\"
msgstr ":obj:`set_params <sklearn.ensemble.RandomTreesEmbedding.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid ":obj:`transform <sklearn.ensemble.RandomTreesEmbedding.transform>`\\"
msgstr ":obj:`transform <sklearn.ensemble.RandomTreesEmbedding.transform>`\\"

#: of sklearn.ensemble._forest.RandomTreesEmbedding.transform:2
#: sklearn.ensemble._forest.RandomTreesEmbedding:185:<autosummary>:1
msgid "Transform dataset."
msgstr "Transforma el conjunto de datos."

#: of sklearn.ensemble._forest.BaseForest.apply:10
#: sklearn.ensemble._forest.BaseForest.decision_path:11
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit:10
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform:9
#: sklearn.ensemble._forest.RandomTreesEmbedding.transform:10
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.ensemble._forest.BaseForest.apply:8
#: sklearn.ensemble._forest.BaseForest.decision_path:9
msgid "The input samples. Internally, its dtype will be converted to ``dtype=np.float32``. If a sparse matrix is provided, it will be converted into a sparse ``csr_matrix``."
msgstr "Las muestras de entrada. Internamente, su dtype se convertirá a ``dtype=np.float32``. Si se proporciona una matriz dispersa, se convertirá a una dispersa ``csr_matrix``."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.ensemble.RandomTreesEmbedding.feature_importances_
#: sklearn.ensemble._forest.BaseForest.apply
#: sklearn.ensemble._forest.BaseForest.decision_path
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform
#: sklearn.ensemble._forest.RandomTreesEmbedding.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.ensemble._forest.BaseForest.apply:27
msgid "**X_leaves**"
msgstr "**X_leaves**"

#: of
msgid "ndarray of shape (n_samples, n_estimators)"
msgstr "ndarray de forma (n_samples, n_estimators)"

#: of sklearn.ensemble._forest.BaseForest.apply:15
msgid "For each datapoint x in X and for each tree in the forest, return the index of the leaf x ends up in."
msgstr "Para cada punto de datos x en X y para cada árbol del bosque, devuelve el índice de la hoja en la que termina x."

#: of sklearn.ensemble._forest.BaseForest.decision_path:18
msgid "**indicator**"
msgstr "**indicator**"

#: of
msgid "sparse matrix of shape (n_samples, n_nodes)"
msgstr "matriz dispersa de forma (n_samples, n_nodes)"

#: of sklearn.ensemble._forest.BaseForest.decision_path:16
msgid "Return a node indicator matrix where non zero elements indicates that the samples goes through the nodes. The matrix is of CSR format."
msgstr "Devuelve una matriz de indicadores de nodos donde los elementos distintos de cero indican que las muestras pasan por los nodos. La matriz tiene el formato CSR."

#: of sklearn.ensemble._forest.BaseForest.decision_path:33
msgid "**n_nodes_ptr**"
msgstr "**n_nodes_ptr**"

#: of
msgid "ndarray of shape (n_estimators + 1,)"
msgstr "ndarray de forma (n_estimators + 1,)"

#: of sklearn.ensemble._forest.BaseForest.decision_path:21
msgid "The columns from indicator[n_nodes_ptr[i]:n_nodes_ptr[i+1]] gives the indicator value for the i-th estimator."
msgstr "Las columnas de indicador[n_nodes_ptr[i]:n_nodes_ptr[i+1]] dan el valor del indicador para el i-ésimo estimador."

#: of sklearn.ensemble.RandomTreesEmbedding.feature_importances_:4
msgid "The higher, the more important the feature. The importance of a feature is computed as the (normalized) total reduction of the criterion brought by that feature.  It is also known as the Gini importance."
msgstr "Cuanto más alta sea, más importante será la característica. La importancia de una característica se calcula como la reducción total (normalizada) del criterio que aporta esa característica. También se conoce como importancia de Gini."

#: of sklearn.ensemble.RandomTreesEmbedding.feature_importances_:9
msgid "Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative."
msgstr "Advertencia: las importancias de característica basadas en la impureza pueden ser engañosas para las características de alta cardinalidad (muchos valores únicos). Véase :func:`sklearn.inspection.permutation_importance` como una alternativa."

#: of sklearn.ensemble.RandomTreesEmbedding.feature_importances_:30
msgid "**feature_importances_**"
msgstr "**feature_importances_**"

#: of sklearn.ensemble.RandomTreesEmbedding.feature_importances_:17
msgid "The values of this array sum to 1, unless all trees are single node trees consisting of only the root node, in which case it will be an array of zeros."
msgstr "Los valores de este arreglo suman 1, a menos que todos los árboles sean árboles de un solo nodo que consistan sólo en el nodo raíz, en cuyo caso será una matriz de ceros."

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit:8
msgid "The input samples. Use ``dtype=np.float32`` for maximum efficiency. Sparse matrices are also supported, use sparse ``csc_matrix`` for maximum efficiency."
msgstr "Las muestras de entrada. Utilice ``dtype=np.float32`` para obtener la máxima eficiencia. También se admiten matrices dispersas, utilice ``csc_matrix`` dispersa para obtener la máxima eficiencia."

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit:13
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform:12
msgid "**y**"
msgstr "**y**"

#: of
msgid "Ignored"
msgstr "Ignored"

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit:13
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform:12
msgid "Not used, present for API consistency by convention."
msgstr "No se utiliza, está presente para la coherencia de la API por convención."

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit:20
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform:19
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit:16
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform:15
msgid "Sample weights. If None, then samples are equally weighted. Splits that would create child nodes with net zero or negative weight are ignored while searching for a split in each node. In the case of classification, splits are also ignored if they would result in any single class carrying a negative weight in either child node."
msgstr "Ponderación de las muestras. Si es None, las muestras se ponderan por igual. Las divisiones que crearían nodos hijos con ponderación neta cero o negativa se ignoran al buscar una división en cada nodo. En el caso de la clasificación, las divisiones también se ignoran si dan lugar a que una sola clase tenga una ponderación negativa en cualquiera de los nodos hijos."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.ensemble._forest.RandomTreesEmbedding.fit:36
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform:8
msgid "Input data used to build forests. Use ``dtype=np.float32`` for maximum efficiency."
msgstr "Datos de entrada utilizados para construir bosques. Utilice ``dtype=np.float32`` para obtener la máxima eficiencia."

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform:35
#: sklearn.ensemble._forest.RandomTreesEmbedding.transform:26
msgid "**X_transformed**"
msgstr "**X_transformed**"

#: of
msgid "sparse matrix of shape (n_samples, n_out)"
msgstr "matriz dispersa de forma (n_samples, n_output)"

#: of sklearn.ensemble._forest.RandomTreesEmbedding.fit_transform:24
#: sklearn.ensemble._forest.RandomTreesEmbedding.transform:15
msgid "Transformed dataset."
msgstr "Conjunto de datos transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.ensemble._forest.RandomTreesEmbedding.transform:8
msgid "Input data to be transformed. Use ``dtype=np.float32`` for maximum efficiency. Sparse matrices are also supported, use sparse ``csr_matrix`` for maximum efficiency."
msgstr "Datos de entrada a ser transformados. Utilice ``dtype=np.float32`` para obtener la máxima eficiencia. Las matrices dispersas también están soportadas, utilice ``csr_matrix`` dispersa para una máxima eficiencia."

#: ../modules/generated/sklearn.ensemble.RandomTreesEmbedding.examples:4
msgid "Examples using ``sklearn.ensemble.RandomTreesEmbedding``"
msgstr "Ejemplos utilizando ``sklearn.ensemble.RandomTreesEmbedding``"

#: ../modules/generated/sklearn.ensemble.RandomTreesEmbedding.examples:15
#: ../modules/generated/sklearn.ensemble.RandomTreesEmbedding.examples:23
msgid ":ref:`sphx_glr_auto_examples_manifold_plot_lle_digits.py`"
msgstr ":ref:`sphx_glr_auto_examples_manifold_plot_lle_digits.py`"

