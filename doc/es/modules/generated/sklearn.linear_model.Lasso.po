msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-16 22:57\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.Lasso.po\n"
"X-Crowdin-File-ID: 4890\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.Lasso.rst:2
msgid ":mod:`sklearn.linear_model`.Lasso"
msgstr ":mod:`sklearn.linear_model`.Lasso"

#: of sklearn.linear_model._coordinate_descent.Lasso:2
msgid "Linear Model trained with L1 prior as regularizer (aka the Lasso)"
msgstr "Modelo lineal entrenado con L1 a priori como regularizador (también conocido como Lasso)"

#: of sklearn.linear_model._coordinate_descent.Lasso:4
msgid "The optimization objective for Lasso is::"
msgstr "El objetivo de optimización para Lasso es::"

#: of sklearn.linear_model._coordinate_descent.Lasso:8
msgid "Technically the Lasso model is optimizing the same objective function as the Elastic Net with ``l1_ratio=1.0`` (no L2 penalty)."
msgstr "Técnicamente el modelo Lasso está optimizando la misma función objetivo que la Red Elástica con ``l1_ratio=1.0`` (sin penalización L2)."

#: of sklearn.linear_model._coordinate_descent.Lasso:11
msgid "Read more in the :ref:`User Guide <lasso>`."
msgstr "Más información en el :ref:`Manual de usuario <lasso>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._coordinate_descent.ElasticNet.fit
#: sklearn.linear_model._coordinate_descent.Lasso
#: sklearn.linear_model._coordinate_descent.enet_path
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.linear_model._coordinate_descent.Lasso:20
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float, default=1.0"
msgstr "float, default=1.0"

#: of sklearn.linear_model._coordinate_descent.Lasso:16
msgid "Constant that multiplies the L1 term. Defaults to 1.0. ``alpha = 0`` is equivalent to an ordinary least square, solved by the :class:`LinearRegression` object. For numerical reasons, using ``alpha = 0`` with the ``Lasso`` object is not advised. Given this, you should use the :class:`LinearRegression` object."
msgstr "Constante que multiplica el término L1. Por defecto es 1.0. ``alpha = 0`` es equivalente a un mínimo cuadrado ordinario, resuelto por el objeto :class:`LinearRegression`. Por razones numéricas, no se aconseja utilizar ``alpha = 0`` con el objeto ``Lasso``. Por ello, se debe utilizar el objeto :class:`LinearRegression`."

#: of sklearn.linear_model._coordinate_descent.Lasso:25
msgid "**fit_intercept**"
msgstr "**fit_intercept**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.linear_model._coordinate_descent.Lasso:23
msgid "Whether to calculate the intercept for this model. If set to False, no intercept will be used in calculations (i.e. data is expected to be centered)."
msgstr "Si se calcula el intercepto para este modelo. Si se establece en False, no se utilizará ningún intercepto en los cálculos (es decir, se espera que los datos estén centrados)."

#: of sklearn.linear_model._coordinate_descent.Lasso:33
msgid "**normalize**"
msgstr "**normalize**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.linear_model._coordinate_descent.Lasso:28
msgid "This parameter is ignored when ``fit_intercept`` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm. If you wish to standardize, please use :class:`~sklearn.preprocessing.StandardScaler` before calling ``fit`` on an estimator with ``normalize=False``."
msgstr "Este parámetro se ignora cuando ``fit_intercept`` se establece en False. Si es True, los regresores X serán normalizados antes de la regresión restando la media y dividiendo por la norma l2. Si desea estandarizar, por favor utiliza :class:`~sklearn.preprocessing.StandardScaler` antes de llamar a ``fit`` en un estimador con ``normalize=False``."

#: of sklearn.linear_model._coordinate_descent.Lasso:39
#: sklearn.linear_model._coordinate_descent.enet_path:54
msgid "**precompute**"
msgstr "**precompute**"

#: of
msgid "'auto', bool or array-like of shape (n_features, n_features),                 default=False"
msgstr "'auto', bool o array-like de forma (n_features, n_features),                 default=False"

#: of sklearn.linear_model._coordinate_descent.Lasso:36
msgid "Whether to use a precomputed Gram matrix to speed up calculations. If set to ``'auto'`` let us decide. The Gram matrix can also be passed as argument. For sparse input this option is always ``True`` to preserve sparsity."
msgstr "Si se utiliza una matriz Gram precalculada para acelerar los cálculos. Si se establece como ``auto`` se puede decidir. La matriz Gram también se puede pasar como argumento. Para entradas dispersas esta opción es siempre ``True`` para preservar la dispersión."

#: of sklearn.linear_model._coordinate_descent.Lasso:42
#: sklearn.linear_model._coordinate_descent.enet_path:61
msgid "**copy_X**"
msgstr "**copy_X**"

#: of sklearn.linear_model._coordinate_descent.Lasso:42
#: sklearn.linear_model._coordinate_descent.enet_path:61
msgid "If ``True``, X will be copied; else, it may be overwritten."
msgstr "Si es ``True``, X se copiará; si no, puede sobrescribirse."

#: of sklearn.linear_model._coordinate_descent.Lasso:45
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=1000"
msgstr "int, default=1000"

#: of sklearn.linear_model._coordinate_descent.Lasso:45
msgid "The maximum number of iterations."
msgstr "El número máximo de iteraciones."

#: of sklearn.linear_model._coordinate_descent.Lasso:51
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-4"
msgstr "float, default=1e-4"

#: of sklearn.linear_model._coordinate_descent.Lasso:48
msgid "The tolerance for the optimization: if the updates are smaller than ``tol``, the optimization code checks the dual gap for optimality and continues until it is smaller than ``tol``."
msgstr "La tolerancia para la optimización: si las actualizaciones son menores que ``tol``, el código de optimización comprueba la optimización dela brecha dual y continúa hasta que sea menor que ``tol``."

#: of sklearn.linear_model._coordinate_descent.Lasso:56
msgid "**warm_start**"
msgstr "**warm_start**"

#: of sklearn.linear_model._coordinate_descent.Lasso:54
msgid "When set to True, reuse the solution of the previous call to fit as initialization, otherwise, just erase the previous solution. See :term:`the Glossary <warm_start>`."
msgstr "Cuando se establece como True, reutiliza la solución de la llamada anterior a fit como inicialización, de lo contrario, sólo borra la solución anterior. Véase :term:`el Glosario <warm_start>`."

#: of sklearn.linear_model._coordinate_descent.Lasso:59
#: sklearn.linear_model._coordinate_descent.enet_path:74
msgid "**positive**"
msgstr "**positive**"

#: of sklearn.linear_model._coordinate_descent.Lasso:59
msgid "When set to ``True``, forces the coefficients to be positive."
msgstr "Cuando se establece en ``True``, obliga a los coeficientes a ser positivos."

#: of sklearn.linear_model._coordinate_descent.Lasso:65
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance, default=None"
msgstr "int, instancia RandomState, default=None"

#: of sklearn.linear_model._coordinate_descent.Lasso:62
msgid "The seed of the pseudo random number generator that selects a random feature to update. Used when ``selection`` == 'random'. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "La semilla del generador de números pseudoaleatorios que selecciona una característica aleatoria para actualizar. Se utiliza cuando ``selection`` == 'random'. Pase un int para una salida reproducible a través de múltiples llamadas a la función. Véase :term:`Glosario <random_state>`."

#: of sklearn.linear_model._coordinate_descent.Lasso:74
msgid "**selection**"
msgstr "**selection**"

#: of
msgid "{'cyclic', 'random'}, default='cyclic'"
msgstr "{'cyclic', 'random'}, default='cyclic'"

#: of sklearn.linear_model._coordinate_descent.Lasso:68
msgid "If set to 'random', a random coefficient is updated every iteration rather than looping over features sequentially by default. This (setting to 'random') often leads to significantly faster convergence especially when tol is higher than 1e-4."
msgstr "Si se establece como 'random', se actualiza un coeficiente aleatorio en cada iteración en lugar de hacer un bucle sobre las características de forma secuencial por defecto. Esto (el ajuste a 'random') a menudo conduce a una convergencia significativamente más rápida, especialmente cuando tol es mayor que 1e-4."

#: of sklearn.linear_model._coordinate_descent.Lasso
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.linear_model._coordinate_descent.Lasso:79
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (n_features,) or (n_targets, n_features)"
msgstr "ndarray de forma (n_features,) o (n_targets, n_features)"

#: of sklearn.linear_model._coordinate_descent.Lasso:79
msgid "Parameter vector (w in the cost function formula)."
msgstr "Vector de parámetros (w en la fórmula de la función de coste)."

#: of sklearn.linear_model._coordinate_descent.Lasso:83
msgid "**dual_gap_**"
msgstr "**dual_gap_**"

#: of
msgid "float or ndarray of shape (n_targets,)"
msgstr "float o ndarray de forma (n_targets,)"

#: of sklearn.linear_model._coordinate_descent.Lasso:82
msgid "Given param alpha, the dual gaps at the end of the optimization, same shape as each observation of y."
msgstr "Dado el parámetro alpha, las brechas duales al final de la optimización, de la misma forma que cada observación de y."

#: of sklearn.linear_model._coordinate_descent.Lasso:86
msgid ":obj:`sparse_coef_ <sparse_coef_>`"
msgstr ":obj:`sparse_coef_ <sparse_coef_>`"

#: of
msgid "sparse matrix of shape (n_features, 1) or             (n_targets, n_features)"
msgstr "matriz dispersa de forma (n_features, 1) o           (n_targets, n_features)"

#: of sklearn.linear_model.Lasso.sparse_coef_:2
#: sklearn.linear_model._coordinate_descent.Lasso:86
msgid "Sparse representation of the fitted `coef_`."
msgstr "Representación dispersa del `coef_` ajustado."

#: of sklearn.linear_model._coordinate_descent.Lasso:89
msgid "**intercept_**"
msgstr "**intercept_**"

#: of sklearn.linear_model._coordinate_descent.Lasso:89
msgid "Independent term in decision function."
msgstr "Término independiente en la función de decisión."

#: of sklearn.linear_model._coordinate_descent.Lasso:96
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "int or list of int"
msgstr "int o list de int"

#: of sklearn.linear_model._coordinate_descent.Lasso:92
msgid "Number of iterations run by the coordinate descent solver to reach the specified tolerance."
msgstr "Número de iteraciones ejecutadas por el solucionador de descenso de coordenadas para alcanzar la tolerancia especificada."

#: of sklearn.linear_model._coordinate_descent.Lasso:101
msgid ":obj:`lars_path`"
msgstr ":obj:`lars_path`"

#: of sklearn.linear_model._coordinate_descent.Lasso:103
msgid ":obj:`lasso_path`"
msgstr ":obj:`lasso_path`"

#: of sklearn.linear_model._coordinate_descent.Lasso:105
msgid ":obj:`LassoLars`"
msgstr ":obj:`LassoLars`"

#: of sklearn.linear_model._coordinate_descent.Lasso:107
msgid ":obj:`LassoCV`"
msgstr ":obj:`LassoCV`"

#: of sklearn.linear_model._coordinate_descent.Lasso:109
msgid ":obj:`LassoLarsCV`"
msgstr ":obj:`LassoLarsCV`"

#: of sklearn.linear_model._coordinate_descent.Lasso:111
msgid ":obj:`sklearn.decomposition.sparse_encode`"
msgstr ":obj:`sklearn.decomposition.sparse_encode`"

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.linear_model._coordinate_descent.ElasticNet.fit:31
#: sklearn.linear_model._coordinate_descent.Lasso:115
#: sklearn.linear_model._coordinate_descent.enet_path:119
msgid "Notes"
msgstr "Notas"

#: of sklearn.linear_model._coordinate_descent.Lasso:116
msgid "The algorithm used to fit the model is coordinate descent."
msgstr "El algoritmo utilizado para ajustar el modelo es el descenso de coordenadas."

#: of sklearn.linear_model._coordinate_descent.Lasso:118
msgid "To avoid unnecessary memory duplication the X argument of the fit method should be directly passed as a Fortran-contiguous numpy array."
msgstr "Para evitar la duplicación innecesaria de memoria, el argumento X del método fit debe pasarse directamente como un arreglo numpy Fortran-contiguo."

#: of sklearn.linear_model._coordinate_descent.Lasso:123
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.linear_model._coordinate_descent.Lasso:134
msgid "Methods"
msgstr "Métodos"

#: of sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.Lasso.fit>`\\"
msgstr ":obj:`fit <sklearn.linear_model.Lasso.fit>`\\"

#: of sklearn.linear_model._coordinate_descent.ElasticNet.fit:2
#: sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid "Fit model with coordinate descent."
msgstr "Ajusta el modelo con el descenso de coordenadas."

#: of sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.Lasso.get_params>`\\"
msgstr ":obj:`get_params <sklearn.linear_model.Lasso.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid ":obj:`path <sklearn.linear_model.Lasso.path>`\\"
msgstr ":obj:`path <sklearn.linear_model.Lasso.path>`\\"

#: of sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
#: sklearn.linear_model._coordinate_descent.enet_path:2
msgid "Compute elastic net path with coordinate descent."
msgstr "Calcula la ruta de la red elástica con el descenso de coordenadas."

#: of sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.Lasso.predict>`\\"
msgstr ":obj:`predict <sklearn.linear_model.Lasso.predict>`\\"

#: of sklearn.linear_model._base.LinearModel.predict:2
#: sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid "Predict using the linear model."
msgstr "Predice utilizando el modelo lineal."

#: of sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.Lasso.score>`\\"
msgstr ":obj:`score <sklearn.linear_model.Lasso.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.Lasso.set_params>`\\"
msgstr ":obj:`set_params <sklearn.linear_model.Lasso.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._coordinate_descent.Lasso:143:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._base.LinearModel.predict:8
#: sklearn.linear_model._coordinate_descent.ElasticNet.fit:8
#: sklearn.linear_model._coordinate_descent.enet_path:31
msgid "**X**"
msgstr "**X**"

#: of
msgid "{ndarray, sparse matrix} of (n_samples, n_features)"
msgstr "{ndarray, sparse matrix} de (n_samples, n_features)"

#: of sklearn.linear_model._coordinate_descent.ElasticNet.fit:8
msgid "Data."
msgstr "Datos."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._coordinate_descent.ElasticNet.fit:11
#: sklearn.linear_model._coordinate_descent.enet_path:34
msgid "**y**"
msgstr "**y**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples,) or             (n_samples, n_targets)"
msgstr "{ndarray, sparse matrix} de forma (n_samples,) o             (n_samples, n_targets)"

#: of sklearn.linear_model._coordinate_descent.ElasticNet.fit:11
msgid "Target. Will be cast to X's dtype if necessary."
msgstr "Objetivo. Se convertirá al dtype de X si es necesario."

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.linear_model._coordinate_descent.ElasticNet.fit:16
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "float or array-like of shape (n_samples,), default=None"
msgstr "float o array-like de forma (n_samples,), default=None"

#: of sklearn.linear_model._coordinate_descent.ElasticNet.fit:14
msgid "Sample weight."
msgstr "Ponderación de la muestra."

#: of sklearn.linear_model._coordinate_descent.ElasticNet.fit:28
#: sklearn.linear_model._coordinate_descent.enet_path:79
msgid "**check_input**"
msgstr "**check_input**"

#: of sklearn.linear_model._coordinate_descent.ElasticNet.fit:19
msgid "Allow to bypass several input checking. Don't use this parameter unless you know what you do."
msgstr "Permite omitir varias comprobaciones de entrada. No uses este parámetro a menos que sepas lo que haces."

#: of sklearn.linear_model._coordinate_descent.ElasticNet.fit:32
msgid "Coordinate descent is an algorithm that considers each column of data at a time hence it will automatically convert the X input as a Fortran-contiguous numpy array if necessary."
msgstr "El descenso de coordenadas es un algoritmo que considera cada columna de datos a la vez, por lo que convertirá automáticamente la entrada X como un arreglo numpy Fortran-contiguo si es necesario."

#: of sklearn.linear_model._coordinate_descent.ElasticNet.fit:36
msgid "To avoid memory re-allocation it is advised to allocate the initial data in memory directly using that format."
msgstr "Para evitar la reasignación de memoria se aconseja asignar los datos iniciales en la memoria directamente utilizando ese formato."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._coordinate_descent.enet_path
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.linear_model._coordinate_descent.enet_path:4
msgid "The elastic net optimization function varies for mono and multi-outputs."
msgstr "La función de optimización de la red elástica varía para las monosalidas y multisalidas."

#: of sklearn.linear_model._coordinate_descent.enet_path:6
msgid "For mono-output tasks it is::"
msgstr "Para las tareas monosalida es::"

#: of sklearn.linear_model._coordinate_descent.enet_path:12
msgid "For multi-output tasks it is::"
msgstr "Para tareas multisalida es::"

#: of sklearn.linear_model._coordinate_descent.enet_path:18
msgid "Where::"
msgstr "Donde::"

#: of sklearn.linear_model._coordinate_descent.enet_path:22
msgid "i.e. the sum of norm of each row."
msgstr "es decir, la suma de la norma de cada fila."

#: of sklearn.linear_model._coordinate_descent.enet_path:24
msgid "Read more in the :ref:`User Guide <elastic_net>`."
msgstr "Más información en el :ref:`Manual de usuario <elastic_net>`."

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.linear_model._coordinate_descent.enet_path:29
msgid "Training data. Pass directly as Fortran-contiguous data to avoid unnecessary memory duplication. If ``y`` is mono-output then ``X`` can be sparse."
msgstr "Datos de entrenamiento. Pásalos directamente como datos Fortran-contiguos para evitar la duplicación innecesaria de memoria. Si ``y`` es monosalida entonces ``X`` puede ser disperso."

#: of
msgid "{array-like, sparse matrix} of shape (n_samples,) or         (n_samples, n_outputs)"
msgstr "{array-like, sparse matrix} de forma (n_samples,) o         (n_samples, n_outputs)"

#: of sklearn.linear_model._coordinate_descent.enet_path:34
msgid "Target values."
msgstr "Valores objetivo."

#: of sklearn.linear_model._coordinate_descent.enet_path:38
msgid "**l1_ratio**"
msgstr "**l1_ratio**"

#: of
msgid "float, default=0.5"
msgstr "float, default=0.5"

#: of sklearn.linear_model._coordinate_descent.enet_path:37
msgid "Number between 0 and 1 passed to elastic net (scaling between l1 and l2 penalties). ``l1_ratio=1`` corresponds to the Lasso."
msgstr "Número entre 0 y 1 pasado a la red elástica (escalado entre penalizaciones l1 y l2). ``l1_ratio=1`` corresponde al Lasso."

#: of sklearn.linear_model._coordinate_descent.enet_path:42
msgid "**eps**"
msgstr "**eps**"

#: of
msgid "float, default=1e-3"
msgstr "float, default=1e-3"

#: of sklearn.linear_model._coordinate_descent.enet_path:41
msgid "Length of the path. ``eps=1e-3`` means that ``alpha_min / alpha_max = 1e-3``."
msgstr "Longitud de la ruta. ``eps=1e-3`` significa que ``alpha_min / alpha_max = 1e-3``."

#: of sklearn.linear_model._coordinate_descent.enet_path:45
msgid "**n_alphas**"
msgstr "**n_alphas**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.linear_model._coordinate_descent.enet_path:45
msgid "Number of alphas along the regularization path."
msgstr "Número de alphas a lo largo de la ruta de regularización."

#: of sklearn.linear_model._coordinate_descent.enet_path:49
#: sklearn.linear_model._coordinate_descent.enet_path:87
msgid "**alphas**"
msgstr "**alphas**"

#: of
msgid "ndarray, default=None"
msgstr "ndarray, default=None"

#: of sklearn.linear_model._coordinate_descent.enet_path:48
msgid "List of alphas where to compute the models. If None alphas are set automatically."
msgstr "Lista de alphas donde calcular los modelos. Si es None los alphas se establecen automáticamente."

#: of
msgid "'auto', bool or array-like of shape (n_features, n_features),                 default='auto'"
msgstr "'auto', bool o array-like de forma (n_features, n_features),                 default='auto'"

#: of sklearn.linear_model._coordinate_descent.enet_path:52
msgid "Whether to use a precomputed Gram matrix to speed up calculations. If set to ``'auto'`` let us decide. The Gram matrix can also be passed as argument."
msgstr "Si se utiliza una matriz de Gram precalculada para acelerar los cálculos. Si se establece como ``'auto'`` podemos decidir. La matriz de Gram también se puede pasar como argumento."

#: of sklearn.linear_model._coordinate_descent.enet_path:58
msgid "**Xy**"
msgstr "**Xy**"

#: of
msgid "array-like of shape (n_features,) or (n_features, n_outputs),         default=None"
msgstr "array-like de forma (n_features,) o (n_features, n_outputs),         default=None"

#: of sklearn.linear_model._coordinate_descent.enet_path:57
msgid "Xy = np.dot(X.T, y) that can be precomputed. It is useful only when the Gram matrix is precomputed."
msgstr "Xy = np.dot(X.T, y) que puede ser precalculado. Es útil sólo cuando la matriz Gram está precalculada."

#: of sklearn.linear_model._coordinate_descent.enet_path:64
msgid "**coef_init**"
msgstr "**coef_init**"

#: of
msgid "ndarray of shape (n_features, ), default=None"
msgstr "ndarray de forma (n_features, ), default=None"

#: of sklearn.linear_model._coordinate_descent.enet_path:64
msgid "The initial values of the coefficients."
msgstr "Los valores iniciales de los coeficientes."

#: of sklearn.linear_model._coordinate_descent.enet_path:67
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool or int, default=False"
msgstr "bool o int, default=False"

#: of sklearn.linear_model._coordinate_descent.enet_path:67
msgid "Amount of verbosity."
msgstr "Cantidad de verbosidad."

#: of sklearn.linear_model._coordinate_descent.enet_path:70
msgid "**return_n_iter**"
msgstr "**return_n_iter**"

#: of sklearn.linear_model._coordinate_descent.enet_path:70
msgid "Whether to return the number of iterations or not."
msgstr "Si se devuelve o no el número de iteraciones."

#: of sklearn.linear_model._coordinate_descent.enet_path:73
msgid "If set to True, forces coefficients to be positive. (Only allowed when ``y.ndim == 1``)."
msgstr "Si se establece como True, obliga a los coeficientes a ser positivos. (Sólo se permite cuando ``y.ndim ==1``)."

#: of sklearn.linear_model._coordinate_descent.enet_path:77
msgid "If set to False, the input validation checks are skipped (including the Gram matrix when provided). It is assumed that they are handled by the caller."
msgstr "Si se establece en False, se omiten las comprobaciones de validación de la entrada (incluyendo la matriz Gram cuando se proporciona). Se asume que son manejadas por el llamador."

#: of sklearn.base.BaseEstimator.set_params:12
#: sklearn.linear_model._coordinate_descent.enet_path:82
msgid "**\\*\\*params**"
msgstr ""

#: of
msgid "kwargs"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:82
msgid "Keyword arguments passed to the coordinate descent solver."
msgstr ""

#: of
msgid "ndarray of shape (n_alphas,)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:87
msgid "The alphas along the path where models are computed."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:90
msgid "**coefs**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_alphas) or             (n_outputs, n_features, n_alphas)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:90
msgid "Coefficients along the path."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:93
msgid "**dual_gaps**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:93
msgid "The dual gaps at the end of the optimization for each alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:104
msgid "**n_iters**"
msgstr ""

#: of
msgid "list of int"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:96
msgid "The number of iterations taken by the coordinate descent optimizer to reach the specified tolerance for each alpha. (Is returned when ``return_n_iter`` is set to True)."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:109
msgid ":obj:`MultiTaskElasticNet`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:111
msgid ":obj:`MultiTaskElasticNetCV`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:113
msgid ":obj:`ElasticNet`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:115
msgid ":obj:`ElasticNetCV`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.enet_path:120
msgid "For an example, see :ref:`examples/linear_model/plot_lasso_coordinate_descent_path.py <sphx_glr_auto_examples_linear_model_plot_lasso_coordinate_descent_path.py>`."
msgstr ""

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:8
msgid "Samples."
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:24
msgid "**C**"
msgstr ""

#: of
msgid "array, shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:13
msgid "Returns predicted values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.linear_model.Lasso.examples:4
msgid "Examples using ``sklearn.linear_model.Lasso``"
msgstr ""

#: ../modules/generated/sklearn.linear_model.Lasso.examples:15
#: ../modules/generated/sklearn.linear_model.Lasso.examples:23
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_lasso_dense_vs_sparse_data.py`"
msgstr ""

#: ../modules/generated/sklearn.linear_model.Lasso.examples:34
#: ../modules/generated/sklearn.linear_model.Lasso.examples:42
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_multi_task_lasso_support.py`"
msgstr ""

#: ../modules/generated/sklearn.linear_model.Lasso.examples:53
#: ../modules/generated/sklearn.linear_model.Lasso.examples:61
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_lasso_and_elasticnet.py`"
msgstr ""

#: ../modules/generated/sklearn.linear_model.Lasso.examples:72
#: ../modules/generated/sklearn.linear_model.Lasso.examples:80
msgid ":ref:`sphx_glr_auto_examples_exercises_plot_cv_diabetes.py`"
msgstr ""

