msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-16 13:15\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.Normalizer.po\n"
"X-Crowdin-File-ID: 5020\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.Normalizer.rst:2
msgid ":mod:`sklearn.preprocessing`.Normalizer"
msgstr ":mod:`sklearn.preprocessing`.Normalizer"

#: of sklearn.preprocessing._data.Normalizer:2
msgid "Normalize samples individually to unit norm."
msgstr "Normaliza las muestras individualmente a la norma unitaria."

#: of sklearn.preprocessing._data.Normalizer:4
msgid "Each sample (i.e. each row of the data matrix) with at least one non zero component is rescaled independently of other samples so that its norm (l1, l2 or inf) equals one."
msgstr "Cada muestra (es decir, cada fila de la matriz de datos) con al menos un componente distinto de cero se reescala independientemente de las demás muestras para que su norma (l1, l2 o inf) sea igual a uno."

#: of sklearn.preprocessing._data.Normalizer:8
msgid "This transformer is able to work both with dense numpy arrays and scipy.sparse matrix (use CSR format if you want to avoid the burden of a copy / conversion)."
msgstr "Este transformador es capaz de trabajar tanto con arreglos numpy densos como con matrices scipy.sparse (usa el formato CSR si quieres evitar la carga de una copia / conversión)."

#: of sklearn.preprocessing._data.Normalizer:12
msgid "Scaling inputs to unit norms is a common operation for text classification or clustering for instance. For instance the dot product of two l2-normalized TF-IDF vectors is the cosine similarity of the vectors and is the base similarity metric for the Vector Space Model commonly used by the Information Retrieval community."
msgstr "El escalamiento de las entradas a normas unitarias es una operación común para la clasificación de textos o el análisis de conglomerados, por ejemplo. Por ejemplo, el producto punto de dos vectores TF-IDF normalizados en l2 es la similitud coseno de los vectores y es la métrica de similitud base para el modelo de espacio vectorial que se utiliza habitualmente en la comunidad de Recuperación de Información."

#: of sklearn.preprocessing._data.Normalizer:18
msgid "Read more in the :ref:`User Guide <preprocessing_normalization>`."
msgstr "Lee más en el :ref:`Manual de usuario <preprocessing_normalization>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.Normalizer
#: sklearn.preprocessing._data.Normalizer.fit
#: sklearn.preprocessing._data.Normalizer.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._data.Normalizer:25
msgid "**norm**"
msgstr "**norm**"

#: of
msgid "{'l1', 'l2', 'max'}, default='l2'"
msgstr "{'l1', 'l2', 'max'}, default='l2'"

#: of sklearn.preprocessing._data.Normalizer:23
msgid "The norm to use to normalize each non zero sample. If norm='max' is used, values will be rescaled by the maximum of the absolute values."
msgstr "La norma a utilizar para normalizar cada muestra distinta de cero. Si se utiliza norm='max', los valores se reescalarán por el máximo de los valores absolutos."

#: of sklearn.preprocessing._data.Normalizer:37
#: sklearn.preprocessing._data.Normalizer.transform:12
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.preprocessing._data.Normalizer:28
msgid "set to False to perform inplace row normalization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSR matrix)."
msgstr "establécelo en False para realizar la normalización de filas en el lugar y evitar una copia (si la entrada ya es un arreglo numpy o una matriz scipy.sparse CSR)."

#: of sklearn.preprocessing._data.Normalizer:42
msgid ":obj:`normalize`"
msgstr ":obj:`normalize`"

#: of sklearn.preprocessing._data.Normalizer:43
msgid "Equivalent function without the estimator API."
msgstr "Función equivalente sin la API del estimador."

#: of sklearn.preprocessing._data.Normalizer:47
msgid "Notes"
msgstr "Notas"

#: of sklearn.preprocessing._data.Normalizer:48
msgid "This estimator is stateless (besides constructor parameters), the fit method does nothing but is useful when used in a pipeline."
msgstr "Este estimador no tiene estado (además de los parámetros del constructor), el método de ajuste no hace nada, pero es útil cuando se utiliza en un pipeline."

#: of sklearn.preprocessing._data.Normalizer:51
msgid "For a comparison of the different scalers, transformers, and normalizers, see :ref:`examples/preprocessing/plot_all_scaling.py <sphx_glr_auto_examples_preprocessing_plot_all_scaling.py>`."
msgstr "Para una comparación de los diferentes escaladores, transformadores y normalizadores, consulta :ref:`examples/preprocessing/plot_all_scaling.py <sphx_glr_auto_examples_preprocessing_plot_all_scaling.py>`."

#: of sklearn.preprocessing._data.Normalizer:57
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.preprocessing._data.Normalizer:71
msgid "Methods"
msgstr "Métodos"

#: of sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.Normalizer.fit>`\\"
msgstr ":obj:`fit <sklearn.preprocessing.Normalizer.fit>`\\"

#: of sklearn.preprocessing._data.Normalizer.fit:2
#: sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid "Do nothing and return the estimator unchanged"
msgstr "No hace nada y devuelve el estimador sin cambios"

#: of sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.Normalizer.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.preprocessing.Normalizer.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta a los datos y luego los transforma."

#: of sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.Normalizer.get_params>`\\"
msgstr ":obj:`get_params <sklearn.preprocessing.Normalizer.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.Normalizer.set_params>`\\"
msgstr ":obj:`set_params <sklearn.preprocessing.Normalizer.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.Normalizer.transform>`\\"
msgstr ":obj:`transform <sklearn.preprocessing.Normalizer.transform>`\\"

#: of sklearn.preprocessing._data.Normalizer.transform:2
#: sklearn.preprocessing._data.Normalizer:79:<autosummary>:1
msgid "Scale each non zero row of X to unit norm"
msgstr "Escala cada fila distinta de cero de X a la norma unitaria"

#: of sklearn.preprocessing._data.Normalizer.fit:4
msgid "This method is just there to implement the usual API and hence work in pipelines."
msgstr "Este método sólo está ahí para implementar la API habitual y, por lo tanto, para trabajar en pipelines."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.preprocessing._data.Normalizer.fit:10
#: sklearn.preprocessing._data.Normalizer.transform:9
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.Normalizer.fit:10
msgid "The data to estimate the normalization parameters."
msgstr "Los datos para estimar los parámetros de normalización."

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.preprocessing._data.Normalizer.fit:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "None"
msgstr "None"

#: of sklearn.preprocessing._data.Normalizer.fit:13
msgid "Ignored."
msgstr "Ignorado."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.Normalizer.fit
#: sklearn.preprocessing._data.Normalizer.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.preprocessing._data.Normalizer.fit:29
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.preprocessing._data.Normalizer.fit:18
msgid "Fitted transformer."
msgstr "Transformador ajustado."

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` e `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "arreglo ndarray de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
#: sklearn.preprocessing._data.Normalizer.transform:17
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Los nombres de los parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.preprocessing._data.Normalizer.transform:8
msgid "The data to normalize, row by row. scipy.sparse matrices should be in CSR format to avoid an un-necessary copy."
msgstr "Los datos a normalizar, fila por fila. Las matrices scipy.sparse deben estar en formato CSR para evitar una copia innecesaria."

#: of
msgid "bool, default=None"
msgstr "bool, default=None"

#: of sklearn.preprocessing._data.Normalizer.transform:12
msgid "Copy the input X or not."
msgstr "Copia la entrada X o no."

#: of sklearn.preprocessing._data.Normalizer.transform:28
msgid "**X_tr**"
msgstr "**X_tr**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_features)"

#: ../modules/generated/sklearn.preprocessing.Normalizer.examples:4
msgid "Examples using ``sklearn.preprocessing.Normalizer``"
msgstr "Ejemplos utilizando ``sklearn.preprocessing.Normalizer``"

#: ../modules/generated/sklearn.preprocessing.Normalizer.examples:15
#: ../modules/generated/sklearn.preprocessing.Normalizer.examples:23
msgid ":ref:`sphx_glr_auto_examples_kernel_approximation_plot_scalable_poly_kernels.py`"
msgstr ":ref:`sphx_glr_auto_examples_kernel_approximation_plot_scalable_poly_kernels.py`"

#: ../modules/generated/sklearn.preprocessing.Normalizer.examples:34
#: ../modules/generated/sklearn.preprocessing.Normalizer.examples:42
msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_all_scaling.py`"
msgstr ":ref:`sphx_glr_auto_examples_preprocessing_plot_all_scaling.py`"

#: ../modules/generated/sklearn.preprocessing.Normalizer.examples:53
#: ../modules/generated/sklearn.preprocessing.Normalizer.examples:61
msgid ":ref:`sphx_glr_auto_examples_text_plot_document_clustering.py`"
msgstr ":ref:`sphx_glr_auto_examples_text_plot_document_clustering.py`"

