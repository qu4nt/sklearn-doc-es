msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-05 16:05\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.HuberRegressor.po\n"
"X-Crowdin-File-ID: 5640\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.HuberRegressor.rst:2
msgid ":mod:`sklearn.linear_model`.HuberRegressor"
msgstr ":mod:`sklearn.linear_model`.HuberRegressor"

#: of sklearn.linear_model._huber.HuberRegressor:2
msgid "Linear regression model that is robust to outliers."
msgstr "Modelo de regresión lineal que es robusto a valores atípicos(outliers)."

#: of sklearn.linear_model._huber.HuberRegressor:4
msgid "The Huber Regressor optimizes the squared loss for the samples where ``|(y - X'w) / sigma| < epsilon`` and the absolute loss for the samples where ``|(y - X'w) / sigma| > epsilon``, where w and sigma are parameters to be optimized. The parameter sigma makes sure that if y is scaled up or down by a certain factor, one does not need to rescale epsilon to achieve the same robustness. Note that this does not take into account the fact that the different features of X may be of different scales."
msgstr "El regresor Huber (Huber Regressor) optimiza la pérdida cuadrárica para las muestras en las que ``|(y - X'w) / sigma| < epsilon`` y la pérdida absoluta para las muestras en las que ``|(y - X'w) / sigma| > epsilon``, donde w y sigma son parámetros a optimizar. El parámetro sigma asegura que si y se escala hacia arriba o hacia abajo en un determinado factor, no es necesario reescalar epsilon para conseguir la misma robustez. Nótese que esto no tiene en cuenta el hecho de que las diferentes características de X pueden ser de diferentes escalas."

#: of sklearn.linear_model._huber.HuberRegressor:12
msgid "This makes sure that the loss function is not heavily influenced by the outliers while not completely ignoring their effect."
msgstr "Esto asegura que la función de pérdida no está fuertemente influenciada por los valores atípicos, sin ignorar completamente su efecto."

#: of sklearn.linear_model._huber.HuberRegressor:15
msgid "Read more in the :ref:`User Guide <huber_regression>`"
msgstr "Más información en el :ref:`Manual de usuario <huber_regression>`"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._huber.HuberRegressor
#: sklearn.linear_model._huber.HuberRegressor.fit
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.linear_model._huber.HuberRegressor:24
msgid "**epsilon**"
msgstr "**epsilon**"

#: of
msgid "float, greater than 1.0, default=1.35"
msgstr "float, mayor que 1.0, default=1.35"

#: of sklearn.linear_model._huber.HuberRegressor:22
msgid "The parameter epsilon controls the number of samples that should be classified as outliers. The smaller the epsilon, the more robust it is to outliers."
msgstr "El parámetro epsilon controla el número de muestras que deben clasificarse como valores atípicos. Cuanto más pequeño sea el epsilon, más robusto será ante los valores atípicos."

#: of sklearn.linear_model._huber.HuberRegressor:28
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=100"
msgstr "int, default=100"

#: of sklearn.linear_model._huber.HuberRegressor:27
msgid "Maximum number of iterations that ``scipy.optimize.minimize(method=\"L-BFGS-B\")`` should run for."
msgstr "Número máximo de iteraciones que ``scipy.optimize.minimize(method=\"L-BFGS-B\")`` debe ejecutar."

#: of sklearn.linear_model._huber.HuberRegressor:31
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float, default=0.0001"
msgstr "float, default=0.0001"

#: of sklearn.linear_model._huber.HuberRegressor:31
msgid "Regularization parameter."
msgstr "Parámetro de regularización."

#: of sklearn.linear_model._huber.HuberRegressor:37
msgid "**warm_start**"
msgstr "**warm_start**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.linear_model._huber.HuberRegressor:34
msgid "This is useful if the stored attributes of a previously used model has to be reused. If set to False, then the coefficients will be rewritten for every call to fit. See :term:`the Glossary <warm_start>`."
msgstr "Esto es útil si hay que reutilizar los atributos almacenados de un modelo utilizado previamente. Si se establece en False, los coeficientes se reescribirán en cada llamada a fit. Véase :term:`el Glosario <warm_start>`."

#: of sklearn.linear_model._huber.HuberRegressor:41
msgid "**fit_intercept**"
msgstr "**fit_intercept**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.linear_model._huber.HuberRegressor:40
msgid "Whether or not to fit the intercept. This can be set to False if the data is already centered around the origin."
msgstr "Si se ajusta o no el intercepto. Se puede establecer en False si los datos ya están centrados alrededor del origen."

#: of sklearn.linear_model._huber.HuberRegressor:49
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-05"
msgstr "float, default=1e-05"

#: of sklearn.linear_model._huber.HuberRegressor:44
msgid "The iteration will stop when ``max{|proj g_i | i = 1, ..., n}`` <= ``tol`` where pg_i is the i-th component of the projected gradient."
msgstr "La iteración se detendrá cuando ``max{|proj g_i | i = 1, ..., n}`` <= ``tol`` donde pg_i es el i-ésimo componente del gradiente proyectado."

#: of sklearn.linear_model._huber.HuberRegressor
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.linear_model._huber.HuberRegressor:54
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "array, shape (n_features,)"
msgstr "array, shape (n_features,)"

#: of sklearn.linear_model._huber.HuberRegressor:54
msgid "Features got by optimizing the Huber loss."
msgstr "Características obtenidas mediante la optimización de la pérdida de Huber."

#: of sklearn.linear_model._huber.HuberRegressor:57
msgid "**intercept_**"
msgstr "**intercept_**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.linear_model._huber.HuberRegressor:57
msgid "Bias."
msgstr "Sesgo."

#: of sklearn.linear_model._huber.HuberRegressor:60
msgid "**scale_**"
msgstr "**scale_**"

#: of sklearn.linear_model._huber.HuberRegressor:60
msgid "The value by which ``|y - X'w - c|`` is scaled down."
msgstr "El valor por el cual ``|y - X'w - c|`` se reduce."

#: of sklearn.linear_model._huber.HuberRegressor:69
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.linear_model._huber.HuberRegressor:63
msgid "Number of iterations that ``scipy.optimize.minimize(method=\"L-BFGS-B\")`` has run for."
msgstr "Número de iteraciones que ``scipy.optimize.minimize(method=\"L-BFGS-B\")`` debe ejecutar."

#: of sklearn.linear_model._huber.HuberRegressor:68
msgid "In SciPy <= 1.0.0 the number of lbfgs iterations may exceed ``max_iter``. ``n_iter_`` will now report at most ``max_iter``."
msgstr "En SciPy <= 1.0.0 el número de iteraciones de lbfgs puede exceder ``max_iter``. Ahora ``n_iter_`` informará como máximo de ``max_iter``."

#: of sklearn.linear_model._huber.HuberRegressor:78
msgid "**outliers_**"
msgstr "**outliers_**"

#: of
msgid "array, shape (n_samples,)"
msgstr "array, shape (n_samples,)"

#: of sklearn.linear_model._huber.HuberRegressor:72
msgid "A boolean mask which is set to True where the samples are identified as outliers."
msgstr "Una máscara booleana que se establece como True cuando las muestras se identifican como valores atípicos."

#: of sklearn.linear_model._huber.HuberRegressor:81
msgid "References"
msgstr "Referencias"

#: of sklearn.linear_model._huber.HuberRegressor:82
msgid "Peter J. Huber, Elvezio M. Ronchetti, Robust Statistics Concomitant scale estimates, pg 172"
msgstr "Peter J. Huber, Elvezio M. Ronchetti, Robust Statistics Concomitant scale estimates, pg 172"

#: of sklearn.linear_model._huber.HuberRegressor:84
msgid "Art B. Owen (2006), A robust hybrid of lasso and ridge regression. https://statweb.stanford.edu/~owen/reports/hhu.pdf"
msgstr "Art B. Owen (2006), A robust hybrid of lasso and ridge regression. https://statweb.stanford.edu/~owen/reports/hhu.pdf"

#: of sklearn.linear_model._huber.HuberRegressor:89
msgid "[Re4616ef910fb-1]_, [Re4616ef910fb-2]_"
msgstr "[Re4616ef910fb-1]_, [Re4616ef910fb-2]_"

#: of sklearn.linear_model._huber.HuberRegressor:92
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.linear_model._huber.HuberRegressor:115
msgid "Methods"
msgstr "Métodos"

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.HuberRegressor.fit>`\\"
msgstr ":obj:`fit <sklearn.linear_model.HuberRegressor.fit>`\\"

#: of sklearn.linear_model._huber.HuberRegressor.fit:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Fit the model according to the given training data."
msgstr "Ajusta el modelo de acuerdo a los datos de entrenamiento dados."

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.HuberRegressor.get_params>`\\"
msgstr ":obj:`get_params <sklearn.linear_model.HuberRegressor.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.HuberRegressor.predict>`\\"
msgstr ":obj:`predict <sklearn.linear_model.HuberRegressor.predict>`\\"

#: of sklearn.linear_model._base.LinearModel.predict:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Predict using the linear model."
msgstr "Predice utilizando el modelo lineal."

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.HuberRegressor.score>`\\"
msgstr ":obj:`score <sklearn.linear_model.HuberRegressor.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.HuberRegressor.set_params>`\\"
msgstr ":obj:`set_params <sklearn.linear_model.HuberRegressor.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._base.LinearModel.predict:8
#: sklearn.linear_model._huber.HuberRegressor.fit:9
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like, shape (n_samples, n_features)"
msgstr "array-like, shape (n_samples, n_features)"

#: of sklearn.linear_model._huber.HuberRegressor.fit:8
msgid "Training vector, where n_samples in the number of samples and n_features is the number of features."
msgstr "Vector de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._huber.HuberRegressor.fit:12
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like, shape (n_samples,)"
msgstr "array-like, shape (n_samples,)"

#: of sklearn.linear_model._huber.HuberRegressor.fit:12
msgid "Target vector relative to X."
msgstr "Vector objetivo relativo a X."

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.linear_model._huber.HuberRegressor.fit:15
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of sklearn.linear_model._huber.HuberRegressor.fit:15
msgid "Weight given to each sample."
msgstr "Ponderación dada a cada muestra."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._huber.HuberRegressor.fit
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.linear_model._huber.HuberRegressor.fit:31
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr "array-like o sparse matrix, shape (n_samples, n_features)"

#: of sklearn.linear_model._base.LinearModel.predict:8
msgid "Samples."
msgstr "Muestras."

#: of sklearn.linear_model._base.LinearModel.predict:24
msgid "**C**"
msgstr "**C**"

#: of sklearn.linear_model._base.LinearModel.predict:13
msgid "Returns predicted values."
msgstr "Devuelve los valores predichos."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma de cuadrados de los residuos ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1.0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0.0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz de núcleo precalculada o una lista de objetos genéricos en su lugar con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para X`."

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr "Notas"

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al llamar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la consistencia con el valor predeterminado de :func:`~sklearn.metrics.r2_score`. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:4
msgid "Examples using ``sklearn.linear_model.HuberRegressor``"
msgstr "Ejemplos utilizando ``sklearn.linear_model.HuberRegressor``"

#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:15
#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:23
#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:34
#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:42
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_robust_fit.py`"
msgstr ":ref:`sphx_glr_auto_examples_linear_model_plot_robust_fit.py`"

