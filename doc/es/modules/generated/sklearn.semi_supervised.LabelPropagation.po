msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 07:06\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.semi_supervised.LabelPropagation.po\n"
"X-Crowdin-File-ID: 5048\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.semi_supervised.LabelPropagation.rst:2
msgid ":mod:`sklearn.semi_supervised`.LabelPropagation"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:2
msgid "Label Propagation classifier"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:4
msgid "Read more in the :ref:`User Guide <label_propagation>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba
#: sklearn.semi_supervised._label_propagation.LabelPropagation
#: sklearn.semi_supervised._label_propagation.LabelPropagation.fit
msgid "Parameters"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:12
msgid "**kernel**"
msgstr ""

#: of
msgid "{'knn', 'rbf'} or callable, default='rbf'"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:9
msgid "String identifier for kernel function to use or the kernel function itself. Only 'rbf' and 'knn' strings are valid inputs. The function passed should take two inputs, each of shape (n_samples, n_features), and return a (n_samples, n_samples) shaped weight matrix."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:15
msgid "**gamma**"
msgstr ""

#: of
msgid "float, default=20"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:15
msgid "Parameter for rbf kernel."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:18
msgid "**n_neighbors**"
msgstr ""

#: of
msgid "int, default=7"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:18
msgid "Parameter for knn kernel which need to be strictly positive."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:21
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=1000"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:21
msgid "Change maximum number of iterations allowed."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:25
msgid "**tol**"
msgstr ""

#: of
msgid "float, 1e-3"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:24
msgid "Convergence tolerance: threshold to consider the system at steady state."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:34
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:28
msgid "The number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation
msgid "Attributes"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:39
msgid "**X_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:39
msgid "Input array."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:42
msgid "**classes_**"
msgstr ""

#: of
msgid "ndarray of shape (n_classes,)"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:42
msgid "The distinct labels used in classifying instances."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:45
msgid "**label_distributions_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_classes)"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:45
msgid "Categorical distribution for each item."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:48
msgid "**transduction_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples)"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:48
msgid "Label assigned to each item via the transduction."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:54
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:51
msgid "Number of iterations run."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:59
msgid ":obj:`LabelSpreading`"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:60
msgid "Alternate label propagation strategy more robust to noise."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:65
msgid "References"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:66
msgid "Xiaojin Zhu and Zoubin Ghahramani. Learning from labeled and unlabeled data with label propagation. Technical Report CMU-CALD-02-107, Carnegie Mellon University, 2002 http://pages.cs.wisc.edu/~jerryzhu/pub/CMU-CALD-02-107.pdf"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:75
msgid "Examples"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation:89
msgid "Methods"
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid ":obj:`fit <sklearn.semi_supervised.LabelPropagation.fit>`\\"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation.fit:2
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid "Fit a semi-supervised label propagation model based"
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid ":obj:`get_params <sklearn.semi_supervised.LabelPropagation.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid ":obj:`predict <sklearn.semi_supervised.LabelPropagation.predict>`\\"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict:2
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid "Performs inductive inference across the model."
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.semi_supervised.LabelPropagation.predict_proba>`\\"
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba:2
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid "Predict probability for each possible outcome."
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid ":obj:`score <sklearn.semi_supervised.LabelPropagation.score>`\\"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid ":obj:`set_params <sklearn.semi_supervised.LabelPropagation.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.semi_supervised._label_propagation.LabelPropagation:98:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation.fit:4
msgid "All the input data is provided matrix X (labeled and unlabeled) and corresponding label matrix y with a dedicated marker value for unlabeled samples."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict:8
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba:11
#: sklearn.semi_supervised._label_propagation.LabelPropagation.fit:11
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation.fit:11
msgid "A matrix of shape (n_samples, n_samples) will be created from this."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict:24
#: sklearn.semi_supervised._label_propagation.LabelPropagation.fit:15
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.semi_supervised._label_propagation.LabelPropagation.fit:14
msgid "`n_labeled_samples` (unlabeled points are marked as -1) All unlabeled samples will be transductively assigned labels."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba
#: sklearn.semi_supervised._label_propagation.LabelPropagation.fit
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.semi_supervised._label_propagation.LabelPropagation.fit:31
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict:8
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba:11
msgid "The data matrix."
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict:13
msgid "Predictions for input data."
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba:4
msgid "Compute the probability estimates for each single sample in X and each possible outcome seen during training (categorical distribution)."
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba:28
msgid "**probabilities**"
msgstr ""

#: of
#: sklearn.semi_supervised._label_propagation.BaseLabelPropagation.predict_proba:16
msgid "Normalized probability distributions across class labels."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:17
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

