msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-25 02:38\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.BaggingClassifier.po\n"
"X-Crowdin-File-ID: 5202\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.BaggingClassifier.rst:2
msgid ":mod:`sklearn.ensemble`.BaggingClassifier"
msgstr ":mod:`sklearn.ensemble`.BaggingClassifier"

#: of sklearn.ensemble._bagging.BaggingClassifier:2
msgid "A Bagging classifier."
msgstr "Un clasificador Bagging."

#: of sklearn.ensemble._bagging.BaggingClassifier:4
msgid "A Bagging classifier is an ensemble meta-estimator that fits base classifiers each on random subsets of the original dataset and then aggregate their individual predictions (either by voting or by averaging) to form a final prediction. Such a meta-estimator can typically be used as a way to reduce the variance of a black-box estimator (e.g., a decision tree), by introducing randomization into its construction procedure and then making an ensemble out of it."
msgstr "Un clasificador Bagging es un meta-estimador de ensemble que se ajusta a los clasificadores de base cada uno en subconjuntos aleatorios del conjunto de datos original y luego agrega sus predicciones individuales (ya sea por voto o por término medio) para formar una predicción final. Tales meta-estimadores pueden ser usados como una manera de reducir la varianza de un estimador de caja negra (p.ej. un árbol de decisión), introduciendo aleatorización en su procedimiento de construcción y luego haciendo un ensemble a partir de él."

#: of sklearn.ensemble._bagging.BaggingClassifier:12
msgid "This algorithm encompasses several works from the literature. When random subsets of the dataset are drawn as random subsets of the samples, then this algorithm is known as Pasting [Rb1846455d0e5-1]_. If samples are drawn with replacement, then the method is known as Bagging [Rb1846455d0e5-2]_. When random subsets of the dataset are drawn as random subsets of the features, then the method is known as Random Subspaces [Rb1846455d0e5-3]_. Finally, when base estimators are built on subsets of both samples and features, then the method is known as Random Patches [Rb1846455d0e5-4]_."
msgstr "Este algoritmo engloba varios trabajos de la literatura. Cuando se extraen subconjuntos aleatorios del conjunto de datos como subconjuntos aleatorios de las muestras, entonces este algoritmo se conoce como Pasting [Rb1846455d0e5-1]_. Si las muestras se extraen con reemplazo, el método se conoce como Bagging [Rb1846455d0e5-2]_. Cuando se extraen subconjuntos aleatorios del conjunto de datos como subconjuntos aleatorios de las características, el método se conoce como Subespacios aleatorios [Rb1846455d0e5-3]_. Por último, cuando los estimadores base se construyen sobre subconjuntos tanto de muestras como de características, entonces el método se conoce como Parches Aleatorios [Rb1846455d0e5-4]_."

#: of sklearn.ensemble._bagging.BaggingClassifier:21
msgid "Read more in the :ref:`User Guide <bagging>`."
msgstr "Más información en el :ref:`Manual de usuario <bagging>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.ensemble._bagging.BaggingClassifier
#: sklearn.ensemble._bagging.BaggingClassifier.decision_function
#: sklearn.ensemble._bagging.BaggingClassifier.predict
#: sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba
#: sklearn.ensemble._bagging.BaggingClassifier.predict_proba
#: sklearn.ensemble._bagging.BaseBagging.fit
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.ensemble._bagging.BaggingClassifier:30
msgid "**base_estimator**"
msgstr "**base_estimator**"

#: of
msgid "object, default=None"
msgstr "object, default=None"

#: of sklearn.ensemble._bagging.BaggingClassifier:28
msgid "The base estimator to fit on random subsets of the dataset. If None, then the base estimator is a :class:`~sklearn.tree.DecisionTreeClassifier`."
msgstr "El estimador base para ajustar en subconjuntos aleatorios del conjunto de datos. Si es None, el estimador base es un :class:`~sklearn.tree.DecisionTreeClassifier`."

#: of sklearn.ensemble._bagging.BaggingClassifier:33
msgid "**n_estimators**"
msgstr "**n_estimators**"

#: of
msgid "int, default=10"
msgstr "entero, default=10"

#: of sklearn.ensemble._bagging.BaggingClassifier:33
msgid "The number of base estimators in the ensemble."
msgstr "El número de estimadores base en el ensemble."

#: of sklearn.ensemble._bagging.BaggingClassifier:40
msgid "**max_samples**"
msgstr "**max_samples**"

#: of
msgid "int or float, default=1.0"
msgstr "entero o flotante, default=1.0"

#: of sklearn.ensemble._bagging.BaggingClassifier:36
msgid "The number of samples to draw from X to train each base estimator (with replacement by default, see `bootstrap` for more details)."
msgstr "El número de muestras a extraer de X para entrenar cada estimador base (con reemplazo predeterminado, ver `bootstrap` para más detalles)."

#: of sklearn.ensemble._bagging.BaggingClassifier:39
msgid "If int, then draw `max_samples` samples."
msgstr "Si es entero, entonces escoge `max_samples` muestras."

#: of sklearn.ensemble._bagging.BaggingClassifier:40
msgid "If float, then draw `max_samples * X.shape[0]` samples."
msgstr "Si es flotante, escoge `max_samples * X.shape[0]`muestras."

#: of sklearn.ensemble._bagging.BaggingClassifier:48
msgid "**max_features**"
msgstr "**max_features**"

#: of sklearn.ensemble._bagging.BaggingClassifier:43
msgid "The number of features to draw from X to train each base estimator ( without replacement by default, see `bootstrap_features` for more details)."
msgstr "El número de características a escoger de X para entrenar cada estimador base (sin reemplazar por defecto, ver`bootstrap_features` para más detalles)."

#: of sklearn.ensemble._bagging.BaggingClassifier:47
msgid "If int, then draw `max_features` features."
msgstr "Si es entero, entonces escoge `max_features` características."

#: of sklearn.ensemble._bagging.BaggingClassifier:48
msgid "If float, then draw `max_features * X.shape[1]` features."
msgstr "Si está flotante, escoge `max_features * X.shape[1]` características."

#: of sklearn.ensemble._bagging.BaggingClassifier:52
msgid "**bootstrap**"
msgstr "**bootstrap**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.ensemble._bagging.BaggingClassifier:51
msgid "Whether samples are drawn with replacement. If False, sampling without replacement is performed."
msgstr "Si las muestras son escogidas con reemplazo. Si False, se realiza muestreo sin reemplazo."

#: of sklearn.ensemble._bagging.BaggingClassifier:55
msgid "**bootstrap_features**"
msgstr "**bootstrap_features**"

#: of
msgid "bool, default=False"
msgstr "booleano, default=False"

#: of sklearn.ensemble._bagging.BaggingClassifier:55
msgid "Whether features are drawn with replacement."
msgstr "Si las características se escogen con reemplazo."

#: of sklearn.ensemble._bagging.BaggingClassifier:59
msgid "**oob_score**"
msgstr "**oob_score**"

#: of sklearn.ensemble._bagging.BaggingClassifier:58
msgid "Whether to use out-of-bag samples to estimate the generalization error."
msgstr "Si usar muestras fuera de bolsa para estimar el error de generalización."

#: of sklearn.ensemble._bagging.BaggingClassifier:67
msgid "**warm_start**"
msgstr "**warm_start**"

#: of sklearn.ensemble._bagging.BaggingClassifier:62
msgid "When set to True, reuse the solution of the previous call to fit and add more estimators to the ensemble, otherwise, just fit a whole new ensemble. See :term:`the Glossary <warm_start>`."
msgstr "Cuando se establece en True, reutiliza la solución de la llamada anterior para encajar y añadir más estimadores al conjunto, de lo contrario, basta con encajar un ensemble completamente nuevo. Ver :term:`el Glosario <warm_start>`."

#: of sklearn.ensemble._bagging.BaggingClassifier:66
msgid "*warm_start* constructor parameter."
msgstr "Parámetro del constructor *warm_start*."

#: of sklearn.ensemble._bagging.BaggingClassifier:73
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "entero, default=None"

#: of sklearn.ensemble._bagging.BaggingClassifier:70
msgid "The number of jobs to run in parallel for both :meth:`fit` and :meth:`predict`. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "El número de trabajos que se ejecutan en paralelo para :meth:`fit` y :meth:`predict`. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa que se utilizan todos los procesadores. Ver :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.ensemble._bagging.BaggingClassifier:81
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "entero, instancia RandomState o None, default=None"

#: of sklearn.ensemble._bagging.BaggingClassifier:76
msgid "Controls the random resampling of the original dataset (sample wise and feature wise). If the base estimator accepts a `random_state` attribute, a different seed is generated for each instance in the ensemble. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Controla el remuestreo aleatorio del conjunto de datos original (por muestra y por característica). Si el estimador base acepta un atributo `random_state`, se genera una semilla diferente para cada instancia del ensemble. Pasa un entero para una salida reproducible a través de múltiples llamadas a la función. Ver :term:`Glosario <random_state>``."

#: of sklearn.ensemble._bagging.BaggingClassifier:87
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int, default=0"
msgstr "entero, default=0"

#: of sklearn.ensemble._bagging.BaggingClassifier:84
msgid "Controls the verbosity when fitting and predicting."
msgstr "Controla la verbosidad al momento de ajustar y predecir."

#: of sklearn.ensemble._bagging.BaggingClassifier
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.ensemble._bagging.BaggingClassifier:92
msgid "**base_estimator_**"
msgstr "**base_estimator_**"

#: of
msgid "estimator"
msgstr "estimator"

#: of sklearn.ensemble._bagging.BaggingClassifier:92
msgid "The base estimator from which the ensemble is grown."
msgstr "El estimador de base del cual el conjunto es crecido."

#: of sklearn.ensemble._bagging.BaggingClassifier:95
msgid "**n_features_**"
msgstr "**n_features_**"

#: of
msgid "int"
msgstr "entero"

#: of sklearn.ensemble._bagging.BaggingClassifier:95
msgid "The number of features when :meth:`fit` is performed."
msgstr "El número de características cuando :meth:`fit` es realizado."

#: of sklearn.ensemble._bagging.BaggingClassifier:98
msgid "**estimators_**"
msgstr "**estimators_**"

#: of
msgid "list of estimators"
msgstr "lista de estimadores"

#: of sklearn.ensemble._bagging.BaggingClassifier:98
msgid "The collection of fitted base estimators."
msgstr "La colección de estimadores de base ajustados."

#: of sklearn.ensemble._bagging.BaggingClassifier:101
msgid ":obj:`estimators_samples_ <estimators_samples_>`"
msgstr ":obj:`estimators_samples_ <estimators_samples_>`"

#: of
msgid "list of arrays"
msgstr "lista de arreglos"

#: of sklearn.ensemble.BaggingClassifier.estimators_samples_:2
#: sklearn.ensemble._bagging.BaggingClassifier:101
msgid "The subset of drawn samples for each base estimator."
msgstr "El subconjunto de muestras escogidas para cada estimador base."

#: of sklearn.ensemble._bagging.BaggingClassifier:104
msgid "**estimators_features_**"
msgstr "**estimators_features_**"

#: of sklearn.ensemble._bagging.BaggingClassifier:104
msgid "The subset of drawn features for each base estimator."
msgstr "El subconjunto de características escogidas para cada estimador base."

#: of sklearn.ensemble._bagging.BaggingClassifier:107
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.ensemble._bagging.BaggingClassifier:107
msgid "The classes labels."
msgstr "Las etiquetas de clases."

#: of sklearn.ensemble._bagging.BaggingClassifier:110
msgid "**n_classes_**"
msgstr "**n_classes_**"

#: of
msgid "int or list"
msgstr "entero o lista"

#: of sklearn.ensemble._bagging.BaggingClassifier:110
msgid "The number of classes."
msgstr "El número de clases."

#: of sklearn.ensemble._bagging.BaggingClassifier:114
msgid "**oob_score_**"
msgstr "**oob_score_**"

#: of
msgid "float"
msgstr "flotante"

#: of sklearn.ensemble._bagging.BaggingClassifier:113
msgid "Score of the training dataset obtained using an out-of-bag estimate. This attribute exists only when ``oob_score`` is True."
msgstr "Puntuación del conjunto de datos de entrenamiento obtenido utilizando una estimación fuera de bolsa. Este atributo solo existe cuando ``oob_score`` es True."

#: of sklearn.ensemble._bagging.BaggingClassifier:126
msgid "**oob_decision_function_**"
msgstr "**oob_decision_function_**"

#: of
msgid "ndarray of shape (n_samples, n_classes)"
msgstr "ndarray de forma (n_samples, n_classes)"

#: of sklearn.ensemble._bagging.BaggingClassifier:117
msgid "Decision function computed with out-of-bag estimate on the training set. If n_estimators is small it might be possible that a data point was never left out during the bootstrap. In this case, `oob_decision_function_` might contain NaN. This attribute exists only when ``oob_score`` is True."
msgstr "Función de decisión calculada con la estimación fuera de bolsa en el conjunto de entrenamiento. Si n_estimadores es pequeño, es posible que un punto de datos nunca se haya dejado fuera durante el bootstrap. En este caso, `oob_decision_function_` podría contener NaN. Este atributo sólo existe cuando ``oob_score`` es True."

#: of sklearn.ensemble._bagging.BaggingClassifier:129
msgid "References"
msgstr "Referencias"

#: of sklearn.ensemble._bagging.BaggingClassifier:130
msgid "L. Breiman, \"Pasting small votes for classification in large databases and on-line\", Machine Learning, 36(1), 85-103, 1999."
msgstr "L. Breiman, \"Pasting small votes for classification in large databases and on-line\", Machine Learning, 36(1), 85-103, 1999."

#: of sklearn.ensemble._bagging.BaggingClassifier:133
msgid "L. Breiman, \"Bagging predictors\", Machine Learning, 24(2), 123-140, 1996."
msgstr "L. Breiman, \"Bagging predictors\", Machine Learning, 24(2), 123-140, 1996."

#: of sklearn.ensemble._bagging.BaggingClassifier:136
msgid "T. Ho, \"The random subspace method for constructing decision forests\", Pattern Analysis and Machine Intelligence, 20(8), 832-844, 1998."
msgstr "T. Ho, \"The random subspace method for constructing decision forests\", Pattern Analysis and Machine Intelligence, 20(8), 832-844, 1998."

#: of sklearn.ensemble._bagging.BaggingClassifier:140
msgid "G. Louppe and P. Geurts, \"Ensembles on Random Patches\", Machine Learning and Knowledge Discovery in Databases, 346-361, 2012."
msgstr "G. Louppe and P. Geurts, \"Ensembles on Random Patches\", Machine Learning and Knowledge Discovery in Databases, 346-361, 2012."

#: of sklearn.ensemble._bagging.BaggingClassifier:145
msgid "[Rb1846455d0e5-1]_, [Rb1846455d0e5-2]_, [Rb1846455d0e5-3]_, [Rb1846455d0e5-4]_"
msgstr "[Rb1846455d0e5-1]_, [Rb1846455d0e5-2]_, [Rb1846455d0e5-3]_, [Rb1846455d0e5-4]_"

#: of sklearn.ensemble._bagging.BaggingClassifier:148
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.ensemble._bagging.BaggingClassifier:161
msgid "Methods"
msgstr "Métodos"

#: of sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid ":obj:`decision_function <sklearn.ensemble.BaggingClassifier.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.ensemble.BaggingClassifier.decision_function>`\\"

#: of sklearn.ensemble._bagging.BaggingClassifier.decision_function:2
#: sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid "Average of the decision functions of the base classifiers."
msgstr "Promedio de las funciones de decisión de los clasificadores de base."

#: of sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.BaggingClassifier.fit>`\\"
msgstr ":obj:`fit <sklearn.ensemble.BaggingClassifier.fit>`\\"

#: of sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
#: sklearn.ensemble._bagging.BaseBagging.fit:4
msgid "Build a Bagging ensemble of estimators from the training"
msgstr "Construir un ensemble Bagging de estimadores a partir del entrenamiento"

#: of sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.BaggingClassifier.get_params>`\\"
msgstr ":obj:`get_params <sklearn.ensemble.BaggingClassifier.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.BaggingClassifier.predict>`\\"
msgstr ":obj:`predict <sklearn.ensemble.BaggingClassifier.predict>`\\"

#: of sklearn.ensemble._bagging.BaggingClassifier.predict:2
#: sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid "Predict class for X."
msgstr "Predice la clase para X."

#: of sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid ":obj:`predict_log_proba <sklearn.ensemble.BaggingClassifier.predict_log_proba>`\\"
msgstr ":obj:`predict_log_proba <sklearn.ensemble.BaggingClassifier.predict_log_proba>`\\"

#: of sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba:2
#: sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid "Predict class log-probabilities for X."
msgstr "Predice las probabilidades logarítmicas de clase para X."

#: of sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.ensemble.BaggingClassifier.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.ensemble.BaggingClassifier.predict_proba>`\\"

#: of sklearn.ensemble._bagging.BaggingClassifier.predict_proba:2
#: sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid "Predict class probabilities for X."
msgstr "Predice las probabilidades de clase para X."

#: of sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid ":obj:`score <sklearn.ensemble.BaggingClassifier.score>`\\"
msgstr ":obj:`score <sklearn.ensemble.BaggingClassifier.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos de prueba y las etiquetas dados."

#: of sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.BaggingClassifier.set_params>`\\"
msgstr ":obj:`set_params <sklearn.ensemble.BaggingClassifier.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.ensemble._bagging.BaggingClassifier:172:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.ensemble._bagging.BaggingClassifier.decision_function:9
#: sklearn.ensemble._bagging.BaggingClassifier.predict:12
#: sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba:12
#: sklearn.ensemble._bagging.BaggingClassifier.predict_proba:15
#: sklearn.ensemble._bagging.BaseBagging.fit:10
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.ensemble._bagging.BaggingClassifier.decision_function:8
#: sklearn.ensemble._bagging.BaggingClassifier.predict:11
#: sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba:11
#: sklearn.ensemble._bagging.BaggingClassifier.predict_proba:14
#: sklearn.ensemble._bagging.BaseBagging.fit:9
msgid "The training input samples. Sparse matrices are accepted only if they are supported by the base estimator."
msgstr "Las muestras de entrada de entrenamiento. Las matrices dispersas son aceptadas sólo si son apoyadas por el estimador base."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.ensemble._bagging.BaggingClassifier.decision_function
#: sklearn.ensemble._bagging.BaggingClassifier.predict
#: sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba
#: sklearn.ensemble._bagging.BaggingClassifier.predict_proba
#: sklearn.ensemble._bagging.BaseBagging.fit
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.ClassifierMixin.score:33
#: sklearn.ensemble._bagging.BaggingClassifier.decision_function:28
msgid "**score**"
msgstr "**score**"

#: of
msgid "ndarray of shape (n_samples, k)"
msgstr "ndarray de forma (n_samples, k)"

#: of sklearn.ensemble._bagging.BaggingClassifier.decision_function:14
msgid "The decision function of the input samples. The columns correspond to the classes in sorted order, as they appear in the attribute ``classes_``. Regression and binary classification are special cases with ``k == 1``, otherwise ``k==n_classes``."
msgstr "La función de decisión de las muestras de entrada. Las columnas corresponden a las clases ordenadas, tal y como aparecen en el atributo ``clases_``. La regresión y la clasificación binaria son casos especiales con ``k == 1``, de lo contrario ``k==n_clases``."

#: of sklearn.ensemble.BaggingClassifier.estimators_samples_:4
msgid "Returns a dynamically generated list of indices identifying the samples used for fitting each member of the ensemble, i.e., the in-bag samples."
msgstr "Devuelve una lista generada dinámicamente de índices que identifican las muestras utilizadas para encajar cada miembro del ensemble, es decir, las muestras en bolsa."

#: of sklearn.ensemble.BaggingClassifier.estimators_samples_:8
msgid "Note: the list is re-created at each call to the property in order to reduce the object memory footprint by not storing the sampling data. Thus fetching the property may be slower than expected."
msgstr "Nota: la lista se vuelve a crear en cada llamada a la propiedad para reducir la huella de memoria del objeto al no almacenar los datos de muestreo. Por lo tanto, la obtención de la propiedad puede ser más lenta de lo esperado."

#: of sklearn.ensemble._bagging.BaseBagging.fit:3
msgid "set (X, y)."
msgstr "set (X, y)."

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.ensemble._bagging.BaggingClassifier.predict:28
#: sklearn.ensemble._bagging.BaseBagging.fit:14
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like de forma (n_samples,)"

#: of sklearn.ensemble._bagging.BaseBagging.fit:13
msgid "The target values (class labels in classification, real numbers in regression)."
msgstr "Los valores objetivo (etiquetas de clase en clasificación, números reales en regresión)."

#: of sklearn.base.ClassifierMixin.score:17
#: sklearn.ensemble._bagging.BaseBagging.fit:19
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.ensemble._bagging.BaseBagging.fit:17
msgid "Sample weights. If None, then samples are equally weighted. Note that this is supported only if the base estimator supports sample weighting."
msgstr "Ponderación de muestras. Si es None, las muestras se ponderan por igual. Ten en cuenta que esto sólo se admite si el estimador base admite la ponderación de la muestra."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.ensemble._bagging.BaseBagging.fit:35
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "diccionario"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.ensemble._bagging.BaggingClassifier.predict:4
msgid "The predicted class of an input sample is computed as the class with the highest mean predicted probability. If base estimators do not implement a ``predict_proba`` method, then it resorts to voting."
msgstr "La clase predecida de una muestra de entrada se calcula como la clase con la mayor probabilidad predecible. Si los estimadores base no implementan un método ``predict_proba``, entonces recurre a votación."

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.ensemble._bagging.BaggingClassifier.predict:17
msgid "The predicted classes."
msgstr "Las clases predichas."

#: of sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba:4
msgid "The predicted class log-probabilities of an input sample is computed as the log of the mean predicted class probabilities of the base estimators in the ensemble."
msgstr "Las probabilidades logarítmicas de clase predichas de una muestra de entrada se calculan como el logaritmo de las probabilidades medias de clase predichas de los estimadores base del ensemble."

#: of sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba:29
#: sklearn.ensemble._bagging.BaggingClassifier.predict_proba:32
msgid "**p**"
msgstr "**p**"

#: of sklearn.ensemble._bagging.BaggingClassifier.predict_log_proba:17
msgid "The class log-probabilities of the input samples. The order of the classes corresponds to that in the attribute :term:`classes_`."
msgstr "Las probabilidades logarítmicas de clase de las muestras de entrada. El orden de las clases corresponde a aquel en el atributo :term:`classes_`."

#: of sklearn.ensemble._bagging.BaggingClassifier.predict_proba:4
msgid "The predicted class probabilities of an input sample is computed as the mean predicted class probabilities of the base estimators in the ensemble. If base estimators do not implement a ``predict_proba`` method, then it resorts to voting and the predicted class probabilities of an input sample represents the proportion of estimators predicting each class."
msgstr "Las probabilidades de clase predichas de una muestra de entrada se calculan como la media de las probabilidades de clase predichas de los estimadores base del ensemble. Si los estimadores base no implementan un método ``predict_proba``, entonces se recurre a la votación y las probabilidades de clase predichas de una muestra de entrada representan la proporción de estimadores que predicen cada clase."

#: of sklearn.ensemble._bagging.BaggingClassifier.predict_proba:20
msgid "The class probabilities of the input samples. The order of the classes corresponds to that in the attribute :term:`classes_`."
msgstr "Las probabilidades de clase de las muestras de entrada. El orden de las clases corresponde a aquel en el atributo :term:`classes_`."

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto, que es una métrica dura, ya que se requiere para cada muestra que cada conjunto de etiquetas se prediga correctamente."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas verdaderas para `X`."

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr "Ponderación de muestras."

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con relación a `y`."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona en estimadores simples así como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

