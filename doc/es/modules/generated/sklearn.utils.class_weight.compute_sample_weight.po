msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-16 02:05\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.utils.class_weight.compute_sample_weight.po\n"
"X-Crowdin-File-ID: 5120\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.utils.class_weight.compute_sample_weight.rst:2
msgid ":mod:`sklearn.utils.class_weight`.compute_sample_weight"
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:2
msgid "Estimate sample weights by class for unbalanced datasets."
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight
msgid "Parameters"
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:23
msgid "**class_weight**"
msgstr "**class_weight**"

#: of
msgid "dict, list of dicts, \"balanced\", or None"
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:8
msgid "Weights associated with classes in the form ``{class_label: weight}``. If not given, all classes are supposed to have weight one. For multi-output problems, a list of dicts can be provided in the same order as the columns of y."
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:13
msgid "Note that for multioutput (including multilabel) weights should be defined for each class of every column in its own dict. For example, for four-class multilabel classification weights should be [{0: 1, 1: 1}, {0: 1, 1: 5}, {0: 1, 1: 1}, {0: 1, 1: 1}] instead of [{1:1}, {2:5}, {3:1}, {4:1}]."
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:19
msgid "The \"balanced\" mode uses the values of y to automatically adjust weights inversely proportional to class frequencies in the input data: ``n_samples / (n_classes * np.bincount(y))``."
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:23
msgid "For multi-output, the weights of each column of y will be multiplied."
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:26
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:26
msgid "Array of original class labels per sample."
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:33
msgid "**indices**"
msgstr "**indices**"

#: of
msgid "array-like of shape (n_subsample,), default=None"
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:29
msgid "Array of indices to be used in a subsample. Can be of length less than n_samples in the case of a subsample, or equal to n_samples in the case of a bootstrap subsample with repeated indices. If None, the sample weight will be calculated over the full sample. Only \"balanced\" is supported for class_weight if this is provided."
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight
msgid "Returns"
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:49
msgid "**sample_weight_vect**"
msgstr "**sample_weight_vect**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.utils.class_weight.compute_sample_weight:38
msgid "Array with sample weights as applied to the original y."
msgstr ""

