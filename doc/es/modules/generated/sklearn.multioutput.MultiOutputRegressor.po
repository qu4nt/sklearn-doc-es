msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-16 02:01\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.multioutput.MultiOutputRegressor.po\n"
"X-Crowdin-File-ID: 5088\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.multioutput.MultiOutputRegressor.rst:2
msgid ":mod:`sklearn.multioutput`.MultiOutputRegressor"
msgstr ":mod:`sklearn.multioutput`.MultiOutputRegressor"

#: of sklearn.multioutput.MultiOutputRegressor:2
msgid "Multi target regression"
msgstr "Regresión multiobjetivo (multi-target regression)"

#: of sklearn.multioutput.MultiOutputRegressor:4
msgid "This strategy consists of fitting one regressor per target. This is a simple strategy for extending regressors that do not natively support multi-target regression."
msgstr "Esta estrategia consiste en ajustar un regresor por objetivo. Se trata de una estrategia sencilla para ampliar los regresores que no admiten de forma nativa la regresión multiobjetivo."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.multioutput.MultiOutputRegressor
#: sklearn.multioutput.MultiOutputRegressor.partial_fit
#: sklearn.multioutput._MultiOutputEstimator.fit
#: sklearn.multioutput._MultiOutputEstimator.predict
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.multioutput.MultiOutputRegressor:13
msgid "**estimator**"
msgstr "**estimator**"

#: of
msgid "estimator object"
msgstr "estimator object"

#: of sklearn.multioutput.MultiOutputRegressor:13
msgid "An estimator object implementing :term:`fit` and :term:`predict`."
msgstr "Un objeto estimador que implementa :term:`fit` y :term:`predict`."

#: of sklearn.multioutput.MultiOutputRegressor:32
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int or None, optional (default=None)"
msgstr "int o None, opcional (default=None)"

#: of sklearn.multioutput.MultiOutputRegressor:16
msgid "The number of jobs to run in parallel. :meth:`fit`, :meth:`predict` and :meth:`partial_fit` (if supported by the passed estimator) will be parallelized for each target."
msgstr "El número de trabajos a ejecutar en paralelo. :meth:`fit`, :meth:`predict` y :meth:`partial_fit` (si lo soporta el estimador pasado) serán paralelizados para cada objetivo."

#: of sklearn.multioutput.MultiOutputRegressor:20
msgid "When individual estimators are fast to train or predict, using ``n_jobs > 1`` can result in slower performance due to the parallelism overhead."
msgstr "Cuando los estimadores individuales son rápidos de entrenar o predecir, el uso de ``n_jobs > 1`` puede resultar en un rendimiento más lento debido a la sobrecarga de paralelismo."

#: of sklearn.multioutput.MultiOutputRegressor:24
msgid "``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all available processes / threads. See :term:`Glossary <n_jobs>` for more details."
msgstr "``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesos / hilos disponibles. Ver :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.multioutput.MultiOutputRegressor:28
msgid "`n_jobs` default changed from 1 to None"
msgstr "`n_jobs` default cambiado de 1 a None"

#: of sklearn.multioutput.MultiOutputRegressor
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.multioutput.MultiOutputRegressor:43
msgid "**estimators_** : list of ``n_output`` estimators"
msgstr "**estimators_** : list of ``n_output`` estimators"

#: of
msgid "list of"
msgstr "lista de"

#: of sklearn.multioutput.MultiOutputRegressor:37
msgid "Estimators used for predictions."
msgstr "Estimadores usados para predicciones."

#: of sklearn.multioutput.MultiOutputRegressor:46
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.multioutput.MultiOutputRegressor:57
msgid "Methods"
msgstr "Métodos"

#: of sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid ":obj:`fit <sklearn.multioutput.MultiOutputRegressor.fit>`\\"
msgstr ":obj:`fit <sklearn.multioutput.MultiOutputRegressor.fit>`\\"

#: of sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid "Fit the model to data."
msgstr "Ajustar el modelo a los datos."

#: of sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid ":obj:`get_params <sklearn.multioutput.MultiOutputRegressor.get_params>`\\"
msgstr ":obj:`get_params <sklearn.multioutput.MultiOutputRegressor.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.multioutput.MultiOutputRegressor.partial_fit>`\\"
msgstr ":obj:`partial_fit <sklearn.multioutput.MultiOutputRegressor.partial_fit>`\\"

#: of sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid "Incrementally fit the model to data."
msgstr "Ajustar incrementalmente el modelo a los datos."

#: of sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid ":obj:`predict <sklearn.multioutput.MultiOutputRegressor.predict>`\\"
msgstr ":obj:`predict <sklearn.multioutput.MultiOutputRegressor.predict>`\\"

#: of sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
#: sklearn.multioutput._MultiOutputEstimator.predict:4
msgid "Predict multi-output variable using a model"
msgstr "Predecir variable de salida múltiple utilizando un modelo"

#: of sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid ":obj:`score <sklearn.multioutput.MultiOutputRegressor.score>`\\"
msgstr ":obj:`score <sklearn.multioutput.MultiOutputRegressor.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid ":obj:`set_params <sklearn.multioutput.MultiOutputRegressor.set_params>`\\"
msgstr ":obj:`set_params <sklearn.multioutput.MultiOutputRegressor.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.multioutput.MultiOutputRegressor:66:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.multioutput._MultiOutputEstimator.fit:2
msgid "Fit the model to data. Fit a separate model for each output variable."
msgstr "Ajusta el modelo a los datos. Ajusta un modelo distinto para cada variable de salida."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.multioutput.MultiOutputRegressor.partial_fit:9
#: sklearn.multioutput._MultiOutputEstimator.fit:9
#: sklearn.multioutput._MultiOutputEstimator.predict:9
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.multioutput.MultiOutputRegressor.partial_fit:9
#: sklearn.multioutput._MultiOutputEstimator.fit:9
#: sklearn.multioutput._MultiOutputEstimator.predict:9
msgid "Data."
msgstr "Datos."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.multioutput.MultiOutputRegressor.partial_fit:12
#: sklearn.multioutput._MultiOutputEstimator.fit:13
#: sklearn.multioutput._MultiOutputEstimator.predict:26
msgid "**y**"
msgstr "**y**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_outputs)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_outputs)"

#: of sklearn.multioutput._MultiOutputEstimator.fit:12
msgid "Multi-output targets. An indicator matrix turns on multilabel estimation."
msgstr "Objetivos multiclase. Una matriz indicadora activa la clasificación multietiqueta."

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.multioutput.MultiOutputRegressor.partial_fit:17
#: sklearn.multioutput._MultiOutputEstimator.fit:18
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.multioutput.MultiOutputRegressor.partial_fit:15
#: sklearn.multioutput._MultiOutputEstimator.fit:16
msgid "Sample weights. If None, then samples are equally weighted. Only supported if the underlying regressor supports sample weights."
msgstr "Ponderación de las muestras. Si es None, las muestras se ponderan por igual. Sólo se admite si el regresor subyacente admite ponderaciones de muestras."

#: of sklearn.multioutput._MultiOutputEstimator.fit:23
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict of string -> object"
msgstr "dict of string -> object"

#: of sklearn.multioutput._MultiOutputEstimator.fit:21
msgid "Parameters passed to the ``estimator.fit`` method of each step."
msgstr "Parámetros pasados al método ``estimator.fit`` de cada paso."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.multioutput.MultiOutputRegressor.partial_fit
#: sklearn.multioutput._MultiOutputEstimator.fit
#: sklearn.multioutput._MultiOutputEstimator.predict
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.multioutput.MultiOutputRegressor.partial_fit:33
#: sklearn.multioutput._MultiOutputEstimator.fit:39
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.multioutput.MultiOutputRegressor.partial_fit:2
msgid "Incrementally fit the model to data. Fit a separate model for each output variable."
msgstr "Ajustar el modelo a los datos de forma incremental. Ajusta un modelo distinto para cada variable de salida."

#: of sklearn.multioutput.MultiOutputRegressor.partial_fit:12
msgid "Multi-output targets."
msgstr "Objetivos de salida múltiple (multi-output targets)."

#: of sklearn.multioutput._MultiOutputEstimator.predict:3
msgid "trained for each target variable."
msgstr "entrenado para cada variable objetivo."

#: of sklearn.multioutput._MultiOutputEstimator.predict:14
msgid "Multi-output targets predicted across multiple predictors. Note: Separate models are generated for each predictor."
msgstr "Objetivos de salida múltiples predichos a través de múltiples predictores. Nota: se generan modelos separados para cada predictor."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma de cuadrados de los residuos ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1.0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0.0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples_X, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz núcleo precalculada o una lista de objetos genéricos en su lugar con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) or (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores True para X`."

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr "Notas"

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "El valor :math:`R^2` utilizado al invocar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la consistencia con el valor predeterminado de :func:`~sklearn.metrics.r2_score`. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

