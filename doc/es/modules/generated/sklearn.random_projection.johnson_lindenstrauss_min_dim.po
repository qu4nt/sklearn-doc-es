msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-30 00:26\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.random_projection.johnson_lindenstrauss_min_dim.po\n"
"X-Crowdin-File-ID: 5268\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.random_projection.johnson_lindenstrauss_min_dim.rst:2
msgid ":mod:`sklearn.random_projection`.johnson_lindenstrauss_min_dim"
msgstr ":mod:`sklearn.random_projection`.johnson_lindenstrauss_min_dim"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:2
msgid "Find a 'safe' number of components to randomly project to."
msgstr "Encuentra un número 'seguro' de componentes para proyectar aleatoriamente."

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:4
msgid "The distortion introduced by a random projection `p` only changes the distance between two points by a factor (1 +- eps) in an euclidean space with good probability. The projection `p` is an eps-embedding as defined by:"
msgstr "La distorsión introducida por una proyección aleatoria `p` sólo cambia la distancia entre dos puntos por un factor (1 +- eps) en un espacio euclidiano con buena probabilidad. La proyección `p` es una inserción(embedding) eps definida por:"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:9
msgid "(1 - eps) ||u - v||^2 < ||p(u) - p(v)||^2 < (1 + eps) ||u - v||^2"
msgstr "(1 - eps) ||u - v||^2 < ||p(u) - p(v)||^2 < (1 + eps) ||u - v||^2"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:11
msgid "Where u and v are any rows taken from a dataset of shape (n_samples, n_features), eps is in ]0, 1[ and p is a projection by a random Gaussian N(0, 1) matrix of shape (n_components, n_features) (or a sparse Achlioptas matrix)."
msgstr "Donde u y v son cualquier fila tomada de un conjunto de datos de forma (n_samples, n_features), eps está en [0, 1] y p es una proyección por una matriz gaussiana aleatoria N(0, 1) de forma (n_components, n_features) (o una matriz de Achlioptas dispersa)."

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:16
msgid "The minimum number of components to guarantee the eps-embedding is given by:"
msgstr "El número mínimo de componentes para garantizar la inserción eps viene dado por:"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:19
msgid "n_components >= 4 log(n_samples) / (eps^2 / 2 - eps^3 / 3)"
msgstr "n_components >= 4 log(n_samples) / (eps^2 / 2 - eps^3 / 3)"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:21
msgid "Note that the number of dimensions is independent of the original number of features but instead depends on the size of the dataset: the larger the dataset, the higher is the minimal dimensionality of an eps-embedding."
msgstr "Ten en cuenta que el número de dimensiones es independiente del número original de características, pero en cambio depende del tamaño del conjunto de datos: cuanto más grande es el conjunto de datos, mayor es la dimensionalidad mínima de una inserción eps."

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:26
msgid "Read more in the :ref:`User Guide <johnson_lindenstrauss>`."
msgstr "Más información en el :ref:`Manual de usuario <johnson_lindenstrauss>`."

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:32
msgid "**n_samples**"
msgstr "**n_samples**"

#: of
msgid "int or array-like of int"
msgstr "int o array-like de int"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:31
msgid "Number of samples that should be a integer greater than 0. If an array is given, it will compute a safe number of components array-wise."
msgstr "Número de muestras que debe ser un entero mayor que 0. Si se da un arreglo, calculará un número seguro de componentes en forma de arreglo."

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:37
msgid "**eps**"
msgstr "**eps**"

#: of
msgid "float or ndarray of shape (n_components,), dtype=float,             default=0.1"
msgstr "float o ndarray de forma (n_components,), dtype=float,             default=0.1"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:35
msgid "Maximum distortion rate in the range (0,1 ) as defined by the Johnson-Lindenstrauss lemma. If an array is given, it will compute a safe number of components array-wise."
msgstr "Tasa de distorsión máxima en el rango (0,1 ) definida por el lema de Johnson-Lindenstrauss. Si se da un arreglo, calculará un número seguro de componentes en forma de arreglo."

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:51
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int or ndarray of int"
msgstr "int o ndarray de int"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:42
msgid "The minimal number of components to guarantee with good probability an eps-embedding with n_samples."
msgstr "El número mínimo de componentes para garantizar con buena probabilidad una inserción eps con n_samples."

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:54
msgid "References"
msgstr "Referencias"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:55
#, python-format
msgid "https://en.wikipedia.org/wiki/Johnson%E2%80%93Lindenstrauss_lemma"
msgstr "https://en.wikipedia.org/wiki/Johnson%E2%80%93Lindenstrauss_lemma"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:57
msgid "Sanjoy Dasgupta and Anupam Gupta, 1999, \"An elementary proof of the Johnson-Lindenstrauss Lemma.\" http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.45.3654"
msgstr "Sanjoy Dasgupta y Anupam Gupta, 1999, \"An elementary proof of the Johnson-Lindenstrauss Lemma.\" http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.45.3654"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:63
msgid "[Rb05af7b65cc5-1]_, [Rb05af7b65cc5-2]_"
msgstr "[Rb05af7b65cc5-1]_, [Rb05af7b65cc5-2]_"

#: of sklearn.random_projection.johnson_lindenstrauss_min_dim:66
msgid "Examples"
msgstr "Ejemplos"

#: ../modules/generated/sklearn.random_projection.johnson_lindenstrauss_min_dim.examples:4
msgid "Examples using ``sklearn.random_projection.johnson_lindenstrauss_min_dim``"
msgstr "Ejemplos utilizando ``sklearn.random_projection.johnson_lindenstrauss_min_dim``"

#: ../modules/generated/sklearn.random_projection.johnson_lindenstrauss_min_dim.examples:15
#: ../modules/generated/sklearn.random_projection.johnson_lindenstrauss_min_dim.examples:23
msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_johnson_lindenstrauss_bound.py`"
msgstr ":ref:`sphx_glr_auto_examples_miscellaneous_plot_johnson_lindenstrauss_bound.py`"

