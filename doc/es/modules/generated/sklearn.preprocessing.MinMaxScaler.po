msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-06-07 19:02\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.MinMaxScaler.po\n"
"X-Crowdin-File-ID: 5046\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.MinMaxScaler.rst:2
msgid ":mod:`sklearn.preprocessing`.MinMaxScaler"
msgstr ":mod:`sklearn.preprocessing`.MinMaxScaler"

#: of sklearn.preprocessing._data.MinMaxScaler:2
msgid "Transform features by scaling each feature to a given range."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:4
msgid "This estimator scales and translates each feature individually such that it is in the given range on the training set, e.g. between zero and one."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:8
msgid "The transformation is given by::"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:13
msgid "where min, max = feature_range."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:15
msgid "This transformation is often used as an alternative to zero mean, unit variance scaling."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:18
msgid "Read more in the :ref:`User Guide <preprocessing_scaler>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.MinMaxScaler
#: sklearn.preprocessing._data.MinMaxScaler.fit
#: sklearn.preprocessing._data.MinMaxScaler.inverse_transform
#: sklearn.preprocessing._data.MinMaxScaler.partial_fit
#: sklearn.preprocessing._data.MinMaxScaler.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._data.MinMaxScaler:23
msgid "**feature_range**"
msgstr "**feature_range**"

#: of
msgid "tuple (min, max), default=(0, 1)"
msgstr "tuple (min, max), default=(0, 1)"

#: of sklearn.preprocessing._data.MinMaxScaler:23
msgid "Desired range of transformed data."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:27
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.preprocessing._data.MinMaxScaler:26
msgid "Set to False to perform inplace row normalization and avoid a copy (if the input is already a numpy array)."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:36
msgid "**clip: bool, default=False**"
msgstr "**clip: bool, default=False**"

#: of sklearn.preprocessing._data.MinMaxScaler:30
msgid "Set to True to clip transformed values of held-out data to provided `feature range`."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.preprocessing._data.MinMaxScaler:42
msgid "**min_**"
msgstr "**min_**"

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:41
msgid "Per feature adjustment for minimum. Equivalent to ``min - X.min(axis=0) * self.scale_``"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:49
msgid "**scale_**"
msgstr "**scale_**"

#: of sklearn.preprocessing._data.MinMaxScaler:45
msgid "Per feature relative scaling of the data. Equivalent to ``(max - min) / (X.max(axis=0) - X.min(axis=0))``"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:48
msgid "*scale_* attribute."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:55
msgid "**data_min_**"
msgstr "**data_min_**"

#: of sklearn.preprocessing._data.MinMaxScaler:52
msgid "Per feature minimum seen in the data"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:54
msgid "*data_min_*"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:61
msgid "**data_max_**"
msgstr "**data_max_**"

#: of sklearn.preprocessing._data.MinMaxScaler:58
msgid "Per feature maximum seen in the data"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:60
msgid "*data_max_*"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:67
msgid "**data_range_**"
msgstr "**data_range_**"

#: of sklearn.preprocessing._data.MinMaxScaler:64
msgid "Per feature range ``(data_max_ - data_min_)`` seen in the data"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:66
msgid "*data_range_*"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:75
msgid "**n_samples_seen_**"
msgstr "**n_samples_seen_**"

#: of
msgid "int"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:70
msgid "The number of samples processed by the estimator. It will be reset on new calls to fit, but increments across ``partial_fit`` calls."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:80
msgid ":obj:`minmax_scale`"
msgstr ":obj:`minmax_scale`"

#: of sklearn.preprocessing._data.MinMaxScaler:81
msgid "Equivalent function without the estimator API."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:85
msgid "Notes"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:86
msgid "NaNs are treated as missing values: disregarded in fit, and maintained in transform."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:89
msgid "For a comparison of the different scalers, transformers, and normalizers, see :ref:`examples/preprocessing/plot_all_scaling.py <sphx_glr_auto_examples_preprocessing_plot_all_scaling.py>`."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:95
msgid "Examples"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:112
msgid "Methods"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.MinMaxScaler.fit>`\\"
msgstr ":obj:`fit <sklearn.preprocessing.MinMaxScaler.fit>`\\"

#: of sklearn.preprocessing._data.MinMaxScaler.fit:2
#: sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid "Compute the minimum and maximum to be used for later scaling."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.MinMaxScaler.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.preprocessing.MinMaxScaler.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.MinMaxScaler.get_params>`\\"
msgstr ":obj:`get_params <sklearn.preprocessing.MinMaxScaler.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.preprocessing.MinMaxScaler.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.preprocessing.MinMaxScaler.inverse_transform>`\\"

#: of sklearn.preprocessing._data.MinMaxScaler.inverse_transform:2
#: sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid "Undo the scaling of X according to feature_range."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.preprocessing.MinMaxScaler.partial_fit>`\\"
msgstr ":obj:`partial_fit <sklearn.preprocessing.MinMaxScaler.partial_fit>`\\"

#: of sklearn.preprocessing._data.MinMaxScaler.partial_fit:2
#: sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid "Online computation of min and max on X for later scaling."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.MinMaxScaler.set_params>`\\"
msgstr ":obj:`set_params <sklearn.preprocessing.MinMaxScaler.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.MinMaxScaler.transform>`\\"
msgstr ":obj:`transform <sklearn.preprocessing.MinMaxScaler.transform>`\\"

#: of sklearn.preprocessing._data.MinMaxScaler.transform:2
#: sklearn.preprocessing._data.MinMaxScaler:122:<autosummary>:1
msgid "Scale features of X according to feature_range."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.preprocessing._data.MinMaxScaler.fit:9
#: sklearn.preprocessing._data.MinMaxScaler.inverse_transform:8
#: sklearn.preprocessing._data.MinMaxScaler.partial_fit:12
#: sklearn.preprocessing._data.MinMaxScaler.transform:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler.fit:8
msgid "The data used to compute the per-feature minimum and maximum used for later scaling along the features axis."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.preprocessing._data.MinMaxScaler.fit:12
#: sklearn.preprocessing._data.MinMaxScaler.partial_fit:15
msgid "**y**"
msgstr "**y**"

#: of
msgid "None"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler.fit:12
#: sklearn.preprocessing._data.MinMaxScaler.partial_fit:15
msgid "Ignored."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.MinMaxScaler.fit
#: sklearn.preprocessing._data.MinMaxScaler.inverse_transform
#: sklearn.preprocessing._data.MinMaxScaler.partial_fit
#: sklearn.preprocessing._data.MinMaxScaler.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.preprocessing._data.MinMaxScaler.fit:28
#: sklearn.preprocessing._data.MinMaxScaler.partial_fit:31
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler.fit:17
#: sklearn.preprocessing._data.MinMaxScaler.partial_fit:20
msgid "Fitted scaler."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler.inverse_transform:8
msgid "Input data that will be transformed. It cannot be sparse."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler.inverse_transform:24
#: sklearn.preprocessing._data.MinMaxScaler.transform:24
msgid "**Xt**"
msgstr "**Xt**"

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr "ndarray de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.MinMaxScaler.inverse_transform:13
#: sklearn.preprocessing._data.MinMaxScaler.transform:13
msgid "Transformed data."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler.partial_fit:4
msgid "All of X is processed as a single batch. This is intended for cases when :meth:`fit` is not feasible due to very large number of `n_samples` or because X is read from a continuous stream."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler.partial_fit:11
msgid "The data used to compute the mean and standard deviation used for later scaling along the features axis."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.preprocessing._data.MinMaxScaler.transform:8
msgid "Input data that will be transformed."
msgstr ""

#: ../modules/generated/sklearn.preprocessing.MinMaxScaler.examples:4
msgid "Examples using ``sklearn.preprocessing.MinMaxScaler``"
msgstr ""

#: ../modules/generated/sklearn.preprocessing.MinMaxScaler.examples:15
#: ../modules/generated/sklearn.preprocessing.MinMaxScaler.examples:23
msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"
msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_feature_selection_plot_feature_selection.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_kernel_approximation_plot_scalable_poly_kernels.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neural_networks_plot_mlp_training_curves.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_all_scaling.py`"
#~ msgstr ""

