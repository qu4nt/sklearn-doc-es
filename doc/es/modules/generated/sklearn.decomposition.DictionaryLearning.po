msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-26 00:40\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.decomposition.DictionaryLearning.po\n"
"X-Crowdin-File-ID: 5102\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.decomposition.DictionaryLearning.rst:2
msgid ":mod:`sklearn.decomposition`.DictionaryLearning"
msgstr ":mod:`sklearn.decomposition`.DictionaryLearning"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:2
msgid "Dictionary learning"
msgstr "Aprendizaje de Diccionario"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:4
msgid "Finds a dictionary (a set of atoms) that can best be used to represent data using a sparse code."
msgstr "Encuentra un diccionario (un conjunto de átomos) que puede utilizarse mejor para representar los datos utilizando un código disperso."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:7
msgid "Solves the optimization problem::"
msgstr "Resuelve el problema de optimización::"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:13
msgid "Read more in the :ref:`User Guide <DictionaryLearning>`."
msgstr "Más información en el :ref:`Manual de Usuario<DictionaryLearning>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._dict_learning.DictionaryLearning
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:18
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=n_features"
msgstr "int, default=n_features"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:18
msgid "Number of dictionary elements to extract."
msgstr "Número de elementos del diccionario a extraer."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:21
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "float, default=1.0"
msgstr "float, default=1.0"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:21
msgid "Sparsity controlling parameter."
msgstr "Parámetro de control de la dispersión."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:24
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=1000"
msgstr "int, default=1000"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:24
msgid "Maximum number of iterations to perform."
msgstr "Número máximo de iteraciones a realizar."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:27
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-8"
msgstr "float, default=1e-8"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:27
msgid "Tolerance for numerical error."
msgstr "Tolerancia al error numérico."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:37
msgid "**fit_algorithm**"
msgstr "**fit_algorithm**"

#: of
msgid "{'lars', 'cd'}, default='lars'"
msgstr "{'lars', 'cd'}, default='lars'"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:30
msgid "`'lars'`: uses the least angle regression method to solve the lasso problem (:func:`~sklearn.linear_model.lars_path`);"
msgstr "`'lars'`: utiliza el método de regresión de ángulo mínimo para resolver el problema de lasso (:func:`~sklearn.linear_model.lars_path`);"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:32
msgid "`'cd'`: uses the coordinate descent method to compute the Lasso solution (:class:`~sklearn.linear_model.Lasso`). Lars will be faster if the estimated components are sparse."
msgstr "`'cd'`: utiliza el método de descenso coordinado para calcular la solución Lasso (:class:`~sklearn.linear_model.Lasso`). Lars será más rápido si los componentes estimados son dispersos."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:36
msgid "*cd* coordinate descent method to improve speed."
msgstr "Método de descenso de coordinado *cd* para mejorar la velocidad."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:54
msgid "**transform_algorithm**"
msgstr "**transform_algorithm**"

#: of
msgid "{'lasso_lars', 'lasso_cd', 'lars', 'omp',             'threshold'}, default='omp'"
msgstr "{'lasso_lars', 'lasso_cd', 'lars', 'omp',             'threshold'}, default='omp'"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:40
msgid "Algorithm used to transform the data:"
msgstr "Algoritmo utilizado para transformar los datos:"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:42
msgid "`'lars'`: uses the least angle regression method (:func:`~sklearn.linear_model.lars_path`);"
msgstr "`'lars'`: utiliza el método de regresión de ángulo mínimo (:func:`~sklearn.linear_model.lars_path`);"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:44
msgid "`'lasso_lars'`: uses Lars to compute the Lasso solution."
msgstr "`'lasso_lars'`: utiliza Lars para calcular la solución Lasso."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:45
msgid "`'lasso_cd'`: uses the coordinate descent method to compute the Lasso solution (:class:`~sklearn.linear_model.Lasso`). `'lasso_lars'` will be faster if the estimated components are sparse."
msgstr "`'lasso_cd'`: utiliza el método de descenso coordinado para calcular la solución Lasso (:class:`~sklearn.linear_model.Lasso`). El método \"lasso_lars\" será más rápido si los componentes estimados son dispersos."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:48
msgid "`'omp'`: uses orthogonal matching pursuit to estimate the sparse solution."
msgstr "`'omp'`: utiliza la búsqueda de correspondencias ortogonales para estimar la solución dispersa."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:50
msgid "`'threshold'`: squashes to zero all coefficients less than alpha from the projection ``dictionary * X'``."
msgstr "`'threshold'`: reduce a cero todos los coeficientes menores que alfa de la proyección ``dictionary * X'``."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:53
msgid "*lasso_cd* coordinate descent method to improve speed."
msgstr "Método de descenso coordinado *lasso_cd* para mejorar la velocidad."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:60
msgid "**transform_n_nonzero_coefs**"
msgstr "**transform_n_nonzero_coefs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:57
msgid "Number of nonzero coefficients to target in each column of the solution. This is only used by `algorithm='lars'` and `algorithm='omp'` and is overridden by `alpha` in the `omp` case. If `None`, then `transform_n_nonzero_coefs=int(n_features / 10)`."
msgstr "Número de coeficientes distintos de cero para el objetivo en cada columna de la solución. Sólo se utiliza con `algorithm='lars'` y `algorithm='omp'` y se anula con `alpha` en el caso `omp`. Si `None`, entonces `transform_n_nonzero_coefs=int(n_features / 10)`."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:70
msgid "**transform_alpha**"
msgstr "**transform_alpha**"

#: of
msgid "float, default=None"
msgstr "float, default=None"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:63
msgid "If `algorithm='lasso_lars'` or `algorithm='lasso_cd'`, `alpha` is the penalty applied to the L1 norm. If `algorithm='threshold'`, `alpha` is the absolute value of the threshold below which coefficients will be squashed to zero. If `algorithm='omp'`, `alpha` is the tolerance parameter: the value of the reconstruction error targeted. In this case, it overrides `n_nonzero_coefs`. If `None`, default to 1.0"
msgstr "Si `algorithm='lasso_lars' o `algorithm='lasso_cd'`, `alpha` es la penalización aplicada a la norma L1. Si `algorithm='threshold'`, `alpha` es el valor absoluto del umbral por debajo del cual los coeficientes serán reducidos a cero. Si `algorithm='omp'`, `alpha` es el parámetro de tolerancia: el valor del error de reconstrucción al que se apunta. En este caso, anula `n_nonzero_coefs`. Si es `None`, por defecto es 1.0"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:76
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int or None, default=None"
msgstr "int o None, default=None"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:73
msgid "Number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "Número de trabajos paralelos a ejecutar. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesadores. Ver :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:79
msgid "**code_init**"
msgstr "**code_init**"

#: of
msgid "ndarray of shape (n_samples, n_components), default=None"
msgstr "ndarray de forma (n_samples, n_components), default=None"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:79
msgid "Initial value for the code, for warm restart."
msgstr "Valor inicial del código, para el reinicio en caliente."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:82
msgid "**dict_init**"
msgstr "**dict_init**"

#: of
msgid "ndarray of shape (n_components, n_features), default=None"
msgstr "ndarray de forma (n_components, n_features), default=None"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:82
msgid "Initial values for the dictionary, for warm restart."
msgstr "Valores iniciales del diccionario, para el reinicio en caliente."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:85
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:85
msgid "To control the verbosity of the procedure."
msgstr "Controlar la verbosidad del procedimiento."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:90
msgid "**split_sign**"
msgstr "**split_sign**"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:88
msgid "Whether to split the sparse feature vector into the concatenation of its negative part and its positive part. This can improve the performance of downstream classifiers."
msgstr "Si se divide el vector de características disperso en la concatenación de su parte negativa y su parte positiva. Esto puede mejorar el rendimiento de los clasificadores posteriores."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:97
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, RandomState instance or None, default=None"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:93
msgid "Used for initializing the dictionary when ``dict_init`` is not specified, randomly shuffling the data when ``shuffle`` is set to ``True``, and updating the dictionary. Pass an int for reproducible results across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Se utiliza para inicializar el diccionario cuando no se especifica ``dict_init``, barajar los datos aleatoriamente cuando ``shuffle`` se establece como ``True``, y actualizar el diccionario. Pasa un número entero (int) para que los resultados sean reproducibles a través de múltiples llamadas a la función. Ver :term:`Glosario <estado_aleatorio>`."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:102
msgid "**positive_code**"
msgstr "**positive_code**"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:100
msgid "Whether to enforce positivity when finding the code."
msgstr "Si se debe imponer la positividad al encontrar el código."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:107
msgid "**positive_dict**"
msgstr "**positive_dict**"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:105
msgid "Whether to enforce positivity when finding the dictionary"
msgstr "Si se impone la positividad al encontrar el diccionario"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:116
msgid "**transform_max_iter**"
msgstr "**transform_max_iter**"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:110
msgid "Maximum number of iterations to perform if `algorithm='lasso_cd'` or `'lasso_lars'`."
msgstr "Número máximo de iteraciones a realizar si `algoritmo='lasso_cd'` o `'lasso_lars'`."

#: of sklearn.decomposition._dict_learning.DictionaryLearning
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:121
msgid "**components_**"
msgstr "**components_**"

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr "ndarray de forma (n_components, n_features)"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:121
msgid "dictionary atoms extracted from the data"
msgstr "átomos del diccionario extraídos de los datos"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:124
msgid "**error_**"
msgstr "**error_**"

#: of
msgid "array"
msgstr "array"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:124
msgid "vector of errors at each iteration"
msgstr "vector de errores en cada iteración"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:130
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:127
msgid "Number of iterations run."
msgstr "Número de iteraciones ejecutadas."

#: of sklearn.decomposition._dict_learning.DictionaryLearning:135
msgid ":obj:`SparseCoder`"
msgstr ":obj:`SparseCoder`"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:137
msgid ":obj:`MiniBatchDictionaryLearning`"
msgstr ":obj:`MiniBatchDictionaryLearning`"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:139
msgid ":obj:`SparsePCA`"
msgstr ":obj:`SparsePCA`"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:141
msgid ":obj:`MiniBatchSparsePCA`"
msgstr ":obj:`MiniBatchSparsePCA`"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:145
msgid "Notes"
msgstr "Notas"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:146
msgid "**References:**"
msgstr "**Referencias:**"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:148
msgid "J. Mairal, F. Bach, J. Ponce, G. Sapiro, 2009: Online dictionary learning for sparse coding (https://www.di.ens.fr/sierra/pdfs/icml09.pdf)"
msgstr "J. Mairal, F. Bach, J. Ponce, G. Sapiro, 2009: Online dictionary learning for sparse coding (https://www.di.ens.fr/sierra/pdfs/icml09.pdf)"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:153
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:166
msgid "We can check the level of sparsity of `X_transformed`:"
msgstr "Podemos comprobar el nivel de dispersión de `X_transformed`:"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:171
msgid "We can compare the average squared euclidean norm of the reconstruction error of the sparse coded signal relative to the squared euclidean norm of the original signal:"
msgstr "Podemos comparar la norma euclidiana al cuadrado promedio del error de reconstrucción de la señal codificada dispersa con respecto a la norma euclidiana al cuadrado de la señal original:"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:180
msgid "Methods"
msgstr "Métodos"

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.DictionaryLearning.fit>`\\"
msgstr ":obj:`fit <sklearn.decomposition.DictionaryLearning.fit>`\\"

#: of sklearn.decomposition._dict_learning.DictionaryLearning.fit:2
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid "Fit the model from data in X."
msgstr "Ajusta el modelo a partir de los datos en X."

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.decomposition.DictionaryLearning.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.decomposition.DictionaryLearning.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Se ajustan los datos y luego se transforman."

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.DictionaryLearning.get_params>`\\"
msgstr ":obj:`get_params <sklearn.decomposition.DictionaryLearning.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`set_params <sklearn.decomposition.DictionaryLearning.set_params>`\\"
msgstr ":obj:`set_params <sklearn.decomposition.DictionaryLearning.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.DictionaryLearning.transform>`\\"
msgstr ":obj:`transform <sklearn.decomposition.DictionaryLearning.transform>`\\"

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform:2
msgid "Encode the data as a sparse combination of the dictionary atoms."
msgstr "Codifica los datos como una combinación dispersa de los átomos del diccionario."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit:9
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform:11
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.decomposition._dict_learning.DictionaryLearning.fit:8
msgid "Training vector, where `n_samples` in the number of samples and `n_features` is the number of features."
msgstr "Vector de entrenamiento, donde `n_samples` es el número de muestras y `n_features` es el número de características."

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit:12
msgid "**y**"
msgstr "**y**"

#: of
msgid "Ignored"
msgstr "Ignored"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.decomposition._dict_learning.DictionaryLearning.fit:17
msgid "Returns the object itself."
msgstr "Devuelve el mismo objeto."

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` e `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform:27
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "ndarray array de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.decomposition._dict_learning._BaseSparseCoding.transform:4
msgid "Coding method is determined by the object parameter `transform_algorithm`."
msgstr "El método de codificación está determinado por el parámetro del objeto `transform_algorithm`."

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr "ndarray de forma (n_samples, n_features)"

#: of sklearn.decomposition._dict_learning._BaseSparseCoding.transform:10
msgid "Test data to be transformed, must have the same number of features as the data used to train the model."
msgstr "Los datos de prueba que se van a transformar, deben tener el mismo número de características que los datos utilizados para entrenar el modelo."

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr "ndarray de forma (n_samples, n_components)"

#: of sklearn.decomposition._dict_learning._BaseSparseCoding.transform:16
msgid "Transformed data."
msgstr "Datos transformados."

