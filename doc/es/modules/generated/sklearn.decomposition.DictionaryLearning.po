msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-11 15:19\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.decomposition.DictionaryLearning.po\n"
"X-Crowdin-File-ID: 5102\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.decomposition.DictionaryLearning.rst:2
msgid ":mod:`sklearn.decomposition`.DictionaryLearning"
msgstr ":mod:`sklearn.decomposition`.DictionaryLearning"

#: of sklearn.decomposition._dict_learning.DictionaryLearning:2
msgid "Dictionary learning"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:4
msgid "Finds a dictionary (a set of atoms) that can best be used to represent data using a sparse code."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:7
msgid "Solves the optimization problem::"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:13
msgid "Read more in the :ref:`User Guide <DictionaryLearning>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._dict_learning.DictionaryLearning
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform
msgid "Parameters"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:18
msgid "**n_components**"
msgstr ""

#: of
msgid "int, default=n_features"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:18
msgid "Number of dictionary elements to extract."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:21
msgid "**alpha**"
msgstr ""

#: of
msgid "float, default=1.0"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:21
msgid "Sparsity controlling parameter."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:24
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=1000"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:24
msgid "Maximum number of iterations to perform."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:27
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-8"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:27
msgid "Tolerance for numerical error."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:37
msgid "**fit_algorithm**"
msgstr ""

#: of
msgid "{'lars', 'cd'}, default='lars'"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:30
msgid "`'lars'`: uses the least angle regression method to solve the lasso problem (:func:`~sklearn.linear_model.lars_path`);"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:32
msgid "`'cd'`: uses the coordinate descent method to compute the Lasso solution (:class:`~sklearn.linear_model.Lasso`). Lars will be faster if the estimated components are sparse."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:36
msgid "*cd* coordinate descent method to improve speed."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:54
msgid "**transform_algorithm**"
msgstr ""

#: of
msgid "{'lasso_lars', 'lasso_cd', 'lars', 'omp',             'threshold'}, default='omp'"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:40
msgid "Algorithm used to transform the data:"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:42
msgid "`'lars'`: uses the least angle regression method (:func:`~sklearn.linear_model.lars_path`);"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:44
msgid "`'lasso_lars'`: uses Lars to compute the Lasso solution."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:45
msgid "`'lasso_cd'`: uses the coordinate descent method to compute the Lasso solution (:class:`~sklearn.linear_model.Lasso`). `'lasso_lars'` will be faster if the estimated components are sparse."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:48
msgid "`'omp'`: uses orthogonal matching pursuit to estimate the sparse solution."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:50
msgid "`'threshold'`: squashes to zero all coefficients less than alpha from the projection ``dictionary * X'``."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:53
msgid "*lasso_cd* coordinate descent method to improve speed."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:60
msgid "**transform_n_nonzero_coefs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:57
msgid "Number of nonzero coefficients to target in each column of the solution. This is only used by `algorithm='lars'` and `algorithm='omp'` and is overridden by `alpha` in the `omp` case. If `None`, then `transform_n_nonzero_coefs=int(n_features / 10)`."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:70
msgid "**transform_alpha**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:63
msgid "If `algorithm='lasso_lars'` or `algorithm='lasso_cd'`, `alpha` is the penalty applied to the L1 norm. If `algorithm='threshold'`, `alpha` is the absolute value of the threshold below which coefficients will be squashed to zero. If `algorithm='omp'`, `alpha` is the tolerance parameter: the value of the reconstruction error targeted. In this case, it overrides `n_nonzero_coefs`. If `None`, default to 1.0"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:76
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int or None, default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:73
msgid "Number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:79
msgid "**code_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components), default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:79
msgid "Initial value for the code, for warm restart."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:82
msgid "**dict_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_features), default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:82
msgid "Initial values for the dictionary, for warm restart."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:85
msgid "**verbose**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:85
msgid "To control the verbosity of the procedure."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:90
msgid "**split_sign**"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:88
msgid "Whether to split the sparse feature vector into the concatenation of its negative part and its positive part. This can improve the performance of downstream classifiers."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:97
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:93
msgid "Used for initializing the dictionary when ``dict_init`` is not specified, randomly shuffling the data when ``shuffle`` is set to ``True``, and updating the dictionary. Pass an int for reproducible results across multiple function calls. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:102
msgid "**positive_code**"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:100
msgid "Whether to enforce positivity when finding the code."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:107
msgid "**positive_dict**"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:105
msgid "Whether to enforce positivity when finding the dictionary"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:116
msgid "**transform_max_iter**"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:110
msgid "Maximum number of iterations to perform if `algorithm='lasso_cd'` or `'lasso_lars'`."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning
msgid "Attributes"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:121
msgid "**components_**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:121
msgid "dictionary atoms extracted from the data"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:124
msgid "**error_**"
msgstr ""

#: of
msgid "array"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:124
msgid "vector of errors at each iteration"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:130
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:127
msgid "Number of iterations run."
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:135
msgid ":obj:`SparseCoder`"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:137
msgid ":obj:`MiniBatchDictionaryLearning`"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:139
msgid ":obj:`SparsePCA`"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:141
msgid ":obj:`MiniBatchSparsePCA`"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:145
msgid "Notes"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:146
msgid "**References:**"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:148
msgid "J. Mairal, F. Bach, J. Ponce, G. Sapiro, 2009: Online dictionary learning for sparse coding (https://www.di.ens.fr/sierra/pdfs/icml09.pdf)"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:153
msgid "Examples"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:166
msgid "We can check the level of sparsity of `X_transformed`:"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:171
msgid "We can compare the average squared euclidean norm of the reconstruction error of the sparse coded signal relative to the squared euclidean norm of the original signal:"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning:180
msgid "Methods"
msgstr ""

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.DictionaryLearning.fit>`\\"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning.fit:2
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid "Fit the model from data in X."
msgstr ""

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.decomposition.DictionaryLearning.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.DictionaryLearning.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`set_params <sklearn.decomposition.DictionaryLearning.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.DictionaryLearning.transform>`\\"
msgstr ""

#: of
#: sklearn.decomposition._dict_learning.DictionaryLearning:188:<autosummary>:1
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform:2
msgid "Encode the data as a sparse combination of the dictionary atoms."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit:9
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform:11
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning.fit:8
msgid "Training vector, where `n_samples` in the number of samples and `n_features` is the number of features."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit:12
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.decomposition._dict_learning.DictionaryLearning.fit:28
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.decomposition._dict_learning.DictionaryLearning.fit:17
msgid "Returns the object itself."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.decomposition._dict_learning._BaseSparseCoding.transform:27
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.decomposition._dict_learning._BaseSparseCoding.transform:4
msgid "Coding method is determined by the object parameter `transform_algorithm`."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.decomposition._dict_learning._BaseSparseCoding.transform:10
msgid "Test data to be transformed, must have the same number of features as the data used to train the model."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.decomposition._dict_learning._BaseSparseCoding.transform:16
msgid "Transformed data."
msgstr ""

