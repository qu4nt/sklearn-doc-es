msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-11 22:58\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.covariance.LedoitWolf.po\n"
"X-Crowdin-File-ID: 5070\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.covariance.LedoitWolf.rst:2
msgid ":mod:`sklearn.covariance`.LedoitWolf"
msgstr ":mod:`sklearn.covariance`.LedoitWolf"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:2
msgid "LedoitWolf Estimator"
msgstr "Estimador Ledoit-Wolf"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:4
msgid "Ledoit-Wolf is a particular form of shrinkage, where the shrinkage coefficient is computed using O. Ledoit and M. Wolf's formula as described in \"A Well-Conditioned Estimator for Large-Dimensional Covariance Matrices\", Ledoit and Wolf, Journal of Multivariate Analysis, Volume 88, Issue 2, February 2004, pages 365-411."
msgstr "Ledoit-Wolf es una forma particular de reducción, donde el coeficiente de reducción se calcula usando la formula de O. Ledoit y M. Wolf como fue descrita en \"A Well-Conditioned Estimator for Large-Dimensional Covariance Matrices\", Ledoit and Wolf, Journal of Multivariate Analysis, Volume 88, Issue 2, February 2004, pages 365-411."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:10
msgid "Read more in the :ref:`User Guide <shrunk_covariance>`."
msgstr "Más información en el :ref:`Manual de usuario <shrunk_covariance>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._shrunk_covariance.LedoitWolf
#: sklearn.covariance._shrunk_covariance.LedoitWolf.fit
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:15
msgid "**store_precision**"
msgstr "**store_precision**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:15
msgid "Specify if the estimated precision is stored."
msgstr "Especifica si se almacena la precisión estimada."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:21
msgid "**assume_centered**"
msgstr "**assume_centered**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:18
msgid "If True, data will not be centered before computation. Useful when working with data whose mean is almost, but not exactly zero. If False (default), data will be centered before computation."
msgstr "Si es True, los datos no se centrarán antes del calculó. Útil al trabajar con datos cuya media es casí, pero no igual a cero. Si es False (por defecto), los datos se centrarán antes del cálculo."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:29
msgid "**block_size**"
msgstr "**block_size**"

#: of
msgid "int, default=1000"
msgstr "int, default=1000"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:24
msgid "Size of blocks into which the covariance matrix will be split during its Ledoit-Wolf estimation. This is purely a memory optimization and does not affect results."
msgstr "Tamaño de los bloques en los que se dividirá la matriz de covarianza durante su estimación Ledoit-Wolf. Esto es solamente una optimización de la memoria y no afecta a los resultados."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:34
msgid "**covariance_**"
msgstr "**covariance_**"

#: of
msgid "ndarray of shape (n_features, n_features)"
msgstr "ndarray de forma (n_features, n_features)"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:34
msgid "Estimated covariance matrix."
msgstr "Matriz de covarianza estimada."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:37
msgid "**location_**"
msgstr "**location_**"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:37
msgid "Estimated location, i.e. the estimated mean."
msgstr "Ubicación estimada, es decir, la media estimada."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:20
#: sklearn.covariance._shrunk_covariance.LedoitWolf:41
msgid "**precision_**"
msgstr "**precision_**"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:40
msgid "Estimated pseudo inverse matrix. (stored only if store_precision is True)"
msgstr "Matriz pseudo inversa estimada. (almacenada sólo si store_precision es True)"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:49
msgid "**shrinkage_**"
msgstr "**shrinkage_**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:44
msgid "Coefficient in the convex combination used for the computation of the shrunk estimate. Range is [0, 1]."
msgstr "Coeficiente en la combinación convex utilizada para el cálculo de la estimación reducida. Su rango es [0, 1]."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:52
msgid "Notes"
msgstr "Notas"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:53
msgid "The regularised covariance is:"
msgstr "La covarianza regularizada es:"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:55
msgid "(1 - shrinkage) * cov + shrinkage * mu * np.identity(n_features)"
msgstr "(1 - shrinkage) * cov + shrinkage * mu * np.identity(n_features)"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:57
msgid "where mu = trace(cov) / n_features and shrinkage is given by the Ledoit and Wolf formula (see References)"
msgstr "donde mu = trace(cov) / n_features y la reducción es dada por la fórmula Ledoit y Wolf (ver referencias)"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:61
msgid "References"
msgstr "Referencias"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:62
msgid "\"A Well-Conditioned Estimator for Large-Dimensional Covariance Matrices\", Ledoit and Wolf, Journal of Multivariate Analysis, Volume 88, Issue 2, February 2004, pages 365-411."
msgstr "\"A Well-Conditioned Estimator for Large-Dimensional Covariance Matrices\", Ledoit and Wolf, Journal of Multivariate Analysis, Volume 88, Issue 2, February 2004, pages 365-411."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:71
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:88
msgid "Methods"
msgstr "Métodos"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid ":obj:`error_norm <sklearn.covariance.LedoitWolf.error_norm>`\\"
msgstr ":obj:`error_norm <sklearn.covariance.LedoitWolf.error_norm>`\\"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid "Computes the Mean Squared Error between two covariance estimators."
msgstr "Calcula el Error Cuadrático Medio entre dos estimadores de covarianza."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid ":obj:`fit <sklearn.covariance.LedoitWolf.fit>`\\"
msgstr ":obj:`fit <sklearn.covariance.LedoitWolf.fit>`\\"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf.fit:2
#: sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid "Fit the Ledoit-Wolf shrunk covariance model according to the given training data and parameters."
msgstr "Encaja el modelo de covarianza reducida Ledoit-Wolf de acuerdo a los datos de entrenamiento y parámetros dados."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid ":obj:`get_params <sklearn.covariance.LedoitWolf.get_params>`\\"
msgstr ":obj:`get_params <sklearn.covariance.LedoitWolf.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid ":obj:`get_precision <sklearn.covariance.LedoitWolf.get_precision>`\\"
msgstr ":obj:`get_precision <sklearn.covariance.LedoitWolf.get_precision>`\\"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:2
#: sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid "Getter for the precision matrix."
msgstr "Colector para la matriz de precisión."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid ":obj:`mahalanobis <sklearn.covariance.LedoitWolf.mahalanobis>`\\"
msgstr ":obj:`mahalanobis <sklearn.covariance.LedoitWolf.mahalanobis>`\\"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:2
#: sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid "Computes the squared Mahalanobis distances of given observations."
msgstr "Calcula las distancias de mahalanobis cuadráticas de las observaciones dadas."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid ":obj:`score <sklearn.covariance.LedoitWolf.score>`\\"
msgstr ":obj:`score <sklearn.covariance.LedoitWolf.score>`\\"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:2
#: sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid "Computes the log-likelihood of a Gaussian data set with `self.covariance_` as an estimator of its covariance matrix."
msgstr "Calcula el log-likelihood de un conjunto de datos Gaussiano con `self.covariance_` como un estimador de su matriz de covarianza."

#: of sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid ":obj:`set_params <sklearn.covariance.LedoitWolf.set_params>`\\"
msgstr ":obj:`set_params <sklearn.covariance.LedoitWolf.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.covariance._shrunk_covariance.LedoitWolf:98:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:2
msgid "Computes the Mean Squared Error between two covariance estimators. (In the sense of the Frobenius norm)."
msgstr "Calcula el Error Cuadrático Medio entre dos estimadores de covarianza. (En el sentido de la norma Frobenius)."

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "**comp_cov**"
msgstr "**comp_cov**"

#: of
msgid "array-like of shape (n_features, n_features)"
msgstr "array-like de forma (n_features, n_features)"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "The covariance to compare with."
msgstr "La covarianza con la cual se compara."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:15
msgid "**norm**"
msgstr "**norm**"

#: of
msgid "{\"frobenius\", \"spectral\"}, default=\"frobenius\""
msgstr "{\"frobenius\", \"spectral\"}, default=\"frobenius\""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:12
msgid "The type of norm used to compute the error. Available error types: - 'frobenius' (default): sqrt(tr(A^t.A)) - 'spectral': sqrt(max(eigenvalues(A^t.A)) where A is the error ``(comp_cov - self.covariance_)``."
msgstr "El tipo de norma utilizada para calcular el error. Tipos de error disponibles: - 'frobenius' (por defecto): sqrt(tr(A^t.)) - 'spectral': sqrt(max(eigenvalues(A^t.A)) donde A es el error ``(comp_cov - self.covariance_)``."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:19
msgid "**scaling**"
msgstr "**scaling**"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:18
msgid "If True (default), the squared error norm is divided by n_features. If False, the squared error norm is not rescaled."
msgstr "Si es True (predeterminado), la norma de error cuadrático es dividida por n_features. Si es False, la norma de error cuadrático no es reescalada."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:24
msgid "**squared**"
msgstr "**squared**"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:22
msgid "Whether to compute the squared error norm or the error norm. If True (default), the squared error norm is returned. If False, the error norm is returned."
msgstr "Si se calcula la norma de error cuadrático o la norma de error. Si es True (predeterminado) se devuelve la norma de error cuadrático. Si es False, se devuelve la norma de error."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._shrunk_covariance.LedoitWolf.fit
msgid "Returns"
msgstr "Salida"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:41
msgid "**result**"
msgstr "**result**"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:29
msgid "The Mean Squared Error (in the sense of the Frobenius norm) between `self` and `comp_cov` covariance estimators."
msgstr "El Error Cuadrático Medio (en el sentido de la norma Frobenius) entre los estimadores de covarianza `self` y `comp_cov`."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:10
#: sklearn.covariance._shrunk_covariance.LedoitWolf.fit:10
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.covariance._shrunk_covariance.LedoitWolf.fit:9
msgid "Training data, where `n_samples` is the number of samples and `n_features` is the number of features."
msgstr "Datos de entrenamiento, donde `n_samples` es el número de muestras y `n_features` es el número de características."

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._shrunk_covariance.LedoitWolf.fit:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "Ignored"
msgstr "Ignorado"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._shrunk_covariance.LedoitWolf.fit:13
msgid "Not used, present for API consistency by convention."
msgstr "No se utiliza, está presente para la coherencia de la API por convención."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.covariance._shrunk_covariance.LedoitWolf.fit:29
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "objeto"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros asignados a sus valores."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:9
msgid "The precision matrix associated to the current covariance object."
msgstr "La matriz de precisión asociada al objeto de covariancia actual."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:8
msgid "The observations, the Mahalanobis distances of the which we compute. Observations are assumed to be drawn from the same distribution than the data used in fit."
msgstr "Las observaciones, las distancias Mahalanobis de lo que calculamos. Se asume que las observaciones se extraen de la misma distribución que utilizaron los datos en el ajuste."

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:26
msgid "**dist**"
msgstr "**dist**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:15
msgid "Squared Mahalanobis distances of the observations."
msgstr "Distancias de Mahalanobis cuadráticas de las observaciones."

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:12
msgid "**X_test**"
msgstr "**X_test**"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:9
msgid "Test data of which we compute the likelihood, where n_samples is the number of samples and n_features is the number of features. X_test is assumed to be drawn from the same distribution than the data used in fit (including centering)."
msgstr "Los datos de prueba de los cuales calculamos la probabilidad, donde n_samples es el número de muestras y n_features es el número de características. Se asume que X_test se extrae de la misma distribución que los datos utilizados (incluyendo el centrado)."

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:32
msgid "**res**"
msgstr "**res**"

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:20
msgid "The likelihood of the data set with `self.covariance_` as an estimator of its covariance matrix."
msgstr "La probabilidad del conjunto de datos con `self.covariance_` como un estimador de su matriz de covarianza."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

