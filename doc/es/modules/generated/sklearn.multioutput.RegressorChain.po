msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-05 00:31\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.multioutput.RegressorChain.po\n"
"X-Crowdin-File-ID: 5368\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.multioutput.RegressorChain.rst:2
msgid ":mod:`sklearn.multioutput`.RegressorChain"
msgstr ":mod:`sklearn.multioutput`.RegressorChain"

#: of sklearn.multioutput.RegressorChain:2
msgid "A multi-label model that arranges regressions into a chain."
msgstr "Un modelo de multietiqueta que organiza regresiones en una cadena."

#: of sklearn.multioutput.RegressorChain:4
msgid "Each model makes a prediction in the order specified by the chain using all of the available features provided to the model plus the predictions of models that are earlier in the chain."
msgstr "Cada modelo realiza una predicción en el orden especificado por la cadena utilizando todas las características disponibles proporcionadas al modelo, más las predicciones de los modelos que están antes en la cadena."

#: of sklearn.multioutput.RegressorChain:8
msgid "Read more in the :ref:`User Guide <regressorchain>`."
msgstr "Más información en el :ref:`Manual de usuario <regressorchain>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.multioutput.RegressorChain sklearn.multioutput.RegressorChain.fit
#: sklearn.multioutput._BaseChain.predict
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.multioutput.RegressorChain:15
msgid "**base_estimator**"
msgstr "**base_estimator**"

#: of
msgid "estimator"
msgstr "estimador"

#: of sklearn.multioutput.RegressorChain:15
msgid "The base estimator from which the classifier chain is built."
msgstr "El estimador base a partir del cual se construye la cadena de clasificación."

#: of sklearn.multioutput.RegressorChain:32
msgid "**order**"
msgstr "**order**"

#: of
msgid "array-like of shape (n_outputs,) or 'random', default=None"
msgstr "array-like de forma (n_outputs,) o 'random ', default=None"

#: of sklearn.multioutput.RegressorChain:18
msgid "If None, the order will be determined by the order of columns in the label matrix Y.::"
msgstr "Si es None, el orden será determinado por el orden de las columnas en la matriz de etiquetas Y.::"

#: of sklearn.multioutput.RegressorChain:23
msgid "The order of the chain can be explicitly set by providing a list of integers. For example, for a chain of length 5.::"
msgstr "El orden de la cadena puede establecerse explícitamente proporcionando una lista de enteros. Por ejemplo, para una cadena de longitud 5.::"

#: of sklearn.multioutput.RegressorChain:28
msgid "means that the first model in the chain will make predictions for column 1 in the Y matrix, the second model will make predictions for column 3, etc."
msgstr "significa que el primer modelo de la cadena hará predicciones para la columna 1 de la matriz Y, el segundo modelo hará predicciones para la columna 3, etc."

#: of sklearn.multioutput.RegressorChain:32
msgid "If order is 'random' a random ordering will be used."
msgstr "Si el orden es 'random' se usará un orden aleatorio."

#: of sklearn.multioutput.RegressorChain:42
msgid "**cv**"
msgstr "**cv**"

#: of
msgid "int, cross-validation generator or an iterable, default=None"
msgstr "entero, generador de validación cruzada o un iterable, default=None"

#: of sklearn.multioutput.RegressorChain:35
msgid "Determines whether to use cross validated predictions or true labels for the results of previous estimators in the chain. Possible inputs for cv are:"
msgstr "Determina si se utilizan predicciones validadas de forma cruzada o etiquetas verdaderas para los resultados de los estimadores anteriores en la cadena. Las entradas posibles para cv son:"

#: of sklearn.multioutput.RegressorChain:39
msgid "None, to use true labels when fitting,"
msgstr "None, para usar etiquetas verdaderas cuando se haga el ajuste,"

#: of sklearn.multioutput.RegressorChain:40
msgid "integer, to specify the number of folds in a (Stratified)KFold,"
msgstr "entero, para especificar el número de pliegues en un (Stratified)KFold,"

#: of sklearn.multioutput.RegressorChain:41
msgid ":term:`CV splitter`,"
msgstr ":term:`CV splitter`,"

#: of sklearn.multioutput.RegressorChain:42
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr "Un iterable que produce divisiones (train, test) como arreglos de índices."

#: of sklearn.multioutput.RegressorChain:54
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, optional (default=None)"
msgstr "entero, instancia de RandomState o None, opcional (default=None)"

#: of sklearn.multioutput.RegressorChain:45
msgid "If ``order='random'``, determines random number generation for the chain order. In addition, it controls the random seed given at each `base_estimator` at each chaining iteration. Thus, it is only used when `base_estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Si ``order='random'``, determina la generación de números aleatorios para el orden de la cadena. Además, controla la semilla aleatoria dada en cada `base_estimator` en cada iteración de encadenamiento. Por lo tanto, sólo se utiliza cuando `base_estimator` expone un `random_state`. Pasa un int para una salida reproducible a través de múltiples llamadas a la función. Véase :term:`Glosario <random_state>`."

#: of sklearn.multioutput.RegressorChain
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.multioutput.RegressorChain:59
msgid "**estimators_**"
msgstr "**estimators_**"

#: of
msgid "list"
msgstr "lista"

#: of sklearn.multioutput.RegressorChain:59
msgid "A list of clones of base_estimator."
msgstr "Una lista de clones de base_estimator."

#: of sklearn.multioutput.RegressorChain:65
msgid "**order_**"
msgstr "**order_**"

#: of sklearn.multioutput.RegressorChain:62
msgid "The order of labels in the classifier chain."
msgstr "El orden de las etiquetas en la cadena de clasificadores."

#: of sklearn.multioutput.RegressorChain:70
msgid ":obj:`ClassifierChain`"
msgstr ":obj:`ClassifierChain`"

#: of sklearn.multioutput.RegressorChain:71
msgid "Equivalent for classification."
msgstr "Equivalente para la clasificación."

#: of sklearn.multioutput.RegressorChain:72
msgid ":obj:`MultioutputRegressor`"
msgstr ":obj:`MultioutputRegressor`"

#: of sklearn.multioutput.RegressorChain:73
msgid "Learns each output independently rather than chaining."
msgstr "Aprende cada salida de forma independiente en lugar de encadenarla."

#: of sklearn.multioutput.RegressorChain:79
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.multioutput.RegressorChain:91
msgid "Methods"
msgstr "Métodos"

#: of sklearn.multioutput.RegressorChain:99:<autosummary>:1
msgid ":obj:`fit <sklearn.multioutput.RegressorChain.fit>`\\"
msgstr ":obj:`fit <sklearn.multioutput.RegressorChain.fit>`\\"

#: of sklearn.multioutput.RegressorChain.fit:2
#: sklearn.multioutput.RegressorChain:99:<autosummary>:1
msgid "Fit the model to data matrix X and targets Y."
msgstr "Ajusta el modelo a la matriz de datos X y a los objetivos Y."

#: of sklearn.multioutput.RegressorChain:99:<autosummary>:1
msgid ":obj:`get_params <sklearn.multioutput.RegressorChain.get_params>`\\"
msgstr ":obj:`get_params <sklearn.multioutput.RegressorChain.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.multioutput.RegressorChain:99:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.multioutput.RegressorChain:99:<autosummary>:1
msgid ":obj:`predict <sklearn.multioutput.RegressorChain.predict>`\\"
msgstr ":obj:`predict <sklearn.multioutput.RegressorChain.predict>`\\"

#: of sklearn.multioutput.RegressorChain:99:<autosummary>:1
#: sklearn.multioutput._BaseChain.predict:2
msgid "Predict on the data matrix X using the ClassifierChain model."
msgstr "Predecir sobre la matriz de datos X utilizando el modelo ClassifierChain."

#: of sklearn.multioutput.RegressorChain:99:<autosummary>:1
msgid ":obj:`score <sklearn.multioutput.RegressorChain.score>`\\"
msgstr ":obj:`score <sklearn.multioutput.RegressorChain.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.multioutput.RegressorChain:99:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.multioutput.RegressorChain:99:<autosummary>:1
msgid ":obj:`set_params <sklearn.multioutput.RegressorChain.set_params>`\\"
msgstr ":obj:`set_params <sklearn.multioutput.RegressorChain.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.multioutput.RegressorChain:99:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.multioutput.RegressorChain.fit:8
#: sklearn.multioutput._BaseChain.predict:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.multioutput.RegressorChain.fit:8
#: sklearn.multioutput._BaseChain.predict:8
msgid "The input data."
msgstr "Los datos de entrada."

#: of sklearn.multioutput.RegressorChain.fit:11
msgid "**Y**"
msgstr "**Y**"

#: of
msgid "array-like of shape (n_samples, n_classes)"
msgstr "array-like de forma (n_samples, n_classes)"

#: of sklearn.multioutput.RegressorChain.fit:11
msgid "The target values."
msgstr "Valores objetivo."

#: of sklearn.multioutput.RegressorChain.fit:17
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict of string -> object"
msgstr "dict de str -> object"

#: of sklearn.multioutput.RegressorChain.fit:14
msgid "Parameters passed to the `fit` method at each step of the regressor chain."
msgstr "Parámetros pasados al método `fit` en cada paso de la cadena de regresores."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.multioutput.RegressorChain.fit
#: sklearn.multioutput._BaseChain.predict
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.multioutput.RegressorChain.fit:33
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.multioutput._BaseChain.predict:24
msgid "**Y_pred**"
msgstr "**Y_pred**"

#: of sklearn.multioutput._BaseChain.predict:13
msgid "The predicted values."
msgstr "Valores predichos."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma de cuadrados de los residuos ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1.0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0.0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz núcleo precalculada o una lista de objetos genéricos en su lugar con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of sklearn.base.RegressorMixin.score:23
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) or (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores True para X`."

#: of sklearn.base.RegressorMixin.score:26
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` of ``self.predict(X)`` wrt. `y`."

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr "Notas"

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "El valor :math:`R^2` utilizado al invocar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la consistencia con el valor predeterminado de :func:`~sklearn.metrics.r2_score`. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

