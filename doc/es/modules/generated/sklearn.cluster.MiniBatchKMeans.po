msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:10\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.cluster.MiniBatchKMeans.po\n"
"X-Crowdin-File-ID: 5144\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.cluster.MiniBatchKMeans.rst:2
msgid ":mod:`sklearn.cluster`.MiniBatchKMeans"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:2
msgid "Mini-Batch K-Means clustering."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:4
msgid "Read more in the :ref:`User Guide <mini_batch_kmeans>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.cluster._kmeans.KMeans.fit_predict
#: sklearn.cluster._kmeans.KMeans.fit_transform
#: sklearn.cluster._kmeans.KMeans.score
#: sklearn.cluster._kmeans.KMeans.transform
#: sklearn.cluster._kmeans.MiniBatchKMeans
#: sklearn.cluster._kmeans.MiniBatchKMeans.fit
#: sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit
#: sklearn.cluster._kmeans.MiniBatchKMeans.predict
msgid "Parameters"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:10
msgid "**n_clusters**"
msgstr ""

#: of
msgid "int, default=8"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:9
msgid "The number of clusters to form as well as the number of centroids to generate."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:26
msgid "**init**"
msgstr ""

#: of
msgid "{'k-means++', 'random'}, callable or array-like of shape             (n_clusters, n_features), default='k-means++'"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:13
msgid "Method for initialization:"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:15
msgid "'k-means++' : selects initial cluster centers for k-mean clustering in a smart way to speed up convergence. See section Notes in k_init for more details."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:19
msgid "'random': choose `n_clusters` observations (rows) at random from data for the initial centroids."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:22
msgid "If an array is passed, it should be of shape (n_clusters, n_features) and gives the initial centers."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:25
msgid "If a callable is passed, it should take arguments X, n_clusters and a random state and return an initialization."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:30
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:29
msgid "Maximum number of iterations over the complete dataset before stopping independently of any early stopping criterion heuristics."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:33
msgid "**batch_size**"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:33
msgid "Size of the mini batches."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:36
msgid "**verbose**"
msgstr ""

#: of
msgid "int, default=0"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:36
msgid "Verbosity mode."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:40
msgid "**compute_labels**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:39
msgid "Compute label assignment and inertia for the complete dataset once the minibatch optimization has converged in fit."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:45
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:43
msgid "Determines random number generation for centroid initialization and random reassignment. Use an int to make the randomness deterministic. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:56
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=0.0"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:48
msgid "Control early stopping based on the relative center changes as measured by a smoothed, variance-normalized of the mean center squared position changes. This early stopping heuristics is closer to the one used for the batch variant of the algorithms but induces a slight computational and memory overhead over the inertia heuristic."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:55
msgid "To disable convergence detection based on normalized center change, set tol to 0.0 (default)."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:63
msgid "**max_no_improvement**"
msgstr ""

#: of
msgid "int, default=10"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:59
msgid "Control early stopping based on the consecutive number of mini batches that does not yield an improvement on the smoothed inertia."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:62
msgid "To disable convergence detection based on inertia, set max_no_improvement to None."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:71
msgid "**init_size**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:66
msgid "Number of samples to randomly sample for speeding up the initialization (sometimes at the expense of accuracy): the only algorithm is initialized by running a batch KMeans on a random subset of the data. This needs to be larger than n_clusters."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:71
msgid "If `None`, `init_size= 3 * batch_size`."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:76
msgid "**n_init**"
msgstr ""

#: of
msgid "int, default=3"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:74
msgid "Number of random initializations that are tried. In contrast to KMeans, the algorithm is only run once, using the best of the ``n_init`` initializations as measured by inertia."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:86
msgid "**reassignment_ratio**"
msgstr ""

#: of
msgid "float, default=0.01"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:79
msgid "Control the fraction of the maximum number of counts for a center to be reassigned. A higher value means that low count centers are more easily reassigned, which means that the model will take longer to converge, but should converge in a better clustering."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans
msgid "Attributes"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:91
msgid "**cluster_centers_**"
msgstr ""

#: of
msgid "ndarray of shape (n_clusters, n_features)"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:91
msgid "Coordinates of cluster centers."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:94
msgid "**labels_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:94
msgid "Labels of each point (if compute_labels is set to True)."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:100
msgid "**inertia_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:97
msgid "The value of the inertia criterion associated with the chosen partition (if compute_labels is set to True). The inertia is defined as the sum of square distances of samples to their nearest neighbor."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:103
msgid "**n_iter_**"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:103
msgid "Number of batches processed."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:110
msgid "**counts_**"
msgstr ""

#: of
msgid "ndarray of shape (n_clusters,)"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:106
msgid "Weigth sum of each cluster."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:108
#: sklearn.cluster._kmeans.MiniBatchKMeans:115
msgid "This attribute is deprecated in 0.24 and will be removed in 1.1 (renaming of 0.26)."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:120
msgid "**init_size_**"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:113
msgid "The effective number of samples used for the initialization."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:125
msgid ":obj:`KMeans`"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:126
msgid "The classic implementation of the clustering method based on the Lloyd's algorithm. It consumes the whole set of input data at each iteration."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:130
msgid "Notes"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:131
msgid "See https://www.eecs.tufts.edu/~dsculley/papers/fastkmeans.pdf"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:135
msgid "Examples"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:165
msgid "Methods"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid ":obj:`fit <sklearn.cluster.MiniBatchKMeans.fit>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans.fit:2
#: sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid "Compute the centroids on X by chunking it into mini-batches."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid ":obj:`fit_predict <sklearn.cluster.MiniBatchKMeans.fit_predict>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:2
#: sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid "Compute cluster centers and predict cluster index for each sample."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.cluster.MiniBatchKMeans.fit_transform>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_transform:2
#: sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid "Compute clustering and transform X to cluster-distance space."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid ":obj:`get_params <sklearn.cluster.MiniBatchKMeans.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.cluster.MiniBatchKMeans.partial_fit>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit:2
#: sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid "Update k means estimate on a single mini-batch X."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid ":obj:`predict <sklearn.cluster.MiniBatchKMeans.predict>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans.predict:2
#: sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid "Predict the closest cluster each sample in X belongs to."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid ":obj:`score <sklearn.cluster.MiniBatchKMeans.score>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.score:2
#: sklearn.cluster._kmeans.KMeans.score:20
#: sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid "Opposite of the value of X on the K-means objective."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid ":obj:`set_params <sklearn.cluster.MiniBatchKMeans.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid ":obj:`transform <sklearn.cluster.MiniBatchKMeans.transform>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.transform:2
#: sklearn.cluster._kmeans.MiniBatchKMeans:177:<autosummary>:1
msgid "Transform X to a cluster-distance space."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:10
#: sklearn.cluster._kmeans.KMeans.fit_transform:9
#: sklearn.cluster._kmeans.KMeans.score:8
#: sklearn.cluster._kmeans.KMeans.transform:11
#: sklearn.cluster._kmeans.MiniBatchKMeans.fit:10
#: sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit:9
#: sklearn.cluster._kmeans.MiniBatchKMeans.predict:11
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans.fit:8
msgid "Training instances to cluster. It must be noted that the data will be converted to C ordering, which will cause a memory copy if the given data is not C-contiguous."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:13
#: sklearn.cluster._kmeans.KMeans.fit_transform:12
#: sklearn.cluster._kmeans.KMeans.score:11
#: sklearn.cluster._kmeans.MiniBatchKMeans.fit:13
#: sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit:12
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:13
#: sklearn.cluster._kmeans.KMeans.fit_transform:12
#: sklearn.cluster._kmeans.KMeans.score:11
#: sklearn.cluster._kmeans.MiniBatchKMeans.fit:13
#: sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit:12
msgid "Not used, present here for API consistency by convention."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:17
#: sklearn.cluster._kmeans.KMeans.fit_transform:16
#: sklearn.cluster._kmeans.KMeans.score:15
#: sklearn.cluster._kmeans.MiniBatchKMeans.fit:19
#: sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit:16
#: sklearn.cluster._kmeans.MiniBatchKMeans.predict:15
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans.fit:16
#: sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit:15
#: sklearn.cluster._kmeans.MiniBatchKMeans.predict:14
msgid "The weights for each observation in X. If None, all observations are assigned equal weight (default: None)."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.cluster._kmeans.KMeans.fit_predict
#: sklearn.cluster._kmeans.KMeans.fit_transform
#: sklearn.cluster._kmeans.KMeans.score
#: sklearn.cluster._kmeans.KMeans.transform
#: sklearn.cluster._kmeans.MiniBatchKMeans.fit
#: sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit
#: sklearn.cluster._kmeans.MiniBatchKMeans.predict
msgid "Returns"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans.fit:35
#: sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit:32
msgid "self"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:4
msgid "Convenience method; equivalent to calling fit(X) followed by predict(X)."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:10
#: sklearn.cluster._kmeans.KMeans.fit_transform:9
#: sklearn.cluster._kmeans.KMeans.transform:11
msgid "New data to transform."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:16
#: sklearn.cluster._kmeans.KMeans.fit_transform:15
#: sklearn.cluster._kmeans.KMeans.score:14
msgid "The weights for each observation in X. If None, all observations are assigned equal weight."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:33
#: sklearn.cluster._kmeans.MiniBatchKMeans.predict:31
msgid "**labels**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:22
#: sklearn.cluster._kmeans.MiniBatchKMeans.predict:20
msgid "Index of the cluster each sample belongs to."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_transform:4
msgid "Equivalent to fit(X).transform(X), but more efficiently implemented."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_transform:32
#: sklearn.cluster._kmeans.KMeans.transform:27
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_clusters)"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_transform:21
#: sklearn.cluster._kmeans.KMeans.transform:16
msgid "X transformed in the new space."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans.partial_fit:8
msgid "Coordinates of the data points to cluster. It must be noted that X will be copied if it is not C-contiguous."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans.predict:4
msgid "In the vector quantization literature, `cluster_centers_` is called the code book and each value returned by `predict` is the index of the closest code in the code book."
msgstr ""

#: of sklearn.cluster._kmeans.MiniBatchKMeans.predict:11
msgid "New data to predict."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.score:8
msgid "New data."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.score:31
msgid "**score**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.transform:4
msgid "In the new space, each dimension is the distance to the cluster centers. Note that even if X is sparse, the array returned by `transform` will typically be dense."
msgstr ""

#: ../modules/generated/sklearn.cluster.MiniBatchKMeans.examples:4
msgid "Examples using ``sklearn.cluster.MiniBatchKMeans``"
msgstr ""

#: ../modules/generated/sklearn.cluster.MiniBatchKMeans.examples:15
#: ../modules/generated/sklearn.cluster.MiniBatchKMeans.examples:23
msgid ":ref:`sphx_glr_auto_examples_text_plot_document_clustering.py`"
msgstr ""

