msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-04-15 00:04\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.KBinsDiscretizer.po\n"
"X-Crowdin-File-ID: 3680\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.KBinsDiscretizer.rst:2
msgid ":mod:`sklearn.preprocessing`.KBinsDiscretizer"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:2
msgid "Bin continuous data into intervals."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:4
msgid "Read more in the :ref:`User Guide <preprocessing_discretization>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._discretization.KBinsDiscretizer
#: sklearn.preprocessing._discretization.KBinsDiscretizer.fit
#: sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform
#: sklearn.preprocessing._discretization.KBinsDiscretizer.transform
msgid "Parameters"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:11
msgid "**n_bins**"
msgstr ""

#: of
msgid "int or array-like of shape (n_features,), default=5"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:11
msgid "The number of bins to produce. Raises ValueError if ``n_bins < 2``."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:25
msgid "**encode**"
msgstr ""

#: of
msgid "{'onehot', 'onehot-dense', 'ordinal'}, default='onehot'"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:14
msgid "Method used to encode the transformed result."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:18
msgid "onehot"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:17
msgid "Encode the transformed result with one-hot encoding and return a sparse matrix. Ignored features are always stacked to the right."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:22
msgid "onehot-dense"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:21
msgid "Encode the transformed result with one-hot encoding and return a dense array. Ignored features are always stacked to the right."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:25
msgid "ordinal"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:25
msgid "Return the bin identifier encoded as an integer value."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:36
msgid "**strategy**"
msgstr ""

#: of
msgid "{'uniform', 'quantile', 'kmeans'}, default='quantile'"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:28
msgid "Strategy used to define the widths of the bins."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:30
msgid "uniform"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:31
msgid "All bins in each feature have identical widths."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:32
msgid "quantile"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:33
msgid "All bins in each feature have the same number of points."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:36
msgid "kmeans"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:35
msgid "Values in each bin have the same nearest center of a 1D k-means cluster."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:46
msgid "**dtype**"
msgstr ""

#: of
msgid "{np.float32, np.float64}, default=None"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:39
msgid "The desired data-type for the output. If None, output dtype is consistent with input dtype. Only np.float32 and np.float64 are supported."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer
msgid "Attributes"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:52
msgid "**n_bins_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,), dtype=np.int_"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:51
msgid "Number of bins per feature. Bins whose width are too small (i.e., <= 1e-8) are removed with a warning."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:59
msgid "**bin_edges_**"
msgstr ""

#: of
msgid "ndarray of ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:55
msgid "The edges of each bin. Contain arrays of varying shapes ``(n_bins_, )`` Ignored features will have empty arrays."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:64
msgid ":obj:`Binarizer`"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:65
msgid "Class used to bin values as ``0`` or ``1`` based on a parameter ``threshold``."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:69
msgid "Notes"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:70
msgid "In bin edges for feature ``i``, the first and last values are used only for ``inverse_transform``. During transform, bin edges are extended to::"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:75
msgid "You can combine ``KBinsDiscretizer`` with :class:`~sklearn.compose.ColumnTransformer` if you only want to preprocess part of the features."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:79
msgid "``KBinsDiscretizer`` might produce constant features (e.g., when ``encode = 'onehot'`` and certain bins do not contain any data). These features can be removed with feature selection algorithms (e.g., :class:`~sklearn.feature_selection.VarianceThreshold`)."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:86
msgid "Examples"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:101
msgid "Sometimes it may be useful to convert the data back into the original feature space. The ``inverse_transform`` function converts the binned data into the original feature space. Each value will be equal to the mean of the two bin edges."
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer:115
msgid "Methods"
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.KBinsDiscretizer.fit>`\\"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer.fit:2
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid "Fit the estimator."
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.KBinsDiscretizer.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.KBinsDiscretizer.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.preprocessing.KBinsDiscretizer.inverse_transform>`\\"
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform:2
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid "Transform discretized data back to original feature space."
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.KBinsDiscretizer.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.KBinsDiscretizer.transform>`\\"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer.transform:2
#: sklearn.preprocessing._discretization.KBinsDiscretizer:124:<autosummary>:1
msgid "Discretize the data."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.preprocessing._discretization.KBinsDiscretizer.fit:8
#: sklearn.preprocessing._discretization.KBinsDiscretizer.transform:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer.fit:8
#: sklearn.preprocessing._discretization.KBinsDiscretizer.transform:8
msgid "Data to be discretized."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.preprocessing._discretization.KBinsDiscretizer.fit:12
msgid "**y**"
msgstr ""

#: of
msgid "None"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer.fit:11
msgid "Ignored. This parameter exists only for compatibility with :class:`~sklearn.pipeline.Pipeline`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._discretization.KBinsDiscretizer.fit
#: sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform
#: sklearn.preprocessing._discretization.KBinsDiscretizer.transform
msgid "Returns"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer.fit:28
msgid "self"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform:4
msgid "Note that this function does not regenerate the original data due to discretization rounding."
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform:10
#: sklearn.preprocessing._discretization.KBinsDiscretizer.transform:25
msgid "**Xt**"
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform:10
msgid "Transformed data in the binned space."
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform:26
msgid "**Xinv**"
msgstr ""

#: of
msgid "ndarray, dtype={np.float32, np.float64}"
msgstr ""

#: of
#: sklearn.preprocessing._discretization.KBinsDiscretizer.inverse_transform:15
msgid "Data in the original feature space."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of
msgid "{ndarray, sparse matrix}, dtype={np.float32, np.float64}"
msgstr ""

#: of sklearn.preprocessing._discretization.KBinsDiscretizer.transform:13
msgid "Data in the binned space. Will be a sparse matrix if `self.encode='onehot'` and ndarray otherwise."
msgstr ""

#: ../modules/generated/sklearn.preprocessing.KBinsDiscretizer.examples:4
msgid "Examples using ``sklearn.preprocessing.KBinsDiscretizer``"
msgstr ""

#: ../modules/generated/sklearn.preprocessing.KBinsDiscretizer.examples:15
#: ../modules/generated/sklearn.preprocessing.KBinsDiscretizer.examples:23
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_poisson_regression_non_normal_loss.py`"
msgstr ""

#: ../modules/generated/sklearn.preprocessing.KBinsDiscretizer.examples:34
#: ../modules/generated/sklearn.preprocessing.KBinsDiscretizer.examples:42
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_tweedie_regression_insurance_claims.py`"
msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_discretization.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_discretization_strategies.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_discretization_classification.py`"
#~ msgstr ""

