msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-26 23:29\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.scale.po\n"
"X-Crowdin-File-ID: 5834\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.scale.rst:2
msgid ":mod:`sklearn.preprocessing`.scale"
msgstr ":mod:`sklearn.preprocessing`.scale"

#: of sklearn.preprocessing._data.scale:2
msgid "Standardize a dataset along any axis."
msgstr "Estandariza un conjunto de datos a lo largo de cualquier eje."

#: of sklearn.preprocessing._data.scale:4
msgid "Center to the mean and component wise scale to unit variance."
msgstr "Centra a la media y escala los componentes a la varianza unitaria."

#: of sklearn.preprocessing._data.scale:6
msgid "Read more in the :ref:`User Guide <preprocessing_scaler>`."
msgstr "Más información en el :ref:`Manual de usuario <preprocessing_scaler>`."

#: of sklearn.preprocessing._data.scale
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._data.scale:11
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.scale:11
msgid "The data to center and scale."
msgstr "Los datos para centrar y escalar."

#: of sklearn.preprocessing._data.scale:16
msgid "**axis**"
msgstr "**axis**"

#: of
msgid "int, default=0"
msgstr "int, default=0"

#: of sklearn.preprocessing._data.scale:14
msgid "axis used to compute the means and standard deviations along. If 0, independently standardize each feature, otherwise (if 1) standardize each sample."
msgstr "eje utilizado para calcular las medias y las desviaciones estándar. Si es 0, estandariza independientemente cada característica, de lo contrario (si es 1) estandariza cada muestra."

#: of sklearn.preprocessing._data.scale:19
msgid "**with_mean**"
msgstr "**with_mean**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.preprocessing._data.scale:19
msgid "If True, center the data before scaling."
msgstr "Si es True, centra los datos antes del escalamiento."

#: of sklearn.preprocessing._data.scale:23
msgid "**with_std**"
msgstr "**with_std**"

#: of sklearn.preprocessing._data.scale:22
msgid "If True, scale the data to unit variance (or equivalently, unit standard deviation)."
msgstr "Si es True, escala los datos a la varianza unitaria (o, de manera equivalente, a la desviación estándar unitaria)."

#: of sklearn.preprocessing._data.scale:28
msgid "**copy**"
msgstr "**copy**"

#: of sklearn.preprocessing._data.scale:26
msgid "set to False to perform inplace row normalization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSC matrix and if axis is 1)."
msgstr "establécelo en False para realizar la normalización de filas en el lugar y evitar una copia (si la entrada ya es un arreglo numpy o una matriz scipy.sparse CSC y si el eje es 1)."

#: of sklearn.preprocessing._data.scale
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.preprocessing._data.scale:39
msgid "**X_tr**"
msgstr "**X_tr**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.scale:33
msgid "The transformed data."
msgstr "Los datos transformados."

#: of sklearn.preprocessing._data.scale:44
msgid ":obj:`StandardScaler`"
msgstr ":obj:`StandardScaler`"

#: of sklearn.preprocessing._data.scale:45
msgid "Performs scaling to unit variance using the Transformer API (e.g. as part of a preprocessing :class:`~sklearn.pipeline.Pipeline`)."
msgstr "Realiza el escalamiento a la varianza unitaria mediante la API Transformer (por ejemplo, como parte de un :class:`~sklearn.pipeline.Pipeline` de preprocesamiento)."

#: of sklearn.preprocessing._data.scale:49
msgid "Notes"
msgstr "Notas"

#: of sklearn.preprocessing._data.scale:50
msgid "This implementation will refuse to center scipy.sparse matrices since it would make them non-sparse and would potentially crash the program with memory exhaustion problems."
msgstr "Esta implementación se negará a centrar las matrices scipy.sparse, ya que las convertiría en no dispersas y potencialmente bloquearía el programa con problemas de agotamiento de memoria."

#: of sklearn.preprocessing._data.scale:54
msgid "Instead the caller is expected to either set explicitly `with_mean=False` (in that case, only variance scaling will be performed on the features of the CSC matrix) or to call `X.toarray()` if he/she expects the materialized dense array to fit in memory."
msgstr "En su lugar, se espera que el invocador(caller) establezca explícitamente `with_mean=False` (en ese caso, sólo se realizará el escalamiento de la varianza en las características de la matriz CSC) o llamar a `X.toarray()` si espera que el arreglo denso materializado quepa en la memoria."

#: of sklearn.preprocessing._data.scale:59
msgid "To avoid memory copy the caller should pass a CSC matrix."
msgstr "Para evitar la copia de memoria el invocador debe pasar una matriz CSC."

#: of sklearn.preprocessing._data.scale:61
msgid "NaNs are treated as missing values: disregarded to compute the statistics, and maintained during the data transformation."
msgstr "Los NaNs son tratados como valores faltantes: no se tienen en cuenta para calcular las estadísticas y se mantienen durante la transformación de los datos."

#: of sklearn.preprocessing._data.scale:64
msgid "We use a biased estimator for the standard deviation, equivalent to `numpy.std(x, ddof=0)`. Note that the choice of `ddof` is unlikely to affect model performance."
msgstr "Utilizamos un estimador sesgado para la desviación estándar, equivalente a `numpy.std(x, ddof=0)`. Ten en cuenta que la elección de `ddof` es poco probable que afecte al rendimiento del modelo."

#: of sklearn.preprocessing._data.scale:68
msgid "For a comparison of the different scalers, transformers, and normalizers, see :ref:`examples/preprocessing/plot_all_scaling.py <sphx_glr_auto_examples_preprocessing_plot_all_scaling.py>`."
msgstr "Para una comparación de los diferentes escaladores, transformadores y normalizadores, ver :ref:`examples/preprocessing/plot_all_scaling.py <sphx_glr_auto_examples_preprocessing_plot_all_scaling.py>`."

#: of sklearn.preprocessing._data.scale:72
msgid "Risk of data leak"
msgstr "Riesgo de fuga de datos"

#: of sklearn.preprocessing._data.scale:74
msgid "Do not use :func:`~sklearn.preprocessing.scale` unless you know what you are doing. A common mistake is to apply it to the entire data *before* splitting into training and test sets. This will bias the model evaluation because information would have leaked from the test set to the training set. In general, we recommend using :class:`~sklearn.preprocessing.StandardScaler` within a :ref:`Pipeline <pipeline>` in order to prevent most risks of data leaking: `pipe = make_pipeline(StandardScaler(), LogisticRegression())`."
msgstr "No utilices :func:`~sklearn.preprocessing.scale` a menos que sepas lo que estás haciendo. Un error común es aplicarlo a todos los datos *antes* de dividirlos en conjuntos de entrenamiento y prueba. Esto sesgará la evaluación del modelo porque la información se habrá filtrado del conjunto de prueba al conjunto de entrenamiento. En general, recomendamos utilizar :class:`~sklearn.preprocessing.StandardScaler` dentro de un :ref:`Pipeline <pipeline>` para evitar la mayoría de los riesgos de fuga de datos: `pipe = make_pipeline(StandardScaler(), LogisticRegression())`."

