msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:56-0400\n"
"PO-Revision-Date: 2021-07-04 23:33\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.model_selection.GridSearchCV.po\n"
"X-Crowdin-File-ID: 5142\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.model_selection.GridSearchCV.rst:2
msgid ":mod:`sklearn.model_selection`.GridSearchCV"
msgstr ":mod:`sklearn.model_selection`.GridSearchCV"

#: of sklearn.model_selection._search.GridSearchCV:2
msgid "Exhaustive search over specified parameter values for an estimator."
msgstr "Búsqueda exhaustiva sobre los valores de los parámetros especificados para un estimador."

#: of sklearn.model_selection._search.GridSearchCV:4
msgid "Important members are fit, predict."
msgstr "Los miembros importantes son fit, predict."

#: of sklearn.model_selection._search.GridSearchCV:6
msgid "GridSearchCV implements a \"fit\" and a \"score\" method. It also implements \"score_samples\", \"predict\", \"predict_proba\", \"decision_function\", \"transform\" and \"inverse_transform\" if they are implemented in the estimator used."
msgstr "GridSearchCV implementa un método \"fit\" y otro \"score\". También implementa \"score_samples\", \"predict\", \"predict_proba\", \"decision_function\", \"transform\" e \"inverse_transform\" si están implementados en el estimador utilizado."

#: of sklearn.model_selection._search.GridSearchCV:11
msgid "The parameters of the estimator used to apply these methods are optimized by cross-validated grid-search over a parameter grid."
msgstr "Los parámetros del estimador utilizado para aplicar estos métodos se optimizan mediante una búsqueda en cuadrícula con validación cruzada sobre una cuadrícula de parámetros."

#: of sklearn.model_selection._search.GridSearchCV:14
msgid "Read more in the :ref:`User Guide <grid_search>`."
msgstr "Más información en el :ref:`Manual de usuario <grid_search>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.model_selection._search.BaseSearchCV.decision_function
#: sklearn.model_selection._search.BaseSearchCV.fit
#: sklearn.model_selection._search.BaseSearchCV.inverse_transform
#: sklearn.model_selection._search.BaseSearchCV.predict
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba
#: sklearn.model_selection._search.BaseSearchCV.predict_proba
#: sklearn.model_selection._search.BaseSearchCV.score
#: sklearn.model_selection._search.BaseSearchCV.score_samples
#: sklearn.model_selection._search.BaseSearchCV.transform
#: sklearn.model_selection._search.GridSearchCV
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.model_selection._search.GridSearchCV:21
msgid "**estimator**"
msgstr "**estimator**"

#: of
msgid "estimator object."
msgstr "objeto estimator."

#: of sklearn.model_selection._search.GridSearchCV:19
msgid "This is assumed to implement the scikit-learn estimator interface. Either estimator needs to provide a ``score`` function, or ``scoring`` must be passed."
msgstr "Se supone que implementa la interfaz del estimador de scikit-learn. O bien el estimador necesita proporcionar una función ``score``, o se debe pasar ``scoring``."

#: of sklearn.model_selection._search.GridSearchCV:28
msgid "**param_grid**"
msgstr "**param_grid**"

#: of
msgid "dict or list of dictionaries"
msgstr "dict o lista de diccionarios"

#: of sklearn.model_selection._search.GridSearchCV:24
msgid "Dictionary with parameters names (`str`) as keys and lists of parameter settings to try as values, or a list of such dictionaries, in which case the grids spanned by each dictionary in the list are explored. This enables searching over any sequence of parameter settings."
msgstr "Diccionario con nombres de parámetros (`str`) como claves y listas de ajustes de parámetros a probar como valores, o una lista de tales diccionarios, en cuyo caso se exploran las cuadrículas abarcadas por cada diccionario de la lista. Esto permite buscar sobre cualquier secuencia de ajustes de parámetros."

#: of sklearn.model_selection._search.GridSearchCV:46
msgid "**scoring**"
msgstr "**scoring**"

#: of
msgid "str, callable, list, tuple or dict, default=None"
msgstr "str, callable, list, tuple o dict, default=None"

#: of sklearn.model_selection._search.GridSearchCV:31
msgid "Strategy to evaluate the performance of the cross-validated model on the test set."
msgstr "Estrategia para evaluar el rendimiento del modelo de validación cruzada en el conjunto de pruebas."

#: of sklearn.model_selection._search.GridSearchCV:34
msgid "If `scoring` represents a single score, one can use:"
msgstr "Si `scoring` representa una única puntuación, se puede utilizar:"

#: of sklearn.model_selection._search.GridSearchCV:36
msgid "a single string (see :ref:`scoring_parameter`);"
msgstr "una sola cadena (véase :ref:`scoring_parameter`);"

#: of sklearn.model_selection._search.GridSearchCV:37
msgid "a callable (see :ref:`scoring`) that returns a single value."
msgstr "un callable (véase :ref:`scoring`) que devuelve un único valor."

#: of sklearn.model_selection._search.GridSearchCV:39
msgid "If `scoring` reprents multiple scores, one can use:"
msgstr "Si `scoring` representa múltiples puntuaciones, se puede utilizar:"

#: of sklearn.model_selection._search.GridSearchCV:41
msgid "a list or tuple of unique strings;"
msgstr "una lista o tupla de cadenas únicas;"

#: of sklearn.model_selection._search.GridSearchCV:42
msgid "a callable returning a dictionary where the keys are the metric names and the values are the metric scores;"
msgstr "un invocable que devuelve un diccionario donde las claves son los nombres de las métricas y los valores son las puntuaciones de las métricas;"

#: of sklearn.model_selection._search.GridSearchCV:44
msgid "a dictionary with metric names as keys and callables a values."
msgstr "un diccionario con los nombres de las métricas como claves e invocables como valores."

#: of sklearn.model_selection._search.GridSearchCV:46
msgid "See :ref:`multimetric_grid_search` for an example."
msgstr "Véase :ref:`multimetric_grid_search` para un ejemplo."

#: of sklearn.model_selection._search.GridSearchCV:55
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.model_selection._search.GridSearchCV:49
msgid "Number of jobs to run in parallel. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "Número de trabajos a ejecutar en paralelo. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesadores. Véase :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.model_selection._search.GridSearchCV:54
msgid "`n_jobs` default changed from 1 to None"
msgstr "El valor predeterminado de `n_jobs` cambió de 1 a None"

#: of sklearn.model_selection._search.GridSearchCV:72
msgid "**pre_dispatch**"
msgstr "**pre_dispatch**"

#: of
msgid "int, or str, default=n_jobs"
msgstr "int, o str, default=n_jobs"

#: of sklearn.model_selection._search.GridSearchCV:58
msgid "Controls the number of jobs that get dispatched during parallel execution. Reducing this number can be useful to avoid an explosion of memory consumption when more jobs get dispatched than CPUs can process. This parameter can be:"
msgstr "Controla el número de trabajos que se envían durante la ejecución en paralelo. Reducir este número puede ser útil para evitar una explosión de consumo de memoria cuando se envían más trabajos de los que las CPUs pueden procesar. Este parámetro puede ser:"

#: of sklearn.model_selection._search.GridSearchCV:63
msgid "None, in which case all the jobs are immediately created and spawned. Use this for lightweight and fast-running jobs, to avoid delays due to on-demand spawning of the jobs"
msgstr "None, en cuyo caso todos los trabajos se crean y generan inmediatamente. Utilícelo para trabajos ligeros y de ejecución rápida, para evitar retrasos debidos a la generación de trabajos bajo demanda"

#: of sklearn.model_selection._search.GridSearchCV:68
msgid "An int, giving the exact number of total jobs that are spawned"
msgstr "Un int, que da el número exacto de trabajos totales que se generan"

#: of sklearn.model_selection._search.GridSearchCV:71
msgid "A str, giving an expression as a function of n_jobs, as in '2*n_jobs'"
msgstr "Una str, que da una expresión como una función de n_jobs, como en '2*n_jobs'"

#: of sklearn.model_selection._search.GridSearchCV:91
msgid "**cv**"
msgstr "**cv**"

#: of
msgid "int, cross-validation generator or an iterable, default=None"
msgstr "entero, generador de validación cruzada o un iterable, default=None"

#: of sklearn.model_selection._search.GridSearchCV:75
msgid "Determines the cross-validation splitting strategy. Possible inputs for cv are:"
msgstr "Determina la estrategia de división de validación cruzada. Las posibles entradas para cv son:"

#: of sklearn.model_selection._search.GridSearchCV:78
msgid "None, to use the default 5-fold cross validation,"
msgstr "Ninguno, para utilizar la validación cruzada de 5-pliegues por defecto,"

#: of sklearn.model_selection._search.GridSearchCV:79
msgid "integer, to specify the number of folds in a `(Stratified)KFold`,"
msgstr "número entero, para especificar el número de pliegues en un `(Stratified)KFold`,"

#: of sklearn.model_selection._search.GridSearchCV:80
msgid ":term:`CV splitter`,"
msgstr ":term:`CV splitter`,"

#: of sklearn.model_selection._search.GridSearchCV:81
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr "Un iterable que produce divisiones (train, test) como arreglos de índices."

#: of sklearn.model_selection._search.GridSearchCV:83
msgid "For integer/None inputs, if the estimator is a classifier and ``y`` is either binary or multiclass, :class:`StratifiedKFold` is used. In all other cases, :class:`KFold` is used."
msgstr "Para entradas enteras/None, si el estimador es un clasificador y ``y`` es binario o multiclase, se utiliza :class:`StratifiedKFold`. En todos los demás casos, se utiliza :class:`KFold`."

#: of sklearn.model_selection._search.GridSearchCV:87
msgid "Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr "Consulta el :ref:`Manual de usuario <cross_validation>` para las diversas estrategias de validación cruzada que pueden ser utilizadas aquí."

#: of sklearn.model_selection._search.GridSearchCV:90
msgid "``cv`` default value if None changed from 3-fold to 5-fold."
msgstr "El valor predeterminado de ``cv`` si es None cambió de 3-pliegues a 5-pliegues."

#: of sklearn.model_selection._search.GridSearchCV:121
msgid "**refit**"
msgstr "**refit**"

#: of
msgid "bool, str, or callable, default=True"
msgstr "booleano, cadena, o invocable, default=True"

#: of sklearn.model_selection._search.GridSearchCV:94
msgid "Refit an estimator using the best found parameters on the whole dataset."
msgstr "Reajusta un estimador utilizando los mejores parámetros encontrados en todo el conjunto de datos."

#: of sklearn.model_selection._search.GridSearchCV:97
msgid "For multiple metric evaluation, this needs to be a `str` denoting the scorer that would be used to find the best parameters for refitting the estimator at the end."
msgstr "Para la evaluación de múltiples métricas, debe ser una `str` que denote el calificador que se utilizaría para encontrar los mejores parámetros para reajustar el estimador al final."

#: of sklearn.model_selection._search.GridSearchCV:101
msgid "Where there are considerations other than maximum score in choosing a best estimator, ``refit`` can be set to a function which returns the selected ``best_index_`` given ``cv_results_``. In that case, the ``best_estimator_`` and ``best_params_`` will be set according to the returned ``best_index_`` while the ``best_score_`` attribute will not be available."
msgstr "Cuando hay consideraciones distintas de la puntuación máxima en la elección de un mejor estimador, ``refit`` se puede establecer en una función que devuelve el ``best_index_`` seleccionado dado ``cv_results_``. En ese caso, los atributos ``best_estimator_`` y ``best_params_`` se establecerán de acuerdo con el ``best_index_`` devuelto, mientras que el atributo ``best_score_`` no estará disponible."

#: of sklearn.model_selection._search.GridSearchCV:108
msgid "The refitted estimator is made available at the ``best_estimator_`` attribute and permits using ``predict`` directly on this ``GridSearchCV`` instance."
msgstr "El estimador reajustado está disponible en el atributo ``best_estimator_`` y permite utilizar ``predict`` directamente en esta instancia ``GridSearchCV``."

#: of sklearn.model_selection._search.GridSearchCV:112
msgid "Also for multiple metric evaluation, the attributes ``best_index_``, ``best_score_`` and ``best_params_`` will only be available if ``refit`` is set and all of them will be determined w.r.t this specific scorer."
msgstr "También para la evaluación de múltiples métricas, los atributos ``best_index_``, ``best_score_`` y ``best_params_`` sólo estarán disponibles si se establece ``refit`` y todos ellos se determinarán con respecto a este puntuador específico."

#: of sklearn.model_selection._search.GridSearchCV:117
msgid "See ``scoring`` parameter to know more about multiple metric evaluation."
msgstr "Véase el parámetro ``scoring`` para saber más sobre la evaluación de múltiples métricas."

#: of sklearn.model_selection._search.GridSearchCV:120
msgid "Support for callable added."
msgstr "Se ha añadido soporte para callable."

#: of sklearn.model_selection._search.GridSearchCV:130
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.model_selection._search.GridSearchCV:124
msgid "Controls the verbosity: the higher, the more messages."
msgstr "Controla la verbosidad: cuanto más alta, más mensajes."

#: of sklearn.model_selection._search.GridSearchCV:126
msgid ">1 : the computation time for each fold and parameter candidate is displayed;"
msgstr ">1 : se muestra el tiempo de cálculo para cada pliegue y parámetro candidato;"

#: of sklearn.model_selection._search.GridSearchCV:128
msgid ">2 : the score is also displayed;"
msgstr ">2 : también se muestra la puntuación;"

#: of sklearn.model_selection._search.GridSearchCV:129
msgid ">3 : the fold and candidate parameter indexes are also displayed together with the starting time of the computation."
msgstr ">3 : los índices de los pliegues y de los parámetros candidatos también se muestran junto con la hora de inicio del cálculo."

#: of sklearn.model_selection._search.GridSearchCV:136
msgid "**error_score**"
msgstr "**error_score**"

#: of
msgid "'raise' or numeric, default=np.nan"
msgstr "'raise' o numeric, default=np.nan"

#: of sklearn.model_selection._search.GridSearchCV:133
msgid "Value to assign to the score if an error occurs in estimator fitting. If set to 'raise', the error is raised. If a numeric value is given, FitFailedWarning is raised. This parameter does not affect the refit step, which will always raise the error."
msgstr "Valor a asignar a la puntuación si se produce un error en el ajuste del estimador. Si se establece como 'raise', el error se eleva. Si se da un valor numérico, se eleva FitFailedWarning. Este parámetro no afecta al paso de reajuste, que siempre elevará el error."

#: of sklearn.model_selection._search.GridSearchCV:153
msgid "**return_train_score**"
msgstr "**return_train_score**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.model_selection._search.GridSearchCV:139
msgid "If ``False``, the ``cv_results_`` attribute will not include training scores. Computing training scores is used to get insights on how different parameter settings impact the overfitting/underfitting trade-off. However computing the scores on the training set can be computationally expensive and is not strictly required to select the parameters that yield the best generalization performance."
msgstr "Si es ``False``, el atributo ``cv_results_`` no incluirá las puntuaciones de entrenamiento. El cálculo de las puntuaciones de entrenamiento se utiliza para obtener información sobre el impacto de los diferentes ajustes de los parámetros en el equilibrio entre sobreajuste/subajuste. Sin embargo, calcular las puntuaciones en el conjunto de entrenamiento puede ser costoso computacionalmente y no es estrictamente necesario para seleccionar los parámetros que producen el mejor rendimiento de generalización."

#: of sklearn.model_selection._search.GridSearchCV:149
msgid "Default value was changed from ``True`` to ``False``"
msgstr "El valor predeterminado se ha cambiado de ``True`` a ``False``"

#: of sklearn.model_selection._search.GridSearchCV
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.model_selection._search.GridSearchCV:211
msgid "**cv_results_**"
msgstr "**cv_results_**"

#: of
msgid "dict of numpy (masked) ndarrays"
msgstr "dict de numpy (masked) ndarrays"

#: of sklearn.model_selection._search.GridSearchCV:158
msgid "A dict with keys as column headers and values as columns, that can be imported into a pandas ``DataFrame``."
msgstr "Un dict con claves como cabeceras de columna y valores como columnas, que puede ser importado en un ``DataFrame`` de pandas."

#: of sklearn.model_selection._search.GridSearchCV:161
msgid "For instance the below given table"
msgstr "Por ejemplo, la siguiente tabla"

#: of sklearn.model_selection._search.GridSearchCV:164
msgid "param_kernel"
msgstr "param_kernel"

#: of sklearn.model_selection._search.GridSearchCV:164
msgid "param_gamma"
msgstr "param_gamma"

#: of sklearn.model_selection._search.GridSearchCV:164
msgid "param_degree"
msgstr "param_degree"

#: of sklearn.model_selection._search.GridSearchCV:164
msgid "split0_test_score"
msgstr "split0_test_score"

#: of sklearn.model_selection._search.GridSearchCV:164
#: sklearn.model_selection._search.GridSearchCV:166
#: sklearn.model_selection._search.GridSearchCV:168
#: sklearn.model_selection._search.GridSearchCV:170
#: sklearn.model_selection._search.GridSearchCV:172
msgid "..."
msgstr "..."

#: of sklearn.model_selection._search.GridSearchCV:164
msgid "rank_t..."
msgstr "rank_t..."

#: of sklearn.model_selection._search.GridSearchCV:166
#: sklearn.model_selection._search.GridSearchCV:168
msgid "'poly'"
msgstr "'poly'"

#: of sklearn.model_selection._search.GridSearchCV:166
#: sklearn.model_selection._search.GridSearchCV:168
#: sklearn.model_selection._search.GridSearchCV:170
#: sklearn.model_selection._search.GridSearchCV:172
msgid "--"
msgstr "--"

#: of sklearn.model_selection._search.GridSearchCV:166
msgid "2"
msgstr "2"

#: of sklearn.model_selection._search.GridSearchCV:166
#: sklearn.model_selection._search.GridSearchCV:170
msgid "0.80"
msgstr "0.80"

#: of sklearn.model_selection._search.GridSearchCV:168
#: sklearn.model_selection._search.GridSearchCV:170
msgid "3"
msgstr "3"

#: of sklearn.model_selection._search.GridSearchCV:168
msgid "0.70"
msgstr "0.70"

#: of sklearn.model_selection._search.GridSearchCV:168
msgid "4"
msgstr "4"

#: of sklearn.model_selection._search.GridSearchCV:170
#: sklearn.model_selection._search.GridSearchCV:172
msgid "'rbf'"
msgstr "'rbf'"

#: of sklearn.model_selection._search.GridSearchCV:170
msgid "0.1"
msgstr "0.1"

#: of sklearn.model_selection._search.GridSearchCV:172
msgid "0.2"
msgstr "0.2"

#: of sklearn.model_selection._search.GridSearchCV:172
msgid "0.93"
msgstr "0.93"

#: of sklearn.model_selection._search.GridSearchCV:172
msgid "1"
msgstr "1"

#: of sklearn.model_selection._search.GridSearchCV:175
msgid "will be represented by a ``cv_results_`` dict of::"
msgstr "será representado por un dict ``cv_results_`` de::"

#: of sklearn.model_selection._search.GridSearchCV:200
msgid "NOTE"
msgstr "NOTA"

#: of sklearn.model_selection._search.GridSearchCV:202
msgid "The key ``'params'`` is used to store a list of parameter settings dicts for all the parameter candidates."
msgstr "La clave ``'params`` se utiliza para almacenar una lista de diccionarios (dicts) de configuración de parámetros para todos los candidatos a parámetros."

#: of sklearn.model_selection._search.GridSearchCV:205
msgid "The ``mean_fit_time``, ``std_fit_time``, ``mean_score_time`` and ``std_score_time`` are all in seconds."
msgstr "La ``mean_fit_time``, ``std_fit_time``, ``mean_score_time`` y ``std_score_time`` están todas en segundos."

#: of sklearn.model_selection._search.GridSearchCV:208
msgid "For multi-metric evaluation, the scores for all the scorers are available in the ``cv_results_`` dict at the keys ending with that scorer's name (``'_<scorer_name>'``) instead of ``'_score'`` shown above. ('split0_test_precision', 'mean_train_precision' etc.)"
msgstr "Para la evaluación multimétrica, las puntuaciones de todos los puntuadores están disponibles en el diccionario ``cv_results_`` en las claves que terminan con el nombre de ese puntuador (``'_<scorer_name>'``) en lugar de ``'_score'`` mostradas anteriormente. ('split0_test_precision', 'mean_train_precision' etc.)"

#: of sklearn.model_selection._search.GridSearchCV:218
msgid "**best_estimator_**"
msgstr "**best_estimator_**"

#: of
msgid "estimator"
msgstr "estimator"

#: of sklearn.model_selection._search.GridSearchCV:214
msgid "Estimator that was chosen by the search, i.e. estimator which gave highest score (or smallest loss if specified) on the left out data. Not available if ``refit=False``."
msgstr "Estimador que fue elegido por la búsqueda, es decir, el estimador que dio la mayor puntuación (o la menor pérdida si se especifica) en los datos dejados de lado. No está disponible si ``refit=False``."

#: of sklearn.model_selection._search.GridSearchCV:218
msgid "See ``refit`` parameter for more information on allowed values."
msgstr "Véase el parámetro ``refit`` para más información sobre los valores permitidos."

#: of sklearn.model_selection._search.GridSearchCV:226
msgid "**best_score_**"
msgstr "**best_score_**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.model_selection._search.GridSearchCV:221
msgid "Mean cross-validated score of the best_estimator"
msgstr "Puntuación media de validación cruzada del mejor estimador"

#: of sklearn.model_selection._search.GridSearchCV:223
#: sklearn.model_selection._search.GridSearchCV:231
#: sklearn.model_selection._search.GridSearchCV:242
msgid "For multi-metric evaluation, this is present only if ``refit`` is specified."
msgstr "Para la evaluación multimétrica, sólo está presente si se especifica ``refit``."

#: of sklearn.model_selection._search.GridSearchCV:226
msgid "This attribute is not available if ``refit`` is a function."
msgstr "Este atributo no está disponible si ``refit`` es una función."

#: of sklearn.model_selection._search.GridSearchCV:232
msgid "**best_params_**"
msgstr "**best_params_**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.model_selection._search.GridSearchCV:229
msgid "Parameter setting that gave the best results on the hold out data."
msgstr "Configuración del parámetro que dio los mejores resultados en los datos retenidos."

#: of sklearn.model_selection._search.GridSearchCV:243
msgid "**best_index_**"
msgstr "**best_index_**"

#: of sklearn.model_selection._search.GridSearchCV:235
msgid "The index (of the ``cv_results_`` arrays) which corresponds to the best candidate parameter setting."
msgstr "El índice (de los arreglos ``cv_results_``) que corresponde a la mejor configuración del parámetro candidato."

#: of sklearn.model_selection._search.GridSearchCV:238
msgid "The dict at ``search.cv_results_['params'][search.best_index_]`` gives the parameter setting for the best model, that gives the highest mean score (``search.best_score_``)."
msgstr "El diccionario en ``search.cv_results_['params'][search.best_index_]`` da la configuración de parámetros para el mejor modelo, que da la puntuación media más alta (``search.best_score_``)."

#: of sklearn.model_selection._search.GridSearchCV:250
msgid "**scorer_**"
msgstr "**scorer_**"

#: of
msgid "function or a dict"
msgstr "function o un dict"

#: of sklearn.model_selection._search.GridSearchCV:246
msgid "Scorer function used on the held out data to choose the best parameters for the model."
msgstr "Función de puntuación utilizada en los datos retenidos para elegir los mejores parámetros del modelo."

#: of sklearn.model_selection._search.GridSearchCV:249
msgid "For multi-metric evaluation, this attribute holds the validated ``scoring`` dict which maps the scorer key to the scorer callable."
msgstr "Para la evaluación multimétrica, este atributo contiene el diccionario validado ``scoring`` que mapea la clave del puntuador (scorer) al puntuador invocable (callable)."

#: of sklearn.model_selection._search.GridSearchCV:253
msgid "**n_splits_**"
msgstr "**n_splits_**"

#: of sklearn.model_selection._search.GridSearchCV:253
msgid "The number of cross-validation splits (folds/iterations)."
msgstr "El número de divisiones de validación cruzada (pliegues/iteraciones)."

#: of sklearn.model_selection._search.GridSearchCV:260
msgid "**refit_time_**"
msgstr "**refit_time_**"

#: of sklearn.model_selection._search.GridSearchCV:256
msgid "Seconds used for refitting the best model on the whole dataset."
msgstr "Segundos utilizados para reajustar el mejor modelo en todo el conjunto de datos."

#: of sklearn.model_selection._search.GridSearchCV:258
msgid "This is present only if ``refit`` is not False."
msgstr "Sólo está presente si ``refit`` no es False."

#: of sklearn.model_selection._search.GridSearchCV:266
msgid "**multimetric_**"
msgstr "**multimetric_**"

#: of
msgid "bool"
msgstr "bool"

#: of sklearn.model_selection._search.GridSearchCV:263
msgid "Whether or not the scorers compute several metrics."
msgstr "Si los puntuadores calculan o no varias métricas."

#: of sklearn.model_selection._search.GridSearchCV:271
msgid ":obj:`ParameterGrid`"
msgstr ":obj:`ParameterGrid`"

#: of sklearn.model_selection._search.GridSearchCV:272
msgid "Generates all the combinations of a hyperparameter grid."
msgstr "Genera todas las combinaciones de una cuadrícula de hiperparámetros."

#: of sklearn.model_selection._search.GridSearchCV:273
msgid ":obj:`train_test_split`"
msgstr ":obj:`train_test_split`"

#: of sklearn.model_selection._search.GridSearchCV:274
msgid "Utility function to split the data into a development set usable for fitting a GridSearchCV instance and an evaluation set for its final evaluation."
msgstr "Función de utilidad para dividir los datos en un conjunto de desarrollo que puede ser utilizado para ajustar una instancia de GridSearchCV y un conjunto de evaluación para su evaluación final."

#: of sklearn.model_selection._search.GridSearchCV:275
msgid ":obj:`sklearn.metrics.make_scorer`"
msgstr ":obj:`sklearn.metrics.make_scorer`"

#: of sklearn.model_selection._search.GridSearchCV:276
msgid "Make a scorer from a performance metric or loss function."
msgstr "Hace un puntuador a partir de una métrica de rendimiento o una función de pérdida."

#: of sklearn.model_selection._search.GridSearchCV:280
msgid "Notes"
msgstr "Notas"

#: of sklearn.model_selection._search.GridSearchCV:281
msgid "The parameters selected are those that maximize the score of the left out data, unless an explicit score is passed in which case it is used instead."
msgstr "Los parámetros seleccionados son los que maximizan la puntuación de los datos omitidos, a menos que se pase una puntuación explícita, en cuyo caso se utiliza en su lugar."

#: of sklearn.model_selection._search.GridSearchCV:284
msgid "If `n_jobs` was set to a value higher than one, the data is copied for each point in the grid (and not `n_jobs` times). This is done for efficiency reasons if individual jobs take very little time, but may raise errors if the dataset is large and not enough memory is available.  A workaround in this case is to set `pre_dispatch`. Then, the memory is copied only `pre_dispatch` many times. A reasonable value for `pre_dispatch` is `2 * n_jobs`."
msgstr "Si `n_jobs` se estableció en un valor superior a uno, los datos se copian para cada punto en la cuadrícula (y no `n_jobs` veces). Esto se hace por razones de eficiencia si los trabajos individuales toman muy poco tiempo, pero puede dar lugar a errores si el conjunto de datos es grande y no hay suficiente memoria disponible. Una solución en este caso es establecer `pre_dispatch`. Entonces, la memoria se copia sólo `pre_dispatch` muchas veces. Un valor razonable para `pre_dispatch` es `2 * n_jobs`."

#: of sklearn.model_selection._search.GridSearchCV:294
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.model_selection._search.GridSearchCV:312
msgid "Methods"
msgstr "Métodos"

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`decision_function <sklearn.model_selection.GridSearchCV.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.model_selection.GridSearchCV.decision_function>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Call decision_function on the estimator with the best found parameters."
msgstr "Llama a decision_function en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`fit <sklearn.model_selection.GridSearchCV.fit>`\\"
msgstr ":obj:`fit <sklearn.model_selection.GridSearchCV.fit>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.fit:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Run fit with all sets of parameters."
msgstr "Ejecuta el ajuste con todos los conjuntos de parámetros."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`get_params <sklearn.model_selection.GridSearchCV.get_params>`\\"
msgstr ":obj:`get_params <sklearn.model_selection.GridSearchCV.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.model_selection.GridSearchCV.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.model_selection.GridSearchCV.inverse_transform>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Call inverse_transform on the estimator with the best found params."
msgstr "Llama a inverse_transform en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`predict <sklearn.model_selection.GridSearchCV.predict>`\\"
msgstr ":obj:`predict <sklearn.model_selection.GridSearchCV.predict>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.predict:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Call predict on the estimator with the best found parameters."
msgstr "Llama a predict en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`predict_log_proba <sklearn.model_selection.GridSearchCV.predict_log_proba>`\\"
msgstr ":obj:`predict_log_proba <sklearn.model_selection.GridSearchCV.predict_log_proba>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.predict_log_proba:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Call predict_log_proba on the estimator with the best found parameters."
msgstr "Llama a predict_log_proba en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.model_selection.GridSearchCV.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.model_selection.GridSearchCV.predict_proba>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.predict_proba:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Call predict_proba on the estimator with the best found parameters."
msgstr "Llama a predict_proba en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`score <sklearn.model_selection.GridSearchCV.score>`\\"
msgstr ":obj:`score <sklearn.model_selection.GridSearchCV.score>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.score:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Returns the score on the given data, if the estimator has been refit."
msgstr "Devuelve la puntuación en los datos dados, si el estimador ha sido reajustado."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`score_samples <sklearn.model_selection.GridSearchCV.score_samples>`\\"
msgstr ":obj:`score_samples <sklearn.model_selection.GridSearchCV.score_samples>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Call score_samples on the estimator with the best found parameters."
msgstr "Llama a score_samples en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`set_params <sklearn.model_selection.GridSearchCV.set_params>`\\"
msgstr ":obj:`set_params <sklearn.model_selection.GridSearchCV.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid ":obj:`transform <sklearn.model_selection.GridSearchCV.transform>`\\"
msgstr ":obj:`transform <sklearn.model_selection.GridSearchCV.transform>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.transform:2
#: sklearn.model_selection._search.GridSearchCV:326:<autosummary>:1
msgid "Call transform on the estimator with the best found parameters."
msgstr "Llama a transform en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``decision_function``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``decision_function``."

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:23
#: sklearn.model_selection._search.BaseSearchCV.fit:9
#: sklearn.model_selection._search.BaseSearchCV.predict:23
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba:23
#: sklearn.model_selection._search.BaseSearchCV.predict_proba:23
#: sklearn.model_selection._search.BaseSearchCV.score:11
#: sklearn.model_selection._search.BaseSearchCV.score_samples:13
#: sklearn.model_selection._search.BaseSearchCV.transform:23
msgid "**X**"
msgstr "**X**"

#: of
msgid "indexable, length n_samples"
msgstr "indexable, longitud n_samples"

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:10
#: sklearn.model_selection._search.BaseSearchCV.inverse_transform:10
#: sklearn.model_selection._search.BaseSearchCV.predict:10
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba:10
#: sklearn.model_selection._search.BaseSearchCV.predict_proba:10
#: sklearn.model_selection._search.BaseSearchCV.transform:10
msgid "Must fulfill the input assumptions of the underlying estimator."
msgstr "Debe cumplir los supuestos de entrada del estimador subyacente."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.model_selection._search.BaseSearchCV.fit:8
msgid "Training vector, where n_samples is the number of samples and n_features is the number of features."
msgstr "Vector de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.model_selection._search.BaseSearchCV.fit:13
#: sklearn.model_selection._search.BaseSearchCV.score:15
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples, n_output)             or (n_samples,), default=None"
msgstr "array-like de forma (n_samples, n_output)             o (n_samples,), default=None"

#: of sklearn.model_selection._search.BaseSearchCV.fit:12
#: sklearn.model_selection._search.BaseSearchCV.score:14
msgid "Target relative to X for classification or regression; None for unsupervised learning."
msgstr "Objetivo relativo a X para la clasificación o la regresión; None para el aprendizaje no supervisado."

#: of sklearn.model_selection._search.BaseSearchCV.fit:18
msgid "**groups**"
msgstr "**groups**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,) default=None"

#: of sklearn.model_selection._search.BaseSearchCV.fit:16
msgid "Group labels for the samples used while splitting the dataset into train/test set. Only used in conjunction with a \"Group\" :term:`cv` instance (e.g., :class:`~sklearn.model_selection.GroupKFold`)."
msgstr "Etiquetas de grupo para las muestras utilizadas al dividir el conjunto de datos en conjunto de entrenamiento/prueba. Sólo se utiliza junto con una instancia :term:`cv` de \"Group\" (por ejemplo, :class:`~sklearn.model_selection.GroupKFold`)."

#: of sklearn.model_selection._search.BaseSearchCV.fit:33
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict of str -> object"
msgstr "dict de str -> object"

#: of sklearn.model_selection._search.BaseSearchCV.fit:21
msgid "Parameters passed to the ``fit`` method of the estimator"
msgstr "Parámetros pasados al método ``fit`` del estimador"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.model_selection._search.BaseSearchCV.score
#: sklearn.model_selection._search.BaseSearchCV.score_samples
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:4
msgid "Only available if the underlying estimator implements ``inverse_transform`` and ``refit=True``."
msgstr "Sólo está disponible si el estimador subyacente implementa ``inverse_transform`` y ``refit=True``."

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:23
msgid "**Xt**"
msgstr "**Xt**"

#: of sklearn.model_selection._search.BaseSearchCV.predict:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``predict``."

#: of sklearn.model_selection._search.BaseSearchCV.predict_log_proba:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict_log_proba``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``predict_log_proba``."

#: of sklearn.model_selection._search.BaseSearchCV.predict_proba:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict_proba``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``predict_proba``."

#: of sklearn.model_selection._search.BaseSearchCV.score:4
msgid "This uses the score defined by ``scoring`` where provided, and the ``best_estimator_.score`` method otherwise."
msgstr "Se utiliza la puntuación definida por ``scoring`` cuando se proporciona, y el método ``best_estimator_.score`` en caso contrario."

#: of sklearn.model_selection._search.BaseSearchCV.score:10
msgid "Input data, where n_samples is the number of samples and n_features is the number of features."
msgstr "Datos de entrada, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.model_selection._search.BaseSearchCV.score:31
msgid "**score**"
msgstr "**score**"

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``score_samples``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente soporta ``score_samples``."

#: of
msgid "iterable"
msgstr "iterable"

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:12
msgid "Data to predict on. Must fulfill input requirements of the underlying estimator."
msgstr "Datos para predecir. Deben cumplir los requisitos de entrada del estimador subyacente."

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:29
msgid "**y_score**"
msgstr "**y_score**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.model_selection._search.BaseSearchCV.transform:4
msgid "Only available if the underlying estimator supports ``transform`` and ``refit=True``."
msgstr "Sólo está disponible si el estimador subyacente soporta ``transform`` y ``refit=True``."

#: ../modules/generated/sklearn.model_selection.GridSearchCV.examples:4
msgid "Examples using ``sklearn.model_selection.GridSearchCV``"
msgstr "Ejemplos utilizando ``sklearn.model_selection.GridSearchCV``"

#: ../modules/generated/sklearn.model_selection.GridSearchCV.examples:15
#: ../modules/generated/sklearn.model_selection.GridSearchCV.examples:23
msgid ":ref:`sphx_glr_auto_examples_model_selection_grid_search_text_feature_extraction.py`"
msgstr ":ref:`sphx_glr_auto_examples_model_selection_grid_search_text_feature_extraction.py`"

#: ../modules/generated/sklearn.model_selection.GridSearchCV.examples:34
#: ../modules/generated/sklearn.model_selection.GridSearchCV.examples:42
msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_grid_search_stats.py`"
msgstr ":ref:`sphx_glr_auto_examples_model_selection_plot_grid_search_stats.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_applications_plot_face_recognition.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_gaussian_process_plot_compare_gpr_krr.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_kernel_ridge_regression.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_grid_search_digits.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_randomized_search.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_nested_cross_validation_iris.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_multi_metric_evaluation.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_grid_search_refit_callable.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_successive_halving_heatmap.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_digits_kde_sampling.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_caching_nearest_neighbors.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_feature_union.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_digits_pipe.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_compare_reduction.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_column_transformer_mixed_types.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_discretization_classification.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_svm_plot_svm_scale_c.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_svm_plot_rbf_parameters.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_exercises_plot_cv_diabetes.py`"
#~ msgstr ""

