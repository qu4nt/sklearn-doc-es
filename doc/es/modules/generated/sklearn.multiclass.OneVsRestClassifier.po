msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-07-05 01:56\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.multiclass.OneVsRestClassifier.po\n"
"X-Crowdin-File-ID: 5488\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.multiclass.OneVsRestClassifier.rst:2
msgid ":mod:`sklearn.multiclass`.OneVsRestClassifier"
msgstr ":mod:`sklearn.multiclass`.OneVsRestClassifier"

#: of sklearn.multiclass.OneVsRestClassifier:2
msgid "One-vs-the-rest (OvR) multiclass strategy."
msgstr "Estrategia multiclase \"uno contra el resto\" (One-vs-the-Rest o OvR)."

#: of sklearn.multiclass.OneVsRestClassifier:4
msgid "Also known as one-vs-all, this strategy consists in fitting one classifier per class. For each classifier, the class is fitted against all the other classes. In addition to its computational efficiency (only `n_classes` classifiers are needed), one advantage of this approach is its interpretability. Since each class is represented by one and one classifier only, it is possible to gain knowledge about the class by inspecting its corresponding classifier. This is the most commonly used strategy for multiclass classification and is a fair default choice."
msgstr "También conocida como \"uno versus todos\" (one-vs-all), esta estrategia consiste en ajustar un clasificador por clase. Para cada clasificador, la clase se compara con todas las demás. Además de su eficiencia computacional (sólo se necesitan clasificadores `n_classes`), una ventaja de este enfoque es su interpretabilidad. Dado que cada clase está representada por un solo clasificador, es posible obtener conocimientos sobre la clase inspeccionando su clasificador correspondiente. Esta es la estrategia más utilizada para la clasificación multiclase y es una elección por defecto justa."

#: of sklearn.multiclass.OneVsRestClassifier:13
msgid "OneVsRestClassifier can also be used for multilabel classification. To use this feature, provide an indicator matrix for the target `y` when calling `.fit`. In other words, the target labels should be formatted as a 2D binary (0/1) matrix, where [i, j] == 1 indicates the presence of label j in sample i. This estimator uses the binary relevance method to perform multilabel classification, which involves training one binary classifier independently for each label."
msgstr "OneVsRestClassifier también puede utilizarse para la clasificación de etiquetas múltiples. Para utilizar esta función, proporciona una matriz indicadora para el objetivo `y` cuando invoques a `.fit`. En otras palabras, las etiquetas del objetivo deben tener el formato de una matriz binaria 2D (0/1), donde [i, j] == 1 indica la presencia de la etiqueta j en la muestra i. Este estimador utiliza el método de relevancia binaria para realizar la clasificación multietiqueta, que implica el entrenamiento de un clasificador binario independientemente para cada etiqueta."

#: of sklearn.multiclass.OneVsRestClassifier:21
msgid "Read more in the :ref:`User Guide <ovr_classification>`."
msgstr "Más información en el :ref:`Manual de usuario <ovr_classification>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.multiclass.OneVsRestClassifier
#: sklearn.multiclass.OneVsRestClassifier.decision_function
#: sklearn.multiclass.OneVsRestClassifier.fit
#: sklearn.multiclass.OneVsRestClassifier.partial_fit
#: sklearn.multiclass.OneVsRestClassifier.predict
#: sklearn.multiclass.OneVsRestClassifier.predict_proba
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.multiclass.OneVsRestClassifier:27
msgid "**estimator**"
msgstr "**estimator**"

#: of
msgid "estimator object"
msgstr "estimator object"

#: of sklearn.multiclass.OneVsRestClassifier:26
msgid "An estimator object implementing :term:`fit` and one of :term:`decision_function` or :term:`predict_proba`."
msgstr "Un objeto estimador que implementa :term:`fit` y uno de :term:`decision_function` o :term:`predict_proba`."

#: of sklearn.multiclass.OneVsRestClassifier:41
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.multiclass.OneVsRestClassifier:30
msgid "The number of jobs to use for the computation: the `n_classes` one-vs-rest problems are computed in parallel."
msgstr "El número de trabajos a utilizar para el cómputo: los problemas `n_classes` de uno versus el resto (one-vs-rest) se calculan en paralelo."

#: of sklearn.multiclass.OneVsRestClassifier:33
msgid "``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa que se utilizan todos los procesadores. Consulta :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.multiclass.OneVsRestClassifier:37
msgid "`n_jobs` default changed from 1 to None"
msgstr "`n_jobs` predeterminado cambiado de 1 a None"

#: of sklearn.multiclass.OneVsRestClassifier
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.multiclass.OneVsRestClassifier:46
msgid "**estimators_** : list of `n_classes` estimators"
msgstr "**estimators_** : lista de estimadores de `n_classes`"

#: of
msgid "list of"
msgstr "lista de"

#: of sklearn.multiclass.OneVsRestClassifier:46
msgid "Estimators used for predictions."
msgstr "Estimadores usados para predicciones."

#: of sklearn.multiclass.OneVsRestClassifier:59
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (1, n_features) or (n_classes, n_features)"
msgstr "ndarray de forma (1, n_features,) o (n_classes, n_features)"

#: of sklearn.multiclass.OneVsRestClassifier:49
msgid "Coefficient of the features in the decision function. This attribute exists only if the ``estimators_`` defines ``coef_``."
msgstr "Coeficiente de las características en la función de decisión. Este atributo sólo existe si los ``estimators_`` definen ``coef_``."

#: of sklearn.multiclass.OneVsRestClassifier:52
#: sklearn.multiclass.OneVsRestClassifier:66
msgid "This attribute is deprecated in 0.24 and will be removed in 1.1 (renaming of 0.26). If you use this attribute in :class:`~sklearn.feature_selection.RFE` or :class:`~sklearn.feature_selection.SelectFromModel`, you may pass a callable to the `importance_getter` parameter that extracts feature the importances from `estimators_`."
msgstr "Este atributo está obsoleto en 0.24 y se eliminará en 1.1 (cambio de nombre de 0.26). Si utiliza este atributo en :class:`~sklearn.feature_selection.RFE` o :class:`~sklearn.feature_selection.SelectFromModel`, puede pasar un invocable al parámetro `importance_getter` que extraiga las importaciones de características de `estimators_`."

#: of sklearn.multiclass.OneVsRestClassifier:73
msgid "**intercept_**"
msgstr "**intercept_**"

#: of
msgid "ndarray of shape (1, 1) or (n_classes, 1)"
msgstr "ndarray de forma (1, 1) o (n_classes, 1)"

#: of sklearn.multiclass.OneVsRestClassifier:62
msgid "If ``y`` is binary, the shape is ``(1, 1)`` else ``(n_classes, 1)`` This attribute exists only if the ``estimators_`` defines ``intercept_``."
msgstr "Si ``y`` es binario, la forma es ``(1, 1)`` sino ``(n_classes, 1)`` Este atributo sólo existe si ``estimators_`` define ``intercept_``."

#: of sklearn.multiclass.OneVsRestClassifier:76
msgid "**classes_** : array, shape = [`n_classes`]"
msgstr "**classes_** : array, shape = [`n_classes`]"

#: of
msgid "array, shape = ["
msgstr "array, shape = ["

#: of sklearn.multiclass.OneVsRestClassifier:76
msgid "Class labels."
msgstr "Etiquetas de clase."

#: of sklearn.multiclass.OneVsRestClassifier:79
msgid "**n_classes_**"
msgstr "**n_classes_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.multiclass.OneVsRestClassifier:79
msgid "Number of classes."
msgstr "Número de clases."

#: of sklearn.multiclass.OneVsRestClassifier:83
msgid "**label_binarizer_**"
msgstr "**label_binarizer_**"

#: of
msgid "LabelBinarizer object"
msgstr "Objeto LabelBinarizer"

#: of sklearn.multiclass.OneVsRestClassifier:82
msgid "Object used to transform multiclass labels to binary labels and vice-versa."
msgstr "Objeto usado para transformar etiquetas multiclase en etiquetas binarias y viceversa."

#: of sklearn.multiclass.OneVsRestClassifier:89
msgid ":obj:`multilabel_ <multilabel_>`"
msgstr ":obj:`multilabel_ <multilabel_>`"

#: of
msgid "boolean"
msgstr "boolean"

#: of sklearn.multiclass.OneVsRestClassifier:86
#: sklearn.multiclass.OneVsRestClassifier.multilabel_:2
msgid "Whether this is a multilabel classifier"
msgstr "Indica si se trata de un clasificador multietiqueta"

#: of sklearn.multiclass.OneVsRestClassifier:94
msgid ":obj:`sklearn.multioutput.MultiOutputClassifier`"
msgstr ":obj:`sklearn.multioutput.MultiOutputClassifier`"

#: of sklearn.multiclass.OneVsRestClassifier:95
msgid "Alternate way of extending an estimator for multilabel classification."
msgstr "Forma alternativa de ampliar un estimador para la clasificación multietiqueta."

#: of sklearn.multiclass.OneVsRestClassifier:96
msgid ":obj:`sklearn.preprocessing.MultiLabelBinarizer`"
msgstr ":obj:`sklearn.preprocessing.MultiLabelBinarizer`"

#: of sklearn.multiclass.OneVsRestClassifier:97
msgid "Transform iterable of iterables to binary indicator matrix."
msgstr "Transforma un iterable de iterables a una matriz de indicadores binarios."

#: of sklearn.multiclass.OneVsRestClassifier:103
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.multiclass.OneVsRestClassifier:121
msgid "Methods"
msgstr "Métodos"

#: of sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid ":obj:`decision_function <sklearn.multiclass.OneVsRestClassifier.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.multiclass.OneVsRestClassifier.decision_function>`\\"

#: of sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid "Returns the distance of each sample from the decision boundary for each class."
msgstr "Devuelve la distancia de cada muestra al límite de decisión para cada clase."

#: of sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid ":obj:`fit <sklearn.multiclass.OneVsRestClassifier.fit>`\\"
msgstr ":obj:`fit <sklearn.multiclass.OneVsRestClassifier.fit>`\\"

#: of sklearn.multiclass.OneVsRestClassifier.fit:2
#: sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid "Fit underlying estimators."
msgstr "Ajustar estimadores subyacentes."

#: of sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid ":obj:`get_params <sklearn.multiclass.OneVsRestClassifier.get_params>`\\"
msgstr ":obj:`get_params <sklearn.multiclass.OneVsRestClassifier.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtener los parámetros de este estimador."

#: of sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.multiclass.OneVsRestClassifier.partial_fit>`\\"
msgstr ":obj:`partial_fit <sklearn.multiclass.OneVsRestClassifier.partial_fit>`\\"

#: of sklearn.multiclass.OneVsRestClassifier.partial_fit:2
#: sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid "Partially fit underlying estimators"
msgstr "Estimadores subyacentes ajustados parcialmente"

#: of sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid ":obj:`predict <sklearn.multiclass.OneVsRestClassifier.predict>`\\"
msgstr ":obj:`predict <sklearn.multiclass.OneVsRestClassifier.predict>`\\"

#: of sklearn.multiclass.OneVsRestClassifier.predict:2
#: sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid "Predict multi-class targets using underlying estimators."
msgstr "Predecir objetivos multiclase utilizando estimadores subyacentes."

#: of sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.multiclass.OneVsRestClassifier.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.multiclass.OneVsRestClassifier.predict_proba>`\\"

#: of sklearn.multiclass.OneVsRestClassifier.predict_proba:2
#: sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid "Probability estimates."
msgstr "Estimaciones de probabilidad."

#: of sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid ":obj:`score <sklearn.multiclass.OneVsRestClassifier.score>`\\"
msgstr ":obj:`score <sklearn.multiclass.OneVsRestClassifier.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos de prueba y las etiquetas dados."

#: of sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid ":obj:`set_params <sklearn.multiclass.OneVsRestClassifier.set_params>`\\"
msgstr ":obj:`set_params <sklearn.multiclass.OneVsRestClassifier.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.multiclass.OneVsRestClassifier:132:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.multiclass.OneVsRestClassifier.decision_function:2
msgid "Returns the distance of each sample from the decision boundary for each class. This can only be used with estimators which implement the decision_function method."
msgstr "Devuelve la distancia de cada muestra al límite de decisión para cada clase. Sólo puede utilizarse con estimadores que implementen el método decision_function."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.multiclass.OneVsRestClassifier.decision_function:10
#: sklearn.multiclass.OneVsRestClassifier.fit:8
#: sklearn.multiclass.OneVsRestClassifier.partial_fit:10
#: sklearn.multiclass.OneVsRestClassifier.predict:8
#: sklearn.multiclass.OneVsRestClassifier.predict_proba:17
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.multiclass.OneVsRestClassifier.decision_function
#: sklearn.multiclass.OneVsRestClassifier.fit
#: sklearn.multiclass.OneVsRestClassifier.partial_fit
#: sklearn.multiclass.OneVsRestClassifier.predict
#: sklearn.multiclass.OneVsRestClassifier.predict_proba
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.multiclass.OneVsRestClassifier.decision_function:28
#: sklearn.multiclass.OneVsRestClassifier.predict_proba:34
msgid "**T**"
msgstr "**T**"

#: of
msgid "array-like of shape (n_samples, n_classes) or (n_samples,) for             binary classification."
msgstr "array-like of shape (n_samples, n_classes) or (n_samples,) for             binary classification."

#: of sklearn.multiclass.OneVsRestClassifier.decision_function:15
msgid "output shape changed to ``(n_samples,)`` to conform to scikit-learn conventions for binary classification."
msgstr "la forma de la salida se ha cambiado a ``(n_samples,)`` para ajustarse a las convenciones de scikit-learn para la clasificación binaria."

#: of
msgid "(sparse) array-like of shape (n_samples, n_features)"
msgstr "(sparse) array-like de forma (n_samples, n_features)"

#: of sklearn.multiclass.OneVsRestClassifier.fit:8
#: sklearn.multiclass.OneVsRestClassifier.partial_fit:10
#: sklearn.multiclass.OneVsRestClassifier.predict:8
msgid "Data."
msgstr "Datos."

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.multiclass.OneVsRestClassifier.fit:12
#: sklearn.multiclass.OneVsRestClassifier.partial_fit:14
#: sklearn.multiclass.OneVsRestClassifier.predict:24
msgid "**y**"
msgstr "**y**"

#: of
msgid "(sparse) array-like of shape (n_samples,) or (n_samples, n_classes)"
msgstr "(sparse) array-like de forma (n_samples,) o (n_samples, n_classes)"

#: of sklearn.multiclass.OneVsRestClassifier.fit:11
#: sklearn.multiclass.OneVsRestClassifier.partial_fit:13
msgid "Multi-class targets. An indicator matrix turns on multilabel classification."
msgstr "Objetivos multiclase. Una matriz indicadora activa la clasificación multietiqueta."

#: of sklearn.multiclass.OneVsRestClassifier.fit:28
#: sklearn.multiclass.OneVsRestClassifier.partial_fit:37
msgid "self"
msgstr "self"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.multiclass.OneVsRestClassifier.partial_fit:4
msgid "Should be used when memory is inefficient to train all data. Chunks of data can be passed in several iteration."
msgstr "Debe usarse cuando la memoria es ineficiente para entrenar todos los datos. Se pueden pasar trozos de datos en varias iteraciones."

#: of sklearn.multiclass.OneVsRestClassifier.partial_fit:21
msgid "**classes**"
msgstr "**classes**"

#: of
msgid "array, shape (n_classes, )"
msgstr "array, shape (n_classes, )"

#: of sklearn.multiclass.OneVsRestClassifier.partial_fit:17
msgid "Classes across all calls to partial_fit. Can be obtained via `np.unique(y_all)`, where y_all is the target vector of the entire dataset. This argument is only required in the first call of partial_fit and can be omitted in the subsequent calls."
msgstr "Clases a través de todas las llamadas a partial_fit. Puede obtenerse mediante `np.unique(y_all)`, donde y_all es el vector objetivo del conjunto de datos completo. Este argumento sólo es necesario en la primera invocación de partial_fit y puede omitirse en las siguientes."

#: of sklearn.multiclass.OneVsRestClassifier.predict:13
msgid "Predicted multi-class targets."
msgstr "Objetivos multiclase predichos."

#: of sklearn.multiclass.OneVsRestClassifier.predict_proba:4
msgid "The returned estimates for all classes are ordered by label of classes."
msgstr "Las estimaciones devueltas para todas las clases están ordenadas por la etiqueta de las clases."

#: of sklearn.multiclass.OneVsRestClassifier.predict_proba:6
msgid "Note that in the multilabel case, each sample can have any number of labels. This returns the marginal probability that the given sample has the label in question. For example, it is entirely consistent that two labels both have a 90% probability of applying to a given sample."
msgstr "Ten en cuenta que, en el caso de las etiquetas múltiples, cada muestra puede tener cualquier número de etiquetas. Esto devuelve la probabilidad marginal de que la muestra dada tenga la etiqueta en cuestión. Por ejemplo, es totalmente coherente que dos etiquetas tengan ambas una probabilidad del 90% de aplicarse a una muestra determinada."

#: of sklearn.multiclass.OneVsRestClassifier.predict_proba:11
msgid "In the single label multiclass case, the rows of the returned matrix sum to 1."
msgstr "En el caso de una etiqueta multiclase, las filas de la matriz devuelta suman 1."

#: of
msgid "(sparse) array-like of shape (n_samples, n_classes)"
msgstr "(sparse) array-like de forma (n_samples, n_classes)"

#: of sklearn.multiclass.OneVsRestClassifier.predict_proba:22
msgid "Returns the probability of the sample for each class in the model, where classes are ordered as they are in `self.classes_`."
msgstr "Devuelve la probabilidad de la muestra para cada clase en el modelo, donde las clases se ordenan como están en `self.classes_`."

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto, que es una métrica rigurosa, ya que se requiere para cada muestra que cada conjunto de etiquetas sea predicho correctamente."

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas True para `X`."

#: of sklearn.base.ClassifierMixin.score:17
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: ../modules/generated/sklearn.multiclass.OneVsRestClassifier.examples:4
msgid "Examples using ``sklearn.multiclass.OneVsRestClassifier``"
msgstr "Ejemplos usando ``sklearn.multiclass.OneVsRestClassifier``"

#: ../modules/generated/sklearn.multiclass.OneVsRestClassifier.examples:15
#: ../modules/generated/sklearn.multiclass.OneVsRestClassifier.examples:23
msgid ":ref:`sphx_glr_auto_examples_multioutput_plot_classifier_chain_yeast.py`"
msgstr ":ref:`sphx_glr_auto_examples_multioutput_plot_classifier_chain_yeast.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_roc.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_precision_recall.py`"
#~ msgstr ""

