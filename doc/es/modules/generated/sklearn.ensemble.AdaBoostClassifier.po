msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-31 22:26\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.AdaBoostClassifier.po\n"
"X-Crowdin-File-ID: 5408\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.AdaBoostClassifier.rst:2
msgid ":mod:`sklearn.ensemble`.AdaBoostClassifier"
msgstr ":mod:`sklearn.ensemble`.AdaBoostClassifier"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:2
msgid "An AdaBoost classifier."
msgstr "Un clasificador AdaBoost."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:4
msgid "An AdaBoost [1] classifier is a meta-estimator that begins by fitting a classifier on the original dataset and then fits additional copies of the classifier on the same dataset but where the weights of incorrectly classified instances are adjusted such that subsequent classifiers focus more on difficult cases."
msgstr "Un clasificador de AdaBoost [1] es un meta-estimador que comienza por ajustar un clasificador en el conjunto de datos original y luego se ajusta a copias adicionales del clasificador en el mismo conjunto de datos pero donde las pesas de instancias mal clasificadas se ajustan de tal manera que los clasificadores posteriores se centran más en casos difíciles."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:10
msgid "This class implements the algorithm known as AdaBoost-SAMME [2]."
msgstr "Esta clase implementa el algoritmo conocido como AdaBoost-SAMME [2]."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:12
msgid "Read more in the :ref:`User Guide <adaboost>`."
msgstr "Más información en el :ref:`Manual de usuario <adaboost>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.decision_function
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:23
msgid "**base_estimator**"
msgstr "**base_estimator**"

#: of
msgid "object, default=None"
msgstr "object, default=None"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:19
msgid "The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`."
msgstr "El estimador base desde el cual se construye el ensemble potenciado. Se requiere soporte para la ponderación de la muestra, así como los atributos apropiados ``classes_`` y ``n_classes_``. Si ``None``, el estimador base es :class:`~sklearn.tree.DecisionTreeClassifier` inicializado con `max_depth=1`."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:27
msgid "**n_estimators**"
msgstr "**n_estimators**"

#: of
msgid "int, default=50"
msgstr "int, default=50"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:26
msgid "The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early."
msgstr "El número máximo de estimadores en los que se termina la potenciación. En caso de ajuste perfecto, el procedimiento de aprendizaje se detiene pronto."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:32
msgid "**learning_rate**"
msgstr "**learning_rate**"

#: of
msgid "float, default=1."
msgstr "float, default=1."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:30
msgid "Learning rate shrinks the contribution of each classifier by ``learning_rate``. There is a trade-off between ``learning_rate`` and ``n_estimators``."
msgstr "La tasa de aprendizaje reduce la contribución de cada árbol por `learning_rate`. Hay una compensación entre ``learning_rate`` y ``n_estimators``."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:39
msgid "**algorithm**"
msgstr "**algorithm**"

#: of
msgid "{'SAMME', 'SAMME.R'}, default='SAMME.R'"
msgstr "{'SAMME', 'SAMME.R'}, default='SAMME.R'"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:35
msgid "If 'SAMME.R' then use the SAMME.R real boosting algorithm. ``base_estimator`` must support calculation of class probabilities. If 'SAMME' then use the SAMME discrete boosting algorithm. The SAMME.R algorithm typically converges faster than SAMME, achieving a lower test error with fewer boosting iterations."
msgstr "Si es ``SAMME.R``, utiliza el algoritmo potenciador real de SAMME.R. ``base_estimator`` debe soportar el cálculo de las probabilidades de clase. Si es \"SAMME\", utilice el algoritmo potenciador discreto SAMME. El algoritmo SAMME.R suele converger más rápido que SAMME, logrando un menor error de prueba con menos iteraciones potenciadoras."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:49
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, instancia RandomState o None, default=None"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:42
msgid "Controls the random seed given at each `base_estimator` at each boosting iteration. Thus, it is only used when `base_estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Controla la semilla aleatoria dada en cada `base_estimator` en cada iteración potenciadora. Por lo tanto, sólo se utiliza cuando `base_estimator` expone un `random_state`. Pasa un int para una salida reproducible a través de múltiples llamadas a la función. Ver :term:`Glosario <estado_aleatorio>`."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:54
msgid "**base_estimator_**"
msgstr "**base_estimator_**"

#: of
msgid "estimator"
msgstr "estimador"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:54
msgid "The base estimator from which the ensemble is grown."
msgstr "El estimador base a partir del cual crece el ensemble."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:57
msgid "**estimators_**"
msgstr "**estimators_**"

#: of
msgid "list of classifiers"
msgstr "lista de clasificadores"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:57
msgid "The collection of fitted sub-estimators."
msgstr "La colección de sub-estimadores ajustados."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:60
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:60
msgid "The classes labels."
msgstr "Las etiquetas de clases."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:63
msgid "**n_classes_**"
msgstr "**n_classes_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:63
msgid "The number of classes."
msgstr "El número de clases."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:66
msgid "**estimator_weights_**"
msgstr "**estimator_pesos_**"

#: of
msgid "ndarray of floats"
msgstr "ndarray de floats"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:66
msgid "Weights for each estimator in the boosted ensemble."
msgstr "Ponderaciones para cada estimador en el ensemble potenciados."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:70
msgid "**estimator_errors_**"
msgstr "**estimator_errors_**"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:69
msgid "Classification error for each estimator in the boosted ensemble."
msgstr "Error de clasificación para cada estimador en el ensemble potenciado."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:76
msgid ":obj:`feature_importances_ <feature_importances_>`"
msgstr ":obj:`feature_importances_ <feature_importances_>`"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.ensemble.AdaBoostClassifier.feature_importances_:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:73
msgid "The impurity-based feature importances."
msgstr "Las importancias basadas en la impureza de las características."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:81
msgid ":obj:`AdaBoostRegressor`"
msgstr ":obj:`AdaBoostRegressor`"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:82
msgid "An AdaBoost regressor that begins by fitting a regressor on the original dataset and then fits additional copies of the regressor on the same dataset but where the weights of instances are adjusted according to the error of the current prediction."
msgstr "Un regresor de AdaBoost que comienza por ajustar un regresor en el conjunto de datos original y luego ajusta copias adicionales del regresor en el mismo conjunto de datos pero donde los pesos de las instancias se ajustan de acuerdo al error de la predicción actual."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:83
msgid ":obj:`GradientBoostingClassifier`"
msgstr ":obj:`GradientBoostingClassifier`"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:84
msgid "GB builds an additive model in a forward stage-wise fashion. Regression trees are fit on the negative gradient of the binomial or multinomial deviance loss function. Binary classification is a special case where only a single regression tree is induced."
msgstr "GB construye un modelo aditivo por etapas. Los árboles de regresión se ajustan al gradiente negativo de la función de pérdida de desviación binomial o multinomial. La clasificación binaria es un caso especial en el que sólo se induce un único árbol de regresión."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:85
msgid ":obj:`sklearn.tree.DecisionTreeClassifier`"
msgstr ":obj:`sklearn.tree.DecisionTreeClassifier`"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:86
msgid "A non-parametric supervised learning method used for classification. Creates a model that predicts the value of a target variable by learning simple decision rules inferred from the data features."
msgstr "Método de aprendizaje supervisado no paramétrico utilizado para la clasificación. Crea un modelo que predice el valor de una variable objetivo mediante el aprendizaje de reglas de decisión simples inferidas a partir de las características de los datos."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:91
msgid "References"
msgstr "Referencias"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:92
msgid "Y. Freund, R. Schapire, \"A Decision-Theoretic Generalization of on-Line Learning and an Application to Boosting\", 1995."
msgstr "Y. Freund, R. Schapire, \"A Decision-Theoretic Generalization of on-Line Learning and an Application to Boosting\", 1995."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:95
msgid "Zhu, H. Zou, S. Rosset, T. Hastie, \"Multi-class AdaBoost\", 2009."
msgstr "Zhu, H. Zou, S. Rosset, T. Hastie, \"Multi-class AdaBoost\", 2009."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:99
msgid "[R33e4ec8c4ad5-1]_, [R33e4ec8c4ad5-2]_"
msgstr "[R33e4ec8c4ad5-1]_, [R33e4ec8c4ad5-2]_"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:102
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:117
msgid "Methods"
msgstr "Métodos"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`decision_function <sklearn.ensemble.AdaBoostClassifier.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.ensemble.AdaBoostClassifier.decision_function>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.decision_function:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Compute the decision function of ``X``."
msgstr "Calcula la función de decisión de ``X``."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.AdaBoostClassifier.fit>`\\"
msgstr ":obj:`fit <sklearn.ensemble.AdaBoostClassifier.fit>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Build a boosted classifier from the training set (X, y)."
msgstr "Construye un clasificador potenciado del conjunto de entrenamiento (X, y)."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.AdaBoostClassifier.get_params>`\\"
msgstr ":obj:`get_params <sklearn.ensemble.AdaBoostClassifier.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.AdaBoostClassifier.predict>`\\"
msgstr ":obj:`predict <sklearn.ensemble.AdaBoostClassifier.predict>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Predict classes for X."
msgstr "Predice clases para X."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`predict_log_proba <sklearn.ensemble.AdaBoostClassifier.predict_log_proba>`\\"
msgstr ":obj:`predict_log_proba <sklearn.ensemble.AdaBoostClassifier.predict_log_proba>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Predict class log-probabilities for X."
msgstr "Predice las probabilidades logarítmicas de clase para X."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.ensemble.AdaBoostClassifier.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.ensemble.AdaBoostClassifier.predict_proba>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Predict class probabilities for X."
msgstr "Predice las probabilidades de clase para X."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`score <sklearn.ensemble.AdaBoostClassifier.score>`\\"
msgstr ":obj:`score <sklearn.ensemble.AdaBoostClassifier.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos de prueba y las etiquetas dados."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.AdaBoostClassifier.set_params>`\\"
msgstr ":obj:`set_params <sklearn.ensemble.AdaBoostClassifier.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establecer los parámetros de este estimador."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`staged_decision_function <sklearn.ensemble.AdaBoostClassifier.staged_decision_function>`\\"
msgstr ":obj:`staged_decision_function <sklearn.ensemble.AdaBoostClassifier.staged_decision_function>`\\"

#: of
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Compute decision function of ``X`` for each boosting iteration."
msgstr "Calcula la función de decisión de ``X`` para cada iteración potenciadora."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`staged_predict <sklearn.ensemble.AdaBoostClassifier.staged_predict>`\\"
msgstr ":obj:`staged_predict <sklearn.ensemble.AdaBoostClassifier.staged_predict>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict:2
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid "Return staged predictions for X."
msgstr "Devuelve predicciones escalonadas para X."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`staged_predict_proba <sklearn.ensemble.AdaBoostClassifier.staged_predict_proba>`\\"
msgstr ":obj:`staged_predict_proba <sklearn.ensemble.AdaBoostClassifier.staged_predict_proba>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
msgid ":obj:`staged_score <sklearn.ensemble.AdaBoostClassifier.staged_score>`\\"
msgstr ":obj:`staged_score <sklearn.ensemble.AdaBoostClassifier.staged_score>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier:132:<autosummary>:1
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:2
msgid "Return staged scores for X, y."
msgstr "Devuelve las puntuaciones escalonadas para X, y."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.decision_function:9
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit:9
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict:11
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba:12
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba:12
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function:12
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict:16
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba:18
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:12
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.decision_function:8
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit:8
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict:10
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba:11
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba:11
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function:10
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba:16
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:11
msgid "The training input samples. Sparse matrix can be CSC, CSR, COO, DOK, or LIL. COO, DOK, and LIL are converted to CSR."
msgstr "Las muestras de entrada de entrenamiento. La matriz dispersa puede ser CSC, CSR, COO, DOK o LIL. COO, DOK, y LIL se convierten en CSR."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.ensemble.AdaBoostClassifier.feature_importances_
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.decision_function
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.ClassifierMixin.score:33
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.decision_function:30
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function:32
msgid "**score**"
msgstr "**score**"

#: of
msgid "ndarray of shape of (n_samples, k)"
msgstr "ndarray de forma de (n_samples, k)"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.decision_function:14
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function:17
msgid "The decision function of the input samples. The order of outputs is the same of that of the :term:`classes_` attribute. Binary classification is a special cases with ``k == 1``, otherwise ``k==n_classes``. For binary classification, values closer to -1 or 1 mean more like the first or second class in ``classes_``, respectively."
msgstr "La función de decisión de las muestras de entrada. El orden de salida es igual al del atributo :term:`classes_`. La clasificación binaria es un caso especial con ``k == 1``, de lo contrario ``k==n_classes``. Para la clasificación binaria, los valores más cercanos a -1 o 1 significan más como la primera o la segunda clase en ``classes_``, respectivamente."

#: of sklearn.ensemble.AdaBoostClassifier.feature_importances_:4
msgid "The higher, the more important the feature. The importance of a feature is computed as the (normalized) total reduction of the criterion brought by that feature.  It is also known as the Gini importance."
msgstr "Cuanto más alto, más importante sera la característica. La importancia de una característica se calcula como la reducción total (normalizada) del criterio traído por esa función. También se le conoce como la importancia de Gini."

#: of sklearn.ensemble.AdaBoostClassifier.feature_importances_:9
msgid "Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative."
msgstr "Advertencia: las importancias de característica basadas en la impureza pueden ser engañosas para las características de alta cardinalidad (muchos valores únicos). Ver :func:`sklearn.inspection.permutation_importance` como una alternativa."

#: of sklearn.ensemble.AdaBoostClassifier.feature_importances_:28
msgid "**feature_importances_**"
msgstr "**feature_importances_**"

#: of sklearn.ensemble.AdaBoostClassifier.feature_importances_:17
msgid "The feature importances."
msgstr "La importancia de las características."

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit:12
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict:27
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict:31
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:15
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like de forma (n_samples,)"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit:12
msgid "The target values (class labels)."
msgstr "Los valores objetivo (etiquetas de clase)."

#: of sklearn.base.ClassifierMixin.score:17
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit:16
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:19
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit:15
msgid "Sample weights. If None, the sample weights are initialized to ``1 / n_samples``."
msgstr "Ponderaciones de muestra. Si es None, las ponderaciones de las muestras se inicializan a ``1 / n_samples``."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit:32
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.fit:21
msgid "Fitted estimator."
msgstr "Estimador ajustado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Los nombres de los parámetros se asignan a sus valores."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict:4
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict:4
msgid "The predicted class of an input sample is computed as the weighted mean prediction of the classifiers in the ensemble."
msgstr "La clase predicha de una muestra de entrada se calcula como la predicción ponderada de los clasificadores en el conjunto."

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict:16
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict:21
msgid "The predicted classes."
msgstr "Las clases predichas."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba:4
msgid "The predicted class log-probabilities of an input sample is computed as the weighted mean predicted class log-probabilities of the classifiers in the ensemble."
msgstr "Las probabilidades logarítmicas de clase predichas de una muestra de entrada se calculan como la media ponderada de las probabilidades logarítmicas de clase predichas de los clasificadores del ensemble."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba:29
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba:29
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba:34
msgid "**p**"
msgstr "**p**"

#: of
msgid "ndarray of shape (n_samples, n_classes)"
msgstr "ndarray de forma (n_samples, n_classes)"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_log_proba:17
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba:17
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba:23
msgid "The class probabilities of the input samples. The order of outputs is the same of that of the :term:`classes_` attribute."
msgstr "Las probabilidades de clase de las muestras de entrada. El orden de salida es el mismo que el del atributo :term:`classes_`."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.predict_proba:4
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba:4
msgid "The predicted class probabilities of an input sample is computed as the weighted mean predicted class probabilities of the classifiers in the ensemble."
msgstr "Las probabilidades de clase predichas de una muestra de entrada se calculan como las probabilidades de clase ponderadas predichas de los clasificadores en el ensemble."

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto, que es una métrica dura, ya que se requiere para cada muestra que cada conjunto de etiquetas se prediga correctamente."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas verdaderas para `X`."

#: of sklearn.base.ClassifierMixin.score:17
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:18
msgid "Sample weights."
msgstr "Ponderación de muestras."

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con relación a `y`."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona en estimadores simples así como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function:4
msgid "This method allows monitoring (i.e. determine error on testing set) after each boosting iteration."
msgstr "Este método permite el monitoreo (es decir, determinar el error en el conjunto de pruebas) después de cada iteración potenciadora."

#: of
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_decision_function
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score
msgid "Yields"
msgstr "Rendimiento"

#: of
msgid "generator of ndarray of shape (n_samples, k)"
msgstr "generador de ndarray de forma (n_samples, k)"

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict:7
msgid "This generator method yields the ensemble prediction after each iteration of boosting and therefore allows monitoring, such as to determine the prediction on a test set after each boost."
msgstr "Este método generador produce la predicción del ensemble después de cada iteración potenciadora y por lo tanto permite el monitoreo, tal como determinar la predicción en un conjunto de pruebas después de cada potenciación."

#: of sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict:14
msgid "The input samples. Sparse matrix can be CSC, CSR, COO, DOK, or LIL. COO, DOK, and LIL are converted to CSR."
msgstr "Las muestras de entrada. La matriz dispersa puede ser CSC, CSR, COO, DOK, LIL. COO, DOK, y LIL se convierten en CSR."

#: of
msgid "generator of ndarray of shape (n_samples,)"
msgstr "generador de ndarray de forma (n_samples,)"

#: of
#: sklearn.ensemble._weight_boosting.AdaBoostClassifier.staged_predict_proba:8
msgid "This generator method yields the ensemble predicted class probabilities after each iteration of boosting and therefore allows monitoring, such as to determine the predicted class probabilities on a test set after each boost."
msgstr "Este método generador produce las probabilidades de clase predichas del conjunto después de cada iteración de potenciación y por lo tanto permite el monitoreo, tal como determinar las probabilidades de clase predichas en un conjunto de pruebas después de cada potenciación."

#: of sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:4
msgid "This generator method yields the ensemble score after each iteration of boosting and therefore allows monitoring, such as to determine the score on a test set after each boost."
msgstr "Este método generador produce la puntuación del ensemble después de cada iteración potenciadora y por lo tanto permite el monitoreo, tal como determinar la puntuación en un conjunto de pruebas después de cada potenciación."

#: of sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:15
msgid "Labels for X."
msgstr "Etiquetas para X."

#: of sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:34
msgid "**z**"
msgstr "**z**"

