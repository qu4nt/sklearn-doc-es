msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-04-15 06:07\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.BayesianRidge.po\n"
"X-Crowdin-File-ID: 5590\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.BayesianRidge.rst:2
msgid ":mod:`sklearn.linear_model`.BayesianRidge"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:2
msgid "Bayesian ridge regression."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:4
msgid "Fit a Bayesian ridge model. See the Notes section for details on this implementation and the optimization of the regularization parameters lambda (precision of the weights) and alpha (precision of the noise)."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:8
msgid "Read more in the :ref:`User Guide <bayesian_regression>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._bayes.BayesianRidge
#: sklearn.linear_model._bayes.BayesianRidge.fit
#: sklearn.linear_model._bayes.BayesianRidge.predict
msgid "Parameters"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:13
msgid "**n_iter**"
msgstr ""

#: of
msgid "int, default=300"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:13
msgid "Maximum number of iterations. Should be greater than or equal to 1."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:16
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-3"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:16
msgid "Stop the algorithm if w has converged."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:20
msgid "**alpha_1**"
msgstr ""

#: of
msgid "float, default=1e-6"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:19
msgid "Hyper-parameter : shape parameter for the Gamma distribution prior over the alpha parameter."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:24
msgid "**alpha_2**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:23
msgid "Hyper-parameter : inverse scale parameter (rate parameter) for the Gamma distribution prior over the alpha parameter."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:28
msgid "**lambda_1**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:27
msgid "Hyper-parameter : shape parameter for the Gamma distribution prior over the lambda parameter."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:32
msgid "**lambda_2**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:31
msgid "Hyper-parameter : inverse scale parameter (rate parameter) for the Gamma distribution prior over the lambda parameter."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:38
msgid "**alpha_init**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:35
msgid "Initial value for alpha (precision of the noise). If not set, alpha_init is 1/Var(y)."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:44
msgid "**lambda_init**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:41
msgid "Initial value for lambda (precision of the weights). If not set, lambda_init is 1."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:48
msgid "**compute_score**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:47
msgid "If True, compute the log marginal likelihood at each iteration of the optimization."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:55
msgid "**fit_intercept**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:51
msgid "Whether to calculate the intercept for this model. The intercept is not treated as a probabilistic parameter and thus has no associated variance. If set to False, no intercept will be used in calculations (i.e. data is expected to be centered)."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:63
msgid "**normalize**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:58
msgid "This parameter is ignored when ``fit_intercept`` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm. If you wish to standardize, please use :class:`~sklearn.preprocessing.StandardScaler` before calling ``fit`` on an estimator with ``normalize=False``."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:66
msgid "**copy_X**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:66
msgid "If True, X will be copied; else, it may be overwritten."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:72
msgid "**verbose**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:69
msgid "Verbose mode when fitting the model."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge
msgid "Attributes"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:77
msgid "**coef_**"
msgstr ""

#: of
msgid "array-like of shape (n_features,)"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:77
msgid "Coefficients of the regression model (mean of distribution)"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:81
msgid "**intercept_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:80
msgid "Independent term in decision function. Set to 0.0 if ``fit_intercept = False``."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:84
msgid "**alpha_**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:84
msgid "Estimated precision of the noise."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:87
msgid "**lambda_**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:87
msgid "Estimated precision of the weights."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:90
msgid "**sigma_**"
msgstr ""

#: of
msgid "array-like of shape (n_features, n_features)"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:90
msgid "Estimated variance-covariance matrix of the weights"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:97
msgid "**scores_**"
msgstr ""

#: of
msgid "array-like of shape (n_iter_+1,)"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:93
msgid "If computed_score is True, value of the log marginal likelihood (to be maximized) at each iteration of the optimization. The array starts with the value of the log marginal likelihood obtained for the initial values of alpha and lambda and ends with the value obtained for the estimated alpha and lambda."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:100
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:100
msgid "The actual number of iterations to reach the stopping criterion."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:104
msgid "**X_offset_**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:103
msgid "If `normalize=True`, offset subtracted for centering data to a zero mean."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:112
msgid "**X_scale_**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:107
msgid "If `normalize=True`, parameter used to scale data to a unit standard deviation."
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.linear_model._bayes.BayesianRidge:115
msgid "Notes"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:116
msgid "There exist several strategies to perform Bayesian ridge regression. This implementation is based on the algorithm described in Appendix A of (Tipping, 2001) where updates of the regularization parameters are done as suggested in (MacKay, 1992). Note that according to A New View of Automatic Relevance Determination (Wipf and Nagarajan, 2008) these update rules do not guarantee that the marginal likelihood is increasing between two consecutive iterations of the optimization."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:125
msgid "References"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:126
msgid "D. J. C. MacKay, Bayesian Interpolation, Computation and Neural Systems, Vol. 4, No. 3, 1992."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:129
msgid "M. E. Tipping, Sparse Bayesian Learning and the Relevance Vector Machine, Journal of Machine Learning Research, Vol. 1, 2001."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:137
msgid "Examples"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:146
msgid "Methods"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.BayesianRidge.fit>`\\"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.fit:2
#: sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid "Fit the model"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.BayesianRidge.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.BayesianRidge.predict>`\\"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.predict:2
#: sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid "Predict using the linear model."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.BayesianRidge.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.BayesianRidge.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._bayes.BayesianRidge:154:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._bayes.BayesianRidge.fit:8
#: sklearn.linear_model._bayes.BayesianRidge.predict:10
msgid "**X**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.fit:8
msgid "Training data"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._bayes.BayesianRidge.fit:11
msgid "**y**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.fit:11
msgid "Target values. Will be cast to X's dtype if necessary"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.linear_model._bayes.BayesianRidge.fit:17
msgid "**sample_weight**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.fit:14
msgid "Individual weights for each sample"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.fit:16
msgid "parameter *sample_weight* support to BayesianRidge."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._bayes.BayesianRidge.fit
#: sklearn.linear_model._bayes.BayesianRidge.predict
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.linear_model._bayes.BayesianRidge.fit:33
msgid "**self**"
msgstr ""

#: of
msgid "returns an instance of self."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.predict:4
msgid "In addition to the mean of the predictive distribution, also its standard deviation can be returned."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.predict:10
msgid "Samples."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.predict:13
msgid "**return_std**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.predict:13
msgid "Whether to return the standard deviation of posterior prediction."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.predict:18
msgid "**y_mean**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.predict:18
msgid "Mean of predictive distribution of query points."
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.predict:32
msgid "**y_std**"
msgstr ""

#: of sklearn.linear_model._bayes.BayesianRidge.predict:21
msgid "Standard deviation of predictive distribution of query points."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.linear_model.BayesianRidge.examples:4
msgid "Examples using ``sklearn.linear_model.BayesianRidge``"
msgstr ""

#: ../modules/generated/sklearn.linear_model.BayesianRidge.examples:15
#: ../modules/generated/sklearn.linear_model.BayesianRidge.examples:23
msgid ":ref:`sphx_glr_auto_examples_impute_plot_iterative_imputer_variants_comparison.py`"
msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_bayesian_ridge.py`"
#~ msgstr ""

