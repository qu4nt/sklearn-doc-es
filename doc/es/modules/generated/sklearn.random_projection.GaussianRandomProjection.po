msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 07:06\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.random_projection.GaussianRandomProjection.po\n"
"X-Crowdin-File-ID: 5212\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.random_projection.GaussianRandomProjection.rst:2
msgid ":mod:`sklearn.random_projection`.GaussianRandomProjection"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:2
msgid "Reduce dimensionality through Gaussian random projection."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:4
msgid "The components of the random matrix are drawn from N(0, 1 / n_components)."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:6
msgid "Read more in the :ref:`User Guide <gaussian_random_matrix>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.random_projection.BaseRandomProjection.fit
#: sklearn.random_projection.BaseRandomProjection.transform
#: sklearn.random_projection.GaussianRandomProjection
msgid "Parameters"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:22
msgid "**n_components**"
msgstr ""

#: of
msgid "int or 'auto', default='auto'"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:13
msgid "Dimensionality of the target projection space."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:15
msgid "n_components can be automatically adjusted according to the number of samples in the dataset and the bound given by the Johnson-Lindenstrauss lemma. In that case the quality of the embedding is controlled by the ``eps`` parameter."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:20
msgid "It should be noted that Johnson-Lindenstrauss lemma can yield very conservative estimated of the required number of components as it makes no assumption on the structure of the dataset."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:30
msgid "**eps**"
msgstr ""

#: of
msgid "float, default=0.1"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:25
msgid "Parameter to control the quality of the embedding according to the Johnson-Lindenstrauss lemma when `n_components` is set to 'auto'. The value should be strictly positive."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:29
msgid "Smaller values lead to better embedding and higher number of dimensions (n_components) in the target projection space."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:39
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:33
msgid "Controls the pseudo random number generator used to generate the projection matrix at fit time. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection
msgid "Attributes"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:44
msgid "**n_components_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:44
msgid "Concrete number of components computed when n_components=\"auto\"."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:50
msgid "**components_**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:47
msgid "Random matrix used for the projection."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:55
msgid ":obj:`SparseRandomProjection`"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:61
msgid "Examples"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:72
msgid "Methods"
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid ":obj:`fit <sklearn.random_projection.GaussianRandomProjection.fit>`\\"
msgstr ""

#: of sklearn.random_projection.BaseRandomProjection.fit:2
#: sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid "Generate a sparse random projection matrix."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.random_projection.GaussianRandomProjection.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid ":obj:`get_params <sklearn.random_projection.GaussianRandomProjection.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid ":obj:`set_params <sklearn.random_projection.GaussianRandomProjection.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid ":obj:`transform <sklearn.random_projection.GaussianRandomProjection.transform>`\\"
msgstr ""

#: of sklearn.random_projection.BaseRandomProjection.transform:2
#: sklearn.random_projection.GaussianRandomProjection:80:<autosummary>:1
msgid "Project the data by using matrix product with the random matrix"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.random_projection.BaseRandomProjection.fit:10
#: sklearn.random_projection.BaseRandomProjection.transform:8
msgid "**X**"
msgstr ""

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.random_projection.BaseRandomProjection.fit:8
msgid "Training set: only the shape is used to find optimal random matrix dimensions based on the theory referenced in the afore mentioned papers."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.random_projection.BaseRandomProjection.fit:13
msgid "**y**"
msgstr ""

#: of sklearn.random_projection.BaseRandomProjection.fit:13
msgid "Ignored"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.random_projection.BaseRandomProjection.fit
#: sklearn.random_projection.BaseRandomProjection.transform
msgid "Returns"
msgstr ""

#: of sklearn.random_projection.BaseRandomProjection.fit:29
msgid "self"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.random_projection.BaseRandomProjection.transform:24
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.random_projection.BaseRandomProjection.transform:8
msgid "The input data to project into a smaller dimensional space."
msgstr ""

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.random_projection.BaseRandomProjection.transform:13
msgid "Projected array."
msgstr ""

