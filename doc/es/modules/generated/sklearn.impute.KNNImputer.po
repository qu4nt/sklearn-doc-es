msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-04-14 23:58\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.impute.KNNImputer.po\n"
"X-Crowdin-File-ID: 3226\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.impute.KNNImputer.rst:2
msgid ":mod:`sklearn.impute`.KNNImputer"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:2
msgid "Imputation for completing missing values using k-Nearest Neighbors."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:4
msgid "Each sample's missing values are imputed using the mean value from `n_neighbors` nearest neighbors found in the training set. Two samples are close if the features that neither is missing are close."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:8
msgid "Read more in the :ref:`User Guide <knnimpute>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform sklearn.impute._knn.KNNImputer
#: sklearn.impute._knn.KNNImputer.fit sklearn.impute._knn.KNNImputer.transform
msgid "Parameters"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:18
msgid "**missing_values**"
msgstr ""

#: of
msgid "int, float, str, np.nan or None, default=np.nan"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:15
msgid "The placeholder for the missing values. All occurrences of `missing_values` will be imputed. For pandas' dataframes with nullable integer dtypes with missing values, `missing_values` should be set to np.nan, since `pd.NA` will be converted to np.nan."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:21
msgid "**n_neighbors**"
msgstr ""

#: of
msgid "int, default=5"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:21
msgid "Number of neighboring samples to use for imputation."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:33
msgid "**weights**"
msgstr ""

#: of
msgid "{'uniform', 'distance'} or callable, default='uniform'"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:24
msgid "Weight function used in prediction.  Possible values:"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:26
msgid "'uniform' : uniform weights. All points in each neighborhood are weighted equally."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:28
msgid "'distance' : weight points by the inverse of their distance. in this case, closer neighbors of a query point will have a greater influence than neighbors which are further away."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:31
msgid "callable : a user-defined function which accepts an array of distances, and returns an array of the same shape containing the weights."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:42
msgid "**metric**"
msgstr ""

#: of
msgid "{'nan_euclidean'} or callable, default='nan_euclidean'"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:36
msgid "Distance metric for searching neighbors. Possible values:"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:38
msgid "'nan_euclidean'"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:39
msgid "callable : a user-defined function which conforms to the definition of ``_pairwise_callable(X, Y, metric, **kwds)``. The function accepts two arrays, X and Y, and a `missing_values` keyword in `kwds` and returns a scalar distance value."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:46
msgid "**copy**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:45
msgid "If True, a copy of X will be created. If False, imputation will be done in-place whenever possible."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:57
msgid "**add_indicator**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:49
msgid "If True, a :class:`MissingIndicator` transform will stack onto the output of the imputer's transform. This allows a predictive estimator to account for missingness despite imputation. If a feature has no missing values at fit/train time, the feature won't appear on the missing indicator even if there are missing values at transform/test time."
msgstr ""

#: of sklearn.impute._knn.KNNImputer
msgid "Attributes"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:68
msgid "**indicator_** : :class:`~sklearn.impute.MissingIndicator`"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:67
msgid "MissingIndicator"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:62
msgid "Indicator used to add binary indicators for missing values. ``None`` if add_indicator is False."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:71
msgid "References"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:72
msgid "Olga Troyanskaya, Michael Cantor, Gavin Sherlock, Pat Brown, Trevor Hastie, Robert Tibshirani, David Botstein and Russ B. Altman, Missing value estimation methods for DNA microarrays, BIOINFORMATICS Vol. 17 no. 6, 2001 Pages 520-525."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:82
msgid "Examples"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:94
msgid "Methods"
msgstr ""

#: of sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid ":obj:`fit <sklearn.impute.KNNImputer.fit>`\\"
msgstr ""

#: of sklearn.impute._knn.KNNImputer.fit:2
#: sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid "Fit the imputer on X."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.impute.KNNImputer.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid ":obj:`get_params <sklearn.impute.KNNImputer.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid ":obj:`set_params <sklearn.impute.KNNImputer.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid ":obj:`transform <sklearn.impute.KNNImputer.transform>`\\"
msgstr ""

#: of sklearn.impute._knn.KNNImputer.transform:2
#: sklearn.impute._knn.KNNImputer:102:<autosummary>:1
msgid "Impute all missing values in X."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.impute._knn.KNNImputer.fit:9
#: sklearn.impute._knn.KNNImputer.transform:8
#: sklearn.impute._knn.KNNImputer.transform:25
msgid "**X**"
msgstr ""

#: of
msgid "array-like shape of (n_samples, n_features)"
msgstr ""

#: of sklearn.impute._knn.KNNImputer.fit:8
msgid "Input data, where `n_samples` is the number of samples and `n_features` is the number of features."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.impute._knn.KNNImputer.fit sklearn.impute._knn.KNNImputer.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.impute._knn.KNNImputer.fit:25
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.impute._knn.KNNImputer.transform:8
msgid "The input data to complete."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_output_features)"
msgstr ""

#: of sklearn.impute._knn.KNNImputer.transform:13
msgid "The imputed dataset. `n_output_features` is the number of features that is not always missing during `fit`."
msgstr ""

#: ../modules/generated/sklearn.impute.KNNImputer.examples:4
msgid "Examples using ``sklearn.impute.KNNImputer``"
msgstr ""

#: ../modules/generated/sklearn.impute.KNNImputer.examples:15
#: ../modules/generated/sklearn.impute.KNNImputer.examples:23
msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_22_0.py`"
msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_impute_plot_missing_values.py`"
#~ msgstr ""

