msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-17 22:51\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.calibration.CalibratedClassifierCV.po\n"
"X-Crowdin-File-ID: 4988\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.calibration.CalibratedClassifierCV.rst:2
msgid ":mod:`sklearn.calibration`.CalibratedClassifierCV"
msgstr ":mod:`sklearn.calibration`.CalibratedClassifierCV"

#: of sklearn.calibration.CalibratedClassifierCV:2
msgid "Probability calibration with isotonic regression or logistic regression."
msgstr "Calibración de la probabilidad con regresión isotónica o regresión logística."

#: of sklearn.calibration.CalibratedClassifierCV:4
msgid "This class uses cross-validation to both estimate the parameters of a classifier and subsequently calibrate a classifier. With default `ensemble=True`, for each cv split it fits a copy of the base estimator to the training subset, and calibrates it using the testing subset. For prediction, predicted probabilities are averaged across these individual calibrated classifiers. When `ensemble=False`, cross-validation is used to obtain unbiased predictions, via :func:`~sklearn.model_selection.cross_val_predict`, which are then used for calibration. For prediction, the base estimator, trained using all the data, is used. This is the method implemented when `probabilities=True` for :mod:`sklearn.svm` estimators."
msgstr "Esta clase utiliza la validación cruzada tanto para estimar los parámetros de un clasificador como para calibrar posteriormente un clasificador. Con el valor predeterminado `ensemble=True`, para cada división cv ajusta una copia del estimador base al subconjunto de entrenamiento, y lo calibra utilizando el subconjunto de prueba. Para la predicción, las probabilidades predichas se promedian entre estos clasificadores calibrados individuales. Cuando `ensemble=False`, se utiliza la validación cruzada para obtener predicciones insesgadas, a través de :func:`~sklearn.model_selection.cross_val_predict`, que luego se utilizan para la calibración. Para la predicción, se utiliza el estimador base, entrenado con todos los datos. Este es el método implementado cuando `probabilidades=True` para los estimadores :mod:`sklearn.svm`."

#: of sklearn.calibration.CalibratedClassifierCV:16
msgid "Already fitted classifiers can be calibrated via the parameter `cv=\"prefit\"`. In this case, no cross-validation is used and all provided data is used for calibration. The user has to take care manually that data for model fitting and calibration are disjoint."
msgstr "Los clasificadores ya ajustados pueden calibrarse mediante el parámetro `cv=\"prefit\"`. En este caso, no se utiliza la validación cruzada y todos los datos proporcionados se utilizan para la calibración. El usuario debe tener cuidado manualmente de que los datos para el ajuste del modelo y la calibración estén separados."

#: of sklearn.calibration.CalibratedClassifierCV:21
msgid "The calibration is based on the :term:`decision_function` method of the `base_estimator` if it exists, else on :term:`predict_proba`."
msgstr "La calibración se basa en el método :term:`decision_function` del `base_estimator` si existe, sino en :term:`predict_proba`."

#: of sklearn.calibration.CalibratedClassifierCV:24
msgid "Read more in the :ref:`User Guide <calibration>`."
msgstr "Lee más en el :ref:`Manual de usuario <calibration>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.calibration.CalibratedClassifierCV
#: sklearn.calibration.CalibratedClassifierCV.fit
#: sklearn.calibration.CalibratedClassifierCV.predict
#: sklearn.calibration.CalibratedClassifierCV.predict_proba
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.calibration.CalibratedClassifierCV:31
msgid "**base_estimator**"
msgstr "**base_estimator**"

#: of
msgid "estimator instance, default=None"
msgstr "instancia del estimador, default=None"

#: of sklearn.calibration.CalibratedClassifierCV:29
msgid "The classifier whose output need to be calibrated to provide more accurate `predict_proba` outputs. The default classifier is a :class:`~sklearn.svm.LinearSVC`."
msgstr "El clasificador cuya salida necesita ser calibrada para proporcionar salidas `predict_proba` más precisas. El clasificador predeterminado es un :class:`~sklearn.svm.LinearSVC`."

#: of sklearn.calibration.CalibratedClassifierCV:38
msgid "**method**"
msgstr "**method**"

#: of
msgid "{'sigmoid', 'isotonic'}, default='sigmoid'"
msgstr "{'sigmoid', 'isotonic'}, default='sigmoid'"

#: of sklearn.calibration.CalibratedClassifierCV:34
msgid "The method to use for calibration. Can be 'sigmoid' which corresponds to Platt's method (i.e. a logistic regression model) or 'isotonic' which is a non-parametric approach. It is not advised to use isotonic calibration with too few calibration samples ``(<<1000)`` since it tends to overfit."
msgstr "El método a utilizar para la calibración. Puede ser 'sigmoide' que corresponde al método de Platt (es decir, un modelo de regresión logística) o 'isotonic' que es un enfoque no paramétrico. No se aconseja utilizar la calibración isotónica con muy pocas muestras de calibración ``(<<1000)`` ya que tiende a sobreajustarse."

#: of sklearn.calibration.CalibratedClassifierCV:61
msgid "**cv**"
msgstr "**cv**"

#: of
msgid "int, cross-validation generator, iterable or \"prefit\",             default=None"
msgstr "entero, generador de validación cruzada, iterable o \"prefit\",             default=None"

#: of sklearn.calibration.CalibratedClassifierCV:41
msgid "Determines the cross-validation splitting strategy. Possible inputs for cv are:"
msgstr "Determina la estrategia de división de la validación cruzada. Las entradas posibles para cv son:"

#: of sklearn.calibration.CalibratedClassifierCV:44
msgid "None, to use the default 5-fold cross-validation,"
msgstr "None, para utilizar la validación cruzada de 5-pliegues (fold) por defecto,"

#: of sklearn.calibration.CalibratedClassifierCV:45
msgid "integer, to specify the number of folds."
msgstr "entero, para especificar el número de pliegues."

#: of sklearn.calibration.CalibratedClassifierCV:46
msgid ":term:`CV splitter`,"
msgstr ":term:`CV splitter`,"

#: of sklearn.calibration.CalibratedClassifierCV:47
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr "Un iterable que produce divisiones (train, test) como arreglos de índices."

#: of sklearn.calibration.CalibratedClassifierCV:49
msgid "For integer/None inputs, if ``y`` is binary or multiclass, :class:`~sklearn.model_selection.StratifiedKFold` is used. If ``y`` is neither binary nor multiclass, :class:`~sklearn.model_selection.KFold` is used."
msgstr "Para entradas enteras/None, si ``y`` es binario o multiclase, se utiliza :class:`~sklearn.model_selection.StratifiedKFold`. Si ``y`` no es binario ni multiclase, se utiliza :class:`~sklearn.model_selection.KFold`."

#: of sklearn.calibration.CalibratedClassifierCV:54
msgid "Refer to the :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr "Consulta el :ref:`Manual de Usuario <cross_validation>` para conocer las distintas estrategias de validación cruzada que se pueden utilizar aquí."

#: of sklearn.calibration.CalibratedClassifierCV:57
msgid "If \"prefit\" is passed, it is assumed that `base_estimator` has been fitted already and all data is used for calibration."
msgstr "Si se pasa \"prefit\", se asume que `base_estimator` ya ha sido ajustado y se utilizan todos los datos para la calibración."

#: of sklearn.calibration.CalibratedClassifierCV:60
msgid "``cv`` default value if None changed from 3-fold to 5-fold."
msgstr "El valor predeterminado de ``cv``, None, cambió de 3 partes a 5 partes."

#: of sklearn.calibration.CalibratedClassifierCV:73
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "entero, default=None"

#: of sklearn.calibration.CalibratedClassifierCV:64
msgid "Number of jobs to run in parallel. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors."
msgstr "Número de trabajos a ejecutar en paralelo. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesadores."

#: of sklearn.calibration.CalibratedClassifierCV:68
msgid "Base estimator clones are fitted in parallel across cross-validation iterations. Therefore parallelism happens only when `cv != \"prefit\"`."
msgstr "Los clones del estimador base se ajustan en paralelo a través de las iteraciones de validación cruzada. Por lo tanto, el paralelismo sólo se produce cuando `cv != \"prefit\"`."

#: of sklearn.calibration.CalibratedClassifierCV:71
msgid "See :term:`Glossary <n_jobs>` for more details."
msgstr "Consulta :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.calibration.CalibratedClassifierCV:95
msgid "**ensemble**"
msgstr "**ensemble**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.calibration.CalibratedClassifierCV:76
msgid "Determines how the calibrator is fitted when `cv` is not `'prefit'`. Ignored if `cv='prefit'`."
msgstr "Determina cómo se ajusta el calibrador cuando `cv` no es `'prefit'`. Se ignora si `cv='prefit'`."

#: of sklearn.calibration.CalibratedClassifierCV:79
msgid "If `True`, the `base_estimator` is fitted using training data and calibrated using testing data, for each `cv` fold. The final estimator is an ensemble of `n_cv` fitted classifer and calibrator pairs, where `n_cv` is the number of cross-validation folds. The output is the average predicted probabilities of all pairs."
msgstr "Si es `True`, el `base_estimator` se ajusta utilizando datos de entrenamiento y se calibra usando datos de pruebas, para cada pliegue `cv`. El estimador final es un conjunto de `n_cv` pares ajustados de clasificadores y calificadores, donde `n_cv` es el número de pliegues de validación cruzada. La salida es el promedio de probabilidades predichas de todos los pares."

#: of sklearn.calibration.CalibratedClassifierCV:85
msgid "If `False`, `cv` is used to compute unbiased predictions, via :func:`~sklearn.model_selection.cross_val_predict`, which are then used for calibration. At prediction time, the classifier used is the `base_estimator` trained on all the data. Note that this method is also internally implemented  in :mod:`sklearn.svm` estimators with the `probabilities=True` parameter."
msgstr "Si es `False`, `cv` se utiliza para calcular predicciones insesgadas, a través de :func:`~sklearn.model_selection.cross_val_predict`, que luego se usan para la calibración. En el momento de la predicción, el clasificador utilizado es el `base_estimator` entrenado en todos los datos. Ten en cuenta que este método también se implementa internamente en los estimadores :mod:`sklearn.svm` con el parámetro `probabilities=True`."

#: of sklearn.calibration.CalibratedClassifierCV
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.calibration.CalibratedClassifierCV:100
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.calibration.CalibratedClassifierCV:100
msgid "The class labels."
msgstr "Las etiquetas de clase."

#: of sklearn.calibration.CalibratedClassifierCV:119
msgid "**calibrated_classifiers_** : list (len() equal to cv or 1 if `cv=\"prefit\"`             or `ensemble=False`)"
msgstr "**calibrated_classifiers_** : list (len() equal to cv or 1 if `cv=\"prefit\"`             o `ensemble=False`)"

#: of
msgid "list (len() equal to cv or 1 if"
msgstr "list (len() equal to cv or 1 if"

#: of sklearn.calibration.CalibratedClassifierCV:103
msgid "The list of classifier and calibrator pairs."
msgstr "La lista de pares de clasificadores y calibradores."

#: of sklearn.calibration.CalibratedClassifierCV:105
msgid "When `cv=\"prefit\"`, the fitted `base_estimator` and fitted calibrator."
msgstr "Cuando `cv=\"prefit\"`, el `base_estimator` ajustado y el calibrador ajustado."

#: of sklearn.calibration.CalibratedClassifierCV:107
msgid "When `cv` is not \"prefit\" and `ensemble=True`, `n_cv` fitted `base_estimator` and calibrator pairs. `n_cv` is the number of cross-validation folds."
msgstr "Cuando `cv` no es \"prefit\" y `ensemble=True`, `n_cv` ajusta los pares `base_estimator` y calibrador. `n_cv` es el número de pliegues de validación cruzada."

#: of sklearn.calibration.CalibratedClassifierCV:110
msgid "When `cv` is not \"prefit\" and `ensemble=False`, the `base_estimator`, fitted on all the data, and fitted calibrator."
msgstr "Cuando `cv` no es \"prefit\" y `ensemble=False`, el `base_estimator` se ajusta a todos los datos y ajusta el calibrador."

#: of sklearn.calibration.CalibratedClassifierCV:113
msgid "Single calibrated classifier case when `ensemble=False`."
msgstr "Caso de clasificador único calibrado cuando `ensemble=False`."

#: of sklearn.calibration.CalibratedClassifierCV:122
msgid "References"
msgstr "Referencias"

#: of sklearn.calibration.CalibratedClassifierCV:123
msgid "Obtaining calibrated probability estimates from decision trees and naive Bayesian classifiers, B. Zadrozny & C. Elkan, ICML 2001"
msgstr "Obtaining calibrated probability estimates from decision trees and naive Bayesian classifiers, B. Zadrozny & C. Elkan, ICML 2001"

#: of sklearn.calibration.CalibratedClassifierCV:126
msgid "Transforming Classifier Scores into Accurate Multiclass Probability Estimates, B. Zadrozny & C. Elkan, (KDD 2002)"
msgstr "Transforming Classifier Scores into Accurate Multiclass Probability Estimates, B. Zadrozny & C. Elkan, (KDD 2002)"

#: of sklearn.calibration.CalibratedClassifierCV:129
msgid "Probabilistic Outputs for Support Vector Machines and Comparisons to Regularized Likelihood Methods, J. Platt, (1999)"
msgstr "Probabilistic Outputs for Support Vector Machines and Comparisons to Regularized Likelihood Methods, J. Platt, (1999)"

#: of sklearn.calibration.CalibratedClassifierCV:132
msgid "Predicting Good Probabilities with Supervised Learning, A. Niculescu-Mizil & R. Caruana, ICML 2005"
msgstr "Predicting Good Probabilities with Supervised Learning, A. Niculescu-Mizil & R. Caruana, ICML 2005"

#: of sklearn.calibration.CalibratedClassifierCV:137
msgid "[R57cf438d7060-1]_, [R57cf438d7060-2]_, [R57cf438d7060-3]_, [R57cf438d7060-4]_"
msgstr "[R57cf438d7060-1]_, [R57cf438d7060-2]_, [R57cf438d7060-3]_, [R57cf438d7060-4]_"

#: of sklearn.calibration.CalibratedClassifierCV:140
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.calibration.CalibratedClassifierCV:180
msgid "Methods"
msgstr "Métodos"

#: of sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid ":obj:`fit <sklearn.calibration.CalibratedClassifierCV.fit>`\\"
msgstr ":obj:`fit <sklearn.calibration.CalibratedClassifierCV.fit>`\\"

#: of sklearn.calibration.CalibratedClassifierCV.fit:2
#: sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid "Fit the calibrated model."
msgstr "Ajusta el modelo calibrado."

#: of sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid ":obj:`get_params <sklearn.calibration.CalibratedClassifierCV.get_params>`\\"
msgstr ":obj:`get_params <sklearn.calibration.CalibratedClassifierCV.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid ":obj:`predict <sklearn.calibration.CalibratedClassifierCV.predict>`\\"
msgstr ":obj:`predict <sklearn.calibration.CalibratedClassifierCV.predict>`\\"

#: of sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid "Predict the target of new samples."
msgstr "Predice el objetivo de las nuevas muestras."

#: of sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.calibration.CalibratedClassifierCV.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.calibration.CalibratedClassifierCV.predict_proba>`\\"

#: of sklearn.calibration.CalibratedClassifierCV.predict_proba:2
#: sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid "Calibrated probabilities of classification."
msgstr "Probabilidades de clasificación calibradas."

#: of sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid ":obj:`score <sklearn.calibration.CalibratedClassifierCV.score>`\\"
msgstr ":obj:`score <sklearn.calibration.CalibratedClassifierCV.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos y etiquetas de prueba dados."

#: of sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid ":obj:`set_params <sklearn.calibration.CalibratedClassifierCV.set_params>`\\"
msgstr ":obj:`set_params <sklearn.calibration.CalibratedClassifierCV.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.calibration.CalibratedClassifierCV:189:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.calibration.CalibratedClassifierCV.fit:8
#: sklearn.calibration.CalibratedClassifierCV.predict:10
#: sklearn.calibration.CalibratedClassifierCV.predict_proba:10
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.calibration.CalibratedClassifierCV.fit:8
msgid "Training data."
msgstr "Datos de entrenamiento."

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.calibration.CalibratedClassifierCV.fit:11
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like de forma (n_samples,)"

#: of sklearn.calibration.CalibratedClassifierCV.fit:11
msgid "Target values."
msgstr "Valores objetivo."

#: of sklearn.base.ClassifierMixin.score:17
#: sklearn.calibration.CalibratedClassifierCV.fit:14
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.calibration.CalibratedClassifierCV.fit:14
msgid "Sample weights. If None, then samples are equally weighted."
msgstr "Ponderaciones de las muestras. Si es None, las muestras se ponderan por igual."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.calibration.CalibratedClassifierCV.fit
#: sklearn.calibration.CalibratedClassifierCV.predict
#: sklearn.calibration.CalibratedClassifierCV.predict_proba
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.calibration.CalibratedClassifierCV.fit:30
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.calibration.CalibratedClassifierCV.fit:19
msgid "Returns an instance of self."
msgstr "Devuelve una instancia de sí misma."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Los nombres de los parámetros mapeados a sus valores."

#: of sklearn.calibration.CalibratedClassifierCV.predict:2
msgid "Predict the target of new samples. The predicted class is the class that has the highest probability, and can thus be different from the prediction of the uncalibrated classifier."
msgstr "Predice el objetivo de las nuevas muestras. La clase predicha es la que tiene la mayor probabilidad, por lo que puede ser diferente de la predicción del clasificador no calibrado."

#: of sklearn.calibration.CalibratedClassifierCV.predict:10
#: sklearn.calibration.CalibratedClassifierCV.predict_proba:10
msgid "The samples."
msgstr "Las muestras."

#: of sklearn.calibration.CalibratedClassifierCV.predict:26
#: sklearn.calibration.CalibratedClassifierCV.predict_proba:26
msgid "**C**"
msgstr "**C**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.calibration.CalibratedClassifierCV.predict:15
msgid "The predicted class."
msgstr "La clase predicha."

#: of sklearn.calibration.CalibratedClassifierCV.predict_proba:4
msgid "This function returns calibrated probabilities of classification according to each class on an array of test vectors X."
msgstr "Esta función devuelve las probabilidades calibradas de clasificación según cada clase en un arreglo de vectores de prueba X."

#: of
msgid "ndarray of shape (n_samples, n_classes)"
msgstr "ndarray de forma (n_samples, n_classes)"

#: of sklearn.calibration.CalibratedClassifierCV.predict_proba:15
msgid "The predicted probas."
msgstr "Las probabilidades predichas."

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto, que es una métrica rigurosa, ya que se requiere para cada muestra que cada conjunto de etiquetas sea predicho correctamente."

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas verdaderas para `X`."

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia de estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

