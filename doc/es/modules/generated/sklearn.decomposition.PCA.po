msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-05-25 20:38\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.decomposition.PCA.po\n"
"X-Crowdin-File-ID: 5122\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.decomposition.PCA.rst:2
msgid ":mod:`sklearn.decomposition`.PCA"
msgstr ":mod:`sklearn.decomposition`.PCA"

#: of sklearn.decomposition._pca.PCA:2
msgid "Principal component analysis (PCA)."
msgstr "Análisis de componentes principales (Principal component analysis, PCA)."

#: of sklearn.decomposition._pca.PCA:4
msgid "Linear dimensionality reduction using Singular Value Decomposition of the data to project it to a lower dimensional space. The input data is centered but not scaled for each feature before applying the SVD."
msgstr "Reducción lineal de la dimensionalidad mediante la Descomposición del Valor Singular de los datos para proyectarlos a un espacio de menor dimensión. Los datos de entrada se centran pero no se escalan para cada característica antes de aplicar la SVD."

#: of sklearn.decomposition._pca.PCA:8
msgid "It uses the LAPACK implementation of the full SVD or a randomized truncated SVD by the method of Halko et al. 2009, depending on the shape of the input data and the number of components to extract."
msgstr "Utiliza la implementación LAPACK de la SVD completa o una SVD truncada aleatorizada por el método de Halko et al. 2009, dependiendo de la forma de los datos de entrada y del número de componentes a extraer."

#: of sklearn.decomposition._pca.PCA:12
msgid "It can also use the scipy.sparse.linalg ARPACK implementation of the truncated SVD."
msgstr "También puede utilizar la implementación scipy.sparse.linalg ARPACK de la SVD truncada."

#: of sklearn.decomposition._pca.PCA:15
msgid "Notice that this class does not support sparse input. See :class:`TruncatedSVD` for an alternative with sparse data."
msgstr "Ten en cuenta que esta clase no admite datos dispersos de entrada. Véase :class:`TruncatedSVD` para una alternativa con datos dispersos."

#: of sklearn.decomposition._pca.PCA:18
msgid "Read more in the :ref:`User Guide <PCA>`."
msgstr "Más información en el :ref:`Manual de usuario <PCA>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.decomposition._base._BasePCA.inverse_transform
#: sklearn.decomposition._base._BasePCA.transform
#: sklearn.decomposition._pca.PCA sklearn.decomposition._pca.PCA.fit
#: sklearn.decomposition._pca.PCA.fit_transform
#: sklearn.decomposition._pca.PCA.score
#: sklearn.decomposition._pca.PCA.score_samples
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.decomposition._pca.PCA:41
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, float or 'mle', default=None"
msgstr "int, float o 'mle', default=None"

#: of sklearn.decomposition._pca.PCA:23
msgid "Number of components to keep. if n_components is not set all components are kept::"
msgstr "Número de componentes a conservar. Si n_componentes no se establece, se conservan todos los componentes::"

#: of sklearn.decomposition._pca.PCA:28
msgid "If ``n_components == 'mle'`` and ``svd_solver == 'full'``, Minka's MLE is used to guess the dimension. Use of ``n_components == 'mle'`` will interpret ``svd_solver == 'auto'`` as ``svd_solver == 'full'``."
msgstr "Si ``n_components == 'mle'`` y ``svd_solver == 'full'``, se utiliza la MLE de Minka para suponer la dimensión. El uso de ``n_components == 'mle'`` interpretará ``svd_solver == 'auto'`` como ``svd_solver == 'full'``."

#: of sklearn.decomposition._pca.PCA:32
msgid "If ``0 < n_components < 1`` and ``svd_solver == 'full'``, select the number of components such that the amount of variance that needs to be explained is greater than the percentage specified by n_components."
msgstr "Si ``0 < n_components < 1`` y ``svd_solver == 'full'``, selecciona el número de componentes tal que la cantidad de varianza que debe explicarse sea mayor que el porcentaje especificado por n_components."

#: of sklearn.decomposition._pca.PCA:36
msgid "If ``svd_solver == 'arpack'``, the number of components must be strictly less than the minimum of n_features and n_samples."
msgstr "Si ``svd_solver == 'arpack'``, el número de componentes debe ser estrictamente menor que el mínimo de n_features y n_samples."

#: of sklearn.decomposition._pca.PCA:39
msgid "Hence, the None case results in::"
msgstr "Por lo tanto, el caso Ninguno(None) resulta en::"

#: of sklearn.decomposition._pca.PCA:46
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.decomposition._pca.PCA:44
msgid "If False, data passed to fit are overwritten and running fit(X).transform(X) will not yield the expected results, use fit_transform(X) instead."
msgstr "Si es False, los datos pasados para el ajuste se sobrescriben y la ejecución de fit(X).transform(X) no producirá los resultados esperados, utiliza fit_transform(X) en su lugar."

#: of sklearn.decomposition._pca.PCA:56
msgid "**whiten**"
msgstr "**whiten**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.decomposition._pca.PCA:49
msgid "When True (False by default) the `components_` vectors are multiplied by the square root of n_samples and then divided by the singular values to ensure uncorrelated outputs with unit component-wise variances."
msgstr "Cuando es True (False por defecto) los vectores `components_` se multiplican por la raíz cuadrada de n_samples y luego se dividen por los valores singulares para asegurar salidas no correlacionadas con varianzas unitarias de los componentes."

#: of sklearn.decomposition._pca.PCA:53
msgid "Whitening will remove some information from the transformed signal (the relative variance scales of the components) but can sometime improve the predictive accuracy of the downstream estimators by making their data respect some hard-wired assumptions."
msgstr "El whitening eliminará parte de la información de la señal transformada (las escalas de varianza relativas de los componentes), pero a veces puede mejorar la precisión predictiva de los estimadores posteriores al hacer que los datos respeten algunos supuestos fijos."

#: of sklearn.decomposition._pca.PCA:76
msgid "**svd_solver**"
msgstr "**svd_solver**"

#: of
msgid "{'auto', 'full', 'arpack', 'randomized'}, default='auto'"
msgstr "{'auto', 'full', 'arpack', 'randomized'}, default='auto'"

#: of sklearn.decomposition._pca.PCA:64
msgid "If auto :"
msgstr "Si es auto :"

#: of sklearn.decomposition._pca.PCA:60
#, python-format
msgid "The solver is selected by a default policy based on `X.shape` and `n_components`: if the input data is larger than 500x500 and the number of components to extract is lower than 80% of the smallest dimension of the data, then the more efficient 'randomized' method is enabled. Otherwise the exact full SVD is computed and optionally truncated afterwards."
msgstr "El solucionador es seleccionado mediante una política por defecto basada en `X.shape` y `n_components`: si los datos de entrada son mayores de 500x500 y el número de componentes a extraer es inferior al 80% de la dimensión más pequeña de los datos, entonces se habilita el método 'randomized' más eficiente. En caso contrario, se calcula la SVD completa exacta y, opcionalmente, se trunca después."

#: of sklearn.decomposition._pca.PCA:67
msgid "If full :"
msgstr "Si es full :"

#: of sklearn.decomposition._pca.PCA:67
msgid "run exact full SVD calling the standard LAPACK solver via `scipy.linalg.svd` and select the components by postprocessing"
msgstr "ejecuta la SVD completa exacta llamando al solucionador estándar LAPACK a través de `scipy.linalg.svd` y selecciona los componentes mediante postprocesamiento"

#: of sklearn.decomposition._pca.PCA:71
msgid "If arpack :"
msgstr "Si es arpack :"

#: of sklearn.decomposition._pca.PCA:70
msgid "run SVD truncated to n_components calling ARPACK solver via `scipy.sparse.linalg.svds`. It requires strictly 0 < n_components < min(X.shape)"
msgstr "ejecuta la SVD truncada a n_components llamando al solucionador ARPACK mediante `scipy.sparse.linalg.svds`. Requiere estrictamente 0 < n_components < min(X.shape)"

#: of sklearn.decomposition._pca.PCA:74
msgid "If randomized :"
msgstr "Si es randomized :"

#: of sklearn.decomposition._pca.PCA:74
msgid "run randomized SVD by the method of Halko et al."
msgstr "ejecuta la SVD aleatorizada por el método de Halko et al."

#: of sklearn.decomposition._pca.PCA:82
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=0.0"
msgstr "float, default=0.0"

#: of sklearn.decomposition._pca.PCA:79
msgid "Tolerance for singular values computed by svd_solver == 'arpack'. Must be of range [0.0, infinity)."
msgstr "Tolerancia para los valores singulares calculados por svd_solver == 'arpack'. Debe estar en el rango [0.0, infinito)."

#: of sklearn.decomposition._pca.PCA:89
msgid "**iterated_power**"
msgstr "**iterated_power**"

#: of
msgid "int or 'auto', default='auto'"
msgstr "int o 'auto', default='auto'"

#: of sklearn.decomposition._pca.PCA:85
msgid "Number of iterations for the power method computed by svd_solver == 'randomized'. Must be of range [0, infinity)."
msgstr "Número de iteraciones para el método de potencia calculado por svd_solver == 'randomized'. Debe estar en el rango [0, infinito)."

#: of sklearn.decomposition._pca.PCA:99
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, instancia RandomState o None, default=None"

#: of sklearn.decomposition._pca.PCA:92
msgid "Used when the 'arpack' or 'randomized' solvers are used. Pass an int for reproducible results across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Se emplea cuando se utilizan los solucionadores 'arpack' o 'randomized'. Pasa un entero(int) para obtener resultados reproducibles a través de múltiples llamadas a la función. Véase :term:`Glosario <random_state>`."

#: of sklearn.decomposition._pca.PCA
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.decomposition._pca.PCA:106
msgid "**components_**"
msgstr "**components_**"

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr "ndarray de forma (n_components, n_features)"

#: of sklearn.decomposition._pca.PCA:104
msgid "Principal axes in feature space, representing the directions of maximum variance in the data. The components are sorted by ``explained_variance_``."
msgstr "Ejes principales en el espacio de características, que representan las direcciones de máxima varianza en los datos. Los componentes se ordenan por ``explained_variance_``."

#: of sklearn.decomposition._pca.PCA:114
msgid "**explained_variance_**"
msgstr "**explained_variance_**"

#: of
msgid "ndarray of shape (n_components,)"
msgstr "ndarray de forma (n_components,)"

#: of sklearn.decomposition._pca.PCA:109
msgid "The amount of variance explained by each of the selected components."
msgstr "La cantidad de varianza explicada por cada uno de los componentes seleccionados."

#: of sklearn.decomposition._pca.PCA:111
msgid "Equal to n_components largest eigenvalues of the covariance matrix of X."
msgstr "Igual a n_components autovalores más grandes de la matriz de covarianza de X."

#: of sklearn.decomposition._pca.PCA:120
msgid "**explained_variance_ratio_**"
msgstr "**explained_variance_ratio_**"

#: of sklearn.decomposition._pca.PCA:117
msgid "Percentage of variance explained by each of the selected components."
msgstr "Porcentaje de la varianza explicada por cada uno de los componentes seleccionados."

#: of sklearn.decomposition._pca.PCA:119
msgid "If ``n_components`` is not set then all components are stored and the sum of the ratios is equal to 1.0."
msgstr "Si no se establece ``n_components``, se almacenan todos los componentes y la suma de las razones es igual a 1,0."

#: of sklearn.decomposition._pca.PCA:127
msgid "**singular_values_**"
msgstr "**singular_values_**"

#: of sklearn.decomposition._pca.PCA:123
msgid "The singular values corresponding to each of the selected components. The singular values are equal to the 2-norms of the ``n_components`` variables in the lower-dimensional space."
msgstr "Los valores singulares correspondientes a cada uno de los componentes seleccionados. Los valores singulares son iguales a las 2-normas de las variables ``n_componentes`` en el espacio de dimensión inferior."

#: of sklearn.decomposition._pca.PCA:132
msgid "**mean_**"
msgstr "**mean_**"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.decomposition._pca.PCA:130
msgid "Per-feature empirical mean, estimated from the training set."
msgstr "Media empírica por característica, estimada a partir del conjunto de entrenamiento."

#: of sklearn.decomposition._pca.PCA:132
msgid "Equal to `X.mean(axis=0)`."
msgstr "Igual a `X.mean(axis=0)`."

#: of sklearn.decomposition._pca.PCA:139
msgid "**n_components_**"
msgstr "**n_components_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.decomposition._pca.PCA:135
msgid "The estimated number of components. When n_components is set to 'mle' or a number between 0 and 1 (with svd_solver == 'full') this number is estimated from input data. Otherwise it equals the parameter n_components, or the lesser value of n_features and n_samples if n_components is None."
msgstr "El número estimado de componentes. Cuando n_components se establece como 'mle' o un número entre 0 y 1 (con svd_solver == 'full') este número se estima a partir de los datos de entrada. De lo contrario, es igual al parámetro n_components, o el valor menor de n_features y n_samples si n_components es None."

#: of sklearn.decomposition._pca.PCA:142
msgid "**n_features_**"
msgstr "**n_features_**"

#: of sklearn.decomposition._pca.PCA:142
msgid "Number of features in the training data."
msgstr "Número de características en los datos de entrenamiento."

#: of sklearn.decomposition._pca.PCA:145
msgid "**n_samples_**"
msgstr "**n_samples_**"

#: of sklearn.decomposition._pca.PCA:145
msgid "Number of samples in the training data."
msgstr "Número de muestras en los datos de entrenamiento."

#: of sklearn.decomposition._pca.PCA:158
msgid "**noise_variance_**"
msgstr "**noise_variance_**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.decomposition._pca.PCA:148
msgid "The estimated noise covariance following the Probabilistic PCA model from Tipping and Bishop 1999. See \"Pattern Recognition and Machine Learning\" by C. Bishop, 12.2.1 p. 574 or http://www.miketipping.com/papers/met-mppca.pdf. It is required to compute the estimated data covariance and score samples."
msgstr "La covarianza del ruido estimada según el modelo de PCA probabilístico de Tipping y Bishop 1999. Vea \"Pattern Recognition and Machine Learning\" de C. Bishop, 12.2.1 p. 574 o http://www.miketipping.com/papers/met-mppca.pdf. Es necesario para calcular la covarianza estimada de los datos y las puntuaciones muestrales."

#: of sklearn.decomposition._pca.PCA:154
msgid "Equal to the average of (min(n_features, n_samples) - n_components) smallest eigenvalues of the covariance matrix of X."
msgstr "Igual al promedio de (min(n_features, n_samples) - n_components) autovalores más pequeños de la matriz de covarianza de X."

#: of sklearn.decomposition._pca.PCA:163
msgid ":obj:`KernelPCA`"
msgstr ":obj:`KernelPCA`"

#: of sklearn.decomposition._pca.PCA:164
msgid "Kernel Principal Component Analysis."
msgstr "Análisis de componentes principales basado en Kernel."

#: of sklearn.decomposition._pca.PCA:165
msgid ":obj:`SparsePCA`"
msgstr ":obj:`SparsePCA`"

#: of sklearn.decomposition._pca.PCA:166
msgid "Sparse Principal Component Analysis."
msgstr "Análisis de Componentes Principales Disperso."

#: of sklearn.decomposition._pca.PCA:167
msgid ":obj:`TruncatedSVD`"
msgstr ":obj:`TruncatedSVD`"

#: of sklearn.decomposition._pca.PCA:168
msgid "Dimensionality reduction using truncated SVD."
msgstr "Reducción de la dimensionalidad usando la SVD truncada."

#: of sklearn.decomposition._pca.PCA:169
msgid ":obj:`IncrementalPCA`"
msgstr ":obj:`IncrementalPCA`"

#: of sklearn.decomposition._pca.PCA:170
msgid "Incremental Principal Component Analysis."
msgstr "Análisis de Componentes Principales Incremental."

#: of sklearn.decomposition._pca.PCA:175
msgid "References"
msgstr "Referencias"

#: of sklearn.decomposition._pca.PCA:176
msgid "For n_components == 'mle', this class uses the method of *Minka, T. P. \"Automatic choice of dimensionality for PCA\". In NIPS, pp. 598-604*"
msgstr "Para n_components == 'mle', esta clase utiliza el método de *Minka, T. P. \"Automatic choice of dimensionality for PCA\". En NIPS, pp. 598-604*"

#: of sklearn.decomposition._pca.PCA:179
msgid "Implements the probabilistic PCA model from: Tipping, M. E., and Bishop, C. M. (1999). \"Probabilistic principal component analysis\". Journal of the Royal Statistical Society: Series B (Statistical Methodology), 61(3), 611-622. via the score and score_samples methods. See http://www.miketipping.com/papers/met-mppca.pdf"
msgstr "Implementa el modelo probabilístico PCA de: Tipping, M. E., y Bishop, C. M. (1999). \"Probabilistic principal component analysis\". Journal of the Royal Statistical Society: Series B (Statistical Methodology), 61(3), 611-622. a través de los métodos score y score_samples. Véase http://www.miketipping.com/papers/met-mppca.pdf"

#: of sklearn.decomposition._pca.PCA:186
msgid "For svd_solver == 'arpack', refer to `scipy.sparse.linalg.svds`."
msgstr "Para svd_solver == 'arpack', consulta `scipy.sparse.linalg.svds`."

#: of sklearn.decomposition._pca.PCA:188
msgid "For svd_solver == 'randomized', see: *Halko, N., Martinsson, P. G., and Tropp, J. A. (2011). \"Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions\". SIAM review, 53(2), 217-288.* and also *Martinsson, P. G., Rokhlin, V., and Tygert, M. (2011). \"A randomized algorithm for the decomposition of matrices\". Applied and Computational Harmonic Analysis, 30(1), 47-68.*"
msgstr "Para svd_solver == 'randomized', ver: *Halko, N., Martinsson, P. G., y Tropp, J. A. (2011). \"Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions\". SIAM review, 53(2), 217-288.* y también *Martinsson, P. G., Rokhlin, V., y Tygert, M. (2011). \"A randomized algorithm for the decomposition of matrices\". Applied and Computational Harmonic Analysis, 30(1), 47-68.*"

#: of sklearn.decomposition._base._BasePCA.transform:28
#: sklearn.decomposition._pca.PCA:202
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.decomposition._pca.PCA:231
msgid "Methods"
msgstr "Métodos"

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.PCA.fit>`\\"
msgstr ":obj:`fit <sklearn.decomposition.PCA.fit>`\\"

#: of sklearn.decomposition._pca.PCA.fit:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Fit the model with X."
msgstr "Ajusta el modelo con X."

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.decomposition.PCA.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.decomposition.PCA.fit_transform>`\\"

#: of sklearn.decomposition._pca.PCA.fit_transform:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Fit the model with X and apply the dimensionality reduction on X."
msgstr "Ajusta el modelo con X y aplica la reducción de la dimensionalidad en X."

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`get_covariance <sklearn.decomposition.PCA.get_covariance>`\\"
msgstr ":obj:`get_covariance <sklearn.decomposition.PCA.get_covariance>`\\"

#: of sklearn.decomposition._base._BasePCA.get_covariance:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Compute data covariance with the generative model."
msgstr "Calcula la covarianza de los datos con el modelo generativo."

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.PCA.get_params>`\\"
msgstr ":obj:`get_params <sklearn.decomposition.PCA.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`get_precision <sklearn.decomposition.PCA.get_precision>`\\"
msgstr ":obj:`get_precision <sklearn.decomposition.PCA.get_precision>`\\"

#: of sklearn.decomposition._base._BasePCA.get_precision:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Compute data precision matrix with the generative model."
msgstr "Calcula la matriz de precisión de los datos con el modelo generativo."

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.decomposition.PCA.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.decomposition.PCA.inverse_transform>`\\"

#: of sklearn.decomposition._base._BasePCA.inverse_transform:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Transform data back to its original space."
msgstr "Transforma los datos de nuevo a su espacio original."

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`score <sklearn.decomposition.PCA.score>`\\"
msgstr ":obj:`score <sklearn.decomposition.PCA.score>`\\"

#: of sklearn.decomposition._pca.PCA.score:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Return the average log-likelihood of all samples."
msgstr "Devuelve el promedio de la log-verosimilitud de todas las muestras."

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`score_samples <sklearn.decomposition.PCA.score_samples>`\\"
msgstr ":obj:`score_samples <sklearn.decomposition.PCA.score_samples>`\\"

#: of sklearn.decomposition._pca.PCA.score_samples:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Return the log-likelihood of each sample."
msgstr "Devuelve la log-verosimilitud de cada muestra."

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`set_params <sklearn.decomposition.PCA.set_params>`\\"
msgstr ":obj:`set_params <sklearn.decomposition.PCA.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.PCA.transform>`\\"
msgstr ":obj:`transform <sklearn.decomposition.PCA.transform>`\\"

#: of sklearn.decomposition._base._BasePCA.transform:2
#: sklearn.decomposition._pca.PCA:244:<autosummary>:1
msgid "Apply dimensionality reduction to X."
msgstr "Aplica la reducción de la dimensionalidad a X."

#: of sklearn.decomposition._base._BasePCA.inverse_transform:10
#: sklearn.decomposition._base._BasePCA.transform:11
#: sklearn.decomposition._pca.PCA.fit:9
#: sklearn.decomposition._pca.PCA.fit_transform:9
#: sklearn.decomposition._pca.PCA.score:11
#: sklearn.decomposition._pca.PCA.score_samples:11
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.decomposition._pca.PCA.fit:8
#: sklearn.decomposition._pca.PCA.fit_transform:8
msgid "Training data, where n_samples is the number of samples and n_features is the number of features."
msgstr "Datos de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.decomposition._pca.PCA.fit:12
#: sklearn.decomposition._pca.PCA.fit_transform:12
#: sklearn.decomposition._pca.PCA.score:14
msgid "**y**"
msgstr "**y**"

#: of
msgid "Ignored"
msgstr "Ignored"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.decomposition._base._BasePCA.get_covariance
#: sklearn.decomposition._base._BasePCA.get_precision
#: sklearn.decomposition._base._BasePCA.inverse_transform
#: sklearn.decomposition._base._BasePCA.transform
#: sklearn.decomposition._pca.PCA.fit
#: sklearn.decomposition._pca.PCA.fit_transform
#: sklearn.decomposition._pca.PCA.score
#: sklearn.decomposition._pca.PCA.score_samples
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.decomposition._pca.PCA.fit:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.decomposition._pca.PCA.fit:17
msgid "Returns the instance itself."
msgstr "Devuelve la propia instancia."

#: of sklearn.decomposition._base._BasePCA.transform:25
#: sklearn.decomposition._pca.PCA.fit_transform:24
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr "ndarray de forma (n_samples, n_components)"

#: of sklearn.decomposition._pca.PCA.fit_transform:17
msgid "Transformed values."
msgstr "Valores transformados."

#: of sklearn.decomposition._base._BasePCA.inverse_transform:25
#: sklearn.decomposition._pca.PCA.fit_transform:27
msgid "Notes"
msgstr "Notas"

#: of sklearn.decomposition._pca.PCA.fit_transform:28
msgid "This method returns a Fortran-ordered array. To convert it to a C-ordered array, use 'np.ascontiguousarray'."
msgstr "Este método devuelve un arreglo ordenado en Fortran. Para convertirlo en un arreglo ordenado en C, utiliza 'np.ascontiguousarray'."

#: of sklearn.decomposition._base._BasePCA.get_covariance:4
msgid "``cov = components_.T * S**2 * components_ + sigma2 * eye(n_features)`` where S**2 contains the explained variances, and sigma2 contains the noise variances."
msgstr "``cov = components_.T * S**2 * components_ + sigma2 * eye(n_features)`` donde S**2 contiene las varianzas explicadas, y sigma2 contiene las varianzas del ruido."

#: of sklearn.decomposition._base._BasePCA.get_covariance:23
msgid "**cov**"
msgstr "**cov**"

#: of
msgid "array, shape=(n_features, n_features)"
msgstr "array, forma=(n_features, n_features)"

#: of sklearn.decomposition._base._BasePCA.get_covariance:12
msgid "Estimated covariance of data."
msgstr "Covarianza estimada de los datos."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros asignados a sus valores."

#: of sklearn.decomposition._base._BasePCA.get_precision:4
msgid "Equals the inverse of the covariance but computed with the matrix inversion lemma for efficiency."
msgstr "Es igual a la inversa de la covarianza, pero calculada con el lema de inversión de matrices por eficiencia."

#: of sklearn.decomposition._base._BasePCA.get_precision:22
msgid "**precision**"
msgstr "**precision**"

#: of sklearn.decomposition._base._BasePCA.get_precision:11
msgid "Estimated precision of data."
msgstr "Precisión estimada de los datos."

#: of sklearn.decomposition._base._BasePCA.inverse_transform:4
msgid "In other words, return an input X_original whose transform would be X."
msgstr "En otras palabras, devuelve una entrada X_original cuya transformación sería X."

#: of
msgid "array-like, shape (n_samples, n_components)"
msgstr "array-like, forma (n_samples, n_components)"

#: of sklearn.decomposition._base._BasePCA.inverse_transform:9
msgid "New data, where n_samples is the number of samples and n_components is the number of components."
msgstr "Nuevos datos, donde n_samples es el número de muestras y n_components es el número de componentes."

#: of sklearn.decomposition._base._BasePCA.inverse_transform:22
msgid "X_original array-like, shape (n_samples, n_features)"
msgstr "X_original array-like, forma (n_samples, n_features)"

#: of sklearn.decomposition._base._BasePCA.inverse_transform:26
msgid "If whitening is enabled, inverse_transform will compute the exact inverse operation, which includes reversing whitening."
msgstr "Si whitening está activado, inverse_transform calculará la operación inversa exacta, que incluye la inversión del whitening."

#: of sklearn.decomposition._pca.PCA.score:4
#: sklearn.decomposition._pca.PCA.score_samples:4
msgid "See. \"Pattern Recognition and Machine Learning\" by C. Bishop, 12.2.1 p. 574 or http://www.miketipping.com/papers/met-mppca.pdf"
msgstr "Ver \"Pattern Recognition and Machine Learning\" por C. Bishop, 12.2.1 p. 574 or http://www.miketiping.com/papers/met-mppca.pdf"

#: of sklearn.decomposition._pca.PCA.score:11
#: sklearn.decomposition._pca.PCA.score_samples:11
msgid "The data."
msgstr "Los datos."

#: of sklearn.decomposition._pca.PCA.score:30
#: sklearn.decomposition._pca.PCA.score_samples:27
msgid "**ll**"
msgstr "**ll**"

#: of sklearn.decomposition._pca.PCA.score:19
msgid "Average log-likelihood of the samples under the current model."
msgstr "Promedio de la log-verosimilitud de las muestras según el modelo actual."

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.decomposition._pca.PCA.score_samples:16
msgid "Log-likelihood of each sample under the current model."
msgstr "Log-verosimilitud de cada muestra según el modelo actual."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.decomposition._base._BasePCA.transform:4
msgid "X is projected on the first principal components previously extracted from a training set."
msgstr "X se proyecta sobre los primeros componentes principales extraídos previamente de un conjunto de entrenamiento."

#: of
msgid "array-like, shape (n_samples, n_features)"
msgstr "array-like, forma (n_samples, n_features)"

#: of sklearn.decomposition._base._BasePCA.transform:10
msgid "New data, where n_samples is the number of samples and n_features is the number of features."
msgstr "Nuevos datos, donde n_samples es el número de muestras y n_features es el número de características."

#: ../modules/generated/sklearn.decomposition.PCA.examples:4
msgid "Examples using ``sklearn.decomposition.PCA``"
msgstr "Ejemplos usando ``sklearn.decomposition.PCA``"

#: ../modules/generated/sklearn.decomposition.PCA.examples:15
#: ../modules/generated/sklearn.decomposition.PCA.examples:23
msgid ":ref:`sphx_glr_auto_examples_compose_plot_digits_pipe.py`"
msgstr ":ref:`sphx_glr_auto_examples_compose_plot_digits_pipe.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_applications_plot_face_recognition.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_manifold_plot_mds.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_multilabel.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_kernel_approximation.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_grid_search_refit_callable.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_digits_kde_sampling.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_nca_dim_reduction.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_feature_union.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_compare_reduction.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_scaling_importance.py`"
#~ msgstr ""

