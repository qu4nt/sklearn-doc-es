msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-27 02:51\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.neighbors.RadiusNeighborsClassifier.po\n"
"X-Crowdin-File-ID: 5732\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.neighbors.RadiusNeighborsClassifier.rst:2
msgid ":mod:`sklearn.neighbors`.RadiusNeighborsClassifier"
msgstr ":mod:`sklearn.neighbors`.RadiusNeighborsClassifier"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:2
msgid "Classifier implementing a vote among neighbors within a given radius"
msgstr "Clasificador que implementa un voto entre vecinos dentro de un radio determinado"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:4
msgid "Read more in the :ref:`User Guide <classification>`."
msgstr "Más información en el :ref:`Manual de usuario <classification>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph
#: sklearn.neighbors._classification.RadiusNeighborsClassifier
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.fit
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict_proba
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:20
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:16
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:10
msgid "**radius**"
msgstr "**radius**"

#: of
msgid "float, default=1.0"
msgstr "flotante, default=1.0"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:9
msgid "Range of parameter space to use by default for :meth:`radius_neighbors` queries."
msgstr "Rango del espacio de parámetros a usar por defecto para consultas :meth:`radius_neighbors`."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:24
msgid "**weights**"
msgstr "**weights**"

#: of
msgid "{'uniform', 'distance'} or callable, default='uniform'"
msgstr "{'uniform', 'distance'} o invocable, default='uniform'"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:13
msgid "weight function used in prediction.  Possible values:"
msgstr "función de ponderación utilizada en la predicción.  Valores posibles:"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:15
msgid "'uniform' : uniform weights.  All points in each neighborhood are weighted equally."
msgstr "'uniform' : ponderaciones uniformes. Todos los puntos de cada vecindad se ponderan por igual."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:17
msgid "'distance' : weight points by the inverse of their distance. in this case, closer neighbors of a query point will have a greater influence than neighbors which are further away."
msgstr "'distance' : ponderar los puntos por la inversa de su distancia. en este caso, los vecinos más cercanos de un punto de consulta tendrán una mayor influencia que los vecinos más alejados."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:20
msgid "[callable] : a user-defined function which accepts an array of distances, and returns an array of the same shape containing the weights."
msgstr "[callable] : una función definida por el usuario que acepta un arreglo de distancias, y devuelve un arreglo de la misma forma que contiene las ponderaciones."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:24
msgid "Uniform weights are used by default."
msgstr "Las ponderaciones uniformes se utilizan por defecto."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:36
msgid "**algorithm**"
msgstr "**algorithm**"

#: of
msgid "{'auto', 'ball_tree', 'kd_tree', 'brute'}, default='auto'"
msgstr "{'auto', 'ball_tree', 'kd_tree', 'brute'}, default='auto'"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:27
msgid "Algorithm used to compute the nearest neighbors:"
msgstr "Algoritmo usado para calcular los vecinos más cercanos:"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:29
msgid "'ball_tree' will use :class:`BallTree`"
msgstr "'ball_tree' usará :class:`BallTree`"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:30
msgid "'kd_tree' will use :class:`KDTree`"
msgstr "'kd_tree' usará :class:`KDTree`"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:31
msgid "'brute' will use a brute-force search."
msgstr "'brute' usará una búsqueda de fuerza bruta."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:32
msgid "'auto' will attempt to decide the most appropriate algorithm based on the values passed to :meth:`fit` method."
msgstr "'auto' intentará decidir el algoritmo más apropiado basado en los valores pasados al método :meth:`fit`."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:35
msgid "Note: fitting on sparse input will override the setting of this parameter, using brute force."
msgstr "Nota: el ajuste en la entrada dispersa anulará el ajuste de este parámetro, utilizando la fuerza bruta."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:42
msgid "**leaf_size**"
msgstr "**leaf_size**"

#: of
msgid "int, default=30"
msgstr "entero, default=30"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:39
msgid "Leaf size passed to BallTree or KDTree.  This can affect the speed of the construction and query, as well as the memory required to store the tree.  The optimal value depends on the nature of the problem."
msgstr "Tamaño de hoja pasado a BallTree o KDTree. Esto puede afectar la velocidad de la construcción y la consulta, así como la memoria necesaria para almacenar el árbol. El valor óptimo depende de la naturaleza del problema."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:47
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict_proba:26
msgid "**p**"
msgstr "**p**"

#: of
msgid "int, default=2"
msgstr "entero, default=2"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:45
msgid "Power parameter for the Minkowski metric. When p = 1, this is equivalent to using manhattan_distance (l1), and euclidean_distance (l2) for p = 2. For arbitrary p, minkowski_distance (l_p) is used."
msgstr "Parámetro de potencia para la métrica de Minkowski. Cuando p = 1, esto equivale a utilizar manhattan_distance (l1), y euclidean_distance (l2) para p = 2. Para p arbitrario, se utiliza minkowski_distance (l_p)."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:56
msgid "**metric**"
msgstr "**metric**"

#: of
msgid "str or callable, default='minkowski'"
msgstr "cadena de caracteres o invocable, default=\"minkowski'"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:50
msgid "the distance metric to use for the tree.  The default metric is minkowski, and with p=2 is equivalent to the standard Euclidean metric. See the documentation of :class:`DistanceMetric` for a list of available metrics. If metric is \"precomputed\", X is assumed to be a distance matrix and must be square during fit. X may be a :term:`sparse graph`, in which case only \"nonzero\" elements may be considered neighbors."
msgstr "la métrica de distancia a utilizar para el árbol. La métrica predeterminada es minkowski, y con p=2 es equivalente a la métrica Euclideana estándar. Ver la documentación de :class:`DistanceMetric` para una lista de métricas disponibles. Si la métrica es \"precomputed\", se asume que X es una matriz de distancias y debe ser cuadrada durante el ajuste. X puede ser un :term:`grafo disperso`, en cuyo caso sólo elementos \"distintos de cero\" pueden ser considerados vecinos."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:64
msgid "**outlier_label**"
msgstr "**outlier_label**"

#: of
msgid "{manual label, 'most_frequent'}, default=None"
msgstr "{manual label, 'most_frequent'}, default=None"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:59
msgid "label for outlier samples (samples with no neighbors in given radius)."
msgstr "etiqueta para muestras atípicas (muestras sin vecinos en un radio determinado)."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:61
msgid "manual label: str or int label (should be the same type as y) or list of manual labels if multi-output is used."
msgstr "etiqueta manual: etiqueta cadena o entero (debe ser del mismo tipo que y) o lista de etiquetas manuales si se utiliza multi-salida."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:63
msgid "'most_frequent' : assign the most frequent label of y to outliers."
msgstr "'most_frequent' : asignar la etiqueta más frecuente de y a los atípicos."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:64
msgid "None : when any outlier is detected, ValueError will be raised."
msgstr "None: cuando se detecta algún atípico, ValueError se levantará."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:67
msgid "**metric_params**"
msgstr "**metric_params**"

#: of
msgid "dict, default=None"
msgstr "diccionario, default=None"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:67
msgid "Additional keyword arguments for the metric function."
msgstr "Argumentos adicionales de la palabra clave para la función métrica."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:76
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "entero, default=None"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:70
msgid "The number of parallel jobs to run for neighbors search. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "El número de trabajos paralelos a ejecutar para la búsqueda de vecinos. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa usar todos los procesadores. Consulta :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:81
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:81
msgid "Class labels known to the classifier."
msgstr "Etiquetas de clase conocidas por el clasificador."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:86
msgid "**effective_metric_**"
msgstr "**effective_metric_**"

#: of
msgid "str or callable"
msgstr "cadena de caracteres o invocable"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:84
msgid "The distance metric used. It will be same as the `metric` parameter or a synonym of it, e.g. 'euclidean' if the `metric` parameter set to 'minkowski' and `p` parameter set to 2."
msgstr "La métrica de distancia utilizada. Será la misma que el parámetro `metric` o un sinónimo de la misma, por ejemplo, `euclidean` si el parámetro `metric` es `minkowski` y el parámetro `p` es 2."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:92
msgid "**effective_metric_params_**"
msgstr "**effective_metric_params_**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:89
msgid "Additional keyword arguments for the metric function. For most metrics will be same with `metric_params` parameter, but may also contain the `p` parameter value if the `effective_metric_` attribute is set to 'minkowski'."
msgstr "Argumentos adicionales para la función métrica. Para la mayoría de las métricas será lo mismo que el parámetro `metric_params`, pero también puede contener el valor del parámetro `p` si el atributo `effective_metric_` se establece como `minkowski`."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:95
msgid "**n_samples_fit_**"
msgstr "**n_samples_fit_**"

#: of
msgid "int"
msgstr "entero"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:95
msgid "Number of samples in the fitted data."
msgstr "Número de muestras en los datos ajustados."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:99
msgid "**outlier_label_**"
msgstr "**outlier_label_**"

#: of
msgid "int or array-like of shape (n_class,)"
msgstr "entero o array-like de forma (n_class,)"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:98
msgid "Label which is given for outlier samples (samples with no neighbors on given radius)."
msgstr "Etiqueta que se da para muestras atípicas (muestras sin vecinos en un radio determinado)."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:106
msgid "**outputs_2d_**"
msgstr "**outputs_2d_**"

#: of
msgid "bool"
msgstr "booleano"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:102
msgid "False when `y`'s shape is (n_samples, ) or (n_samples, 1) during fit otherwise True."
msgstr "False cuando la forma de `y` es (n_samples, ) o (n_samples, 1) durante el ajuste, de lo contrario True."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:111
msgid ":obj:`KNeighborsClassifier`"
msgstr ":obj:`KNeighborsClassifier`"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:113
msgid ":obj:`RadiusNeighborsRegressor`"
msgstr ":obj:`RadiusNeighborsRegressor`"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:115
msgid ":obj:`KNeighborsRegressor`"
msgstr ":obj:`KNeighborsRegressor`"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:117
msgid ":obj:`NearestNeighbors`"
msgstr ":obj:`NearestNeighbors`"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:53
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:121
msgid "Notes"
msgstr "Notas"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:122
msgid "See :ref:`Nearest Neighbors <neighbors>` in the online documentation for a discussion of the choice of ``algorithm`` and ``leaf_size``."
msgstr "Ver :ref:`Nearest Neighbors <neighbors>` en la documentación en línea para una discusión sobre la elección del ``algorithm`` y el ``leaf_size``."

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:125
msgid "https://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm"
msgstr "https://https://es.wikipedia.org/wiki/K_vecinos_m%C3%A1s_pr%C3%B3ximos"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:62
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:52
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:129
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier:142
msgid "Methods"
msgstr "Métodos"

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid ":obj:`fit <sklearn.neighbors.RadiusNeighborsClassifier.fit>`\\"
msgstr ":obj:`fit <sklearn.neighbors.RadiusNeighborsClassifier.fit>`\\"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier.fit:2
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid "Fit the radius neighbors classifier from the training dataset."
msgstr "Ajusta el clasificador de radio de vecinos a partir del conjunto de datos de entrenamiento."

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid ":obj:`get_params <sklearn.neighbors.RadiusNeighborsClassifier.get_params>`\\"
msgstr ":obj:`get_params <sklearn.neighbors.RadiusNeighborsClassifier.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros de este estimador."

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid ":obj:`predict <sklearn.neighbors.RadiusNeighborsClassifier.predict>`\\"
msgstr ":obj:`predict <sklearn.neighbors.RadiusNeighborsClassifier.predict>`\\"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier.predict:2
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid "Predict the class labels for the provided data."
msgstr "Predice las etiquetas de la clase para los datos proporcionados."

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.neighbors.RadiusNeighborsClassifier.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.neighbors.RadiusNeighborsClassifier.predict_proba>`\\"

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict_proba:2
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid "Return probability estimates for the test data X."
msgstr "Devuelve las estimaciones de probabilidad para los datos de prueba X."

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid ":obj:`radius_neighbors <sklearn.neighbors.RadiusNeighborsClassifier.radius_neighbors>`\\"
msgstr ":obj:`radius_neighbors <sklearn.neighbors.RadiusNeighborsClassifier.radius_neighbors>`\\"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:2
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid "Finds the neighbors within a given radius of a point or points."
msgstr "Encuentra a los vecinos dentro de un radio determinado de un punto o puntos."

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid ":obj:`radius_neighbors_graph <sklearn.neighbors.RadiusNeighborsClassifier.radius_neighbors_graph>`\\"
msgstr ":obj:`radius_neighbors_graph <sklearn.neighbors.RadiusNeighborsClassifier.radius_neighbors_graph>`\\"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:2
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid "Computes the (weighted) graph of Neighbors for points in X"
msgstr "Calcula el grafo (ponderado) de vecinos para los puntos de X"

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid ":obj:`score <sklearn.neighbors.RadiusNeighborsClassifier.score>`\\"
msgstr ":obj:`score <sklearn.neighbors.RadiusNeighborsClassifier.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos de prueba y las etiquetas dados."

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid ":obj:`set_params <sklearn.neighbors.RadiusNeighborsClassifier.set_params>`\\"
msgstr ":obj:`set_params <sklearn.neighbors.RadiusNeighborsClassifier.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.neighbors._classification.RadiusNeighborsClassifier:153:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:16
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:12
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.fit:8
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict:8
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict_proba:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features) or                 (n_samples, n_samples) if metric='precomputed'"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features) o (n_samples, n_samples) si metric='precomputed'"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier.fit:8
msgid "Training data."
msgstr "Datos del entrenamiento."

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.fit:11
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict:24
msgid "**y**"
msgstr "**y**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples,) or                 (n_samples, n_outputs)"
msgstr "{array-like, sparse matrix} de forma (n_samples,) o         (n_samples, n_outputs)"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier.fit:11
msgid "Target values."
msgstr "Valores objetivo."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.fit
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict_proba
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.fit:27
msgid "**self**"
msgstr "**self**"

#: of
msgid "RadiusNeighborsClassifier"
msgstr "RadiusNeighborsClassifier"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier.fit:16
msgid "The fitted radius neighbors classifier."
msgstr "El clasificador de vecinos de radio ajustado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of
msgid "array-like of shape (n_queries, n_features),                 or (n_queries, n_indexed) if metric == 'precomputed'"
msgstr "array-like de forma (n_queries, n_features), o (n_queries, n_indexed) si metric == 'precomputed'"

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict:8
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict_proba:8
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "ndarray of shape (n_queries,) or (n_queries, n_outputs)"
msgstr "ndarray de forma (n_queries,) o (n_queries, n_outputs)"

#: of sklearn.neighbors._classification.RadiusNeighborsClassifier.predict:13
msgid "Class labels for each data sample."
msgstr "Etiquetas de clase para cada muestra de datos."

#: of
msgid "ndarray of shape (n_queries, n_classes), or a list of n_outputs"
msgstr "ndarray de forma (n_queries, n_classes), o una lista de n_outputs"

#: of
#: sklearn.neighbors._classification.RadiusNeighborsClassifier.predict_proba:13
msgid "of such arrays if n_outputs > 1. The class probabilities of the input samples. Classes are ordered by lexicographic order."
msgstr "de dichos arreglos si n_outputs > 1. Las probabilidades de clase de las muestras de entrada. Las clases se ordenan por orden lexicográfico."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:4
msgid "Return the indices and distances of each point from the dataset lying in a ball with size ``radius`` around the points of the query array. Points lying on the boundary are included in the results."
msgstr "Devuelve los índices y distancias de cada punto del conjunto de datos que se encuentra en una bola con el tamaño ``radius`` alrededor de los puntos del arreglo de consultas. Los puntos en el límite están incluidos en los resultados."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:8
msgid "The result points are *not* necessarily sorted by distance to their query point."
msgstr "Los puntos de resultado *no* necesariamente están ordenados por distancia a su punto de consulta."

#: of
msgid "array-like of (n_samples, n_features), default=None"
msgstr "array-like de (n_samples, n_features), default=None"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:14
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:10
msgid "The query point or points. If not provided, neighbors of each indexed point are returned. In this case, the query point is not considered its own neighbor."
msgstr "El punto o puntos de la consulta. Si no se proporciona, se devuelven los vecinos de cada punto indexado. En este caso, el punto de consulta no se considera su propio vecino."

#: of
msgid "float, default=None"
msgstr "flotante, default=None"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:19
msgid "Limiting distance of neighbors to return. The default is the value passed to the constructor."
msgstr "Limitando la distancia de vecinos a regresar. El valor predeterminado es pasado al constructor."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:23
msgid "**return_distance**"
msgstr "**return_distance**"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:23
msgid "Whether or not to return the distances."
msgstr "Si se devuelven o no las distancias."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:31
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:28
msgid "**sort_results**"
msgstr "**sort_results**"

#: of
msgid "bool, default=False"
msgstr "booleano, default=False"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:26
msgid "If True, the distances and indices will be sorted by increasing distances before being returned. If False, the results may not be sorted. If `return_distance=False`, setting `sort_results=True` will result in an error."
msgstr "Si es True, las distancias e índices serán ordenados antes de ser devueltos. Si es False, los resultados no se ordenarán. Si `return_distance=False`, al establecer `sort_results=True` se producirá un error."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:38
msgid "**neigh_dist**"
msgstr "**neigh_dist**"

#: of
msgid "ndarray of shape (n_samples,) of arrays"
msgstr "ndarray de forma (n_samples,) de arreglos"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:36
msgid "Array representing the distances to each point, only present if `return_distance=True`. The distance values are computed according to the ``metric`` constructor parameter."
msgstr "Arreglo que representa las distancias a cada punto, sólo presente si `return_distance=True`. Los valores de la distancia se calculan según el parámetro del constructor ``metric``."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:50
msgid "**neigh_ind**"
msgstr "**neigh_ind**"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:41
msgid "An array of arrays of indices of the approximate nearest points from the population matrix that lie within a ball of size ``radius`` around the query points."
msgstr "Un arreglo de arreglos de los puntos más cercanos aproximados de la matriz de población que se encuentran dentro de una bola de tamaño ``radius`` alrededor de los puntos de la consulta."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:54
msgid "Because the number of neighbors of each point is not necessarily equal, the results for multiple query points cannot be fit in a standard data array. For efficiency, `radius_neighbors` returns arrays of objects, where each object is a 1D array of indices or distances."
msgstr "Debido a que el número de vecinos de cada punto no es necesariamente igual, los resultados para múltiples puntos de consulta no pueden encajar en un arreglo de datos estándar. Por eficiencia, `radius_neighbors` devuelve arreglos de objetos, donde cada objeto es un arreglo 1D de índices o distancias."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:63
msgid "In the following example, we construct a NeighborsClassifier class from an array representing our data set and ask who's the closest point to [1, 1, 1]:"
msgstr "En el siguiente ejemplo, construimos una clase NeighborsClassifier a partir de un arreglo que representa nuestro conjunto de datos y preguntamos cuál es el punto más cercano a [1,1,1]:"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:79
msgid "The first array returned contains the distances to all points which are closer than 1.6, while the second array returned contains their indices.  In general, multiple points can be queried at the same time."
msgstr "El primer arreglo devuelto contiene las distancias a todos los puntos más cercanos a 1.6, mientras que el segundo arreglo devuelto contiene sus índices. En general, se pueden consultar varios puntos al mismo tiempo."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:4
msgid "Neighborhoods are restricted the points at a distance lower than radius."
msgstr "Las vecindades son los puntos restringidos a una distancia inferior al radio."

#: of
msgid "array-like of shape (n_samples, n_features), default=None"
msgstr "array-like de forma (n_samples, n_features), default=None"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:15
msgid "Radius of neighborhoods. The default is the value passed to the constructor."
msgstr "Radio de vecindades. El valor predeterminado es pasado al constructor."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:21
msgid "**mode**"
msgstr "**mode**"

#: of
msgid "{'connectivity', 'distance'}, default='connectivity'"
msgstr "{'connectivity', 'distance'}, default='connectivity'"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:19
msgid "Type of returned matrix: 'connectivity' will return the connectivity matrix with ones and zeros, in 'distance' the edges are Euclidean distance between points."
msgstr "Tipo de matriz devuelta: 'connectivity' devolverá la matriz de conectividad con unos y ceros, en 'distance' los bordes son la distancia euclidiana entre puntos."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:24
msgid "If True, in each row of the result, the non-zero entries will be sorted by increasing distances. If False, the non-zero entries may not be sorted. Only used with mode='distance'."
msgstr "Si es True, en cada fila del resultado, las entradas que no sean de cero se ordenarán aumentando las distancias. Si es False, las entradas que no sean nulas no pueden ser ordenadas. Sólo se utiliza con mode='distance'."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:41
msgid "**A**"
msgstr "**A**"

#: of
msgid "sparse-matrix of shape (n_queries, n_samples_fit)"
msgstr "matriz dispersa de forma (n_queries, n_samples_fit)"

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:33
msgid "`n_samples_fit` is the number of samples in the fitted data `A[i, j]` is assigned the weight of edge that connects `i` to `j`. The matrix if of format CSR."
msgstr "`n_samples_fit` es el número de muestras en los datos especificados `A[i, j]` se le asigna la ponderación de borde que conecta `i` a `j`. La matriz si de formato CSR."

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:46
msgid ":obj:`kneighbors_graph`"
msgstr ":obj:`kneighbors_graph`"

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto, que es una métrica rigurosa, ya que se requiere para cada muestra que cada conjunto de etiquetas sea predicho correctamente."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas verdaderas para `X`."

#: of sklearn.base.ClassifierMixin.score:17
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr "Ponderaciones de muestra."

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "flotante"

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

