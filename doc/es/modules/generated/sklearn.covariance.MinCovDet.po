msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:09\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.covariance.MinCovDet.po\n"
"X-Crowdin-File-ID: 5168\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.covariance.MinCovDet.rst:2
msgid ":mod:`sklearn.covariance`.MinCovDet"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:2
msgid "Minimum Covariance Determinant (MCD): robust estimator of covariance."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:4
msgid "The Minimum Covariance Determinant covariance estimator is to be applied on Gaussian-distributed data, but could still be relevant on data drawn from a unimodal, symmetric distribution. It is not meant to be used with multi-modal data (the algorithm used to fit a MinCovDet object is likely to fail in such a case). One should consider projection pursuit methods to deal with multi-modal datasets."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:12
msgid "Read more in the :ref:`User Guide <robust_covariance>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._robust_covariance.MinCovDet
#: sklearn.covariance._robust_covariance.MinCovDet.correct_covariance
#: sklearn.covariance._robust_covariance.MinCovDet.fit
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance
msgid "Parameters"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:17
msgid "**store_precision**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:17
msgid "Specify if the estimated precision is stored."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:26
msgid "**assume_centered**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:20
msgid "If True, the support of the robust location and the covariance estimates is computed, and a covariance estimate is recomputed from it, without centering the data. Useful to work with data whose mean is significantly equal to zero but is not exactly zero. If False, the robust location and covariance are directly computed with the FastMCD algorithm without additional treatment."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:33
msgid "**support_fraction**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:29
msgid "The proportion of points to be included in the support of the raw MCD estimate. Default is None, which implies that the minimum value of support_fraction will be used within the algorithm: `(n_sample + n_features + 1) / 2`. The parameter must be in the range (0, 1)."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:41
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:36
msgid "Determines the pseudo random number generator for shuffling the data. Pass an int for reproducible results across multiple function calls. See :term: `Glossary <random_state>`."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet
msgid "Attributes"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:46
msgid "**raw_location_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:46
msgid "The raw robust estimated location before correction and re-weighting."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:49
msgid "**raw_covariance_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:49
msgid "The raw robust estimated covariance before correction and re-weighting."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:54
msgid "**raw_support_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:52
msgid "A mask of the observations that have been used to compute the raw robust estimates of location and shape, before correction and re-weighting."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:57
msgid "**location_**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:57
msgid "Estimated robust location."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:60
msgid "**covariance_**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:60
msgid "Estimated robust covariance matrix."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:20
#: sklearn.covariance._robust_covariance.MinCovDet:64
msgid "**precision_**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:63
msgid "Estimated pseudo inverse matrix. (stored only if store_precision is True)"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:68
msgid "**support_**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:67
msgid "A mask of the observations that have been used to compute the robust estimates of location and shape."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:77
msgid "**dist_**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:71
msgid "Mahalanobis distances of the training set (on which :meth:`fit` is called) observations."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:80
#: sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:28
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:37
msgid "References"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:81
msgid "P. J. Rousseeuw. Least median of squares regression. J. Am Stat Ass, 79:871, 1984."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:83
#: sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:29
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:38
msgid "A Fast Algorithm for the Minimum Covariance Determinant Estimator, 1999, American Statistical Association and the American Society for Quality, TECHNOMETRICS"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:86
msgid "R. W. Butler, P. L. Davies and M. Jhun, Asymptotics For The Minimum Covariance Determinant Estimator, The Annals of Statistics, 1993, Vol. 21, No. 3, 1385-1400"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:92
msgid "[R9f63e655f7bd-Rouseeuw1984]_, [R9f63e655f7bd-Rousseeuw]_, [R9f63e655f7bd-ButlerDavies]_"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:95
msgid "Examples"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:113
msgid "Methods"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid ":obj:`correct_covariance <sklearn.covariance.MinCovDet.correct_covariance>`\\"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:2
#: sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid "Apply a correction to raw Minimum Covariance Determinant estimates."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid ":obj:`error_norm <sklearn.covariance.MinCovDet.error_norm>`\\"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid "Computes the Mean Squared Error between two covariance estimators."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid ":obj:`fit <sklearn.covariance.MinCovDet.fit>`\\"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.fit:2
#: sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid "Fits a Minimum Covariance Determinant with the FastMCD algorithm."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid ":obj:`get_params <sklearn.covariance.MinCovDet.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid ":obj:`get_precision <sklearn.covariance.MinCovDet.get_precision>`\\"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:2
#: sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid "Getter for the precision matrix."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid ":obj:`mahalanobis <sklearn.covariance.MinCovDet.mahalanobis>`\\"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:2
#: sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid "Computes the squared Mahalanobis distances of given observations."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid ":obj:`reweight_covariance <sklearn.covariance.MinCovDet.reweight_covariance>`\\"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:2
#: sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid "Re-weight raw Minimum Covariance Determinant estimates."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid ":obj:`score <sklearn.covariance.MinCovDet.score>`\\"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:2
#: sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid "Computes the log-likelihood of a Gaussian data set with `self.covariance_` as an estimator of its covariance matrix."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid ":obj:`set_params <sklearn.covariance.MinCovDet.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.covariance._robust_covariance.MinCovDet:125:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:4
msgid "Correction using the empirical correction factor suggested by Rousseeuw and Van Driessen in [R491365aeaa84-RVD]_."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:12
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:14
msgid "**data**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:10
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:12
msgid "The data matrix, with p features and n samples. The data set must be the one which was used to compute the raw estimates."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._robust_covariance.MinCovDet.correct_covariance
#: sklearn.covariance._robust_covariance.MinCovDet.fit
#: sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance
msgid "Returns"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:25
msgid "**covariance_corrected**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:17
msgid "Corrected robust covariance estimate."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.correct_covariance:35
msgid "[R491365aeaa84-RVD]_"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:2
msgid "Computes the Mean Squared Error between two covariance estimators. (In the sense of the Frobenius norm)."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "**comp_cov**"
msgstr ""

#: of
msgid "array-like of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "The covariance to compare with."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:15
msgid "**norm**"
msgstr ""

#: of
msgid "{\"frobenius\", \"spectral\"}, default=\"frobenius\""
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:12
msgid "The type of norm used to compute the error. Available error types: - 'frobenius' (default): sqrt(tr(A^t.A)) - 'spectral': sqrt(max(eigenvalues(A^t.A)) where A is the error ``(comp_cov - self.covariance_)``."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:19
msgid "**scaling**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:18
msgid "If True (default), the squared error norm is divided by n_features. If False, the squared error norm is not rescaled."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:24
msgid "**squared**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:22
msgid "Whether to compute the squared error norm or the error norm. If True (default), the squared error norm is returned. If False, the error norm is returned."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:41
msgid "**result**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:29
msgid "The Mean Squared Error (in the sense of the Frobenius norm) between `self` and `comp_cov` covariance estimators."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:10
#: sklearn.covariance._robust_covariance.MinCovDet.fit:9
msgid "**X**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.fit:8
msgid "Training data, where `n_samples` is the number of samples and `n_features` is the number of features."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.fit:12
msgid "**y: Ignored**"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._robust_covariance.MinCovDet.fit:12
msgid "Not used, present for API consistency by convention."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.covariance._robust_covariance.MinCovDet.fit:28
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:9
msgid "The precision matrix associated to the current covariance object."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:8
msgid "The observations, the Mahalanobis distances of the which we compute. Observations are assumed to be drawn from the same distribution than the data used in fit."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:26
msgid "**dist**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:15
msgid "Squared Mahalanobis distances of the observations."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:4
msgid "Re-weight observations using Rousseeuw's method (equivalent to deleting outlying observations from the data set before computing location and covariance estimates) described in [R9465bad4668c-RVDriessen]_."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:19
msgid "**location_reweighted**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:19
msgid "Re-weighted robust location estimate."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:22
msgid "**covariance_reweighted**"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:22
msgid "Re-weighted robust covariance estimate."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:34
msgid "**support_reweighted**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,), dtype=bool"
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:25
msgid "A mask of the observations that have been used to compute the re-weighted robust location and covariance estimates."
msgstr ""

#: of sklearn.covariance._robust_covariance.MinCovDet.reweight_covariance:44
msgid "[R9465bad4668c-RVDriessen]_"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:12
msgid "**X_test**"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:9
msgid "Test data of which we compute the likelihood, where n_samples is the number of samples and n_features is the number of features. X_test is assumed to be drawn from the same distribution than the data used in fit (including centering)."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:32
msgid "**res**"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:20
msgid "The likelihood of the data set with `self.covariance_` as an estimator of its covariance matrix."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

