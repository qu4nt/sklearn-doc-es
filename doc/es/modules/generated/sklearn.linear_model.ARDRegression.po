msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-14 23:59\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.ARDRegression.po\n"
"X-Crowdin-File-ID: 3258\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.ARDRegression.rst:2
msgid ":mod:`sklearn.linear_model`.ARDRegression"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:2
msgid "Bayesian ARD regression."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:4
msgid "Fit the weights of a regression model, using an ARD prior. The weights of the regression model are assumed to be in Gaussian distributions. Also estimate the parameters lambda (precisions of the distributions of the weights) and alpha (precision of the distribution of the noise). The estimation is done by an iterative procedures (Evidence Maximization)"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:10
msgid "Read more in the :ref:`User Guide <bayesian_regression>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._bayes.ARDRegression
#: sklearn.linear_model._bayes.ARDRegression.fit
#: sklearn.linear_model._bayes.ARDRegression.predict
msgid "Parameters"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:15
msgid "**n_iter**"
msgstr ""

#: of
msgid "int, default=300"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:15
msgid "Maximum number of iterations."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:18
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-3"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:18
msgid "Stop the algorithm if w has converged."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:22
msgid "**alpha_1**"
msgstr ""

#: of
msgid "float, default=1e-6"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:21
msgid "Hyper-parameter : shape parameter for the Gamma distribution prior over the alpha parameter."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:26
msgid "**alpha_2**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:25
msgid "Hyper-parameter : inverse scale parameter (rate parameter) for the Gamma distribution prior over the alpha parameter."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:30
msgid "**lambda_1**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:29
msgid "Hyper-parameter : shape parameter for the Gamma distribution prior over the lambda parameter."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:34
msgid "**lambda_2**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:33
msgid "Hyper-parameter : inverse scale parameter (rate parameter) for the Gamma distribution prior over the lambda parameter."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:37
msgid "**compute_score**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:37
msgid "If True, compute the objective function at each step of the model."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:41
msgid "**threshold_lambda**"
msgstr ""

#: of
msgid "float, default=10 000"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:40
msgid "threshold for removing (pruning) weights with high precision from the computation."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:46
msgid "**fit_intercept**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:44
msgid "whether to calculate the intercept for this model. If set to false, no intercept will be used in calculations (i.e. data is expected to be centered)."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:54
msgid "**normalize**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:49
msgid "This parameter is ignored when ``fit_intercept`` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm. If you wish to standardize, please use :class:`~sklearn.preprocessing.StandardScaler` before calling ``fit`` on an estimator with ``normalize=False``."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:57
msgid "**copy_X**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:57
msgid "If True, X will be copied; else, it may be overwritten."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:63
msgid "**verbose**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:60
msgid "Verbose mode when fitting the model."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression
msgid "Attributes"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:68
msgid "**coef_**"
msgstr ""

#: of
msgid "array-like of shape (n_features,)"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:68
msgid "Coefficients of the regression model (mean of distribution)"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:71
msgid "**alpha_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:71
msgid "estimated precision of the noise."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:74
msgid "**lambda_**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:74
msgid "estimated precisions of the weights."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:77
msgid "**sigma_**"
msgstr ""

#: of
msgid "array-like of shape (n_features, n_features)"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:77
msgid "estimated variance-covariance matrix of the weights"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:80
msgid "**scores_**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:80
msgid "if computed, value of the objective function (to be maximized)"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:84
msgid "**intercept_**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:83
msgid "Independent term in decision function. Set to 0.0 if ``fit_intercept = False``."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:88
msgid "**X_offset_**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:87
msgid "If `normalize=True`, offset subtracted for centering data to a zero mean."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:96
msgid "**X_scale_**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:91
msgid "If `normalize=True`, parameter used to scale data to a unit standard deviation."
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.linear_model._bayes.ARDRegression:99
msgid "Notes"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:100
msgid "For an example, see :ref:`examples/linear_model/plot_ard.py <sphx_glr_auto_examples_linear_model_plot_ard.py>`."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:104
msgid "References"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:105
msgid "D. J. C. MacKay, Bayesian nonlinear modeling for the prediction competition, ASHRAE Transactions, 1994."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:108
msgid "R. Salakhutdinov, Lecture notes on Statistical Machine Learning, http://www.utstat.toronto.edu/~rsalakhu/sta4273/notes/Lecture2.pdf#page=15 Their beta is our ``self.alpha_`` Their alpha is our ``self.lambda_`` ARD is a little different than the slide: only dimensions/features for which ``self.lambda_ < self.threshold_lambda`` are kept and the rest are discarded."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:121
msgid "Examples"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:130
msgid "Methods"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.ARDRegression.fit>`\\"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.fit:2
#: sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid "Fit the ARDRegression model according to the given training data and parameters."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.ARDRegression.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.ARDRegression.predict>`\\"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.predict:2
#: sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid "Predict using the linear model."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.ARDRegression.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.ARDRegression.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._bayes.ARDRegression:138:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.fit:5
msgid "Iterative procedure to maximize the evidence"
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._bayes.ARDRegression.fit:11
#: sklearn.linear_model._bayes.ARDRegression.predict:10
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.fit:10
msgid "Training vector, where n_samples in the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._bayes.ARDRegression.fit:14
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.fit:14
msgid "Target values (integers). Will be cast to X's dtype if necessary"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._bayes.ARDRegression.fit
#: sklearn.linear_model._bayes.ARDRegression.predict
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.linear_model._bayes.ARDRegression.fit:30
msgid "**self**"
msgstr ""

#: of
msgid "returns an instance of self."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.predict:4
msgid "In addition to the mean of the predictive distribution, also its standard deviation can be returned."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.predict:10
msgid "Samples."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.predict:13
msgid "**return_std**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.predict:13
msgid "Whether to return the standard deviation of posterior prediction."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.predict:18
msgid "**y_mean**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.predict:18
msgid "Mean of predictive distribution of query points."
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.predict:32
msgid "**y_std**"
msgstr ""

#: of sklearn.linear_model._bayes.ARDRegression.predict:21
msgid "Standard deviation of predictive distribution of query points."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.linear_model.ARDRegression.examples:4
msgid "Examples using ``sklearn.linear_model.ARDRegression``"
msgstr ""

#: ../modules/generated/sklearn.linear_model.ARDRegression.examples:15
#: ../modules/generated/sklearn.linear_model.ARDRegression.examples:23
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_ard.py`"
msgstr ""

