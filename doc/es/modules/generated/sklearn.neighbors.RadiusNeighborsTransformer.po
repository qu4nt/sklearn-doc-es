msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:01\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.neighbors.RadiusNeighborsTransformer.po\n"
"X-Crowdin-File-ID: 5068\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.neighbors.RadiusNeighborsTransformer.rst:2
msgid ":mod:`sklearn.neighbors`.RadiusNeighborsTransformer"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:2
msgid "Transform X into a (weighted) graph of neighbors nearer than a radius"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:4
msgid "The transformed data is a sparse graph as returned by radius_neighbors_graph."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:7
msgid "Read more in the :ref:`User Guide <neighbors_transformer>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph
#: sklearn.neighbors._graph.RadiusNeighborsTransformer
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.fit
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.transform
msgid "Parameters"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:21
#: sklearn.neighbors._graph.RadiusNeighborsTransformer:16
msgid "**mode**"
msgstr ""

#: of
msgid "{'distance', 'connectivity'}, default='distance'"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:14
msgid "Type of returned matrix: 'connectivity' will return the connectivity matrix with ones and zeros, and 'distance' will return the distances between neighbors according to the given metric."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:20
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:16
#: sklearn.neighbors._graph.RadiusNeighborsTransformer:19
msgid "**radius**"
msgstr ""

#: of
msgid "float, default=1."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:19
msgid "Radius of neighborhood in the transformed sparse graph."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:31
msgid "**algorithm**"
msgstr ""

#: of
msgid "{'auto', 'ball_tree', 'kd_tree', 'brute'}, default='auto'"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:22
msgid "Algorithm used to compute the nearest neighbors:"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:24
msgid "'ball_tree' will use :class:`BallTree`"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:25
msgid "'kd_tree' will use :class:`KDTree`"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:26
msgid "'brute' will use a brute-force search."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:27
msgid "'auto' will attempt to decide the most appropriate algorithm based on the values passed to :meth:`fit` method."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:30
msgid "Note: fitting on sparse input will override the setting of this parameter, using brute force."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:37
msgid "**leaf_size**"
msgstr ""

#: of
msgid "int, default=30"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:34
msgid "Leaf size passed to BallTree or KDTree.  This can affect the speed of the construction and query, as well as the memory required to store the tree.  The optimal value depends on the nature of the problem."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:63
msgid "**metric**"
msgstr ""

#: of
msgid "str or callable, default='minkowski'"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:40
msgid "metric to use for distance computation. Any metric from scikit-learn or scipy.spatial.distance can be used."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:43
msgid "If metric is a callable function, it is called on each pair of instances (rows) and the resulting value recorded. The callable should take two arrays as input and return one value indicating the distance between them. This works for Scipy's metrics, but is less efficient than passing the metric name as a string."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:49
msgid "Distance matrices are not supported."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:51
msgid "Valid values for metric are:"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:53
msgid "from scikit-learn: ['cityblock', 'cosine', 'euclidean', 'l1', 'l2', 'manhattan']"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:56
msgid "from scipy.spatial.distance: ['braycurtis', 'canberra', 'chebyshev', 'correlation', 'dice', 'hamming', 'jaccard', 'kulsinski', 'mahalanobis', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule']"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:62
msgid "See the documentation for scipy.spatial.distance for details on these metrics."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:69
msgid "**p**"
msgstr ""

#: of
msgid "int, default=2"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:66
msgid "Parameter for the Minkowski metric from sklearn.metrics.pairwise.pairwise_distances. When p = 1, this is equivalent to using manhattan_distance (l1), and euclidean_distance (l2) for p = 2. For arbitrary p, minkowski_distance (l_p) is used."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:72
msgid "**metric_params**"
msgstr ""

#: of
msgid "dict, default=None"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:72
msgid "Additional keyword arguments for the metric function."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:79
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=1"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:75
msgid "The number of parallel jobs to run for neighbors search. If ``-1``, then the number of jobs is set to the number of CPU cores."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer
msgid "Attributes"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:86
msgid "**effective_metric_**"
msgstr ""

#: of
msgid "str or callable"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:84
msgid "The distance metric used. It will be same as the `metric` parameter or a synonym of it, e.g. 'euclidean' if the `metric` parameter set to 'minkowski' and `p` parameter set to 2."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:92
msgid "**effective_metric_params_**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:89
msgid "Additional keyword arguments for the metric function. For most metrics will be same with `metric_params` parameter, but may also contain the `p` parameter value if the `effective_metric_` attribute is set to 'minkowski'."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:101
msgid "**n_samples_fit_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:95
msgid "Number of samples in the fitted data."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:62
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:52
#: sklearn.neighbors._graph.RadiusNeighborsTransformer:104
msgid "Examples"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:113
msgid "Methods"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid ":obj:`fit <sklearn.neighbors.RadiusNeighborsTransformer.fit>`\\"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.fit:2
#: sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid "Fit the radius neighbors transformer from the training dataset."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.neighbors.RadiusNeighborsTransformer.fit_transform>`\\"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform:2
#: sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid ":obj:`get_params <sklearn.neighbors.RadiusNeighborsTransformer.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid ":obj:`radius_neighbors <sklearn.neighbors.RadiusNeighborsTransformer.radius_neighbors>`\\"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:2
#: sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid "Finds the neighbors within a given radius of a point or points."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid ":obj:`radius_neighbors_graph <sklearn.neighbors.RadiusNeighborsTransformer.radius_neighbors_graph>`\\"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:2
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.transform:2
#: sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid "Computes the (weighted) graph of Neighbors for points in X"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid ":obj:`set_params <sklearn.neighbors.RadiusNeighborsTransformer.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer:123:<autosummary>:1
msgid ":obj:`transform <sklearn.neighbors.RadiusNeighborsTransformer.transform>`\\"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:16
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:12
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.fit:8
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform:10
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.transform:8
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features) or                 (n_samples, n_samples) if metric='precomputed'"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.fit:8
msgid "Training data."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.fit
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.fit:24
msgid "**self**"
msgstr ""

#: of
msgid "RadiusNeighborsTransformer"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.fit:13
msgid "The fitted radius neighbors transformer."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform:4
msgid "Fits transformer to X and y with optional parameters fit_params and returns a transformed version of X."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform:10
msgid "Training set."
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform:13
msgid "**y**"
msgstr ""

#: of
msgid "ignored"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform:32
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.transform:27
msgid "**Xt**"
msgstr ""

#: of
msgid "sparse matrix of shape (n_samples, n_samples)"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.fit_transform:18
#: sklearn.neighbors._graph.RadiusNeighborsTransformer.transform:13
msgid "Xt[i, j] is assigned the weight of edge that connects i to j. Only the neighbors have an explicit value. The diagonal is always explicit. The matrix is of CSR format."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:4
msgid "Return the indices and distances of each point from the dataset lying in a ball with size ``radius`` around the points of the query array. Points lying on the boundary are included in the results."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:8
msgid "The result points are *not* necessarily sorted by distance to their query point."
msgstr ""

#: of
msgid "array-like of (n_samples, n_features), default=None"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:14
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:10
msgid "The query point or points. If not provided, neighbors of each indexed point are returned. In this case, the query point is not considered its own neighbor."
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:19
msgid "Limiting distance of neighbors to return. The default is the value passed to the constructor."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:23
msgid "**return_distance**"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:23
msgid "Whether or not to return the distances."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:31
#: sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:28
msgid "**sort_results**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:26
msgid "If True, the distances and indices will be sorted by increasing distances before being returned. If False, the results may not be sorted. If `return_distance=False`, setting `sort_results=True` will result in an error."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:38
msgid "**neigh_dist**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,) of arrays"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:36
msgid "Array representing the distances to each point, only present if `return_distance=True`. The distance values are computed according to the ``metric`` constructor parameter."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:50
msgid "**neigh_ind**"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:41
msgid "An array of arrays of indices of the approximate nearest points from the population matrix that lie within a ball of size ``radius`` around the query points."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:53
msgid "Notes"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:54
msgid "Because the number of neighbors of each point is not necessarily equal, the results for multiple query points cannot be fit in a standard data array. For efficiency, `radius_neighbors` returns arrays of objects, where each object is a 1D array of indices or distances."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:63
msgid "In the following example, we construct a NeighborsClassifier class from an array representing our data set and ask who's the closest point to [1, 1, 1]:"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors:79
msgid "The first array returned contains the distances to all points which are closer than 1.6, while the second array returned contains their indices.  In general, multiple points can be queried at the same time."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:4
msgid "Neighborhoods are restricted the points at a distance lower than radius."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features), default=None"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:15
msgid "Radius of neighborhoods. The default is the value passed to the constructor."
msgstr ""

#: of
msgid "{'connectivity', 'distance'}, default='connectivity'"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:19
msgid "Type of returned matrix: 'connectivity' will return the connectivity matrix with ones and zeros, in 'distance' the edges are Euclidean distance between points."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:24
msgid "If True, in each row of the result, the non-zero entries will be sorted by increasing distances. If False, the non-zero entries may not be sorted. Only used with mode='distance'."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:41
msgid "**A**"
msgstr ""

#: of
msgid "sparse-matrix of shape (n_queries, n_samples_fit)"
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:33
msgid "`n_samples_fit` is the number of samples in the fitted data `A[i, j]` is assigned the weight of edge that connects `i` to `j`. The matrix if of format CSR."
msgstr ""

#: of sklearn.neighbors._base.RadiusNeighborsMixin.radius_neighbors_graph:46
msgid ":obj:`kneighbors_graph`"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of
msgid "array-like of shape (n_samples_transform, n_features)"
msgstr ""

#: of sklearn.neighbors._graph.RadiusNeighborsTransformer.transform:8
msgid "Sample data"
msgstr ""

#: of
msgid "sparse matrix of shape (n_samples_transform, n_samples_fit)"
msgstr ""

