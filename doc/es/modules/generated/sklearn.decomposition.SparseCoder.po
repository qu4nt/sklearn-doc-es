msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-06 00:11\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.decomposition.SparseCoder.po\n"
"X-Crowdin-File-ID: 5380\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.decomposition.SparseCoder.rst:2
msgid ":mod:`sklearn.decomposition`.SparseCoder"
msgstr ":mod:`sklearn.decomposition`.SparseCoder"

#: of sklearn.decomposition._dict_learning.SparseCoder:2
msgid "Sparse coding"
msgstr "Codificación dispersa"

#: of sklearn.decomposition._dict_learning.SparseCoder:4
msgid "Finds a sparse representation of data against a fixed, precomputed dictionary."
msgstr "Encuentra una representación dispersa de los datos contra un diccionario fijo y precalculado."

#: of sklearn.decomposition._dict_learning.SparseCoder:7
msgid "Each row of the result is the solution to a sparse coding problem. The goal is to find a sparse array `code` such that::"
msgstr "Cada fila del resultado es la solución a un problema de codificación dispersa. El objetivo es encontrar un arreglo disperso `code` tal que::"

#: of sklearn.decomposition._dict_learning.SparseCoder:12
msgid "Read more in the :ref:`User Guide <SparseCoder>`."
msgstr "Más información en el :ref:`Manual de usuario <SparseCoder>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._dict_learning.SparseCoder
#: sklearn.decomposition._dict_learning.SparseCoder.fit
#: sklearn.decomposition._dict_learning.SparseCoder.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.decomposition._dict_learning.SparseCoder:18
msgid "**dictionary**"
msgstr "**dictionary**"

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr "ndarray de forma (n_components, n_features)"

#: of sklearn.decomposition._dict_learning.SparseCoder:17
msgid "The dictionary atoms used for sparse coding. Lines are assumed to be normalized to unit norm."
msgstr "Los átomos del diccionario utilizados para la codificación dispersa. Se supone que las líneas están normalizadas a la norma unitaria."

#: of sklearn.decomposition._dict_learning.SparseCoder:32
msgid "**transform_algorithm**"
msgstr "**transform_algorithm**"

#: of
msgid "{'lasso_lars', 'lasso_cd', 'lars', 'omp',             'threshold'}, default='omp'"
msgstr "{'lasso_lars', 'lasso_cd', 'lars', 'omp',             'threshold'}, default='omp'"

#: of sklearn.decomposition._dict_learning.SparseCoder:21
msgid "Algorithm used to transform the data:"
msgstr "Algoritmo utilizado para transformar los datos:"

#: of sklearn.decomposition._dict_learning.SparseCoder:23
msgid "`'lars'`: uses the least angle regression method (`linear_model.lars_path`);"
msgstr "`'lars'`: utiliza el método de regresión de ángulo mínimo (`linear_model.lars_path`);"

#: of sklearn.decomposition._dict_learning.SparseCoder:25
msgid "`'lasso_lars'`: uses Lars to compute the Lasso solution;"
msgstr "`'lasso_lars'`: utiliza Lars para calcular la solución Lasso;"

#: of sklearn.decomposition._dict_learning.SparseCoder:26
msgid "`'lasso_cd'`: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). `'lasso_lars'` will be faster if the estimated components are sparse;"
msgstr "`'lasso_cd'`: utiliza el método de descenso de coordenadas para calcular la solución Lasso (linear_model.Lasso). `'lasso_lars'` será más rápido si los componentes estimados son dispersos;"

#: of sklearn.decomposition._dict_learning.SparseCoder:29
msgid "`'omp'`: uses orthogonal matching pursuit to estimate the sparse solution;"
msgstr "`'omp'`: utiliza la búsqueda de correspondencias ortogonales para estimar la solución dispersa;"

#: of sklearn.decomposition._dict_learning.SparseCoder:31
msgid "`'threshold'`: squashes to zero all coefficients less than alpha from the projection ``dictionary * X'``."
msgstr "`'threshold'`: reduce a cero todos los coeficientes menores que alfa de la proyección ``dictionary * X'``."

#: of sklearn.decomposition._dict_learning.SparseCoder:38
msgid "**transform_n_nonzero_coefs**"
msgstr "**transform_n_nonzero_coefs**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.decomposition._dict_learning.SparseCoder:35
msgid "Number of nonzero coefficients to target in each column of the solution. This is only used by `algorithm='lars'` and `algorithm='omp'` and is overridden by `alpha` in the `omp` case. If `None`, then `transform_n_nonzero_coefs=int(n_features / 10)`."
msgstr "Número de coeficientes distintos de cero para el objetivo en cada columna de la solución. Sólo se utiliza con `algorithm='lars'` y `algorithm='omp'` y se anula con `alpha` en el caso `omp`. Si es `None`, entonces `transform_n_nonzero_coefs=int(n_features / 10)`."

#: of sklearn.decomposition._dict_learning.SparseCoder:48
msgid "**transform_alpha**"
msgstr "**transform_alpha**"

#: of
msgid "float, default=None"
msgstr "float, default=None"

#: of sklearn.decomposition._dict_learning.SparseCoder:41
msgid "If `algorithm='lasso_lars'` or `algorithm='lasso_cd'`, `alpha` is the penalty applied to the L1 norm. If `algorithm='threshold'`, `alpha` is the absolute value of the threshold below which coefficients will be squashed to zero. If `algorithm='omp'`, `alpha` is the tolerance parameter: the value of the reconstruction error targeted. In this case, it overrides `n_nonzero_coefs`. If `None`, default to 1."
msgstr "Si `algorithm='lasso_lars' o `algorithm='lasso_cd'`, `alpha` es la penalización aplicada a la norma L1. Si `algorithm='threshold'`, `alpha` es el valor absoluto del umbral por debajo del cual los coeficientes serán reducidos a cero. Si `algorithm='omp'`, `alpha` es el parámetro de tolerancia: el valor del error de reconstrucción al que se apunta. En este caso, anula `n_nonzero_coefs`. Si es `None`, por defecto es 1."

#: of sklearn.decomposition._dict_learning.SparseCoder:53
msgid "**split_sign**"
msgstr "**split_sign**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.decomposition._dict_learning.SparseCoder:51
msgid "Whether to split the sparse feature vector into the concatenation of its negative part and its positive part. This can improve the performance of downstream classifiers."
msgstr "Si se desea dividir el vector de características disperso en la concatenación de su parte negativa y su parte positiva. Esto puede mejorar el rendimiento de los clasificadores posteriores."

#: of sklearn.decomposition._dict_learning.SparseCoder:59
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of sklearn.decomposition._dict_learning.SparseCoder:56
msgid "Number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "Número de trabajos paralelos a ejecutar. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesadores. Ver el :term:`Glosario <n_jobs>` para más detalles."

#: of sklearn.decomposition._dict_learning.SparseCoder:64
msgid "**positive_code**"
msgstr "**positive_code**"

#: of sklearn.decomposition._dict_learning.SparseCoder:62
msgid "Whether to enforce positivity when finding the code."
msgstr "Si se debe imponer la positividad al encontrar el código."

#: of sklearn.decomposition._dict_learning.SparseCoder:73
msgid "**transform_max_iter**"
msgstr "**transform_max_iter**"

#: of
msgid "int, default=1000"
msgstr "int, default=1000"

#: of sklearn.decomposition._dict_learning.SparseCoder:67
msgid "Maximum number of iterations to perform if `algorithm='lasso_cd'` or `lasso_lars`."
msgstr "Número máximo de iteraciones a realizar si `algorithm='lasso_cd'` o `lasso_lars`."

#: of sklearn.decomposition._dict_learning.SparseCoder
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.decomposition._dict_learning.SparseCoder:85
msgid "**components_**"
msgstr "**components_**"

#: of sklearn.decomposition._dict_learning.SparseCoder:78
msgid "The unchanged dictionary atoms."
msgstr "Los átomos del diccionario sin cambios."

#: of sklearn.decomposition._dict_learning.SparseCoder:80
msgid "This attribute is deprecated in 0.24 and will be removed in 1.1 (renaming of 0.26). Use `dictionary` instead."
msgstr "Este atributo está obsoleto en 0.24 y se eliminará en 1.1 (cambio de nombre de 0.26). Utilice `dictionary` en su lugar."

#: of sklearn.decomposition._dict_learning.SparseCoder:90
msgid ":obj:`DictionaryLearning`"
msgstr ":obj:`DictionaryLearning`"

#: of sklearn.decomposition._dict_learning.SparseCoder:92
msgid ":obj:`MiniBatchDictionaryLearning`"
msgstr ":obj:`MiniBatchDictionaryLearning`"

#: of sklearn.decomposition._dict_learning.SparseCoder:94
msgid ":obj:`SparsePCA`"
msgstr ":obj:`SparsePCA`"

#: of sklearn.decomposition._dict_learning.SparseCoder:96
msgid ":obj:`MiniBatchSparsePCA`"
msgstr ":obj:`MiniBatchSparsePCA`"

#: of sklearn.decomposition._dict_learning.SparseCoder:98
msgid ":obj:`sparse_encode`"
msgstr ":obj:`sparse_encode`"

#: of sklearn.decomposition._dict_learning.SparseCoder:104
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.decomposition._dict_learning.SparseCoder:125
msgid "Methods"
msgstr "Métodos"

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.SparseCoder.fit>`\\"
msgstr ":obj:`fit <sklearn.decomposition.SparseCoder.fit>`\\"

#: of sklearn.decomposition._dict_learning.SparseCoder.fit:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Do nothing and return the estimator unchanged."
msgstr "No hace nada y devuelve el estimador sin cambios."

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.decomposition.SparseCoder.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.decomposition.SparseCoder.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta a los datos y luego los transforma."

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.SparseCoder.get_params>`\\"
msgstr ":obj:`get_params <sklearn.decomposition.SparseCoder.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`set_params <sklearn.decomposition.SparseCoder.set_params>`\\"
msgstr ":obj:`set_params <sklearn.decomposition.SparseCoder.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.SparseCoder.transform>`\\"
msgstr ":obj:`transform <sklearn.decomposition.SparseCoder.transform>`\\"

#: of sklearn.decomposition._dict_learning.SparseCoder.transform:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Encode the data as a sparse combination of the dictionary atoms."
msgstr "Codifica los datos como una combinación dispersa de los átomos del diccionario."

#: of sklearn.decomposition._dict_learning.SparseCoder.fit:4
msgid "This method is just there to implement the usual API and hence work in pipelines."
msgstr "Este método sólo está ahí para implementar la API habitual y, por lo tanto, para trabajar en pipelines."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.decomposition._dict_learning.SparseCoder.fit:10
#: sklearn.decomposition._dict_learning.SparseCoder.transform:11
msgid "**X**"
msgstr "**X**"

#: of
msgid "Ignored"
msgstr "Ignorado"

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.decomposition._dict_learning.SparseCoder.fit:13
msgid "**y**"
msgstr "**y**"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._dict_learning.SparseCoder.fit
#: sklearn.decomposition._dict_learning.SparseCoder.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.decomposition._dict_learning.SparseCoder.fit:29
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` e `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.decomposition._dict_learning.SparseCoder.transform:27
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "ndarray arreglo de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder.transform:4
msgid "Coding method is determined by the object parameter `transform_algorithm`."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder.transform:10
msgid "Test data to be transformed, must have the same number of features as the data used to train the model."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder.transform:16
msgid "Transformed data."
msgstr ""

