msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-05 23:06\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.decomposition.SparseCoder.po\n"
"X-Crowdin-File-ID: 5380\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.decomposition.SparseCoder.rst:2
msgid ":mod:`sklearn.decomposition`.SparseCoder"
msgstr ":mod:`sklearn.decomposition`.SparseCoder"

#: of sklearn.decomposition._dict_learning.SparseCoder:2
msgid "Sparse coding"
msgstr "Codificación dispersa"

#: of sklearn.decomposition._dict_learning.SparseCoder:4
msgid "Finds a sparse representation of data against a fixed, precomputed dictionary."
msgstr "Encuentra una representación dispersa de los datos contra un diccionario fijo y precalculado."

#: of sklearn.decomposition._dict_learning.SparseCoder:7
msgid "Each row of the result is the solution to a sparse coding problem. The goal is to find a sparse array `code` such that::"
msgstr "Cada fila del resultado es la solución a un problema de codificación dispersa. El objetivo es encontrar un arreglo disperso `code` tal que::"

#: of sklearn.decomposition._dict_learning.SparseCoder:12
msgid "Read more in the :ref:`User Guide <SparseCoder>`."
msgstr "Más información en el :ref:`Manual de usuario <SparseCoder>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._dict_learning.SparseCoder
#: sklearn.decomposition._dict_learning.SparseCoder.fit
#: sklearn.decomposition._dict_learning.SparseCoder.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.decomposition._dict_learning.SparseCoder:18
msgid "**dictionary**"
msgstr "**dictionary**"

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr "ndarray de forma (n_components, n_features)"

#: of sklearn.decomposition._dict_learning.SparseCoder:17
msgid "The dictionary atoms used for sparse coding. Lines are assumed to be normalized to unit norm."
msgstr "Los elementos del diccionario utilizados para la codificación dispersa. Se supone que las líneas están normalizadas a la norma unitaria."

#: of sklearn.decomposition._dict_learning.SparseCoder:32
msgid "**transform_algorithm**"
msgstr "**transform_algorithm**"

#: of
msgid "{'lasso_lars', 'lasso_cd', 'lars', 'omp',             'threshold'}, default='omp'"
msgstr "{'lasso_lars', 'lasso_cd', 'lars', 'omp',             'threshold'}, default='omp'"

#: of sklearn.decomposition._dict_learning.SparseCoder:21
msgid "Algorithm used to transform the data:"
msgstr "Algoritmo utilizado para transformar los datos:"

#: of sklearn.decomposition._dict_learning.SparseCoder:23
msgid "`'lars'`: uses the least angle regression method (`linear_model.lars_path`);"
msgstr "`'lars'`: utiliza el método de regresión de ángulo mínimo (`linear_model.lars_path`);"

#: of sklearn.decomposition._dict_learning.SparseCoder:25
msgid "`'lasso_lars'`: uses Lars to compute the Lasso solution;"
msgstr "`'lasso_lars'`: utiliza Lars para calcular la solución Lasso;"

#: of sklearn.decomposition._dict_learning.SparseCoder:26
msgid "`'lasso_cd'`: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). `'lasso_lars'` will be faster if the estimated components are sparse;"
msgstr "`'lasso_cd'`: utiliza el método de descenso de coordenadas para calcular la solución Lasso (linear_model.Lasso). `'lasso_lars'` será más rápido si los componentes estimados son dispersos;"

#: of sklearn.decomposition._dict_learning.SparseCoder:29
msgid "`'omp'`: uses orthogonal matching pursuit to estimate the sparse solution;"
msgstr "`'omp'`: utiliza la búsqueda de correspondencias ortogonales para estimar la solución dispersa;"

#: of sklearn.decomposition._dict_learning.SparseCoder:31
msgid "`'threshold'`: squashes to zero all coefficients less than alpha from the projection ``dictionary * X'``."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:38
msgid "**transform_n_nonzero_coefs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:35
msgid "Number of nonzero coefficients to target in each column of the solution. This is only used by `algorithm='lars'` and `algorithm='omp'` and is overridden by `alpha` in the `omp` case. If `None`, then `transform_n_nonzero_coefs=int(n_features / 10)`."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:48
msgid "**transform_alpha**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:41
msgid "If `algorithm='lasso_lars'` or `algorithm='lasso_cd'`, `alpha` is the penalty applied to the L1 norm. If `algorithm='threshold'`, `alpha` is the absolute value of the threshold below which coefficients will be squashed to zero. If `algorithm='omp'`, `alpha` is the tolerance parameter: the value of the reconstruction error targeted. In this case, it overrides `n_nonzero_coefs`. If `None`, default to 1."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:53
msgid "**split_sign**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:51
msgid "Whether to split the sparse feature vector into the concatenation of its negative part and its positive part. This can improve the performance of downstream classifiers."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:59
msgid "**n_jobs**"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:56
msgid "Number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:64
msgid "**positive_code**"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:62
msgid "Whether to enforce positivity when finding the code."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:73
msgid "**transform_max_iter**"
msgstr ""

#: of
msgid "int, default=1000"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:67
msgid "Maximum number of iterations to perform if `algorithm='lasso_cd'` or `lasso_lars`."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder
msgid "Attributes"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:85
msgid "**components_**"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:78
msgid "The unchanged dictionary atoms."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:80
msgid "This attribute is deprecated in 0.24 and will be removed in 1.1 (renaming of 0.26). Use `dictionary` instead."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:90
msgid ":obj:`DictionaryLearning`"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:92
msgid ":obj:`MiniBatchDictionaryLearning`"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:94
msgid ":obj:`SparsePCA`"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:96
msgid ":obj:`MiniBatchSparsePCA`"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:98
msgid ":obj:`sparse_encode`"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:104
msgid "Examples"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:125
msgid "Methods"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.SparseCoder.fit>`\\"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder.fit:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Do nothing and return the estimator unchanged."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.decomposition.SparseCoder.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.SparseCoder.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`set_params <sklearn.decomposition.SparseCoder.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.SparseCoder.transform>`\\"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder.transform:2
#: sklearn.decomposition._dict_learning.SparseCoder:133:<autosummary>:1
msgid "Encode the data as a sparse combination of the dictionary atoms."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder.fit:4
msgid "This method is just there to implement the usual API and hence work in pipelines."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.decomposition._dict_learning.SparseCoder.fit:10
#: sklearn.decomposition._dict_learning.SparseCoder.transform:11
msgid "**X**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.decomposition._dict_learning.SparseCoder.fit:13
msgid "**y**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._dict_learning.SparseCoder.fit
#: sklearn.decomposition._dict_learning.SparseCoder.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.decomposition._dict_learning.SparseCoder.fit:29
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.decomposition._dict_learning.SparseCoder.transform:27
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder.transform:4
msgid "Coding method is determined by the object parameter `transform_algorithm`."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder.transform:10
msgid "Test data to be transformed, must have the same number of features as the data used to train the model."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.decomposition._dict_learning.SparseCoder.transform:16
msgid "Transformed data."
msgstr ""

