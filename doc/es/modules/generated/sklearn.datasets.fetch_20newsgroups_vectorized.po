msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-14 00:01\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.po\n"
"X-Crowdin-File-ID: 4876\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.rst:2
msgid ":mod:`sklearn.datasets`.fetch_20newsgroups_vectorized"
msgstr ":mod:`sklearn.datasets`.fetch_20newsgroups_vectorized"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:2
msgid "Load and vectorize the 20 newsgroups dataset (classification)."
msgstr "Cargar y vectorizar el conjunto de datos de 20 grupos de noticias (clasificación)."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:4
msgid "Download it if necessary."
msgstr "Descargar si es necesario."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:6
msgid "This is a convenience function; the transformation is done using the default settings for :class:`~sklearn.feature_extraction.text.CountVectorizer`. For more advanced usage (stopword filtering, n-gram extraction, etc.), combine fetch_20newsgroups with a custom :class:`~sklearn.feature_extraction.text.CountVectorizer`, :class:`~sklearn.feature_extraction.text.HashingVectorizer`, :class:`~sklearn.feature_extraction.text.TfidfTransformer` or :class:`~sklearn.feature_extraction.text.TfidfVectorizer`."
msgstr "Esta es una función de conveniencia; la transformación se realiza utilizando la configuración por defecto de :class:`~sklearn.feature_extraction.text.CountVectorizer`. Para un uso más avanzado (filtrado de palabras de parada, extracción de n-gramas, etc.), combina fetch_20newsgroups con un :class:`~sklearn.feature_extraction.text.CountVectorizer` personalizado, :class:`~sklearn.feature_extraction.text.HashingVectorizer`, :class:`~sklearn.feature_extraction.text.TfidfTransformer` o :class:`~sklearn.feature_extraction.text.TfidfVectorizer`."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:16
msgid "The resulting counts are normalized using :func:`sklearn.preprocessing.normalize` unless normalize is set to False."
msgstr "Los recuentos resultantes se normalizan utilizando :func:`sklearn.preprocessing.normalize` a menos que normalize se establezca en False."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:20
msgid "Classes"
msgstr "Clases"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:20
msgid "20"
msgstr "20"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:21
msgid "Samples total"
msgstr "Total de muestras"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:21
msgid "18846"
msgstr "18846"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:22
msgid "Dimensionality"
msgstr "Dimensionalidad"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:22
msgid "130107"
msgstr "130107"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:23
msgid "Features"
msgstr "Característica"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:23
msgid "real"
msgstr "real"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:26
msgid "Read more in the :ref:`User Guide <20newsgroups_dataset>`."
msgstr "Lee más en la :ref:`Manual de usuario <20newsgroups_dataset>`."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:32
msgid "**subset**"
msgstr "**subconjunto**"

#: of
msgid "{'train', 'test', 'all'}, default='train'"
msgstr "{'train', 'test', 'all'}, default='train'"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:31
msgid "Select the dataset to load: 'train' for the training set, 'test' for the test set, 'all' for both, with shuffled ordering."
msgstr "Seleccione el conjunto de datos a cargar: 'train' para el conjunto de entrenamiento, 'test' para el conjunto de prueba, 'all' para ambos, con ordenación aleatoria."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:42
msgid "**remove**"
msgstr "**remove**"

#: of
msgid "tuple, default=()"
msgstr "tuple, default=()"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:35
msgid "May contain any subset of ('headers', 'footers', 'quotes'). Each of these are kinds of text that will be detected and removed from the newsgroup posts, preventing classifiers from overfitting on metadata."
msgstr "Puede contener cualquier subconjunto de ('headers', 'footers', 'quotes'). Cada uno de ellos es un tipo de texto que será detectado y eliminado de los mensajes de los grupos de noticias, evitando que los clasificadores se ajusten en exceso a los metadatos."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:40
msgid "'headers' removes newsgroup headers, 'footers' removes blocks at the ends of posts that look like signatures, and 'quotes' removes lines that appear to be quoting another post."
msgstr "Los \"headers\" eliminan los encabezados de los grupos de noticias, los \"footers\" eliminan los bloques al final de los mensajes que parecen firmas, y las \"quotes\" eliminan las líneas que parecen citar otro mensaje."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:46
msgid "**data_home**"
msgstr "**data_home**"

#: of
msgid "str, default=None"
msgstr "str, default=None"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:45
msgid "Specify an download and cache folder for the datasets. If None, all scikit-learn data is stored in '~/scikit_learn_data' subfolders."
msgstr "Especifique una carpeta de descarga y de caché para los conjuntos de datos. Si es None, todos los datos de scikit-learn se almacenan en las subcarpetas '~/scikit_learn_data'."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:50
msgid "**download_if_missing**"
msgstr "**download_if_missing**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:49
msgid "If False, raise an IOError if the data is not locally available instead of trying to download the data from the source site."
msgstr "Si es False, lanza un IOError si los datos no están disponibles localmente en lugar de intentar descargar los datos desde el sitio de origen."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:56
msgid "**return_X_y**"
msgstr "**return_X_y**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:53
msgid "If True, returns ``(data.data, data.target)`` instead of a Bunch object."
msgstr "Si es True, devuelve ``(data.data, data.target)`` en lugar de un objeto Bunch."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:62
msgid "**normalize**"
msgstr "**normalize**"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:59
msgid "If True, normalizes each document's feature vector to unit norm using :func:`sklearn.preprocessing.normalize`."
msgstr "Si es True, normaliza el vector de características de cada documento a la norma unitaria usando :func:`sklearn.preprocessing.normalize`."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:70
msgid "**as_frame**"
msgstr "**as_frame**"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:65
msgid "If True, the data is a pandas DataFrame including columns with appropriate dtypes (numeric, string, or categorical). The target is a pandas DataFrame or Series depending on the number of `target_columns`."
msgstr "Si es True, los datos son un DataFrame de pandas que incluye columnas con los dtypes apropiados (numérico, cadena o categórico). El objetivo es un DataFrame de pandas o una Serie dependiendo del número de `target_columns`."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized
msgid "Returns"
msgstr "Salida"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:91
msgid "**bunch** : :class:`~sklearn.utils.Bunch`"
msgstr "**bunch** : :class:`~sklearn.utils.Bunch`"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:90
msgid "Bunch"
msgstr "Bunch"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:75
msgid "Dictionary-like object, with the following attributes."
msgstr "Objeto tipo diccionario, con los siguientes atributos."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:78
msgid "data: {sparse matrix, dataframe} of shape (n_samples, n_features)"
msgstr "datos: {sparse matrix, dataframe} de forma (n_samples, n_features)"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:78
msgid "The input data matrix. If ``as_frame`` is `True`, ``data`` is a pandas DataFrame with sparse columns."
msgstr "La matriz de datos de entrada. Si ``as_frame`` es `True`, ``data`` es un DataFrame de pandas con columnas dispersas."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:81
msgid "target: {ndarray, series} of shape (n_samples,)"
msgstr "target: {ndarray, series} de forma (n_samples,)"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:81
msgid "The target labels. If ``as_frame`` is `True`, ``target`` is a pandas Series."
msgstr "Las etiquetas del objetivo. Si ``as_frame`` es ``True``, ``target`` son Series de pandas."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:83
msgid "target_names: list of shape (n_classes,)"
msgstr "target_names: lista de shape (n_clases,)"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:84
msgid "The names of target classes."
msgstr "Los nombres de las clases objetivo."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:85
msgid "DESCR: str"
msgstr "DESCR: str"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:86
msgid "The full description of the dataset."
msgstr "La descripción completa del conjunto de datos."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:91
msgid "frame: dataframe of shape (n_samples, n_features + 1)"
msgstr "frame: dataframe de forma (n_samples, n_features + 1)"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:88
msgid "Only present when `as_frame=True`. Pandas DataFrame with ``data`` and ``target``."
msgstr "Sólo está presente cuando `as_frame=True`. Pandas DataFrame con ``data`` y ``target``."

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:108
msgid "**(data, target)** : tuple if ``return_X_y`` is True"
msgstr "**(data, target)** : tupla si ``return_X_y`` es True"

#: of
msgid "tuple if"
msgstr "tupla si"

#: of sklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized:94
msgid "`data` and `target` would be of the format defined in the `Bunch` description above."
msgstr "`datos` y `objetivo` tendrían el formato definido en la descripción del `Bunch` anterior."

#: ../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.examples:4
msgid "Examples using ``sklearn.datasets.fetch_20newsgroups_vectorized``"
msgstr "Ejemplos con ``sklearn.datasets.fetch_20newsgroups_vectorized``"

#: ../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.examples:15
#: ../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.examples:23
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_sparse_logistic_regression_20newsgroups.py`"
msgstr ":ref:`sphx_glr_auto_examples_linear_model_plot_sparse_logistic_regression_20newsgroups.py`"

#: ../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.examples:34
#: ../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.examples:42
#: ../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.examples:53
#: ../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized.examples:61
msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_johnson_lindenstrauss_bound.py`"
msgstr ":ref:`sphx_glr_auto_examples_miscellaneous_plot_johnson_lindenstrauss_bound.py`"

