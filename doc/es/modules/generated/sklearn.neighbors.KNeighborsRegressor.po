msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-07-16 02:01\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.neighbors.KNeighborsRegressor.po\n"
"X-Crowdin-File-ID: 4984\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.neighbors.KNeighborsRegressor.rst:2
msgid ":mod:`sklearn.neighbors`.KNeighborsRegressor"
msgstr ":mod:`sklearn.neighbors`.KNeighborsRegressor"

#: of sklearn.neighbors._regression.KNeighborsRegressor:2
msgid "Regression based on k-nearest neighbors."
msgstr "Regresión basada en los vecinos más cercanos."

#: of sklearn.neighbors._regression.KNeighborsRegressor:4
msgid "The target is predicted by local interpolation of the targets associated of the nearest neighbors in the training set."
msgstr "El objetivo se predice mediante la interpolación local de los objetivos asociados a los vecinos más cercanos en el conjunto de entrenamiento."

#: of sklearn.neighbors._regression.KNeighborsRegressor:7
msgid "Read more in the :ref:`User Guide <regression>`."
msgstr "Más información en el :ref:`Manual de usuario <regression>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph
#: sklearn.neighbors._regression.KNeighborsRegressor
#: sklearn.neighbors._regression.KNeighborsRegressor.fit
#: sklearn.neighbors._regression.KNeighborsRegressor.predict
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:15
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:17
#: sklearn.neighbors._regression.KNeighborsRegressor:14
msgid "**n_neighbors**"
msgstr "**n_neighbors**"

#: of
msgid "int, default=5"
msgstr "entero, default=5"

#: of sklearn.neighbors._regression.KNeighborsRegressor:14
msgid "Number of neighbors to use by default for :meth:`kneighbors` queries."
msgstr "Número de vecinos a utilizar por defecto para las consultas :meth:`kneighbors`."

#: of sklearn.neighbors._regression.KNeighborsRegressor:28
msgid "**weights**"
msgstr "**weights**"

#: of
msgid "{'uniform', 'distance'} or callable, default='uniform'"
msgstr "{'uniform', 'distance'} o invocable, default='uniform'"

#: of sklearn.neighbors._regression.KNeighborsRegressor:17
msgid "weight function used in prediction.  Possible values:"
msgstr "función de ponderación utilizada en la predicción.  Valores posibles:"

#: of sklearn.neighbors._regression.KNeighborsRegressor:19
msgid "'uniform' : uniform weights.  All points in each neighborhood are weighted equally."
msgstr "'uniform' : ponderaciones uniformes. Todos los puntos de cada vecindad se ponderan por igual."

#: of sklearn.neighbors._regression.KNeighborsRegressor:21
msgid "'distance' : weight points by the inverse of their distance. in this case, closer neighbors of a query point will have a greater influence than neighbors which are further away."
msgstr "'distance' : ponderar los puntos por la inversa de su distancia. en este caso, los vecinos más cercanos de un punto de consulta tendrán una mayor influencia que los vecinos más alejados."

#: of sklearn.neighbors._regression.KNeighborsRegressor:24
msgid "[callable] : a user-defined function which accepts an array of distances, and returns an array of the same shape containing the weights."
msgstr "[callable] : una función definida por el usuario que acepta un arreglo de distancias, y devuelve un arreglo de la misma forma que contiene las ponderaciones."

#: of sklearn.neighbors._regression.KNeighborsRegressor:28
msgid "Uniform weights are used by default."
msgstr "Las ponderaciones uniformes se utilizan por defecto."

#: of sklearn.neighbors._regression.KNeighborsRegressor:40
msgid "**algorithm**"
msgstr "**algorithm**"

#: of
msgid "{'auto', 'ball_tree', 'kd_tree', 'brute'}, default='auto'"
msgstr "{'auto', 'ball_tree', 'kd_tree', 'brute'}, default='auto'"

#: of sklearn.neighbors._regression.KNeighborsRegressor:31
msgid "Algorithm used to compute the nearest neighbors:"
msgstr "Algoritmo usado para calcular los vecinos más cercanos:"

#: of sklearn.neighbors._regression.KNeighborsRegressor:33
msgid "'ball_tree' will use :class:`BallTree`"
msgstr "'ball_tree' will use :class:`BallTree`"

#: of sklearn.neighbors._regression.KNeighborsRegressor:34
msgid "'kd_tree' will use :class:`KDTree`"
msgstr "'kd_tree' will use :class:`KDTree`"

#: of sklearn.neighbors._regression.KNeighborsRegressor:35
msgid "'brute' will use a brute-force search."
msgstr "'brute' usará una búsqueda de fuerza bruta."

#: of sklearn.neighbors._regression.KNeighborsRegressor:36
msgid "'auto' will attempt to decide the most appropriate algorithm based on the values passed to :meth:`fit` method."
msgstr "'auto' intentará decidir el algoritmo más apropiado basado en los valores pasados al método :meth:`fit`."

#: of sklearn.neighbors._regression.KNeighborsRegressor:39
msgid "Note: fitting on sparse input will override the setting of this parameter, using brute force."
msgstr "Nota: el ajuste en la entrada dispersa anulará el ajuste de este parámetro, utilizando la fuerza bruta."

#: of sklearn.neighbors._regression.KNeighborsRegressor:46
msgid "**leaf_size**"
msgstr "**leaf_size**"

#: of
msgid "int, default=30"
msgstr "entero, default=30"

#: of sklearn.neighbors._regression.KNeighborsRegressor:43
msgid "Leaf size passed to BallTree or KDTree.  This can affect the speed of the construction and query, as well as the memory required to store the tree.  The optimal value depends on the nature of the problem."
msgstr "Tamaño de hoja pasado a BallTree o KDTree. Esto puede afectar la velocidad de la construcción y la consulta, así como la memoria necesaria para almacenar el árbol. El valor óptimo depende de la naturaleza del problema."

#: of sklearn.neighbors._regression.KNeighborsRegressor:51
msgid "**p**"
msgstr "**p**"

#: of
msgid "int, default=2"
msgstr "entero, default=2"

#: of sklearn.neighbors._regression.KNeighborsRegressor:49
msgid "Power parameter for the Minkowski metric. When p = 1, this is equivalent to using manhattan_distance (l1), and euclidean_distance (l2) for p = 2. For arbitrary p, minkowski_distance (l_p) is used."
msgstr "Parámetro de potencia para la métrica de Minkowski. Cuando p = 1, esto equivale a utilizar manhattan_distance (l1), y euclidean_distance (l2) para p = 2. Para p arbitrario, se utiliza minkowski_distance (l_p)."

#: of sklearn.neighbors._regression.KNeighborsRegressor:60
msgid "**metric**"
msgstr "**metric**"

#: of
msgid "str or callable, default='minkowski'"
msgstr "cadena de carectares o invocable, default='minkowski'"

#: of sklearn.neighbors._regression.KNeighborsRegressor:54
msgid "the distance metric to use for the tree.  The default metric is minkowski, and with p=2 is equivalent to the standard Euclidean metric. See the documentation of :class:`DistanceMetric` for a list of available metrics. If metric is \"precomputed\", X is assumed to be a distance matrix and must be square during fit. X may be a :term:`sparse graph`, in which case only \"nonzero\" elements may be considered neighbors."
msgstr "la métrica de distancia a utilizar para el árbol. La métrica predeterminada es minkowski, y con p=2 es equivalente a la métrica Euclideana estándar. Ver la documentación de :class:`DistanceMetric` para una lista de métricas disponibles. Si la métrica es \"precomputed\", se asume que X es una matriz de distancia y debe ser cuadrada durante el ajuste. X puede ser un :term:`sparse graph`, en cuyo caso sólo elementos \"nonzero\" pueden ser considerados vecinos."

#: of sklearn.neighbors._regression.KNeighborsRegressor:63
msgid "**metric_params**"
msgstr "**metric_params**"

#: of
msgid "dict, default=None"
msgstr "dict, default=None"

#: of sklearn.neighbors._regression.KNeighborsRegressor:63
msgid "Additional keyword arguments for the metric function."
msgstr "Argumentos adicionales de palabras clave para la función métrica."

#: of sklearn.neighbors._regression.KNeighborsRegressor:73
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int, default=None"
msgstr "entero, default=None"

#: of sklearn.neighbors._regression.KNeighborsRegressor:66
msgid "The number of parallel jobs to run for neighbors search. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details. Doesn't affect :meth:`fit` method."
msgstr "El número de trabajos paralelos a ejecutar para la búsqueda de vecinos. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa usar todos los procesadores. Ver :term:`Glosario <n_jobs>` para más detalles. No afecta al método :meth:`fit`."

#: of sklearn.neighbors._regression.KNeighborsRegressor
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.neighbors._regression.KNeighborsRegressor:80
msgid "**effective_metric_**"
msgstr "**effective_metric_**"

#: of
msgid "str or callable"
msgstr "cadena o invocable"

#: of sklearn.neighbors._regression.KNeighborsRegressor:78
msgid "The distance metric to use. It will be same as the `metric` parameter or a synonym of it, e.g. 'euclidean' if the `metric` parameter set to 'minkowski' and `p` parameter set to 2."
msgstr "La métrica de distancia a utilizar. Será igual que el parámetro `metric` o un sinónimo de él, por ejemplo, 'euclidean' si el parámetro `metric` se establece en 'minkowski' y el parámetro `p` se establece en 2."

#: of sklearn.neighbors._regression.KNeighborsRegressor:86
msgid "**effective_metric_params_**"
msgstr "**effective_metric_params_**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.neighbors._regression.KNeighborsRegressor:83
msgid "Additional keyword arguments for the metric function. For most metrics will be same with `metric_params` parameter, but may also contain the `p` parameter value if the `effective_metric_` attribute is set to 'minkowski'."
msgstr "Argumentos adicionales para la función métrica. Para la mayoría de las métricas será lo mismo que el parámetro `metric_params`, pero también puede contener el valor del parámetro `p` si el atributo `effective_metric_` se establece como `minkowski`."

#: of sklearn.neighbors._regression.KNeighborsRegressor:92
msgid "**n_samples_fit_**"
msgstr "**n_samples_fit_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.neighbors._regression.KNeighborsRegressor:89
msgid "Number of samples in the fitted data."
msgstr "Número de muestras en los datos ajustados."

#: of sklearn.neighbors._regression.KNeighborsRegressor:97
msgid ":obj:`NearestNeighbors`"
msgstr ":obj:`NearestNeighbors`"

#: of sklearn.neighbors._regression.KNeighborsRegressor:99
msgid ":obj:`RadiusNeighborsRegressor`"
msgstr ":obj:`RadiusNeighborsRegressor`"

#: of sklearn.neighbors._regression.KNeighborsRegressor:101
msgid ":obj:`KNeighborsClassifier`"
msgstr ":obj:`KNeighborsClassifier`"

#: of sklearn.neighbors._regression.KNeighborsRegressor:103
msgid ":obj:`RadiusNeighborsClassifier`"
msgstr ":obj:`RadiusNeighborsClassifier`"

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.neighbors._regression.KNeighborsRegressor:107
msgid "Notes"
msgstr "Notas"

#: of sklearn.neighbors._regression.KNeighborsRegressor:108
msgid "See :ref:`Nearest Neighbors <neighbors>` in the online documentation for a discussion of the choice of ``algorithm`` and ``leaf_size``."
msgstr "Ver :ref:`Nearest Neighbors <neighbors>` en la documentación online para una discusión sobre la elección del ``algorithm`` y el ``leaf_size``."

#: of sklearn.neighbors._regression.KNeighborsRegressor:113
msgid "Regarding the Nearest Neighbors algorithms, if it is found that two neighbors, neighbor `k+1` and `k`, have identical distances but different labels, the results will depend on the ordering of the training data."
msgstr "En cuanto a los algoritmos de Vecinos más cercanos, si se encuentra que dos vecinos, vecino `k+1` y `k`, tienen distancias idénticas pero etiquetas diferentes, los resultados dependerán del orden de los datos de entrenamiento."

#: of sklearn.neighbors._regression.KNeighborsRegressor:118
msgid "https://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm"
msgstr "https://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:39
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:46
#: sklearn.neighbors._regression.KNeighborsRegressor:122
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.neighbors._regression.KNeighborsRegressor:133
msgid "Methods"
msgstr "Métodos"

#: of sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid ":obj:`fit <sklearn.neighbors.KNeighborsRegressor.fit>`\\"
msgstr ":obj:`fit <sklearn.neighbors.KNeighborsRegressor.fit>`\\"

#: of sklearn.neighbors._regression.KNeighborsRegressor.fit:2
#: sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid "Fit the k-nearest neighbors regressor from the training dataset."
msgstr "Ajustar el regresor de k- vecinos más cercanos del conjunto de datos de entrenamiento."

#: of sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid ":obj:`get_params <sklearn.neighbors.KNeighborsRegressor.get_params>`\\"
msgstr ":obj:`get_params <sklearn.neighbors.KNeighborsRegressor.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid ":obj:`kneighbors <sklearn.neighbors.KNeighborsRegressor.kneighbors>`\\"
msgstr ":obj:`kneighbors <sklearn.neighbors.KNeighborsRegressor.kneighbors>`\\"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:2
#: sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid "Finds the K-neighbors of a point."
msgstr "Encuentra a los K-vecinos de un punto."

#: of sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid ":obj:`kneighbors_graph <sklearn.neighbors.KNeighborsRegressor.kneighbors_graph>`\\"
msgstr ":obj:`kneighbors_graph <sklearn.neighbors.KNeighborsRegressor.kneighbors_graph>`\\"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:2
#: sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid "Computes the (weighted) graph of k-Neighbors for points in X"
msgstr "Calcula el grafo (ponderado) de k-vecinos para los puntos de X"

#: of sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid ":obj:`predict <sklearn.neighbors.KNeighborsRegressor.predict>`\\"
msgstr ":obj:`predict <sklearn.neighbors.KNeighborsRegressor.predict>`\\"

#: of sklearn.neighbors._regression.KNeighborsRegressor.predict:2
#: sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid "Predict the target for the provided data"
msgstr "Predice el objetivo para los datos proporcionados"

#: of sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid ":obj:`score <sklearn.neighbors.KNeighborsRegressor.score>`\\"
msgstr ":obj:`score <sklearn.neighbors.KNeighborsRegressor.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid ":obj:`set_params <sklearn.neighbors.KNeighborsRegressor.set_params>`\\"
msgstr ":obj:`set_params <sklearn.neighbors.KNeighborsRegressor.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.neighbors._regression.KNeighborsRegressor:143:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors:11
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:13
#: sklearn.neighbors._regression.KNeighborsRegressor.fit:8
#: sklearn.neighbors._regression.KNeighborsRegressor.predict:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features) or                 (n_samples, n_samples) if metric='precomputed'"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features) o                 (n_samples, n_samples) if metric='precomputed'"

#: of sklearn.neighbors._regression.KNeighborsRegressor.fit:8
msgid "Training data."
msgstr "Datos del entrenamiento."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.neighbors._regression.KNeighborsRegressor.fit:11
#: sklearn.neighbors._regression.KNeighborsRegressor.predict:24
msgid "**y**"
msgstr "**y**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples,) or                 (n_samples, n_outputs)"
msgstr "{array-like, sparse matrix} de forma (n_samples,) o                 (n_samples, n_outputs)"

#: of sklearn.neighbors._regression.KNeighborsRegressor.fit:11
#: sklearn.neighbors._regression.KNeighborsRegressor.predict:13
msgid "Target values."
msgstr "Valores objetivo."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors
#: sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph
#: sklearn.neighbors._regression.KNeighborsRegressor.fit
#: sklearn.neighbors._regression.KNeighborsRegressor.predict
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.neighbors._regression.KNeighborsRegressor.fit:27
msgid "**self**"
msgstr "**self**"

#: of
msgid "KNeighborsRegressor"
msgstr "KNeighborsRegressor"

#: of sklearn.neighbors._regression.KNeighborsRegressor.fit:16
msgid "The fitted k-nearest neighbors regressor."
msgstr "El regresor de los k vecinos más cercanos ajustado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:4
msgid "Returns indices of and distances to the neighbors of each point."
msgstr "Devuelve los índices y las distancias a los vecinos de cada punto."

#: of
msgid "array-like, shape (n_queries, n_features),             or (n_queries, n_indexed) if metric == 'precomputed',                 default=None"
msgstr "array-like, forma (n_queries, n_features),             o (n_queries, n_indexed) si metric == 'precomputed',                 default=None"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:9
msgid "The query point or points. If not provided, neighbors of each indexed point are returned. In this case, the query point is not considered its own neighbor."
msgstr "El punto o puntos de la consulta. Si no se proporciona, se devuelven los vecinos de cada punto indexado. En este caso, el punto de consulta no se considera su propio vecino."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:14
msgid "Number of neighbors required for each sample. The default is the value passed to the constructor."
msgstr "Número de vecinos necesarios para cada muestra. El valor predeterminado es el que se pasa al constructor."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:18
msgid "**return_distance**"
msgstr "**return_distance**"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:18
msgid "Whether or not to return the distances."
msgstr "Si se devuelven o no las distancias."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:24
msgid "**neigh_dist**"
msgstr "**neigh_dist**"

#: of
msgid "ndarray of shape (n_queries, n_neighbors)"
msgstr "ndarray de forma (n_queries, n_neighbors)"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:23
msgid "Array representing the lengths to points, only present if return_distance=True"
msgstr "Un arreglo que representa las longitudes de los puntos, sólo presente si return_distance=True"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:36
msgid "**neigh_ind**"
msgstr "**neigh_ind**"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:27
msgid "Indices of the nearest points in the population matrix."
msgstr "Indices de los puntos más cercanos en la matriz de la población."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:40
msgid "In the following example, we construct a NearestNeighbors class from an array representing our data set and ask who's the closest point to [1,1,1]"
msgstr "En el siguiente ejemplo, construimos una clase NearestNeighbors a partir de un arreglo que representa nuestro conjunto de datos y preguntamos cuál es el punto más cercano a [1,1,1]"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors:52
msgid "As you can see, it returns [[0.5]], and [[2]], which means that the element is at distance 0.5 and is the third element of samples (indexes start at 0). You can also query for multiple points:"
msgstr "Como puedes ver, devuelve [[0.5]], y [[2]], lo que significa que el elemento está a la distancia 0.5 y es el tercer elemento de las muestras (los índices empiezan en 0). También puede consultar varios puntos:"

#: of
msgid "array-like of shape (n_queries, n_features),                 or (n_queries, n_indexed) if metric == 'precomputed',                 default=None"
msgstr "array-like de forma (n_queries, n_features),                 o (n_queries, n_indexed) si metric == 'precomputed',                 default=None"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:8
msgid "The query point or points. If not provided, neighbors of each indexed point are returned. In this case, the query point is not considered its own neighbor. For ``metric='precomputed'`` the shape should be (n_queries, n_indexed). Otherwise the shape should be (n_queries, n_features)."
msgstr "El punto o puntos de la consulta. Si no se proporciona, se devuelven los vecinos de cada punto indexado. En este caso, el punto de consulta no se considera su propio vecino. Para ``metric='precomputed'`` la forma debe ser (n_queries, n_indexed). En caso contrario, la forma debe ser (n_queries, n_features)."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:16
msgid "Number of neighbors for each sample. The default is the value passed to the constructor."
msgstr "Número de vecinos para cada muestra. El valor predeterminado es el que se pasa al constructor."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:22
msgid "**mode**"
msgstr "**mode**"

#: of
msgid "{'connectivity', 'distance'}, default='connectivity'"
msgstr "{'connectivity', 'distance'}, default='connectivity'"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:20
msgid "Type of returned matrix: 'connectivity' will return the connectivity matrix with ones and zeros, in 'distance' the edges are Euclidean distance between points."
msgstr "Tipo de matriz devuelta: 'connectivity' devolverá la matriz de conectividad con unos y ceros, en 'distance' las aristas son la distancia euclidiana entre puntos."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:35
msgid "**A**"
msgstr "**A**"

#: of
msgid "sparse-matrix of shape (n_queries, n_samples_fit)"
msgstr "matriz dispersa de forma (n_queries, n_samples_fit)"

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:27
msgid "`n_samples_fit` is the number of samples in the fitted data `A[i, j]` is assigned the weight of edge that connects `i` to `j`. The matrix is of CSR format."
msgstr "`n_samples_fit` es el número de muestras en los datos ajustados `A[i, j]` se asigna el peso de la arista que conecta `i` con `j`. La matriz tiene el formato CSR."

#: of sklearn.neighbors._base.KNeighborsMixin.kneighbors_graph:40
msgid ":obj:`NearestNeighbors.radius_neighbors_graph`"
msgstr ":obj:`NearestNeighbors.radius_neighbors_graph`"

#: of
msgid "array-like of shape (n_queries, n_features),                 or (n_queries, n_indexed) if metric == 'precomputed'"
msgstr "array-like de forma(n_queries, n_features),                 o (n_queries, n_indexed) si metric == 'precomputed'"

#: of sklearn.neighbors._regression.KNeighborsRegressor.predict:8
msgid "Test samples."
msgstr "Muestras de prueba."

#: of
msgid "ndarray of shape (n_queries,) or (n_queries, n_outputs), dtype=int"
msgstr "ndarray de forma (n_queries,) o (n_queries, n_outputs), dtype=int"

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma de cuadrados de los residuos ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1.0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0.0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz núcleo precalculada o una lista de objetos genéricos en su lugar con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para `X`."

#: of sklearn.base.RegressorMixin.score:26
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al invocar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la consistencia con el valor predeterminado de :func:`~sklearn.metrics.r2_score`. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: ../modules/generated/sklearn.neighbors.KNeighborsRegressor.examples:4
msgid "Examples using ``sklearn.neighbors.KNeighborsRegressor``"
msgstr "Ejemplos usando ``sklearn.neighbors.KNeighborsRegressor``"

#: ../modules/generated/sklearn.neighbors.KNeighborsRegressor.examples:15
#: ../modules/generated/sklearn.neighbors.KNeighborsRegressor.examples:23
msgid ":ref:`sphx_glr_auto_examples_impute_plot_iterative_imputer_variants_comparison.py`"
msgstr ":ref:`sphx_glr_auto_examples_impute_plot_iterative_imputer_variants_comparison.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_regression.py`"
#~ msgstr ""

