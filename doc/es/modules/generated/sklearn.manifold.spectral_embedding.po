msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-01 15:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.manifold.spectral_embedding.po\n"
"X-Crowdin-File-ID: 5156\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.manifold.spectral_embedding.rst:2
msgid ":mod:`sklearn.manifold`.spectral_embedding"
msgstr ":mod:`sklearn.manifold`.spectral_embedding"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:2
msgid "Project the sample on the first eigenvectors of the graph Laplacian."
msgstr "Proyecta la muestra sobre los primeros autovectores del laplaciano del grafo."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:4
msgid "The adjacency matrix is used to compute a normalized graph Laplacian whose spectrum (especially the eigenvectors associated to the smallest eigenvalues) has an interpretation in terms of minimal number of cuts necessary to split the graph into comparably sized components."
msgstr "La matriz de adyacencia se utiliza para calcular un grafo laplaciano normalizado cuyo espectro (especialmente los autovectores asociados a los valores propios más pequeños) tiene una interpretación en términos del número mínimo de cortes necesarios para dividir el grafo en componentes de tamaño comparable."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:10
msgid "This embedding can also 'work' even if the ``adjacency`` variable is not strictly the adjacency matrix of a graph but more generally an affinity or similarity matrix between samples (for instance the heat kernel of a euclidean distance matrix or a k-NN matrix)."
msgstr "Este embedding también puede 'funcionar' incluso si la variable de ``adjacency`` no es estrictamente la matriz de adyacencia de un grafo, sino más generalmente una matriz de afinidad o similitud entre muestras (por ejemplo, el núcleo de calor de una matriz de distancia euclidiana o una matriz k-NN)."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:15
msgid "However care must taken to always make the affinity matrix symmetric so that the eigenvector decomposition works as expected."
msgstr "Sin embargo, hay que tener cuidado de que la matriz de afinidad sea siempre simétrica para que la descomposición de los autovectores funcione como se espera."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:18
msgid "Note : Laplacian Eigenmaps is the actual algorithm implemented here."
msgstr "Nota: Laplacian Eigenmaps es el algoritmo real implementado aquí."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:20
msgid "Read more in the :ref:`User Guide <spectral_embedding>`."
msgstr "Más información en el :ref:`Manual de usuario <spectral_embedding>`."

#: of sklearn.manifold._spectral_embedding.spectral_embedding
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:25
msgid "**adjacency**"
msgstr "**adjacency**"

#: of
msgid "{array-like, sparse graph} of shape (n_samples, n_samples)"
msgstr "{array-like, sparse graph} of shape (n_samples, n_samples)"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:25
msgid "The adjacency matrix of the graph to embed."
msgstr "La matriz de adyacencia del grafo a integrar."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:28
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=8"
msgstr "int, default=8"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:28
msgid "The dimension of the projection subspace."
msgstr "La dimensión del subespacio de proyección."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:34
msgid "**eigen_solver**"
msgstr "**eigen_solver**"

#: of
msgid "{'arpack', 'lobpcg', 'amg'}, default=None"
msgstr "{'arpack', 'lobpcg', 'amg'}, default=None"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:31
msgid "The eigenvalue decomposition strategy to use. AMG requires pyamg to be installed. It can be faster on very large, sparse problems, but may also lead to instabilities. If None, then ``'arpack'`` is used."
msgstr "La estrategia de descomposición de autovalores a utilizar. AMG requiere la instalación de pyamg. Puede ser más rápido en problemas muy grandes y dispersos, pero también puede conducir a inestabilidades. Si es None, entonces se utiliza ``'arpack'``."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:40
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, RandomState instance or None, default=None"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:37
msgid "Determines the random number generator used for the initialization of the lobpcg eigenvectors decomposition when ``solver`` == 'amg'. Pass an int for reproducible results across multiple function calls. See :term: `Glossary <random_state>`."
msgstr "Determina el generador de números aleatorios utilizado para la inicialización de la descomposición de los autovectores lobpcg cuando ``solver`` == 'amg'. Pase un int para obtener resultados reproducibles a través de múltiples llamadas a la función. Ver :term: `Glossary <random_state>`."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:44
msgid "**eigen_tol**"
msgstr "**eigen_tol**"

#: of
msgid "float, default=0.0"
msgstr "float, default=0.0"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:43
msgid "Stopping criterion for eigendecomposition of the Laplacian matrix when using arpack eigen_solver."
msgstr "Criterio de parada para la eigendecomposición de la matriz laplaciana cuando se utiliza arpack eigen_solver."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:47
msgid "**norm_laplacian**"
msgstr "**norm_laplacian**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:47
msgid "If True, then compute normalized Laplacian."
msgstr "Si es True, entonces calcula el laplaciano normalizado."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:53
msgid "**drop_first**"
msgstr "**drop_first**"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:50
msgid "Whether to drop the first eigenvector. For spectral embedding, this should be True as the first eigenvector should be constant vector for connected graph, but for spectral clustering, this should be kept as False to retain the first eigenvector."
msgstr "Si se elimina el primer autovector. En el caso de la incrustación espectral, debe ser True, ya que el primer autovector debe ser un vector constante para el gráfico conectado, pero en el caso de la agrupación espectral, debe mantenerse como False para conservar el primer autovector."

#: of sklearn.manifold._spectral_embedding.spectral_embedding
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:65
msgid "**embedding**"
msgstr "**embedding**"

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr "ndarray of shape (n_samples, n_components)"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:58
msgid "The reduced samples."
msgstr "Las muestras reducidas."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:68
msgid "Notes"
msgstr "Notas"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:69
msgid "Spectral Embedding (Laplacian Eigenmaps) is most useful when the graph has one connected component. If there graph has many components, the first few eigenvectors will simply uncover the connected components of the graph."
msgstr "La incrustación espectral (mapas propios laplacianos) es más útil cuando el grafo tiene un componente conectado. Si el grafo tiene muchos componentes, los primeros autovectores simplemente descubrirán los componentes conectados del grafo."

#: of sklearn.manifold._spectral_embedding.spectral_embedding:74
msgid "References"
msgstr "Referencias"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:75
msgid "https://en.wikipedia.org/wiki/LOBPCG"
msgstr "https://en.wikipedia.org/wiki/LOBPCG"

#: of sklearn.manifold._spectral_embedding.spectral_embedding:77
#, python-format
msgid "Toward the Optimal Preconditioned Eigensolver: Locally Optimal Block Preconditioned Conjugate Gradient Method Andrew V. Knyazev https://doi.org/10.1137%2FS1064827500366124"
msgstr "Toward the Optimal Preconditioned Eigensolver: Locally Optimal Block Preconditioned Conjugate Gradient Method Andrew V. Knyazev https://doi.org/10.1137%2FS1064827500366124"

