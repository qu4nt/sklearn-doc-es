msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-28 16:12\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.feature_selection.SelectFromModel.po\n"
"X-Crowdin-File-ID: 5114\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.feature_selection.SelectFromModel.rst:2
msgid ":mod:`sklearn.feature_selection`.SelectFromModel"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:2
msgid "Meta-transformer for selecting features based on importance weights."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:6
msgid "Read more in the :ref:`User Guide <select_from_model>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_selection._base.SelectorMixin.get_support
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform
#: sklearn.feature_selection._base.SelectorMixin.transform
#: sklearn.feature_selection._from_model.SelectFromModel
#: sklearn.feature_selection._from_model.SelectFromModel.fit
#: sklearn.feature_selection._from_model.SelectFromModel.partial_fit
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.feature_selection._from_model.SelectFromModel:14
msgid "**estimator**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:11
msgid "The base estimator from which the transformer is built. This can be both a fitted (if ``prefit`` is set to True) or a non-fitted estimator. The estimator must have either a ``feature_importances_`` or ``coef_`` attribute after fitting."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:24
msgid "**threshold**"
msgstr ""

#: of
msgid "string or float, default=None"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:17
msgid "The threshold value to use for feature selection. Features whose importance is greater or equal are kept while the others are discarded. If \"median\" (resp. \"mean\"), then the ``threshold`` value is the median (resp. the mean) of the feature importances. A scaling factor (e.g., \"1.25*mean\") may also be used. If None and if the estimator has a parameter penalty set to l1, either explicitly or implicitly (e.g, Lasso), the threshold used is 1e-5. Otherwise, \"mean\" is used by default."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:32
msgid "**prefit**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr "booleano, default=False"

#: of sklearn.feature_selection._from_model.SelectFromModel:27
msgid "Whether a prefit model is expected to be passed into the constructor directly or not. If True, ``transform`` must be called directly and SelectFromModel cannot be used with ``cross_val_score``, ``GridSearchCV`` and similar utilities that clone the estimator. Otherwise train the model using ``fit`` and then ``transform`` to do feature selection."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:37
msgid "**norm_order**"
msgstr ""

#: of
msgid "non-zero int, inf, -inf, default=1"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:35
msgid "Order of the norm used to filter the vectors of coefficients below ``threshold`` in the case where the ``coef_`` attribute of the estimator is of dimension 2."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:43
msgid "**max_features**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:40
msgid "The maximum number of features to select. To only select based on ``max_features``, set ``threshold=-np.inf``."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:63
msgid "**importance_getter**"
msgstr ""

#: of
msgid "str or callable, default='auto'"
msgstr "str o callable, default='auto'"

#: of sklearn.feature_selection._from_model.SelectFromModel:46
msgid "If 'auto', uses the feature importance either through a ``coef_`` attribute or ``feature_importances_`` attribute of estimator."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:49
msgid "Also accepts a string that specifies an attribute name/path for extracting feature importance (implemented with `attrgetter`). For example, give `regressor_.coef_` in case of :class:`~sklearn.compose.TransformedTargetRegressor`  or `named_steps.clf.feature_importances_` in case of :class:`~sklearn.pipeline.Pipeline` with its last step named `clf`."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:56
msgid "If `callable`, overrides the default feature importance getter. The callable is passed with the fitted estimator and it should return importance for each feature."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel
msgid "Attributes"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:70
msgid "**estimator_**"
msgstr ""

#: of
msgid "an estimator"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:68
msgid "The base estimator from which the transformer is built. This is stored only when a non-fitted estimator is passed to the ``SelectFromModel``, i.e when prefit is False."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:76
msgid "**threshold_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:73
msgid "The threshold value used for feature selection."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:81
msgid ":obj:`RFE`"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:82
msgid "Recursive feature elimination based on importance weights."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:83
msgid ":obj:`RFECV`"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:84
msgid "Recursive feature elimination with built-in cross-validated selection of the best number of features."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:85
msgid ":obj:`SequentialFeatureSelector`"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:86
msgid "Sequential cross-validation based feature selection. Does not rely on importance weights."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:90
msgid "Notes"
msgstr "Notas"

#: of sklearn.feature_selection._from_model.SelectFromModel:91
msgid "Allows NaN/Inf in the input if the underlying estimator does as well."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:95
msgid "Examples"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:117
msgid "Methods"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid ":obj:`fit <sklearn.feature_selection.SelectFromModel.fit>`\\"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel.fit:2
#: sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid "Fit the SelectFromModel meta-transformer."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.feature_selection.SelectFromModel.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid ":obj:`get_params <sklearn.feature_selection.SelectFromModel.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtener los parámetros de este estimador."

#: of sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid ":obj:`get_support <sklearn.feature_selection.SelectFromModel.get_support>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:2
#: sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid "Get a mask, or integer index, of the features selected"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.feature_selection.SelectFromModel.inverse_transform>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:2
#: sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid "Reverse the transformation operation"
msgstr "Invertir la operación de transformación"

#: of sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.feature_selection.SelectFromModel.partial_fit>`\\"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel.partial_fit:2
#: sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid "Fit the SelectFromModel meta-transformer only once."
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid ":obj:`set_params <sklearn.feature_selection.SelectFromModel.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establecer los parámetros de este estimador."

#: of sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid ":obj:`transform <sklearn.feature_selection.SelectFromModel.transform>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.transform:2
#: sklearn.feature_selection._from_model.SelectFromModel:128:<autosummary>:1
msgid "Reduce X to the selected features."
msgstr "Reducir X a las características seleccionadas."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform:8
#: sklearn.feature_selection._base.SelectorMixin.transform:8
#: sklearn.feature_selection._from_model.SelectFromModel.fit:8
#: sklearn.feature_selection._from_model.SelectFromModel.partial_fit:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.feature_selection._from_model.SelectFromModel.fit:8
#: sklearn.feature_selection._from_model.SelectFromModel.partial_fit:8
msgid "The training input samples."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.feature_selection._from_model.SelectFromModel.fit:12
#: sklearn.feature_selection._from_model.SelectFromModel.partial_fit:12
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "tipo arreglo de forma (n_samples,), default=None"

#: of sklearn.feature_selection._from_model.SelectFromModel.fit:11
#: sklearn.feature_selection._from_model.SelectFromModel.partial_fit:11
msgid "The target values (integers that correspond to classes in classification, real numbers in regression)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
#: sklearn.feature_selection._from_model.SelectFromModel.fit:15
#: sklearn.feature_selection._from_model.SelectFromModel.partial_fit:15
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "Other estimator specific parameters"
msgstr "Otros parámetros específicos del estimador"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_selection._base.SelectorMixin.get_support
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform
#: sklearn.feature_selection._base.SelectorMixin.transform
#: sklearn.feature_selection._from_model.SelectFromModel.fit
#: sklearn.feature_selection._from_model.SelectFromModel.partial_fit
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.feature_selection._from_model.SelectFromModel.fit:31
#: sklearn.feature_selection._from_model.SelectFromModel.partial_fit:31
msgid "**self**"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "tipo arreglo de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "arreglo ndarray de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:9
msgid "**indices**"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:8
msgid "If True, the return value will be an array of integers, rather than a boolean mask."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:30
msgid "**support**"
msgstr ""

#: of
msgid "array"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:14
msgid "An index that selects the retained features from a feature vector. If `indices` is False, this is a boolean array of shape [# input features], in which an element is True iff its corresponding feature is selected for retention. If `indices` is True, this is an integer array of shape [# output features] whose values are indices into the input feature vector."
msgstr ""

#: of
msgid "array of shape [n_samples, n_selected_features]"
msgstr "arreglo de forma [n_samples, n_selected_features]"

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:8
#: sklearn.feature_selection._base.SelectorMixin.transform:8
msgid "The input samples."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:25
#: sklearn.feature_selection._base.SelectorMixin.transform:24
msgid "**X_r**"
msgstr ""

#: of
msgid "array of shape [n_samples, n_original_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:13
msgid "`X` with columns of zeros inserted where features would have been removed by :meth:`transform`."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of
msgid "array of shape [n_samples, n_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.transform:13
msgid "The input samples with only the selected features."
msgstr ""

#: ../modules/generated/sklearn.feature_selection.SelectFromModel.examples:4
msgid "Examples using ``sklearn.feature_selection.SelectFromModel``"
msgstr ""

#: ../modules/generated/sklearn.feature_selection.SelectFromModel.examples:15
#: ../modules/generated/sklearn.feature_selection.SelectFromModel.examples:23
msgid ":ref:`sphx_glr_auto_examples_feature_selection_plot_select_from_model_diabetes.py`"
msgstr ""

#: ../modules/generated/sklearn.feature_selection.SelectFromModel.examples:34
#: ../modules/generated/sklearn.feature_selection.SelectFromModel.examples:42
msgid ":ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py`"
msgstr ""

