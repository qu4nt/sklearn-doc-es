msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-14 23:59\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.kernel_approximation.AdditiveChi2Sampler.po\n"
"X-Crowdin-File-ID: 3246\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.kernel_approximation.AdditiveChi2Sampler.rst:2
msgid ":mod:`sklearn.kernel_approximation`.AdditiveChi2Sampler"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:2
msgid "Approximate feature map for additive chi2 kernel."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:4
msgid "Uses sampling the fourier transform of the kernel characteristic at regular intervals."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:7
msgid "Since the kernel that is to be approximated is additive, the components of the input vectors can be treated separately.  Each entry in the original space is transformed into 2*sample_steps+1 features, where sample_steps is a parameter of the method. Typical values of sample_steps include 1, 2 and 3."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:13
msgid "Optimal choices for the sampling interval for certain data ranges can be computed (see the reference). The default values should be reasonable."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:16
msgid "Read more in the :ref:`User Guide <additive_chi_kernel_approx>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.kernel_approximation.AdditiveChi2Sampler
#: sklearn.kernel_approximation.AdditiveChi2Sampler.fit
#: sklearn.kernel_approximation.AdditiveChi2Sampler.transform
msgid "Parameters"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:21
msgid "**sample_steps**"
msgstr ""

#: of
msgid "int, default=2"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:21
msgid "Gives the number of (complex) sampling points."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:27
msgid "**sample_interval**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:24
msgid "Sampling interval. Must be specified when sample_steps not in {1,2,3}."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler
msgid "Attributes"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:36
msgid "**sample_interval_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:32
msgid "Stored sampling interval. Specified as a parameter if sample_steps not in {1,2,3}."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:41
msgid ":obj:`SkewedChi2Sampler`"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:42
msgid "A Fourier-approximation to a non-additive variant of the chi squared kernel."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:43
msgid ":obj:`sklearn.metrics.pairwise.chi2_kernel`"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:44
msgid "The exact chi squared kernel."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:45
msgid ":obj:`sklearn.metrics.pairwise.additive_chi2_kernel`"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:46
msgid "The exact additive chi squared kernel."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:50
msgid "Notes"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:51
msgid "This estimator approximates a slightly different version of the additive chi squared kernel then ``metric.additive_chi2`` computes."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:55
msgid "References"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:56
msgid "See `\"Efficient additive kernels via explicit feature maps\" <http://www.robots.ox.ac.uk/~vedaldi/assets/pubs/vedaldi11efficient.pdf>`_ A. Vedaldi and A. Zisserman, Pattern Analysis and Machine Intelligence, 2011"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:66
msgid "Examples"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:80
msgid "Methods"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid ":obj:`fit <sklearn.kernel_approximation.AdditiveChi2Sampler.fit>`\\"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler.fit:2
#: sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid "Set the parameters"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.kernel_approximation.AdditiveChi2Sampler.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid ":obj:`get_params <sklearn.kernel_approximation.AdditiveChi2Sampler.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid ":obj:`set_params <sklearn.kernel_approximation.AdditiveChi2Sampler.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid ":obj:`transform <sklearn.kernel_approximation.AdditiveChi2Sampler.transform>`\\"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler.transform:2
#: sklearn.kernel_approximation.AdditiveChi2Sampler:88:<autosummary>:1
msgid "Apply approximate feature map to X."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.kernel_approximation.AdditiveChi2Sampler.fit:9
#: sklearn.kernel_approximation.AdditiveChi2Sampler.transform:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler.fit:8
msgid "Training data, where n_samples in the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.kernel_approximation.AdditiveChi2Sampler.fit
#: sklearn.kernel_approximation.AdditiveChi2Sampler.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.kernel_approximation.AdditiveChi2Sampler.fit:25
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler.fit:14
msgid "Returns the transformer."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.kernel_approximation.AdditiveChi2Sampler.transform:25
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of
msgid "{ndarray, sparse matrix},                shape = (n_samples, n_features * (2*sample_steps + 1))"
msgstr ""

#: of sklearn.kernel_approximation.AdditiveChi2Sampler.transform:13
msgid "Whether the return value is an array of sparse matrix depends on the type of the input X."
msgstr ""

