msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-15 23:44\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.Binarizer.po\n"
"X-Crowdin-File-ID: 5652\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.Binarizer.rst:2
msgid ":mod:`sklearn.preprocessing`.Binarizer"
msgstr ":mod:`sklearn.preprocessing`.Binarizer"

#: of sklearn.preprocessing._data.Binarizer:2
msgid "Binarize data (set feature values to 0 or 1) according to a threshold."
msgstr "Binariza datos (establece los valores de las características en 0 o 1) según un umbral."

#: of sklearn.preprocessing._data.Binarizer:4
msgid "Values greater than the threshold map to 1, while values less than or equal to the threshold map to 0. With the default threshold of 0, only positive values map to 1."
msgstr "Los valores mayores al umbral se mapean a 1, mientras que los valores menores o iguales al umbral se mapean a 0. Con el umbral por defecto de 0, sólo los valores positivos se mapean a 1."

#: of sklearn.preprocessing._data.Binarizer:8
msgid "Binarization is a common operation on text count data where the analyst can decide to only consider the presence or absence of a feature rather than a quantified number of occurrences for instance."
msgstr "La binarización es una operación común en los datos de recuento de texto en la que el analista puede decidir considerar sólo la presencia o ausencia de una característica en lugar de un número cuantificado de ocurrencias por instancia."

#: of sklearn.preprocessing._data.Binarizer:12
msgid "It can also be used as a pre-processing step for estimators that consider boolean random variables (e.g. modelled using the Bernoulli distribution in a Bayesian setting)."
msgstr "También puede utilizarse como etapa de preprocesamiento para los estimadores que consideran variables aleatorias booleanas (por ejemplo, modeladas mediante la distribución Bernoulli en un entorno bayesiano)."

#: of sklearn.preprocessing._data.Binarizer:16
msgid "Read more in the :ref:`User Guide <preprocessing_binarization>`."
msgstr "Leer más en el :ref:`Manual de Usuario <preprocessing_binarization>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.Binarizer
#: sklearn.preprocessing._data.Binarizer.fit
#: sklearn.preprocessing._data.Binarizer.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._data.Binarizer:22
msgid "**threshold**"
msgstr "**threshold**"

#: of
msgid "float, default=0.0"
msgstr "float, default=0.0"

#: of sklearn.preprocessing._data.Binarizer:21
msgid "Feature values below or equal to this are replaced by 0, above it by 1. Threshold may not be less than 0 for operations on sparse matrices."
msgstr "Los valores de características inferiores o iguales a éste se sustituyen por 0, y los superiores por 1. El umbral no puede ser menor que 0 para las operaciones con matrices dispersas."

#: of sklearn.preprocessing._data.Binarizer:33
#: sklearn.preprocessing._data.Binarizer.transform:13
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.preprocessing._data.Binarizer:25
msgid "set to False to perform inplace binarization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSR matrix)."
msgstr "se establece en False para realizar la binarización in situ y evitar una copia (si la entrada ya es un arreglo numpy o una matriz scipy.sparse CSR)."

#: of sklearn.preprocessing._data.Binarizer:38
msgid ":obj:`binarize`"
msgstr ":obj:`binarize`"

#: of sklearn.preprocessing._data.Binarizer:39
msgid "Equivalent function without the estimator API."
msgstr "Función equivalente sin la API del estimador."

#: of sklearn.preprocessing._data.Binarizer:43
msgid "Notes"
msgstr "Notas"

#: of sklearn.preprocessing._data.Binarizer:44
msgid "If the input is a sparse matrix, only the non-zero values are subject to update by the Binarizer class."
msgstr "Si la entrada es una matriz dispersa, sólo los valores distintos de cero están sujetos a actualización por la clase Binarizer."

#: of sklearn.preprocessing._data.Binarizer:47
msgid "This estimator is stateless (besides constructor parameters), the fit method does nothing but is useful when used in a pipeline."
msgstr "Este estimador es stateless (además de los parámetros del constructor), el método fit no hace nada, pero es útil cuando se usa en un pipeline."

#: of sklearn.preprocessing._data.Binarizer:52
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.preprocessing._data.Binarizer:66
msgid "Methods"
msgstr "Métodos"

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.Binarizer.fit>`\\"
msgstr ":obj:`fit <sklearn.preprocessing.Binarizer.fit>`\\"

#: of sklearn.preprocessing._data.Binarizer.fit:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Do nothing and return the estimator unchanged."
msgstr "No hace nada y devuelve el estimador sin cambios."

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.Binarizer.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.preprocessing.Binarizer.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta a los datos y luego los transforma."

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.Binarizer.get_params>`\\"
msgstr ":obj:`get_params <sklearn.preprocessing.Binarizer.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.Binarizer.set_params>`\\"
msgstr ":obj:`set_params <sklearn.preprocessing.Binarizer.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.Binarizer.transform>`\\"
msgstr ":obj:`transform <sklearn.preprocessing.Binarizer.transform>`\\"

#: of sklearn.preprocessing._data.Binarizer.transform:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Binarize each element of X."
msgstr "Binariza cada elemento de X."

#: of sklearn.preprocessing._data.Binarizer.fit:4
msgid "This method is just there to implement the usual API and hence work in pipelines."
msgstr "Este método sólo está ahí para implementar la API habitual y, por lo tanto, funcionar en pipelines."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.preprocessing._data.Binarizer.fit:10
#: sklearn.preprocessing._data.Binarizer.transform:10
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.Binarizer.fit:10
msgid "The data."
msgstr "Los datos."

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.preprocessing._data.Binarizer.fit:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "None"
msgstr "None"

#: of sklearn.preprocessing._data.Binarizer.fit:13
msgid "Ignored."
msgstr "Ignorado."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.Binarizer.fit
#: sklearn.preprocessing._data.Binarizer.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.preprocessing._data.Binarizer.fit:29
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.preprocessing._data.Binarizer.fit:18
msgid "Fitted transformer."
msgstr "Transformador ajustado."

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` y `y` con parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "arreglo ndarray de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
#: sklearn.preprocessing._data.Binarizer.transform:18
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.preprocessing._data.Binarizer.transform:8
msgid "The data to binarize, element by element. scipy.sparse matrices should be in CSR format to avoid an un-necessary copy."
msgstr "Los datos a binarizar, elemento por elemento. Las matrices scipy.sparse deben estar en formato CSR para evitar una copia innecesaria."

#: of
msgid "bool"
msgstr "bool"

#: of sklearn.preprocessing._data.Binarizer.transform:13
msgid "Copy the input X or not."
msgstr "Copia la entrada X o no."

#: of sklearn.preprocessing._data.Binarizer.transform:29
msgid "**X_tr**"
msgstr "**X_tr**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_features)"

