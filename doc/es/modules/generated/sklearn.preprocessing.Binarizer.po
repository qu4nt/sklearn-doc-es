msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 00:04\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.Binarizer.po\n"
"X-Crowdin-File-ID: 3676\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.Binarizer.rst:2
msgid ":mod:`sklearn.preprocessing`.Binarizer"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:2
msgid "Binarize data (set feature values to 0 or 1) according to a threshold."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:4
msgid "Values greater than the threshold map to 1, while values less than or equal to the threshold map to 0. With the default threshold of 0, only positive values map to 1."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:8
msgid "Binarization is a common operation on text count data where the analyst can decide to only consider the presence or absence of a feature rather than a quantified number of occurrences for instance."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:12
msgid "It can also be used as a pre-processing step for estimators that consider boolean random variables (e.g. modelled using the Bernoulli distribution in a Bayesian setting)."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:16
msgid "Read more in the :ref:`User Guide <preprocessing_binarization>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.Binarizer
#: sklearn.preprocessing._data.Binarizer.fit
#: sklearn.preprocessing._data.Binarizer.transform
msgid "Parameters"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:22
msgid "**threshold**"
msgstr ""

#: of
msgid "float, default=0.0"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:21
msgid "Feature values below or equal to this are replaced by 0, above it by 1. Threshold may not be less than 0 for operations on sparse matrices."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:33
#: sklearn.preprocessing._data.Binarizer.transform:13
msgid "**copy**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:25
msgid "set to False to perform inplace binarization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSR matrix)."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:38
msgid ":obj:`binarize`"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:39
msgid "Equivalent function without the estimator API."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:43
msgid "Notes"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:44
msgid "If the input is a sparse matrix, only the non-zero values are subject to update by the Binarizer class."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:47
msgid "This estimator is stateless (besides constructor parameters), the fit method does nothing but is useful when used in a pipeline."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:52
msgid "Examples"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:66
msgid "Methods"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.Binarizer.fit>`\\"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer.fit:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Do nothing and return the estimator unchanged."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.Binarizer.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.Binarizer.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.Binarizer.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.Binarizer.transform>`\\"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer.transform:2
#: sklearn.preprocessing._data.Binarizer:74:<autosummary>:1
msgid "Binarize each element of X."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer.fit:4
msgid "This method is just there to implement the usual API and hence work in pipelines."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.preprocessing._data.Binarizer.fit:10
#: sklearn.preprocessing._data.Binarizer.transform:10
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer.fit:10
msgid "The data."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.preprocessing._data.Binarizer.fit:13
msgid "**y**"
msgstr ""

#: of
msgid "None"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer.fit:13
msgid "Ignored."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.preprocessing._data.Binarizer.fit
#: sklearn.preprocessing._data.Binarizer.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.preprocessing._data.Binarizer.fit:29
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer.fit:18
msgid "Fitted transformer."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
#: sklearn.preprocessing._data.Binarizer.transform:18
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer.transform:8
msgid "The data to binarize, element by element. scipy.sparse matrices should be in CSR format to avoid an un-necessary copy."
msgstr ""

#: of
msgid "bool"
msgstr ""

#: of sklearn.preprocessing._data.Binarizer.transform:13
msgid "Copy the input X or not."
msgstr ""

#: of sklearn.preprocessing._data.Binarizer.transform:29
msgid "**X_tr**"
msgstr ""

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

