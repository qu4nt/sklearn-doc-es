msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-06 12:33\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.cluster.SpectralCoclustering.po\n"
"X-Crowdin-File-ID: 5778\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.cluster.SpectralCoclustering.rst:2
msgid ":mod:`sklearn.cluster`.SpectralCoclustering"
msgstr ":mod:`sklearn.cluster`.SpectralCoclustering"

#: of sklearn.cluster._bicluster.SpectralCoclustering:2
msgid "Spectral Co-Clustering algorithm (Dhillon, 2001)."
msgstr "Algoritmo de Co-Clustering espectral (Dhillon, 2001)."

#: of sklearn.cluster._bicluster.SpectralCoclustering:4
msgid "Clusters rows and columns of an array `X` to solve the relaxed normalized cut of the bipartite graph created from `X` as follows: the edge between row vertex `i` and column vertex `j` has weight `X[i, j]`."
msgstr "Agrupa las filas y columnas de un arreglo `X` para resolver el corte normalizado relajado del grafo bipartito creado a partir de `X` de la siguiente manera: la arista entre el vértice de la fila `i` y el vértice de la columna `j` tiene peso `X[i, j]`."

#: of sklearn.cluster._bicluster.SpectralCoclustering:9
msgid "The resulting bicluster structure is block-diagonal, since each row and each column belongs to exactly one bicluster."
msgstr "La estructura bicluster resultante es de bloques-diagonal, ya que cada fila y cada columna pertenecen exactamente a un bicluster."

#: of sklearn.cluster._bicluster.SpectralCoclustering:12
msgid "Supports sparse matrices, as long as they are nonnegative."
msgstr "Soporta matrices dispersas, siempre y cuando no sean negativas."

#: of sklearn.cluster._bicluster.SpectralCoclustering:14
msgid "Read more in the :ref:`User Guide <spectral_coclustering>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.BiclusterMixin.get_indices
#: sklearn.base.BiclusterMixin.get_shape
#: sklearn.base.BiclusterMixin.get_submatrix
#: sklearn.cluster._bicluster.BaseSpectral.fit
#: sklearn.cluster._bicluster.SpectralCoclustering
msgid "Parameters"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:19
msgid "**n_clusters**"
msgstr ""

#: of
msgid "int, default=3"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:19
msgid "The number of biclusters to find."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:27
msgid "**svd_method**"
msgstr ""

#: of
msgid "{'randomized', 'arpack'}, default='randomized'"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:22
msgid "Selects the algorithm for finding singular vectors. May be 'randomized' or 'arpack'. If 'randomized', use :func:`sklearn.utils.extmath.randomized_svd`, which may be faster for large matrices. If 'arpack', use :func:`scipy.sparse.linalg.svds`, which is more accurate, but possibly slower in some cases."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:32
msgid "**n_svd_vecs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:30
msgid "Number of vectors to use in calculating the SVD. Corresponds to `ncv` when `svd_method=arpack` and `n_oversamples` when `svd_method` is 'randomized`."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:36
msgid "**mini_batch**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:35
msgid "Whether to use mini-batch k-means, which is faster but may get different results."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:40
msgid "**init**"
msgstr ""

#: of
msgid "{'k-means++', 'random', or ndarray of shape             (n_clusters, n_features), default='k-means++'"
msgstr "{'k-means++', 'random', or ndarray of shape             (n_clusters, n_features), default='k-means++'"

#: of sklearn.cluster._bicluster.SpectralCoclustering:39
msgid "Method for initialization of k-means algorithm; defaults to 'k-means++'."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:48
msgid "**n_init**"
msgstr ""

#: of
msgid "int, default=10"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:43
msgid "Number of random initializations that are tried with the k-means algorithm."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:46
msgid "If mini-batch k-means is used, the best initialization is chosen and the algorithm runs once. Otherwise, the algorithm is run for each initialization and the best solution chosen."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:61
msgid "**n_jobs**"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:51
msgid "The number of jobs to use for the computation. This works by breaking down the pairwise matrix into n_jobs even slices and computing them in parallel."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:55
msgid "``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:59
msgid "``n_jobs`` was deprecated in version 0.23 and will be removed in 1.0 (renaming of 0.25)."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:69
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance, default=None"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:64
msgid "Used for randomizing the singular value decomposition and the k-means initialization. Use an int to make the randomness deterministic. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering
msgid "Attributes"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:75
msgid "**rows_**"
msgstr ""

#: of
msgid "array-like of shape (n_row_clusters, n_rows)"
msgstr "array-like of shape (n_row_clusters, n_rows)"

#: of sklearn.cluster._bicluster.SpectralCoclustering:74
msgid "Results of the clustering. `rows[i, r]` is True if cluster `i` contains row `r`. Available only after calling ``fit``."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:78
msgid "**columns_**"
msgstr ""

#: of
msgid "array-like of shape (n_column_clusters, n_columns)"
msgstr "array-like of shape (n_column_clusters, n_columns)"

#: of sklearn.cluster._bicluster.SpectralCoclustering:78
msgid "Results of the clustering, like `rows`."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:81
msgid "**row_labels_**"
msgstr ""

#: of
msgid "array-like of shape (n_rows,)"
msgstr "array-like of shape (n_rows,)"

#: of sklearn.cluster._bicluster.SpectralCoclustering:81
msgid "The bicluster label of each row."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:89
msgid "**column_labels_**"
msgstr ""

#: of
msgid "array-like of shape (n_cols,)"
msgstr "array-like of shape (n_cols,)"

#: of sklearn.cluster._bicluster.SpectralCoclustering:84
msgid "The bicluster label of each column."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:92
msgid "References"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:93
msgid "Dhillon, Inderjit S, 2001. `Co-clustering documents and words using bipartite spectral graph partitioning <http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.140.3011>`__."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:102
msgid "Examples"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:116
msgid "Methods"
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid ":obj:`fit <sklearn.cluster.SpectralCoclustering.fit>`\\"
msgstr ""

#: of sklearn.cluster._bicluster.BaseSpectral.fit:2
#: sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid "Creates a biclustering for X."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid ":obj:`get_indices <sklearn.cluster.SpectralCoclustering.get_indices>`\\"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_indices:2
#: sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid "Row and column indices of the `i`'th bicluster."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid ":obj:`get_params <sklearn.cluster.SpectralCoclustering.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid ":obj:`get_shape <sklearn.cluster.SpectralCoclustering.get_shape>`\\"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_shape:2
#: sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid "Shape of the `i`'th bicluster."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid ":obj:`get_submatrix <sklearn.cluster.SpectralCoclustering.get_submatrix>`\\"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_submatrix:2
#: sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid "Return the submatrix corresponding to bicluster `i`."
msgstr ""

#: of sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid ":obj:`set_params <sklearn.cluster.SpectralCoclustering.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.cluster._bicluster.SpectralCoclustering:125:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.cluster.SpectralCoclustering.biclusters_:2
msgid "Convenient way to get row and column indicators together."
msgstr ""

#: of sklearn.cluster.SpectralCoclustering.biclusters_:4
msgid "Returns the ``rows_`` and ``columns_`` members."
msgstr ""

#: of sklearn.cluster._bicluster.BaseSpectral.fit:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like of shape (n_samples, n_features)"

#: of sklearn.cluster._bicluster.BaseSpectral.fit:23
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_indices:4
msgid "Only works if ``rows_`` and ``columns_`` attributes exist."
msgstr ""

#: of sklearn.base.BiclusterMixin.get_indices:9
#: sklearn.base.BiclusterMixin.get_shape:8
#: sklearn.base.BiclusterMixin.get_submatrix:8
msgid "**i**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_indices:9
#: sklearn.base.BiclusterMixin.get_shape:8
#: sklearn.base.BiclusterMixin.get_submatrix:8
msgid "The index of the cluster."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.BiclusterMixin.get_indices
#: sklearn.base.BiclusterMixin.get_shape
#: sklearn.base.BiclusterMixin.get_submatrix
msgid "Returns"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_indices:14
msgid "**row_ind**"
msgstr ""

#: of
msgid "ndarray, dtype=np.intp"
msgstr "ndarray, dtype=np.intp"

#: of sklearn.base.BiclusterMixin.get_indices:14
msgid "Indices of rows in the dataset that belong to the bicluster."
msgstr ""

#: of sklearn.base.BiclusterMixin.get_indices:28
msgid "**col_ind**"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_indices:17
msgid "Indices of columns in the dataset that belong to the bicluster."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BiclusterMixin.get_shape:13
msgid "**n_rows**"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_shape:13
msgid "Number of rows in the bicluster."
msgstr ""

#: of sklearn.base.BiclusterMixin.get_shape:27
msgid "**n_cols**"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_shape:16
msgid "Number of columns in the bicluster."
msgstr ""

#: of sklearn.base.BiclusterMixin.get_submatrix:11
msgid "**data**"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_submatrix:11
msgid "The data."
msgstr ""

#: of sklearn.base.BiclusterMixin.get_submatrix:23
msgid "**submatrix**"
msgstr ""

#: of
msgid "ndarray of shape (n_rows, n_cols)"
msgstr "ndarray of shape (n_rows, n_cols)"

#: of sklearn.base.BiclusterMixin.get_submatrix:16
msgid "The submatrix corresponding to bicluster `i`."
msgstr ""

#: of sklearn.base.BiclusterMixin.get_submatrix:26
msgid "Notes"
msgstr ""

#: of sklearn.base.BiclusterMixin.get_submatrix:27
msgid "Works with sparse matrices. Only works if ``rows_`` and ``columns_`` attributes exist."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

