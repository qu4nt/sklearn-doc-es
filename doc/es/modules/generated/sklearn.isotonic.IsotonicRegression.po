msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 06:08\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.isotonic.IsotonicRegression.po\n"
"X-Crowdin-File-ID: 5892\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.isotonic.IsotonicRegression.rst:2
msgid ":mod:`sklearn.isotonic`.IsotonicRegression"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:2
msgid "Isotonic regression model."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:4
msgid "Read more in the :ref:`User Guide <isotonic>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.isotonic.IsotonicRegression sklearn.isotonic.IsotonicRegression.fit
#: sklearn.isotonic.IsotonicRegression.predict
#: sklearn.isotonic.IsotonicRegression.transform
msgid "Parameters"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:12
msgid "**y_min**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:11
msgid "Lower bound on the lowest predicted value (the minimum value may still be higher). If not set, defaults to -inf."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:16
msgid "**y_max**"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:15
msgid "Upper bound on the highest predicted value (the maximum may still be lower). If not set, defaults to +inf."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:21
msgid "**increasing**"
msgstr ""

#: of
msgid "bool or 'auto', default=True"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:19
msgid "Determines whether the predictions should be constrained to increase or decrease with `X`. 'auto' will decide based on the Spearman correlation estimate's sign."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:33
msgid "**out_of_bounds**"
msgstr ""

#: of
msgid "{'nan', 'clip', 'raise'}, default='nan'"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:24
msgid "Handles how `X` values outside of the training domain are handled during prediction."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:27
msgid "'nan', predictions will be NaN."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:28
msgid "'clip', predictions will be set to the value corresponding to the nearest train interval endpoint."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:30
msgid "'raise', a `ValueError` is raised."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression
msgid "Attributes"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:38
msgid "**X_min_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:38
msgid "Minimum value of input array `X_` for left bound."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:41
msgid "**X_max_**"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:41
msgid "Maximum value of input array `X_` for right bound."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:47
msgid "**X_thresholds_**"
msgstr ""

#: of
msgid "ndarray of shape (n_thresholds,)"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:44
msgid "Unique ascending `X` values used to interpolate the y = f(X) monotonic function."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:53
msgid "**y_thresholds_**"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:50
msgid "De-duplicated `y` values suitable to interpolate the y = f(X) monotonic function."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:56
msgid "**f_**"
msgstr ""

#: of
msgid "function"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:56
msgid "The stepwise interpolating function that covers the input domain ``X``."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:63
msgid "**increasing_**"
msgstr ""

#: of
msgid "bool"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:59
msgid "Inferred value for ``increasing``."
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.isotonic.IsotonicRegression:66
#: sklearn.isotonic.IsotonicRegression.fit:33
msgid "Notes"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:67
msgid "Ties are broken using the secondary method from de Leeuw, 1977."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:70
msgid "References"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:71
msgid "Isotonic Median Regression: A Linear Programming Approach Nilotpal Chakravarti Mathematics of Operations Research Vol. 14, No. 2 (May, 1989), pp. 303-308"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:76
msgid "Isotone Optimization in R : Pool-Adjacent-Violators Algorithm (PAVA) and Active Set Methods de Leeuw, Hornik, Mair Journal of Statistical Software 2009"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:81
msgid "Correctness of Kruskal's algorithms for monotone regression with ties de Leeuw, Psychometrica, 1977"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:89
msgid "Examples"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:98
msgid "Methods"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid ":obj:`fit <sklearn.isotonic.IsotonicRegression.fit>`\\"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.fit:2
#: sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid "Fit the model using X, y as training data."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.isotonic.IsotonicRegression.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid ":obj:`get_params <sklearn.isotonic.IsotonicRegression.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid ":obj:`predict <sklearn.isotonic.IsotonicRegression.predict>`\\"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.predict:2
#: sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid "Predict new data by linear interpolation."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid ":obj:`score <sklearn.isotonic.IsotonicRegression.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid ":obj:`set_params <sklearn.isotonic.IsotonicRegression.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid ":obj:`transform <sklearn.isotonic.IsotonicRegression.transform>`\\"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.transform:2
#: sklearn.isotonic.IsotonicRegression:108:<autosummary>:1
msgid "Transform new data by linear interpolation"
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.isotonic.IsotonicRegression.fit:11
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, 1)"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.fit:8
msgid "Training data."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.fit:10
#: sklearn.isotonic.IsotonicRegression.transform:10
msgid "Also accepts 2d array with 1 feature."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.isotonic.IsotonicRegression.fit:14
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.fit:14
msgid "Training target."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.isotonic.IsotonicRegression.fit:18
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.fit:17
msgid "Weights. If set to None, all weights will be set to 1 (equal weights)."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.isotonic.IsotonicRegression.fit
#: sklearn.isotonic.IsotonicRegression.predict
#: sklearn.isotonic.IsotonicRegression.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.isotonic.IsotonicRegression.fit:30
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.fit:23
msgid "Returns an instance of self."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.fit:34
msgid "X is stored for future use, as :meth:`transform` needs X to interpolate new input data."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.predict:8
#: sklearn.isotonic.IsotonicRegression.transform:11
msgid "**T**"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.predict:8
#: sklearn.isotonic.IsotonicRegression.transform:8
msgid "Data to transform."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.predict:24
#: sklearn.isotonic.IsotonicRegression.transform:27
msgid "**y_pred**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.predict:13
msgid "Transformed data."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.isotonic.IsotonicRegression.transform:16
msgid "The transformed data"
msgstr ""

