msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:56-0400\n"
"PO-Revision-Date: 2021-07-12 17:49\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.pipeline.Pipeline.po\n"
"X-Crowdin-File-ID: 4986\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.pipeline.Pipeline.rst:2
msgid ":mod:`sklearn.pipeline`.Pipeline"
msgstr ":mod:`sklearn.pipeline`.Pipeline"

#: of sklearn.pipeline.Pipeline:2
msgid "Pipeline of transforms with a final estimator."
msgstr "Pipeline de transformaciones con un estimador final."

#: of sklearn.pipeline.Pipeline:4
msgid "Sequentially apply a list of transforms and a final estimator. Intermediate steps of the pipeline must be 'transforms', that is, they must implement fit and transform methods. The final estimator only needs to implement fit. The transformers in the pipeline can be cached using ``memory`` argument."
msgstr "Aplica secuencialmente una lista de transformaciones y un estimador final. Los pasos intermedios del pipeline deben ser 'transforms', es decir, deben implementar los métodos fit y transform. El estimador final sólo necesita implementar fit. Los transformadores en el pipeline pueden ser almacenados en caché usando el argumento ``memory``."

#: of sklearn.pipeline.Pipeline:10
msgid "The purpose of the pipeline is to assemble several steps that can be cross-validated together while setting different parameters. For this, it enables setting parameters of the various steps using their names and the parameter name separated by a '__', as in the example below. A step's estimator may be replaced entirely by setting the parameter with its name to another estimator, or a transformer removed by setting it to 'passthrough' or ``None``."
msgstr "El propósito del pipeline es ensamblar varios pasos que puedan ser validados de forma cruzada juntos mientras se establecen diferentes parámetros. Para ello, permite establecer los parámetros de los distintos pasos utilizando sus nombres y el nombre del parámetro separado por un '__', como en el ejemplo más abajo. El estimador de un paso puede ser sustituido por completo estableciendo el parámetro con su nombre a otro estimador, o un transformador eliminado estableciéndolo como 'passthrough' o ``None``."

#: of sklearn.pipeline.Pipeline:18
msgid "Read more in the :ref:`User Guide <pipeline>`."
msgstr "Leer más en el :ref:`Manual de Usuario <pipeline>`."

#: of sklearn.pipeline.Pipeline sklearn.pipeline.Pipeline.decision_function
#: sklearn.pipeline.Pipeline.fit sklearn.pipeline.Pipeline.fit_predict
#: sklearn.pipeline.Pipeline.fit_transform sklearn.pipeline.Pipeline.get_params
#: sklearn.pipeline.Pipeline.inverse_transform
#: sklearn.pipeline.Pipeline.predict
#: sklearn.pipeline.Pipeline.predict_log_proba
#: sklearn.pipeline.Pipeline.predict_proba sklearn.pipeline.Pipeline.score
#: sklearn.pipeline.Pipeline.score_samples sklearn.pipeline.Pipeline.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.pipeline.Pipeline:27
msgid "**steps**"
msgstr "**steps**"

#: of
msgid "list"
msgstr "list"

#: of sklearn.pipeline.Pipeline:25
msgid "List of (name, transform) tuples (implementing fit/transform) that are chained, in the order in which they are chained, with the last object an estimator."
msgstr "Lista de tuplas (nombre, transformación) (implementando fit/transform) que están encadenadas, en el orden en que se encadenan, siendo el último objeto un estimador."

#: of sklearn.pipeline.Pipeline:37
msgid "**memory**"
msgstr "**memory**"

#: of
msgid "str or object with the joblib.Memory interface, default=None"
msgstr "str u object con la interfaz joblib.Memory, default=None"

#: of sklearn.pipeline.Pipeline:30
msgid "Used to cache the fitted transformers of the pipeline. By default, no caching is performed. If a string is given, it is the path to the caching directory. Enabling caching triggers a clone of the transformers before fitting. Therefore, the transformer instance given to the pipeline cannot be inspected directly. Use the attribute ``named_steps`` or ``steps`` to inspect estimators within the pipeline. Caching the transformers is advantageous when fitting is time consuming."
msgstr "Se utiliza para almacenar en caché los transformadores ajustados del pipeline. Por defecto, no se realiza ningún almacenamiento en caché. Si se da una cadena, es la ruta del directorio de caché. La activación del almacenamiento en caché provoca un clon de los transformadores antes del ajuste. Por lo tanto, la instancia del transformador dada al pipeline no puede ser inspeccionada directamente. Utiliza el atributo ``named_steps`` o ``steps`` para inspeccionar los estimadores dentro del pipeline. El almacenamiento en caché de los transformadores es ventajoso cuando el ajuste requiere mucho tiempo."

#: of sklearn.pipeline.Pipeline:44
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "bool, default=False"
msgstr "booleano, default=False"

#: of sklearn.pipeline.Pipeline:40
msgid "If True, the time elapsed while fitting each step will be printed as it is completed."
msgstr "Si es True, el tiempo transcurrido durante el ajuste de cada paso se imprimirá a medida que se complete."

#: of sklearn.pipeline.Pipeline
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.pipeline.Pipeline:54
msgid "**named_steps** : :class:`~sklearn.utils.Bunch`"
msgstr "**named_steps** : :class:`~sklearn.utils.Bunch`"

#: of sklearn.pipeline.Pipeline:53
msgid "Bunch"
msgstr "Bunch"

#: of sklearn.pipeline.Pipeline:49
msgid "Dictionary-like object, with the following attributes. Read-only attribute to access any step parameter by user given name. Keys are step names and values are steps parameters."
msgstr "Objeto dictionary-like, con los siguientes atributos. Atributo de sólo lectura para acceder a cualquier parámetro del paso por el nombre dado por el usuario. Las claves son los nombres de los pasos y los valores son los parámetros de los pasos."

#: of sklearn.pipeline.Pipeline:59
msgid ":obj:`make_pipeline`"
msgstr ":obj:`make_pipeline`"

#: of sklearn.pipeline.Pipeline:60
msgid "Convenience function for simplified pipeline construction."
msgstr "Función de conveniencia para la construcción simplificada de pipelines."

#: of sklearn.pipeline.Pipeline:66
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.pipeline.Pipeline:84
msgid "Methods"
msgstr "Métodos"

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`decision_function <sklearn.pipeline.Pipeline.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.pipeline.Pipeline.decision_function>`\\"

#: of sklearn.pipeline.Pipeline.decision_function:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Apply transforms, and decision_function of the final estimator"
msgstr "Aplica transformaciones, y decision_function del estimador final"

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`fit <sklearn.pipeline.Pipeline.fit>`\\"
msgstr ":obj:`fit <sklearn.pipeline.Pipeline.fit>`\\"

#: of sklearn.pipeline.Pipeline.fit:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Fit the model"
msgstr "Ajusta el modelo"

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`fit_predict <sklearn.pipeline.Pipeline.fit_predict>`\\"
msgstr ":obj:`fit_predict <sklearn.pipeline.Pipeline.fit_predict>`\\"

#: of sklearn.pipeline.Pipeline.fit_predict:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Applies fit_predict of last step in pipeline after transforms."
msgstr "Aplica fit_predict del último paso en el pipeline después de las transformaciones."

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.pipeline.Pipeline.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.pipeline.Pipeline.fit_transform>`\\"

#: of sklearn.pipeline.Pipeline.fit_transform:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Fit the model and transform with the final estimator"
msgstr "Ajusta el modelo y transforma mediante el estimador final"

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`get_params <sklearn.pipeline.Pipeline.get_params>`\\"
msgstr ":obj:`get_params <sklearn.pipeline.Pipeline.get_params>`\\"

#: of sklearn.pipeline.Pipeline.get_params:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`predict <sklearn.pipeline.Pipeline.predict>`\\"
msgstr ":obj:`predict <sklearn.pipeline.Pipeline.predict>`\\"

#: of sklearn.pipeline.Pipeline.predict:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Apply transforms to the data, and predict with the final estimator"
msgstr "Aplica transformaciones a los datos y predice con el estimador final"

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`predict_log_proba <sklearn.pipeline.Pipeline.predict_log_proba>`\\"
msgstr ":obj:`predict_log_proba <sklearn.pipeline.Pipeline.predict_log_proba>`\\"

#: of sklearn.pipeline.Pipeline.predict_log_proba:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Apply transforms, and predict_log_proba of the final estimator"
msgstr "Aplica transformaciones, y predict_log_proba del estimador final"

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.pipeline.Pipeline.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.pipeline.Pipeline.predict_proba>`\\"

#: of sklearn.pipeline.Pipeline.predict_proba:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Apply transforms, and predict_proba of the final estimator"
msgstr "Aplica transformaciones, y predict_proba del estimador final"

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`score <sklearn.pipeline.Pipeline.score>`\\"
msgstr ":obj:`score <sklearn.pipeline.Pipeline.score>`\\"

#: of sklearn.pipeline.Pipeline.score:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Apply transforms, and score with the final estimator"
msgstr "Aplica transformaciones, y puntúa con el estimador final"

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`score_samples <sklearn.pipeline.Pipeline.score_samples>`\\"
msgstr ":obj:`score_samples <sklearn.pipeline.Pipeline.score_samples>`\\"

#: of sklearn.pipeline.Pipeline.score_samples:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Apply transforms, and score_samples of the final estimator."
msgstr "Aplica transformaciones, y score_samples del estimador final."

#: of sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid ":obj:`set_params <sklearn.pipeline.Pipeline.set_params>`\\"
msgstr ":obj:`set_params <sklearn.pipeline.Pipeline.set_params>`\\"

#: of sklearn.pipeline.Pipeline.set_params:2
#: sklearn.pipeline.Pipeline:98:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.pipeline.Pipeline.decision_function:9
#: sklearn.pipeline.Pipeline.fit:11 sklearn.pipeline.Pipeline.fit_predict:12
#: sklearn.pipeline.Pipeline.fit_transform:12
#: sklearn.pipeline.Pipeline.predict:9
#: sklearn.pipeline.Pipeline.predict_log_proba:9
#: sklearn.pipeline.Pipeline.predict_proba:9 sklearn.pipeline.Pipeline.score:9
#: sklearn.pipeline.Pipeline.score_samples:9
#: sklearn.pipeline.Pipeline.transform:11
msgid "**X**"
msgstr "**X**"

#: of
msgid "iterable"
msgstr "iterable"

#: of sklearn.pipeline.Pipeline.decision_function:8
#: sklearn.pipeline.Pipeline.predict:8
#: sklearn.pipeline.Pipeline.predict_log_proba:8
#: sklearn.pipeline.Pipeline.predict_proba:8 sklearn.pipeline.Pipeline.score:8
#: sklearn.pipeline.Pipeline.score_samples:8
msgid "Data to predict on. Must fulfill input requirements of first step of the pipeline."
msgstr "Datos para predecir. Debe cumplir con los requisitos de entrada del primer paso del pipeline."

#: of sklearn.pipeline.Pipeline.decision_function sklearn.pipeline.Pipeline.fit
#: sklearn.pipeline.Pipeline.fit_predict
#: sklearn.pipeline.Pipeline.fit_transform sklearn.pipeline.Pipeline.get_params
#: sklearn.pipeline.Pipeline.inverse_transform
#: sklearn.pipeline.Pipeline.predict
#: sklearn.pipeline.Pipeline.predict_log_proba
#: sklearn.pipeline.Pipeline.predict_proba sklearn.pipeline.Pipeline.score
#: sklearn.pipeline.Pipeline.score_samples sklearn.pipeline.Pipeline.set_params
#: sklearn.pipeline.Pipeline.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.pipeline.Pipeline.decision_function:25
#: sklearn.pipeline.Pipeline.predict_log_proba:25
#: sklearn.pipeline.Pipeline.score_samples:25
msgid "**y_score**"
msgstr "**y_score**"

#: of
msgid "array-like of shape (n_samples, n_classes)"
msgstr "array-like de forma (n_samples, n_classes)"

#: of sklearn.pipeline.Pipeline.fit:4
msgid "Fit all the transforms one after the other and transform the data, then fit the transformed data using the final estimator."
msgstr "Ajusta todas las transformaciones una tras otra y transforma los datos, luego ajusta los datos transformados utilizando el estimador final."

#: of sklearn.pipeline.Pipeline.fit:10 sklearn.pipeline.Pipeline.fit_predict:11
#: sklearn.pipeline.Pipeline.fit_transform:11
msgid "Training data. Must fulfill input requirements of first step of the pipeline."
msgstr "Datos para entrenar. Debe cumplir con los requisitos de entrada del primer paso del pipeline."

#: of sklearn.pipeline.Pipeline.fit:15 sklearn.pipeline.Pipeline.fit_predict:16
#: sklearn.pipeline.Pipeline.fit_transform:16
#: sklearn.pipeline.Pipeline.score:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "iterable, default=None"
msgstr "iterable, default=None"

#: of sklearn.pipeline.Pipeline.fit:14 sklearn.pipeline.Pipeline.fit_predict:15
#: sklearn.pipeline.Pipeline.fit_transform:15
msgid "Training targets. Must fulfill label requirements for all steps of the pipeline."
msgstr ""

#: of sklearn.pipeline.Pipeline.fit:20 sklearn.pipeline.Pipeline.fit_predict:21
#: sklearn.pipeline.Pipeline.fit_transform:21
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict of string -> object"
msgstr ""

#: of sklearn.pipeline.Pipeline.fit:18 sklearn.pipeline.Pipeline.fit_predict:19
#: sklearn.pipeline.Pipeline.fit_transform:19
msgid "Parameters passed to the ``fit`` method of each step, where each parameter name is prefixed such that parameter ``p`` for step ``s`` has key ``s__p``."
msgstr ""

#: of sklearn.pipeline.Pipeline.fit:36
msgid "**self**"
msgstr "**self**"

#: of
msgid "Pipeline"
msgstr "Pipeline"

#: of sklearn.pipeline.Pipeline.fit:25
msgid "This estimator"
msgstr "Este estimador"

#: of sklearn.pipeline.Pipeline.fit_predict:4
msgid "Applies fit_transforms of a pipeline to the data, followed by the fit_predict method of the final estimator in the pipeline. Valid only if the final estimator implements fit_predict."
msgstr ""

#: of sklearn.pipeline.Pipeline.fit_predict:37
#: sklearn.pipeline.Pipeline.predict:35
msgid "**y_pred**"
msgstr "**y_pred**"

#: of
msgid "array-like"
msgstr "array-like"

#: of sklearn.pipeline.Pipeline.fit_transform:4
msgid "Fits all the transforms one after the other and transforms the data, then uses fit_transform on transformed data with the final estimator."
msgstr ""

#: of sklearn.pipeline.Pipeline.fit_transform:37
#: sklearn.pipeline.Pipeline.inverse_transform:12
#: sklearn.pipeline.Pipeline.inverse_transform:28
#: sklearn.pipeline.Pipeline.transform:27
msgid "**Xt**"
msgstr "**Xt**"

#: of
msgid "array-like of shape  (n_samples, n_transformed_features)"
msgstr "array-like de forma  (n_samples, n_transformed_features)"

#: of sklearn.pipeline.Pipeline.fit_transform:26
msgid "Transformed samples"
msgstr "Muestras transformadas"

#: of sklearn.pipeline.Pipeline.get_params:4
msgid "Returns the parameters given in the constructor as well as the estimators contained within the `steps` of the `Pipeline`."
msgstr "Devuelve los parámetros dados en el constructor, así como los estimadores contenidos en los `steps` del `Pipeline`."

#: of sklearn.pipeline.Pipeline.get_params:11
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.pipeline.Pipeline.get_params:10
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.pipeline.Pipeline.get_params:27
msgid "**params**"
msgstr "**params**"

#: of
msgid "mapping of string to any"
msgstr ""

#: of sklearn.pipeline.Pipeline.get_params:16
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.pipeline.Pipeline.inverse_transform:2
msgid "Apply inverse transformations in reverse order"
msgstr ""

#: of sklearn.pipeline.Pipeline.inverse_transform:4
msgid "All estimators in the pipeline must support ``inverse_transform``."
msgstr ""

#: of sklearn.pipeline.Pipeline.inverse_transform:9
msgid "Data samples, where ``n_samples`` is the number of samples and ``n_features`` is the number of features. Must fulfill input requirements of last step of pipeline's ``inverse_transform`` method."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.pipeline.Pipeline.predict:19
msgid "**\\*\\*predict_params**"
msgstr "**\\*\\*predict_params**"

#: of sklearn.pipeline.Pipeline.predict:12
msgid "Parameters to the ``predict`` called at the end of all transformations in the pipeline. Note that while this may be used to return uncertainties from some models with return_std or return_cov, uncertainties that are generated by the transformations in the pipeline are not propagated to the final estimator."
msgstr ""

#: of sklearn.pipeline.Pipeline.predict_proba:25
msgid "**y_proba**"
msgstr "**y_proba**"

#: of sklearn.pipeline.Pipeline.score:12
msgid "Targets used for scoring. Must fulfill label requirements for all steps of the pipeline."
msgstr ""

#: of sklearn.pipeline.Pipeline.score:17
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like, default=None"
msgstr "array-like, default=None"

#: of sklearn.pipeline.Pipeline.score:16
msgid "If not None, this argument is passed as ``sample_weight`` keyword argument to the ``score`` method of the final estimator."
msgstr ""

#: of sklearn.pipeline.Pipeline.score:33
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.pipeline.Pipeline.set_params:4
msgid "Valid parameter keys can be listed with ``get_params()``. Note that you can directly set the parameters of the estimators contained in `steps`."
msgstr ""

#: of sklearn.pipeline.Pipeline.set_params:23
msgid "self"
msgstr "self"

#: of sklearn.pipeline.Pipeline.transform:2
msgid "Apply transforms, and transform with the final estimator"
msgstr ""

#: of sklearn.pipeline.Pipeline.transform:4
msgid "This also works where final estimator is ``None``: all prior transformations are applied."
msgstr ""

#: of sklearn.pipeline.Pipeline.transform:10
msgid "Data to transform. Must fulfill input requirements of first step of the pipeline."
msgstr ""

#: ../modules/generated/sklearn.pipeline.Pipeline.examples:4
msgid "Examples using ``sklearn.pipeline.Pipeline``"
msgstr "Ejemplos utilizando ``sklearn.pipeline.Pipeline``"

#: ../modules/generated/sklearn.pipeline.Pipeline.examples:15
#: ../modules/generated/sklearn.pipeline.Pipeline.examples:23
msgid ":ref:`sphx_glr_auto_examples_model_selection_grid_search_text_feature_extraction.py`"
msgstr ":ref:`sphx_glr_auto_examples_model_selection_grid_search_text_feature_extraction.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_poisson_regression_non_normal_loss.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_inspection_plot_permutation_importance.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_kernel_approximation_plot_scalable_poly_kernels.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_kernel_approximation.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_underfitting_overfitting.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_grid_search_refit_callable.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_caching_nearest_neighbors.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neighbors_plot_nca_classification.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_neural_networks_plot_rbm_logistic_classification.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_feature_union.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_digits_pipe.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_compare_reduction.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_column_transformer_mixed_types.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_compose_plot_column_transformer.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_semi_supervised_plot_semi_supervised_newsgroups.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_svm_plot_svm_anova.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py`"
#~ msgstr ""

