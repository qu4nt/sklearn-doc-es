msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-28 02:41\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.utils.as_float_array.po\n"
"X-Crowdin-File-ID: 5464\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.utils.as_float_array.rst:2
msgid ":mod:`sklearn.utils`.as_float_array"
msgstr ":mod:`sklearn.utils`.as_float_array"

#: of sklearn.utils.validation.as_float_array:2
msgid "Converts an array-like to an array of floats."
msgstr "Convierte un tipo de array en un arreglo de de puntos flotante (float)."

#: of sklearn.utils.validation.as_float_array:4
msgid "The new dtype will be np.float32 or np.float64, depending on the original type. The function can create a copy or modify the argument depending on the argument copy."
msgstr "El nuevo dtype será np.float32 o np.float64, dependiendo del tipo original. La función puede crear una copia o modificar el argumento dependiendo de la copia del argumento."

#: of sklearn.utils.validation.as_float_array
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.utils.validation.as_float_array:11
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix}"
msgstr "{array-like, sparse matrix}"

#: of sklearn.utils.validation.as_float_array:15
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.utils.validation.as_float_array:14
msgid "If True, a copy of X will be created. If False, a copy may still be returned if X's dtype is not a floating point type."
msgstr "Si es True, se creará una copia de X. Si es False, aún puede devolverse una copia si el dtype de X no es un tipo de punto flotante."

#: of sklearn.utils.validation.as_float_array:30
msgid "**force_all_finite**"
msgstr "**force_all_finite**"

#: of
msgid "bool or 'allow-nan', default=True"
msgstr "booleano o 'allow-nan', default=True"

#: of sklearn.utils.validation.as_float_array:18
msgid "Whether to raise an error on np.inf, np.nan, pd.NA in X. The possibilities are:"
msgstr "Si se produce un error en np.inf, np.nan, pd.NA en X. Las posibilidades son:"

#: of sklearn.utils.validation.as_float_array:21
msgid "True: Force all values of X to be finite."
msgstr "Verdadero: Forzar que todos los valores de X sean finitos."

#: of sklearn.utils.validation.as_float_array:22
msgid "False: accepts np.inf, np.nan, pd.NA in X."
msgstr "False: acepta en X np.inf, np.nan, pd.NA."

#: of sklearn.utils.validation.as_float_array:23
msgid "'allow-nan': accepts only np.nan and pd.NA values in X. Values cannot be infinite."
msgstr "'allow-nan': sólo acepta en X valores np.nan y pd.NA. Los valores no pueden ser infinitos."

#: of sklearn.utils.validation.as_float_array:26
msgid "``force_all_finite`` accepts the string ``'allow-nan'``."
msgstr "``force_all_finite`` acepta la cadena ``'allow-nan'``."

#: of sklearn.utils.validation.as_float_array:29
msgid "Accepts `pd.NA` and converts it into `np.nan`"
msgstr "Acepta `pd.NA` y lo convierte en `np.nan`"

#: of sklearn.utils.validation.as_float_array
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.utils.validation.as_float_array:46
msgid "**XT**"
msgstr "**XT**"

#: of
msgid "{ndarray, sparse matrix}"
msgstr "{ndarray, sparse matrix}"

#: of sklearn.utils.validation.as_float_array:35
msgid "An array of type float."
msgstr "Un arreglo de tipo de punto flotante (float)."

