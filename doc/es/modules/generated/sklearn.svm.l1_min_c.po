msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-26 19:16\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.svm.l1_min_c.po\n"
"X-Crowdin-File-ID: 5798\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.svm.l1_min_c.rst:2
msgid ":mod:`sklearn.svm`.l1_min_c"
msgstr ":mod:`sklearn.svm`.l1_min_c"

#: of sklearn.svm._bounds.l1_min_c:2
msgid "Return the lowest bound for C such that for C in (l1_min_C, infinity) the model is guaranteed not to be empty. This applies to l1 penalized classifiers, such as LinearSVC with penalty='l1' and linear_model.LogisticRegression with penalty='l1'."
msgstr "Devuelve el límite inferior para C tal que para C en (l1_min_C, infinito) el modelo es garantizado a no estar vacío. Esto aplica a clasificadores penalizados con l1, tales como LinearSVC con penalty='l1' y linear_model.LogisticRegression con penalty='l1'."

#: of sklearn.svm._bounds.l1_min_c:7
msgid "This value is valid if class_weight parameter in fit() is not set."
msgstr "Este valor es válido si el parámetro class_weight en fit() no está establecido."

#: of sklearn.svm._bounds.l1_min_c
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.svm._bounds.l1_min_c:13
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.svm._bounds.l1_min_c:12
msgid "Training vector, where n_samples in the number of samples and n_features is the number of features."
msgstr "Vector de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.svm._bounds.l1_min_c:16
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.svm._bounds.l1_min_c:16
msgid "Target vector relative to X."
msgstr ""

#: of sklearn.svm._bounds.l1_min_c:21
msgid "**loss**"
msgstr ""

#: of
msgid "{'squared_hinge', 'log'}, default='squared_hinge'"
msgstr ""

#: of sklearn.svm._bounds.l1_min_c:19
msgid "Specifies the loss function. With 'squared_hinge' it is the squared hinge loss (a.k.a. L2 loss). With 'log' it is the loss of logistic regression models."
msgstr ""

#: of sklearn.svm._bounds.l1_min_c:25
msgid "**fit_intercept**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.svm._bounds.l1_min_c:24
msgid "Specifies if the intercept should be fitted by the model. It must match the fit() method parameter."
msgstr ""

#: of sklearn.svm._bounds.l1_min_c:32
msgid "**intercept_scaling**"
msgstr ""

#: of
msgid "float, default=1.0"
msgstr ""

#: of sklearn.svm._bounds.l1_min_c:28
msgid "when fit_intercept is True, instance vector x becomes [x, intercept_scaling], i.e. a \"synthetic\" feature with constant value equals to intercept_scaling is appended to the instance vector. It must match the fit() method parameter."
msgstr ""

#: of sklearn.svm._bounds.l1_min_c
msgid "Returns"
msgstr ""

#: of sklearn.svm._bounds.l1_min_c:48
msgid "**l1_min_c**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.svm._bounds.l1_min_c:37
msgid "minimum value for C"
msgstr ""

#: ../modules/generated/sklearn.svm.l1_min_c.examples:4
msgid "Examples using ``sklearn.svm.l1_min_c``"
msgstr ""

#: ../modules/generated/sklearn.svm.l1_min_c.examples:15
#: ../modules/generated/sklearn.svm.l1_min_c.examples:23
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_logistic_path.py`"
msgstr ""

