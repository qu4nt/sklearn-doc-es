msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-26 00:40\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.decomposition.IncrementalPCA.po\n"
"X-Crowdin-File-ID: 5370\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.decomposition.IncrementalPCA.rst:2
msgid ":mod:`sklearn.decomposition`.IncrementalPCA"
msgstr ":mod:`sklearn.decomposition`.IncrementalPCA"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:2
msgid "Incremental principal components analysis (IPCA)."
msgstr "Análisis de componentes principales incremental (Incremental principal components analysis, IPCA)."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:4
msgid "Linear dimensionality reduction using Singular Value Decomposition of the data, keeping only the most significant singular vectors to project the data to a lower dimensional space. The input data is centered but not scaled for each feature before applying the SVD."
msgstr "Reducción lineal de la dimensionalidad mediante la Descomposición en Valores Singulares de los datos, manteniendo sólo los vectores singulares más significativos para proyectar los datos a un espacio de menor dimensión. Los datos de entrada se centran pero no se escalan para cada característica antes de aplicar la SVD."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:9
msgid "Depending on the size of the input data, this algorithm can be much more memory efficient than a PCA, and allows sparse input."
msgstr "Dependiendo del tamaño de los datos de entrada, este algoritmo puede ser mucho más eficiente en cuanto a memoria que un PCA, y permite una entrada dispersa."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:12
msgid "This algorithm has constant memory complexity, on the order of ``batch_size * n_features``, enabling use of np.memmap files without loading the entire file into memory. For sparse matrices, the input is converted to dense in batches (in order to be able to subtract the mean) which avoids storing the entire dense matrix at any one time."
msgstr "Este algoritmo tiene una complejidad de memoria constante, del orden de ``batch_size * n_features``, lo que permite utilizar archivos np.memmap sin cargar todo el archivo en memoria. En el caso de las matrices dispersas, la entrada se convierte en densa por lotes (para poder restar la media), lo que evita almacenar la matriz densa completa en cualquier momento."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:18
msgid "The computational overhead of each SVD is ``O(batch_size * n_features ** 2)``, but only 2 * batch_size samples remain in memory at a time. There will be ``n_samples / batch_size`` SVD computations to get the principal components, versus 1 large SVD of complexity ``O(n_samples * n_features ** 2)`` for PCA."
msgstr "La sobrecarga computacional de cada SVD es ``O(batch_size * n_features ** 2)``, pero sólo 2 * batch_size muestras permanecen en memoria a la vez. Habrá ``n_samples / batch_size`` cálculos de SVD para obtener los componentes principales, frente a 1 SVD grande de complejidad ``O(n_samples * n_features ** 2)`` para PCA."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:24
msgid "Read more in the :ref:`User Guide <IncrementalPCA>`."
msgstr "Lee más en el :ref:`Manual de usuario <IncrementalPCA>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._base._BasePCA.inverse_transform
#: sklearn.decomposition._incremental_pca.IncrementalPCA
#: sklearn.decomposition._incremental_pca.IncrementalPCA.fit
#: sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit
#: sklearn.decomposition._incremental_pca.IncrementalPCA.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:32
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:31
msgid "Number of components to keep. If ``n_components`` is ``None``, then ``n_components`` is set to ``min(n_samples, n_features)``."
msgstr "Número de componentes a mantener. Si ``n_components es ``None``, entonces ``n_components`` se establece en ``min(n_samples, n_features)``."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:42
msgid "**whiten**"
msgstr "**whiten**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:35
msgid "When True (False by default) the ``components_`` vectors are divided by ``n_samples`` times ``components_`` to ensure uncorrelated outputs with unit component-wise variances."
msgstr "Cuando es True (False por defecto) los ``components_`` vectores se dividen entre ``n_samples`` por ``components_`` para asegurar salidas no correlacionadas con varianzas unitarias de los componentes."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:39
msgid "Whitening will remove some information from the transformed signal (the relative variance scales of the components) but can sometimes improve the predictive accuracy of the downstream estimators by making data respect some hard-wired assumptions."
msgstr "El whitening eliminará parte de la información de la señal transformada (las escalas de varianza relativas de los componentes), pero a veces puede mejorar la precisión predictiva de los estimadores posteriores al hacer que los datos respeten algunos supuestos fijos."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:46
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:45
msgid "If False, X will be overwritten. ``copy=False`` can be used to save memory but is unsafe for general use."
msgstr "Si es False, X se sobrescribirá. ``copy=False`` puede utilizarse para ahorrar memoria pero no es seguro para el uso general."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:55
msgid "**batch_size**"
msgstr "**batch_size**"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:49
msgid "The number of samples to use for each batch. Only used when calling ``fit``. If ``batch_size`` is ``None``, then ``batch_size`` is inferred from the data and set to ``5 * n_features``, to provide a balance between approximation accuracy and memory consumption."
msgstr "El número de muestras a utilizar para cada lote. Sólo se utiliza cuando se llama a ``fit``. Si ``batch_size`` es ``None``, entonces ``batch_size`` se infiere de los datos y se establece en ``5 * n_features``, para proporcionar un equilibrio entre la precisión de la aproximación y el consumo de memoria."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:60
msgid "**components_**"
msgstr "**components_**"

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr "ndarray de forma (n_components, n_features)"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:60
msgid "Components with maximum variance."
msgstr "Componentes con máxima varianza."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:63
msgid "**explained_variance_**"
msgstr "**explained_variance_**"

#: of
msgid "ndarray of shape (n_components,)"
msgstr "ndarray de forma (n_components,)"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:63
msgid "Variance explained by each of the selected components."
msgstr "Varianza explicada por cada uno de los componentes seleccionados."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:68
msgid "**explained_variance_ratio_**"
msgstr "**explained_variance_ratio_**"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:66
msgid "Percentage of variance explained by each of the selected components. If all components are stored, the sum of explained variances is equal to 1.0."
msgstr "Porcentaje de la varianza explicada por cada uno de los componentes seleccionados. Si se almacenan todos los componentes, la suma de las varianzas explicadas es igual a 1,0."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:73
msgid "**singular_values_**"
msgstr "**singular_values_**"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:71
msgid "The singular values corresponding to each of the selected components. The singular values are equal to the 2-norms of the ``n_components`` variables in the lower-dimensional space."
msgstr "Los valores singulares correspondientes a cada uno de los componentes seleccionados. Los valores singulares son iguales a las 2-normas de las ``n_components`` variables en el espacio de menor dimensión."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:76
msgid "**mean_**"
msgstr "**mean_**"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:76
msgid "Per-feature empirical mean, aggregate over calls to ``partial_fit``."
msgstr "Media empírica por característica, agregada sobre las llamadas a ``partial_fit``."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:80
msgid "**var_**"
msgstr "**var_**"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:79
msgid "Per-feature empirical variance, aggregate over calls to ``partial_fit``."
msgstr "Varianza empírica por característica, agregada sobre las llamadas a ``partial_fit``."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:86
msgid "**noise_variance_**"
msgstr "**noise_variance_**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:83
msgid "The estimated noise covariance following the Probabilistic PCA model from Tipping and Bishop 1999. See \"Pattern Recognition and Machine Learning\" by C. Bishop, 12.2.1 p. 574 or http://www.miketipping.com/papers/met-mppca.pdf."
msgstr "La covarianza del ruido estimada según el modelo de PCA probabilístico de Tipping y Bishop 1999. Vea \"Pattern Recognition and Machine Learning\" de C. Bishop, 12.2.1 p. 574 o http://www.miketipping.com/papers/met-mppca.pdf."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:90
msgid "**n_components_**"
msgstr "**n_components_**"

#: of
msgid "int"
msgstr "int"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:89
msgid "The estimated number of components. Relevant when ``n_components=None``."
msgstr "El número estimado de componentes. Relevante cuando ``n_components=None``."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:94
msgid "**n_samples_seen_**"
msgstr "**n_samples_seen_**"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:93
msgid "The number of samples processed by the estimator. Will be reset on new calls to fit, but increments across ``partial_fit`` calls."
msgstr "El número de muestras procesadas por el estimador. Se restablecerá en las nuevas llamadas a fit, pero se incrementa a través de las llamadas a ``partial_fit``."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:100
msgid "**batch_size_**"
msgstr "**batch_size_**"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:97
msgid "Inferred batch size from ``batch_size``."
msgstr "Tamaño de lote inferido a partir de ``batch_size``."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:105
msgid ":obj:`PCA`"
msgstr ":obj:`PCA`"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:107
msgid ":obj:`KernelPCA`"
msgstr ":obj:`KernelPCA`"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:109
msgid ":obj:`SparsePCA`"
msgstr ":obj:`SparsePCA`"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:111
msgid ":obj:`TruncatedSVD`"
msgstr ":obj:`TruncatedSVD`"

#: of sklearn.decomposition._base._BasePCA.inverse_transform:25
#: sklearn.decomposition._incremental_pca.IncrementalPCA:115
msgid "Notes"
msgstr "Notas"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:116
msgid "Implements the incremental PCA model from: *D. Ross, J. Lim, R. Lin, M. Yang, Incremental Learning for Robust Visual Tracking, International Journal of Computer Vision, Volume 77, Issue 1-3, pp. 125-141, May 2008.* See https://www.cs.toronto.edu/~dross/ivt/RossLimLinYang_ijcv.pdf"
msgstr "Implementa el modelo de PCA incremental de: *D. Ross, J. Lim, R. Lin, M. Yang, Incremental Learning for Robust Visual Tracking, International Journal of Computer Vision, Volume 77, Issue 1-3, pp. 125-141, Mayo de 2008.* Ver https://www.cs.toronto.edu/~dross/ivt/RossLimLinYang_ijcv.pdf"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:122
msgid "This model is an extension of the Sequential Karhunen-Loeve Transform from: *A. Levy and M. Lindenbaum, Sequential Karhunen-Loeve Basis Extraction and its Application to Images, IEEE Transactions on Image Processing, Volume 9, Number 8, pp. 1371-1374, August 2000.* See https://www.cs.technion.ac.il/~mic/doc/skl-ip.pdf"
msgstr "Este modelo es una extensión de la Transformación Secuencial Karhunen-Loeve de: *A. Levy y M. Lindenbaum, Sequential Karhunen-Loeve Basis Extraction and its Application to Images, IEEE Transactions on Image Processing, Volume 9, Number 8, pp. 1371-1374, August 2000.* Ver https://www.cs.technion.ac.il/~mic/doc/skl-ip.pdf"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:128
msgid "We have specifically abstained from an optimization used by authors of both papers, a QR decomposition used in specific situations to reduce the algorithmic complexity of the SVD. The source for this technique is *Matrix Computations, Third Edition, G. Holub and C. Van Loan, Chapter 5, section 5.4.4, pp 252-253.*. This technique has been omitted because it is advantageous only when decomposing a matrix with ``n_samples`` (rows) >= 5/3 * ``n_features`` (columns), and hurts the readability of the implemented algorithm. This would be a good opportunity for future optimization, if it is deemed necessary."
msgstr "Nos hemos abstenido específicamente de una optimización utilizada por los autores de ambos artículos, una descomposición QR utilizada en situaciones específicas para reducir la complejidad algorítmica de la SVD. La fuente de esta técnica es *Matrix Computations, Tercera Edición, G. Holub y C. Van Loan, Capítulo 5, Sección 5.4.4, pp 252-253.*. Esta técnica se ha omitido porque sólo es ventajosa al descomponer cuando se descompone una matriz con ``n_samples`` (filas) >= 5/3 * ``n_features``(columnas), y perjudica la legibilidad del algoritmo implementado. Esta sería una buena oportunidad para una optimización futura, si se considera necesaria."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:139
msgid "References"
msgstr "Referencias"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:140
msgid "D. Ross, J. Lim, R. Lin, M. Yang. Incremental Learning for Robust Visual Tracking, International Journal of Computer Vision, Volume 77, Issue 1-3, pp. 125-141, May 2008."
msgstr "D. Ross, J. Lim, R. Lin, M. Yang. Incremental Learning for Robust Visual Tracking, International Journal of Computer Vision, Volume 77, Issue 1-3, pp. 125-141, Mayo de 2008."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:144
msgid "G. Golub and C. Van Loan. Matrix Computations, Third Edition, Chapter 5, Section 5.4.4, pp. 252-253."
msgstr "G. Golub and C. Van Loan. Matrix Computations, Third Edition, Chapter 5, Section 5.4.4, pp. 252-253."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:152
#: sklearn.decomposition._incremental_pca.IncrementalPCA.transform:29
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:168
msgid "Methods"
msgstr "Métodos"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.IncrementalPCA.fit>`\\"
msgstr ":obj:`fit <sklearn.decomposition.IncrementalPCA.fit>`\\"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA.fit:2
#: sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid "Fit the model with X, using minibatches of size batch_size."
msgstr "Ajuste del modelo con X, utilizando minilotes de tamaño batch_size."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.decomposition.IncrementalPCA.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.decomposition.IncrementalPCA.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta a los datos y luego los transforma."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid ":obj:`get_covariance <sklearn.decomposition.IncrementalPCA.get_covariance>`\\"
msgstr ":obj:`get_covariance <sklearn.decomposition.IncrementalPCA.get_covariance>`\\"

#: of sklearn.decomposition._base._BasePCA.get_covariance:2
#: sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid "Compute data covariance with the generative model."
msgstr "Calcula la covarianza de los datos con el modelo generativo."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.IncrementalPCA.get_params>`\\"
msgstr ":obj:`get_params <sklearn.decomposition.IncrementalPCA.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid ":obj:`get_precision <sklearn.decomposition.IncrementalPCA.get_precision>`\\"
msgstr ":obj:`get_precision <sklearn.decomposition.IncrementalPCA.get_precision>`\\"

#: of sklearn.decomposition._base._BasePCA.get_precision:2
#: sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid "Compute data precision matrix with the generative model."
msgstr "Calcula la matriz de precisión de los datos con el modelo generativo."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.decomposition.IncrementalPCA.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.decomposition.IncrementalPCA.inverse_transform>`\\"

#: of sklearn.decomposition._base._BasePCA.inverse_transform:2
#: sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid "Transform data back to its original space."
msgstr "Transforma los datos a su espacio original."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.decomposition.IncrementalPCA.partial_fit>`\\"
msgstr ":obj:`partial_fit <sklearn.decomposition.IncrementalPCA.partial_fit>`\\"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid "Incremental fit with X."
msgstr "Ajuste incremental con X."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid ":obj:`set_params <sklearn.decomposition.IncrementalPCA.set_params>`\\"
msgstr ":obj:`set_params <sklearn.decomposition.IncrementalPCA.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.IncrementalPCA.transform>`\\"
msgstr ":obj:`transform <sklearn.decomposition.IncrementalPCA.transform>`\\"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA.transform:2
#: sklearn.decomposition._incremental_pca.IncrementalPCA:180:<autosummary>:1
msgid "Apply dimensionality reduction to X."
msgstr "Aplica la reducción de la dimensionalidad a X."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.decomposition._base._BasePCA.inverse_transform:10
#: sklearn.decomposition._incremental_pca.IncrementalPCA.fit:9
#: sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit:9
#: sklearn.decomposition._incremental_pca.IncrementalPCA.transform:12
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA.fit:8
#: sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit:8
msgid "Training data, where n_samples is the number of samples and n_features is the number of features."
msgstr "Datos de entrenamiento, donde n_samples es el número de muestras y n_features es el número de características."

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.decomposition._incremental_pca.IncrementalPCA.fit:12
#: sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit:15
msgid "**y**"
msgstr "**y**"

#: of
msgid "Ignored"
msgstr "Ignored"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._base._BasePCA.get_covariance
#: sklearn.decomposition._base._BasePCA.get_precision
#: sklearn.decomposition._base._BasePCA.inverse_transform
#: sklearn.decomposition._incremental_pca.IncrementalPCA.fit
#: sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit
#: sklearn.decomposition._incremental_pca.IncrementalPCA.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.decomposition._incremental_pca.IncrementalPCA.fit:28
#: sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit:31
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA.fit:17
#: sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit:20
msgid "Returns the instance itself."
msgstr "Devuelve la propia instancia."

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` e `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.decomposition._incremental_pca.IncrementalPCA.transform:26
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "ndarray array de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.decomposition._base._BasePCA.get_covariance:4
msgid "``cov = components_.T * S**2 * components_ + sigma2 * eye(n_features)`` where S**2 contains the explained variances, and sigma2 contains the noise variances."
msgstr "``cov = components_.T * S**2 * components_ + sigma2 * eye(n_features)`` donde S**2 contiene las varianzas explicadas, y sigma2 contiene las varianzas del ruido."

#: of sklearn.decomposition._base._BasePCA.get_covariance:23
msgid "**cov**"
msgstr "**cov**"

#: of
msgid "array, shape=(n_features, n_features)"
msgstr "array, shape=(n_features, n_features)"

#: of sklearn.decomposition._base._BasePCA.get_covariance:12
msgid "Estimated covariance of data."
msgstr "Covarianza estimada de los datos."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.decomposition._base._BasePCA.get_precision:4
msgid "Equals the inverse of the covariance but computed with the matrix inversion lemma for efficiency."
msgstr "Es igual a la inversa de la covarianza, pero calculada con el lema de inversión de matrices por eficiencia."

#: of sklearn.decomposition._base._BasePCA.get_precision:22
msgid "**precision**"
msgstr "**precision**"

#: of sklearn.decomposition._base._BasePCA.get_precision:11
msgid "Estimated precision of data."
msgstr "Precisión estimada de los datos."

#: of sklearn.decomposition._base._BasePCA.inverse_transform:4
msgid "In other words, return an input X_original whose transform would be X."
msgstr "En otras palabras, devuelve una entrada X_original cuya transformación sería X."

#: of
msgid "array-like, shape (n_samples, n_components)"
msgstr "array-like, shape (n_samples, n_components)"

#: of sklearn.decomposition._base._BasePCA.inverse_transform:9
msgid "New data, where n_samples is the number of samples and n_components is the number of components."
msgstr "Nuevos datos, donde n_samples es el número de muestras y n_components es el número de componentes."

#: of sklearn.decomposition._base._BasePCA.inverse_transform:22
msgid "X_original array-like, shape (n_samples, n_features)"
msgstr "X_original array-like, de forma (n_samples, n_features)"

#: of sklearn.decomposition._base._BasePCA.inverse_transform:26
msgid "If whitening is enabled, inverse_transform will compute the exact inverse operation, which includes reversing whitening."
msgstr "Si whitening está activado, inverse_transform calculará la operación inversa exacta, que incluye el whitening reversible."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit:2
msgid "Incremental fit with X. All of X is processed as a single batch."
msgstr "Ajuste incremental con X. Todo X se procesa como un solo lote."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit:12
msgid "**check_input**"
msgstr "**check_input**"

#: of sklearn.decomposition._incremental_pca.IncrementalPCA.partial_fit:12
msgid "Run check_array on X."
msgstr "Ejecuta check_array en X."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA.transform:4
msgid "X is projected on the first principal components previously extracted from a training set, using minibatches of size batch_size if X is sparse."
msgstr "X se proyecta sobre los primeros componentes principales previamente extraídos de un conjunto de entrenamiento, utilizando minilotes de tamaño batch_size si X es disperso."

#: of sklearn.decomposition._incremental_pca.IncrementalPCA.transform:11
msgid "New data, where n_samples is the number of samples and n_features is the number of features."
msgstr "Nuevos datos, donde n_samples es el número de muestras y n_features es el número de características."

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr "ndarray de forma (n_samples, n_components)"

