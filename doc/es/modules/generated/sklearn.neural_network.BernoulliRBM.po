msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-05 00:31\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.neural_network.BernoulliRBM.po\n"
"X-Crowdin-File-ID: 5180\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.neural_network.BernoulliRBM.rst:2
msgid ":mod:`sklearn.neural_network`.BernoulliRBM"
msgstr ":mod:`sklearn.neural_network`.BernoulliRBM"

#: of sklearn.neural_network._rbm.BernoulliRBM:2
msgid "Bernoulli Restricted Boltzmann Machine (RBM)."
msgstr "Máquina de Boltzmann restringida de Bernoulli (RBM)."

#: of sklearn.neural_network._rbm.BernoulliRBM:4
msgid "A Restricted Boltzmann Machine with binary visible units and binary hidden units. Parameters are estimated using Stochastic Maximum Likelihood (SML), also known as Persistent Contrastive Divergence (PCD) [2]."
msgstr "Una máquina de Boltzmann restringida con unidades visibles binarias y unidades ocultas binarias. Los parámetros se estiman utilizando la máxima verosimilitud estocástica (SML), también conocida como divergencia contrastiva persistente (PCD) [2]."

#: of sklearn.neural_network._rbm.BernoulliRBM:9
msgid "The time complexity of this implementation is ``O(d ** 2)`` assuming d ~ n_features ~ n_components."
msgstr "La complejidad del tiempo de esta implementación es ``O(d ** 2)`` asumiendo d ~ n_features ~ n_components."

#: of sklearn.neural_network._rbm.BernoulliRBM:12
msgid "Read more in the :ref:`User Guide <rbm>`."
msgstr "Lee más en el :ref:`Manual de usuario <rbm>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.neural_network._rbm.BernoulliRBM
#: sklearn.neural_network._rbm.BernoulliRBM.fit
#: sklearn.neural_network._rbm.BernoulliRBM.gibbs
#: sklearn.neural_network._rbm.BernoulliRBM.partial_fit
#: sklearn.neural_network._rbm.BernoulliRBM.score_samples
#: sklearn.neural_network._rbm.BernoulliRBM.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.neural_network._rbm.BernoulliRBM:17
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=256"
msgstr "entero, default=256"

#: of sklearn.neural_network._rbm.BernoulliRBM:17
msgid "Number of binary hidden units."
msgstr "Número de unidades binarias ocultas."

#: of sklearn.neural_network._rbm.BernoulliRBM:22
msgid "**learning_rate**"
msgstr "**learning_rate**"

#: of
msgid "float, default=0.1"
msgstr "flotante, default=0.1"

#: of sklearn.neural_network._rbm.BernoulliRBM:20
msgid "The learning rate for weight updates. It is *highly* recommended to tune this hyper-parameter. Reasonable values are in the 10**[0., -3.] range."
msgstr "La tasa de aprendizaje para las actualizaciones de peso. Es *altamente* recomendable afinar este hiperparámetro. Los valores razonables están en el rango de 10**[0., -3.]."

#: of sklearn.neural_network._rbm.BernoulliRBM:25
msgid "**batch_size**"
msgstr "**batch_size**"

#: of
msgid "int, default=10"
msgstr "entero, default=10"

#: of sklearn.neural_network._rbm.BernoulliRBM:25
msgid "Number of examples per minibatch."
msgstr "Número de ejemplos por minilote."

#: of sklearn.neural_network._rbm.BernoulliRBM:29
msgid "**n_iter**"
msgstr "**n_iter**"

#: of sklearn.neural_network._rbm.BernoulliRBM:28
msgid "Number of iterations/sweeps over the training dataset to perform during training."
msgstr "Número de iteraciones/barridos sobre el conjunto de datos de entrenamiento para realizar durante el entrenamiento."

#: of sklearn.neural_network._rbm.BernoulliRBM:32
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int, default=0"
msgstr "entero, default=0"

#: of sklearn.neural_network._rbm.BernoulliRBM:32
msgid "The verbosity level. The default, zero, means silent mode."
msgstr "El nivel de verbosidad. El valor predeterminado, cero, significa modo silencioso."

#: of sklearn.neural_network._rbm.BernoulliRBM:47
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "entero, instancia de RandomState o None, default=None"

#: of sklearn.neural_network._rbm.BernoulliRBM:35
msgid "Determines random number generation for:"
msgstr "Determina la generación de números aleatorios para:"

#: of sklearn.neural_network._rbm.BernoulliRBM:37
msgid "Gibbs sampling from visible and hidden layers."
msgstr "Muestreo de Gibbs de capas visibles y ocultas."

#: of sklearn.neural_network._rbm.BernoulliRBM:39
msgid "Initializing components, sampling from layers during fit."
msgstr "Inicializar componentes, muestreo de capas durante el ajuste."

#: of sklearn.neural_network._rbm.BernoulliRBM:41
msgid "Corrupting the data when scoring samples."
msgstr "Corrompiendo los datos al marcar muestras."

#: of sklearn.neural_network._rbm.BernoulliRBM:43
msgid "Pass an int for reproducible results across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Pase un entero para obtener resultados reproducibles a través de múltiples llamadas a la función. Véase :term:`Glosario <random_state>`."

#: of sklearn.neural_network._rbm.BernoulliRBM
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.neural_network._rbm.BernoulliRBM:52
msgid "**intercept_hidden_**"
msgstr "**intercept_hidden_**"

#: of
msgid "array-like of shape (n_components,)"
msgstr "array-like de forma (n_components,)"

#: of sklearn.neural_network._rbm.BernoulliRBM:52
msgid "Biases of the hidden units."
msgstr "Sesgos de las unidades ocultas."

#: of sklearn.neural_network._rbm.BernoulliRBM:55
msgid "**intercept_visible_**"
msgstr "**intercept_visible_**"

#: of
msgid "array-like of shape (n_features,)"
msgstr "array-like of forma (n_features,)"

#: of sklearn.neural_network._rbm.BernoulliRBM:55
msgid "Biases of the visible units."
msgstr "Sesgos de las unidades visibles."

#: of sklearn.neural_network._rbm.BernoulliRBM:59
msgid "**components_**"
msgstr "**components_**"

#: of
msgid "array-like of shape (n_components, n_features)"
msgstr "array-like de forma (n_components, n_features)"

#: of sklearn.neural_network._rbm.BernoulliRBM:58
msgid "Weight matrix, where n_features in the number of visible units and n_components is the number of hidden units."
msgstr "La matriz de ponderaciones, donde n_features en el número de unidades visibles y n_components es el número de unidades ocultas."

#: of sklearn.neural_network._rbm.BernoulliRBM:69
msgid "**h_samples_**"
msgstr "**h_samples_**"

#: of
msgid "array-like of shape (batch_size, n_components)"
msgstr "array-like de forma (batch_size, n_components)"

#: of sklearn.neural_network._rbm.BernoulliRBM:62
msgid "Hidden Activation sampled from the model distribution, where batch_size in the number of examples per minibatch and n_components is the number of hidden units."
msgstr "Activación oculta muestreada a partir de la distribución del modelo, donde batch_size en el número de ejemplos por minilotes y n_components es el número de unidades ocultas."

#: of sklearn.neural_network._rbm.BernoulliRBM:72
msgid "References"
msgstr "Referencias"

#: of sklearn.neural_network._rbm.BernoulliRBM:75
msgid "[1] Hinton, G. E., Osindero, S. and Teh, Y. A fast learning algorithm for"
msgstr "[1] Hinton, G. E., Osindero, S. and Teh, Y. A fast learning algorithm for"

#: of sklearn.neural_network._rbm.BernoulliRBM:74
msgid "deep belief nets. Neural Computation 18, pp 1527-1554. https://www.cs.toronto.edu/~hinton/absps/fastnc.pdf"
msgstr "deep belief nets. Neural Computation 18, pp 1527-1554. https://www.cs.toronto.edu/~hinton/absps/fastnc.pdf"

#: of sklearn.neural_network._rbm.BernoulliRBM:79
msgid "[2] Tieleman, T. Training Restricted Boltzmann Machines using"
msgstr "[2] Tieleman, T. Training Restricted Boltzmann Machines using"

#: of sklearn.neural_network._rbm.BernoulliRBM:78
msgid "Approximations to the Likelihood Gradient. International Conference on Machine Learning (ICML) 2008"
msgstr "Approximations to the Likelihood Gradient. International Conference on Machine Learning (ICML) 2008"

#: of sklearn.neural_network._rbm.BernoulliRBM:86
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.neural_network._rbm.BernoulliRBM:95
msgid "Methods"
msgstr "Métodos"

#: of sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid ":obj:`fit <sklearn.neural_network.BernoulliRBM.fit>`\\"
msgstr ":obj:`fit <sklearn.neural_network.BernoulliRBM.fit>`\\"

#: of sklearn.neural_network._rbm.BernoulliRBM.fit:2
#: sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid "Fit the model to the data X."
msgstr "Ajusta el modelo a los datos X."

#: of sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.neural_network.BernoulliRBM.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.neural_network.BernoulliRBM.fit_transform>`\\"

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr "Ajusta a los datos y luego los transforma."

#: of sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid ":obj:`get_params <sklearn.neural_network.BernoulliRBM.get_params>`\\"
msgstr ":obj:`get_params <sklearn.neural_network.BernoulliRBM.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid ":obj:`gibbs <sklearn.neural_network.BernoulliRBM.gibbs>`\\"
msgstr ":obj:`gibbs <sklearn.neural_network.BernoulliRBM.gibbs>`\\"

#: of sklearn.neural_network._rbm.BernoulliRBM.gibbs:2
#: sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid "Perform one Gibbs sampling step."
msgstr "Realiza un paso de muestreo de Gibbs."

#: of sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.neural_network.BernoulliRBM.partial_fit>`\\"
msgstr ":obj:`partial_fit <sklearn.neural_network.BernoulliRBM.partial_fit>`\\"

#: of sklearn.neural_network._rbm.BernoulliRBM.partial_fit:2
#: sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid "Fit the model to the data X which should contain a partial segment of the data."
msgstr "Ajusta el modelo a los datos X que deben contener un segmento parcial de los datos."

#: of sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid ":obj:`score_samples <sklearn.neural_network.BernoulliRBM.score_samples>`\\"
msgstr ":obj:`score_samples <sklearn.neural_network.BernoulliRBM.score_samples>`\\"

#: of sklearn.neural_network._rbm.BernoulliRBM.score_samples:2
#: sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid "Compute the pseudo-likelihood of X."
msgstr "Calcula la pseudoverosimilitud de X."

#: of sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid ":obj:`set_params <sklearn.neural_network.BernoulliRBM.set_params>`\\"
msgstr ":obj:`set_params <sklearn.neural_network.BernoulliRBM.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid ":obj:`transform <sklearn.neural_network.BernoulliRBM.transform>`\\"
msgstr ":obj:`transform <sklearn.neural_network.BernoulliRBM.transform>`\\"

#: of sklearn.neural_network._rbm.BernoulliRBM.transform:2
#: sklearn.neural_network._rbm.BernoulliRBM:106:<autosummary>:1
msgid "Compute the hidden layer activation probabilities, P(h=1|v=X)."
msgstr "Calcula las probabilidades de activación de capa oculta, P(h=1|v=X)."

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.neural_network._rbm.BernoulliRBM.fit:8
#: sklearn.neural_network._rbm.BernoulliRBM.partial_fit:9
#: sklearn.neural_network._rbm.BernoulliRBM.score_samples:8
#: sklearn.neural_network._rbm.BernoulliRBM.transform:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.neural_network._rbm.BernoulliRBM.fit:8
#: sklearn.neural_network._rbm.BernoulliRBM.partial_fit:9
msgid "Training data."
msgstr "Datos de entrenamiento."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.neural_network._rbm.BernoulliRBM.fit
#: sklearn.neural_network._rbm.BernoulliRBM.gibbs
#: sklearn.neural_network._rbm.BernoulliRBM.partial_fit
#: sklearn.neural_network._rbm.BernoulliRBM.score_samples
#: sklearn.neural_network._rbm.BernoulliRBM.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.neural_network._rbm.BernoulliRBM.fit:24
#: sklearn.neural_network._rbm.BernoulliRBM.partial_fit:25
msgid "**self**"
msgstr "**self**"

#: of
msgid "BernoulliRBM"
msgstr "BernoulliRBM"

#: of sklearn.neural_network._rbm.BernoulliRBM.fit:13
#: sklearn.neural_network._rbm.BernoulliRBM.partial_fit:14
msgid "The fitted model."
msgstr "El modelo ajustado."

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr "Ajusta el transformador a `X` y `y` con los parámetros opcionales `fit_params` y devuelve una versión transformada de `X`."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr "Muestras de entrada."

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs),                 default=None"

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr "Valores objetivo (None para transformaciones no supervisadas)."

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr "Parámetros de ajuste adicionales."

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr "**X_new**"

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr "ndarray arreglo de forma (n_samples, n_features_new)"

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr "Arreglo transformado."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "booleano, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.neural_network._rbm.BernoulliRBM.gibbs:8
msgid "**v**"
msgstr "**v**"

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr "ndarray de forma [n_samples, n_features)"

#: of sklearn.neural_network._rbm.BernoulliRBM.gibbs:8
msgid "Values of the visible layer to start from."
msgstr "Valores de la capa visible desde donde comenzar."

#: of sklearn.neural_network._rbm.BernoulliRBM.gibbs:24
msgid "**v_new**"
msgstr "**v_new**"

#: of sklearn.neural_network._rbm.BernoulliRBM.gibbs:13
msgid "Values of the visible layer after one Gibbs step."
msgstr "Valores de la capa visible después de un paso de Gibbs."

#: of sklearn.neural_network._rbm.BernoulliRBM.score_samples:8
msgid "Values of the visible layer. Must be all-boolean (not checked)."
msgstr "Valores de la capa visible. Debe ser todo booleano (no seleccionado)."

#: of sklearn.neural_network._rbm.BernoulliRBM.score_samples:20
msgid "**pseudo_likelihood**"
msgstr "**pseudo_likelihood**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.neural_network._rbm.BernoulliRBM.score_samples:13
msgid "Value of the pseudo-likelihood (proxy for likelihood)."
msgstr "Valor de la pseudoverosimilitud (proxy de la verosimilitud)."

#: of sklearn.neural_network._rbm.BernoulliRBM.score_samples:23
msgid "Notes"
msgstr "Notas"

#: of sklearn.neural_network._rbm.BernoulliRBM.score_samples:24
msgid "This method is not deterministic: it computes a quantity called the free energy on X, then on a randomly corrupted version of X, and returns the log of the logistic function of the difference."
msgstr "Este método no es determinista: calcula una cantidad llamada energía libre en X, luego en una versión aleatoriamente corrupta de X, y devuelve el registro de la función logística de la diferencia."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: of sklearn.neural_network._rbm.BernoulliRBM.transform:8
msgid "The data to be transformed."
msgstr "Los datos que serán transformados."

#: of sklearn.neural_network._rbm.BernoulliRBM.transform:24
msgid "**h**"
msgstr "**h**"

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr "ndarray de forma (n_samples, n_components)"

#: of sklearn.neural_network._rbm.BernoulliRBM.transform:13
msgid "Latent representations of the data."
msgstr "Representaciones latentes de los datos."

#: ../modules/generated/sklearn.neural_network.BernoulliRBM.examples:4
msgid "Examples using ``sklearn.neural_network.BernoulliRBM``"
msgstr "Ejemplos con ``sklearn.neural_network.BernoulliRBM``"

#: ../modules/generated/sklearn.neural_network.BernoulliRBM.examples:15
#: ../modules/generated/sklearn.neural_network.BernoulliRBM.examples:23
msgid ":ref:`sphx_glr_auto_examples_neural_networks_plot_rbm_logistic_classification.py`"
msgstr ":ref:`sphx_glr_auto_examples_neural_networks_plot_rbm_logistic_classification.py`"

