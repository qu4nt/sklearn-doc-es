msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-04-15 00:03\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.svm.OneClassSVM.po\n"
"X-Crowdin-File-ID: 3754\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.svm.OneClassSVM.rst:2
msgid ":mod:`sklearn.svm`.OneClassSVM"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:2
msgid "Unsupervised Outlier Detection."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:4
msgid "Estimate the support of a high-dimensional distribution."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:6
msgid "The implementation is based on libsvm."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:8
msgid "Read more in the :ref:`User Guide <outlier_detection>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.OutlierMixin.fit_predict
#: sklearn.svm._classes.OneClassSVM
#: sklearn.svm._classes.OneClassSVM.decision_function
#: sklearn.svm._classes.OneClassSVM.fit
#: sklearn.svm._classes.OneClassSVM.predict
#: sklearn.svm._classes.OneClassSVM.score_samples
msgid "Parameters"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:17
msgid "**kernel**"
msgstr ""

#: of
msgid "{'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}, default='rbf'"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:13
msgid "Specifies the kernel type to be used in the algorithm. It must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or a callable. If none is given, 'rbf' will be used. If a callable is given it is used to precompute the kernel matrix."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:21
msgid "**degree**"
msgstr ""

#: of
msgid "int, default=3"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:20
msgid "Degree of the polynomial kernel function ('poly'). Ignored by all other kernels."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:31
msgid "**gamma**"
msgstr ""

#: of
msgid "{'scale', 'auto'} or float, default='scale'"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:24
msgid "Kernel coefficient for 'rbf', 'poly' and 'sigmoid'."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:26
msgid "if ``gamma='scale'`` (default) is passed then it uses 1 / (n_features * X.var()) as value of gamma,"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:28
msgid "if 'auto', uses 1 / n_features."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:30
msgid "The default value of ``gamma`` changed from 'auto' to 'scale'."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:35
msgid "**coef0**"
msgstr ""

#: of
msgid "float, default=0.0"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:34
msgid "Independent term in kernel function. It is only significant in 'poly' and 'sigmoid'."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:38
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-3"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:38
msgid "Tolerance for stopping criterion."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:44
msgid "**nu**"
msgstr ""

#: of
msgid "float, default=0.5"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:41
msgid "An upper bound on the fraction of training errors and a lower bound of the fraction of support vectors. Should be in the interval (0, 1]. By default 0.5 will be taken."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:48
msgid "**shrinking**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:47
msgid "Whether to use the shrinking heuristic. See the :ref:`User Guide <shrinking_svm>`."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:51
msgid "**cache_size**"
msgstr ""

#: of
msgid "float, default=200"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:51
msgid "Specify the size of the kernel cache (in MB)."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:56
msgid "**verbose**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:54
msgid "Enable verbose output. Note that this setting takes advantage of a per-process runtime setting in libsvm that, if enabled, may not work properly in a multithreaded context."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:62
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=-1"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:59
msgid "Hard limit on iterations within solver, or -1 for no limit."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM
msgid "Attributes"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:68
msgid "**class_weight_**"
msgstr ""

#: of
msgid "ndarray of shape (n_classes,)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:67
msgid "Multipliers of parameter C for each class. Computed based on the ``class_weight`` parameter."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:75
msgid "**coef_**"
msgstr ""

#: of
msgid "ndarray of shape (1, n_features)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:71
msgid "Weights assigned to the features (coefficients in the primal problem). This is only available in the case of a linear kernel."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:74
msgid "`coef_` is readonly property derived from `dual_coef_` and `support_vectors_`."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:78
msgid "**dual_coef_**"
msgstr ""

#: of
msgid "ndarray of shape (1, n_SV)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:78
msgid "Coefficients of the support vectors in the decision function."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:81
msgid "**fit_status_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:81
msgid "0 if correctly fitted, 1 otherwise (will raise warning)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:84
msgid "**intercept_**"
msgstr ""

#: of
msgid "ndarray of shape (1,)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:84
msgid "Constant in the decision function."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:87
msgid "**n_support_**"
msgstr ""

#: of
msgid "ndarray of shape (n_classes,), dtype=int32"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:87
msgid "Number of support vectors for each class."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:95
msgid "**offset_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:90
msgid "Offset used to define the decision function from the raw scores. We have the relation: decision_function = score_samples - `offset_`. The offset is the opposite of `intercept_` and is provided for consistency with other outlier detection algorithms."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:98
msgid "**shape_fit_**"
msgstr ""

#: of
msgid "tuple of int of shape (n_dimensions_of_X,)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:98
msgid "Array dimensions of training vector ``X``."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:101
msgid "**support_**"
msgstr ""

#: of
msgid "ndarray of shape (n_SV,)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:101
msgid "Indices of support vectors."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:110
msgid "**support_vectors_**"
msgstr ""

#: of
msgid "ndarray of shape (n_SV, n_features)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:104
msgid "Support vectors."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:113
msgid "Examples"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:123
msgid "Methods"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid ":obj:`decision_function <sklearn.svm.OneClassSVM.decision_function>`\\"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.decision_function:2
#: sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid "Signed distance to the separating hyperplane."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid ":obj:`fit <sklearn.svm.OneClassSVM.fit>`\\"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.fit:2
#: sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid "Detects the soft boundary of the set of samples X."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid ":obj:`fit_predict <sklearn.svm.OneClassSVM.fit_predict>`\\"
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:2
#: sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid "Perform fit on X and returns labels for X."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid ":obj:`get_params <sklearn.svm.OneClassSVM.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid ":obj:`predict <sklearn.svm.OneClassSVM.predict>`\\"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.predict:2
#: sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid "Perform classification on samples in X."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid ":obj:`score_samples <sklearn.svm.OneClassSVM.score_samples>`\\"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.score_samples:2
#: sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid "Raw scoring function of the samples."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid ":obj:`set_params <sklearn.svm.OneClassSVM.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.svm._classes.OneClassSVM:133:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.decision_function:4
msgid "Signed distance is positive for an inlier and negative for an outlier."
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:9
#: sklearn.svm._classes.OneClassSVM.decision_function:9
#: sklearn.svm._classes.OneClassSVM.fit:9
#: sklearn.svm._classes.OneClassSVM.predict:10
#: sklearn.svm._classes.OneClassSVM.score_samples:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.decision_function:9
#: sklearn.svm._classes.OneClassSVM.score_samples:8
msgid "The data matrix."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.OutlierMixin.fit_predict
#: sklearn.svm._classes.OneClassSVM.decision_function
#: sklearn.svm._classes.OneClassSVM.fit
#: sklearn.svm._classes.OneClassSVM.predict
#: sklearn.svm._classes.OneClassSVM.score_samples
msgid "Returns"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.decision_function:25
msgid "**dec**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.decision_function:14
msgid "Returns the decision function of the samples."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.fit:8
msgid "Set of samples, where n_samples is the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.fit:13
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.fit:12
msgid "Per-sample weights. Rescale C per sample. Higher weights force the classifier to put more emphasis on these points."
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:12
#: sklearn.base.OutlierMixin.fit_predict:28
#: sklearn.svm._classes.OneClassSVM.fit:16
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.fit:16
msgid "not used, present for API consistency by convention."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.svm._classes.OneClassSVM.fit:28
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.fit:31
msgid "Notes"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.fit:32
msgid "If X is not a C-ordered contiguous array it is copied."
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:4
msgid "Returns -1 for outliers and 1 for inliers."
msgstr ""

#: of
msgid "{array-like, sparse matrix, dataframe} of shape             (n_samples, n_features)"
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:12
msgid "Not used, present for API consistency by convention."
msgstr ""

#: of sklearn.base.OutlierMixin.fit_predict:17
msgid "1 for inliers, -1 for outliers."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.predict:4
msgid "For a one-class model, +1 or -1 is returned."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features) or                 (n_samples_test, n_samples_train)"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.predict:9
msgid "For kernel=\"precomputed\", the expected shape of X is (n_samples_test, n_samples_train)."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.predict:26
msgid "**y_pred**"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.predict:15
msgid "Class labels for samples in X."
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.score_samples:24
msgid "**score_samples**"
msgstr ""

#: of sklearn.svm._classes.OneClassSVM.score_samples:13
msgid "Returns the (unshifted) scoring function of the samples."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.svm.OneClassSVM.examples:4
msgid "Examples using ``sklearn.svm.OneClassSVM``"
msgstr ""

#: ../modules/generated/sklearn.svm.OneClassSVM.examples:15
#: ../modules/generated/sklearn.svm.OneClassSVM.examples:23
msgid ":ref:`sphx_glr_auto_examples_applications_svm_gui.py`"
msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_applications_plot_species_distribution_modeling.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_anomaly_comparison.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_svm_plot_oneclass.py`"
#~ msgstr ""

