msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-14 00:01\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.cross_decomposition.PLSCanonical.po\n"
"X-Crowdin-File-ID: 5728\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.cross_decomposition.PLSCanonical.rst:2
msgid ":mod:`sklearn.cross_decomposition`.PLSCanonical"
msgstr ":mod:`sklearn.cross_decomposition`.PLSCanonical"

#: of sklearn.cross_decomposition._pls.PLSCanonical:2
msgid "Partial Least Squares transformer and regressor."
msgstr "Transformador de mínimos cuadrados parciales y regresor."

#: of sklearn.cross_decomposition._pls.PLSCanonical:4
msgid "Read more in the :ref:`User Guide <cross_decomposition>`."
msgstr "Lee más en el :ref:`Manual del usuario <descomposición_cruzada>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.cross_decomposition._pls.PLSCanonical
#: sklearn.cross_decomposition._pls._PLS.fit
#: sklearn.cross_decomposition._pls._PLS.fit_transform
#: sklearn.cross_decomposition._pls._PLS.inverse_transform
#: sklearn.cross_decomposition._pls._PLS.predict
#: sklearn.cross_decomposition._pls._PLS.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.cross_decomposition._pls.PLSCanonical:12
msgid "**n_components**"
msgstr "**n_components**"

#: of
msgid "int, default=2"
msgstr "int, default=2"

#: of sklearn.cross_decomposition._pls.PLSCanonical:11
msgid "Number of components to keep. Should be in `[1, min(n_samples, n_features, n_targets)]`."
msgstr "Número de componentes a conservar. Debe estar en `[1, min(n_muestras, n_características, n_objetivos)]`."

#: of sklearn.cross_decomposition._pls.PLSCanonical:15
msgid "**scale**"
msgstr "**scale**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.cross_decomposition._pls.PLSCanonical:15
msgid "Whether to scale `X` and `Y`."
msgstr "Si se escala `X` y `Y`."

#: of sklearn.cross_decomposition._pls.PLSCanonical:20
msgid "**algorithm**"
msgstr "**algorithm**"

#: of
msgid "{'nipals', 'svd'}, default='nipals'"
msgstr "{'nipals', 'svd'}, default='nipals'"

#: of sklearn.cross_decomposition._pls.PLSCanonical:18
msgid "The algorithm used to estimate the first singular vectors of the cross-covariance matrix. 'nipals' uses the power method while 'svd' will compute the whole SVD."
msgstr "El algoritmo utilizado para estimar los primeros vectores singulares de la matriz de covarianza cruzada. 'nipals' utiliza el método de la potencia mientras que 'svd' calculará el SVD completo."

#: of sklearn.cross_decomposition._pls.PLSCanonical:24
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=500"
msgstr "int, default=500"

#: of sklearn.cross_decomposition._pls.PLSCanonical:23
msgid "the maximum number of iterations of the power method when `algorithm='nipals'`. Ignored otherwise."
msgstr "el número máximo de iteraciones del método de la potencia cuando `algoritmo='nipals'`. Se ignora en caso contrario."

#: of sklearn.cross_decomposition._pls.PLSCanonical:29
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-06"
msgstr "float, default=1e-06"

#: of sklearn.cross_decomposition._pls.PLSCanonical:27
msgid "The tolerance used as convergence criteria in the power method: the algorithm stops whenever the squared norm of `u_i - u_{i-1}` is less than `tol`, where `u` corresponds to the left singular vector."
msgstr "La tolerancia utilizada como criterio de convergencia en el método de potencia: el algoritmo se detiene siempre que la norma cuadrada de `u_i - u_{i-1}` sea menor que `tol`, donde `u` corresponde al vector singular izquierdo."

#: of sklearn.cross_decomposition._pls.PLSCanonical:37
#: sklearn.cross_decomposition._pls._PLS.predict:19
#: sklearn.cross_decomposition._pls._PLS.transform:14
msgid "**copy**"
msgstr "**copy**"

#: of sklearn.cross_decomposition._pls.PLSCanonical:32
msgid "Whether to copy `X` and `Y` in fit before applying centering, and potentially scaling. If False, these operations will be done inplace, modifying both arrays."
msgstr "Si se copian `X` y `Y` en el ajuste antes de aplicar el centrado, y potencialmente el escalado. Si es False, estas operaciones se harán en el lugar, modificando ambas matrices."

#: of sklearn.cross_decomposition._pls.PLSCanonical
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.cross_decomposition._pls.PLSCanonical:43
msgid "**x_weights_**"
msgstr "**x_weights_**"

#: of
msgid "ndarray of shape (n_features, n_components)"
msgstr "ndarray de forma (n_features, n_components)"

#: of sklearn.cross_decomposition._pls.PLSCanonical:42
msgid "The left singular vectors of the cross-covariance matrices of each iteration."
msgstr "Los vectores singulares izquierdos de las matrices de covarianza cruzada de cada iteración."

#: of sklearn.cross_decomposition._pls.PLSCanonical:47
msgid "**y_weights_**"
msgstr "**y_weights_**"

#: of
msgid "ndarray of shape (n_targets, n_components)"
msgstr "ndarray de forma (n_targets, n_components)"

#: of sklearn.cross_decomposition._pls.PLSCanonical:46
msgid "The right singular vectors of the cross-covariance matrices of each iteration."
msgstr "Los vectores singulares derechos de las matrices de covarianza cruzada de cada iteración."

#: of sklearn.cross_decomposition._pls.PLSCanonical:50
msgid "**x_loadings_**"
msgstr "**x_loadings_**"

#: of sklearn.cross_decomposition._pls.PLSCanonical:50
msgid "The loadings of `X`."
msgstr "Las cargas de `X`."

#: of sklearn.cross_decomposition._pls.PLSCanonical:53
msgid "**y_loadings_**"
msgstr "**y_loadings_**"

#: of sklearn.cross_decomposition._pls.PLSCanonical:53
msgid "The loadings of `Y`."
msgstr "Las cargas de `Y`."

#: of sklearn.cross_decomposition._pls.PLSCanonical:61
msgid "**x_scores_**"
msgstr "**x_scores_**"

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr "ndarray de forma (n_samples, n_components)"

#: of sklearn.cross_decomposition._pls.PLSCanonical:56
msgid "The transformed training samples."
msgstr "Las muestras de entrenamiento transformadas."

#: of sklearn.cross_decomposition._pls.PLSCanonical:58
msgid "`x_scores_` is deprecated in 0.24 and will be removed in 1.1 (renaming of 0.26). You can just call `transform` on the training data instead."
msgstr "La función `x_scores_` está obsoleta en 0.24 y se eliminará en 1.1 (cambio de nombre de 0.26). En su lugar, puede llamar a `transform` en los datos de entrenamiento."

#: of sklearn.cross_decomposition._pls.PLSCanonical:69
msgid "**y_scores_**"
msgstr "**y_scores_**"

#: of sklearn.cross_decomposition._pls.PLSCanonical:64
msgid "The transformed training targets."
msgstr "Los objetivos de entrenamiento transformados."

#: of sklearn.cross_decomposition._pls.PLSCanonical:66
msgid "`y_scores_` is deprecated in 0.24 and will be removed in 1.1 (renaming of 0.26). You can just call `transform` on the training data instead."
msgstr "La función `y_scores_` está obsoleta en la versión 0.24 y se eliminará en la 1.1 (cambio de nombre de la versión 0.26). En su lugar, puede llamar a `transformación` en los datos de entrenamiento."

#: of sklearn.cross_decomposition._pls.PLSCanonical:72
msgid "**x_rotations_**"
msgstr "**x_rotations_**"

#: of sklearn.cross_decomposition._pls.PLSCanonical:72
msgid "The projection matrix used to transform `X`."
msgstr "La matriz de proyección utilizada para transformar \"X\"."

#: of sklearn.cross_decomposition._pls.PLSCanonical:75
msgid "**y_rotations_**"
msgstr "**y_rotations_**"

#: of sklearn.cross_decomposition._pls.PLSCanonical:75
msgid "The projection matrix used to transform `Y`."
msgstr "La matriz de proyección utilizada para transformar \"Y\"."

#: of sklearn.cross_decomposition._pls.PLSCanonical:79
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (n_features, n_targets)"
msgstr "ndarray de forma (n_features, n_targets)"

#: of sklearn.cross_decomposition._pls.PLSCanonical:78
msgid "The coefficients of the linear model such that `Y` is approximated as `Y = X @ coef_`."
msgstr "Los coeficientes del modelo lineal tal que `Y` se aproxima como `Y = X @ coef_`."

#: of sklearn.cross_decomposition._pls.PLSCanonical:86
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "list of shape (n_components,)"
msgstr "lista de forma (n_components,)"

#: of sklearn.cross_decomposition._pls.PLSCanonical:82
msgid "Number of iterations of the power method, for each component. Empty if `algorithm='svd'`."
msgstr "Número de iteraciones del método de potencia, para cada componente. Vacío si `algoritmo='svd'`."

#: of sklearn.cross_decomposition._pls.PLSCanonical:91
msgid ":obj:`CCA`"
msgstr ":obj:`CCA`"

#: of sklearn.cross_decomposition._pls.PLSCanonical:93
msgid ":obj:`PLSSVD`"
msgstr ":obj:`PLSSVD`"

#: of sklearn.cross_decomposition._pls.PLSCanonical:99
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.cross_decomposition._pls.PLSCanonical:109
msgid "Methods"
msgstr "Métodos"

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid ":obj:`fit <sklearn.cross_decomposition.PLSCanonical.fit>`\\"
msgstr ":obj:`fit <sklearn.cross_decomposition.PLSCanonical.fit>`\\"

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.fit:2
msgid "Fit model to data."
msgstr "Ajustar el modelo a los datos."

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.cross_decomposition.PLSCanonical.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.cross_decomposition.PLSCanonical.fit_transform>`\\"

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.fit_transform:2
msgid "Learn and apply the dimension reduction on the train data."
msgstr "Aprender y aplicar la reducción de dimensión en los datos de entrenamiento."

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid ":obj:`get_params <sklearn.cross_decomposition.PLSCanonical.get_params>`\\"
msgstr ":obj:`get_params <sklearn.cross_decomposition.PLSCanonical.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtener los parámetros de este estimador."

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.cross_decomposition.PLSCanonical.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.cross_decomposition.PLSCanonical.inverse_transform>`\\"

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.inverse_transform:2
msgid "Transform data back to its original space."
msgstr "Transforma los datos de vuelta a su espacio original."

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid ":obj:`predict <sklearn.cross_decomposition.PLSCanonical.predict>`\\"
msgstr ":obj:`predict <sklearn.cross_decomposition.PLSCanonical.predict>`\\"

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.predict:2
msgid "Predict targets of given samples."
msgstr "Predecir los objetivos de las muestras dadas."

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid ":obj:`score <sklearn.cross_decomposition.PLSCanonical.score>`\\"
msgstr ":obj:`score <sklearn.cross_decomposition.PLSCanonical.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid ":obj:`set_params <sklearn.cross_decomposition.PLSCanonical.set_params>`\\"
msgstr ":obj:`set_params <sklearn.cross_decomposition.PLSCanonical.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
msgid ":obj:`transform <sklearn.cross_decomposition.PLSCanonical.transform>`\\"
msgstr ":obj:`transform <sklearn.cross_decomposition.PLSCanonical.transform>`\\"

#: of sklearn.cross_decomposition._pls.PLSCanonical:120:<autosummary>:1
#: sklearn.cross_decomposition._pls._PLS.transform:2
msgid "Apply the dimension reduction."
msgstr "Aplica la reducción de dimensión."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.cross_decomposition._pls._PLS.fit:9
#: sklearn.cross_decomposition._pls._PLS.fit_transform:9
#: sklearn.cross_decomposition._pls._PLS.inverse_transform:9
#: sklearn.cross_decomposition._pls._PLS.predict:8
#: sklearn.cross_decomposition._pls._PLS.transform:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "tipo arreglo de forma (n_samples, n_features)"

#: of sklearn.cross_decomposition._pls._PLS.fit:8
msgid "Training vectors, where `n_samples` is the number of samples and `n_features` is the number of predictors."
msgstr "Vectores de entrenamiento, donde `n_muestras` es el número de muestras y `n_características` es el número de predictores."

#: of sklearn.cross_decomposition._pls._PLS.fit:25
#: sklearn.cross_decomposition._pls._PLS.transform:11
msgid "**Y**"
msgstr "**Y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_targets)"
msgstr "tipo array de forma (n_samples,) o (n_samples, n_targets)"

#: of sklearn.cross_decomposition._pls._PLS.fit:12
msgid "Target vectors, where `n_samples` is the number of samples and `n_targets` is the number of response variables."
msgstr "Vectores objetivo, donde `n_samples` es el número de muestras y `n_targets` es el número de variables de respuesta."

#: of sklearn.cross_decomposition._pls._PLS.fit_transform:8
msgid "Training vectors, where n_samples is the number of samples and n_features is the number of predictors."
msgstr "Vectores de entrenamiento, donde n_muestras es el número de muestras y n_características es el número de predictores."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.cross_decomposition._pls._PLS.fit_transform:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples, n_targets), default=None"
msgstr "tipo array de forma (n_samples, n_targets), default=None"

#: of sklearn.cross_decomposition._pls._PLS.fit_transform:12
msgid "Target vectors, where n_samples is the number of samples and n_targets is the number of response variables."
msgstr "Vectores objetivo, donde n_muestras es el número de muestras y n_objetivos es el número de variables de respuesta."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.cross_decomposition._pls._PLS.fit_transform
#: sklearn.cross_decomposition._pls._PLS.inverse_transform
#: sklearn.cross_decomposition._pls._PLS.transform
msgid "Returns"
msgstr "Salida"

#: of sklearn.cross_decomposition._pls._PLS.fit_transform:29
msgid "x_scores if Y is not given, (x_scores, y_scores) otherwise."
msgstr "si no se da `Y`, `(x_scores, y_scores)` en caso contrario."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "diccionario"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Los nombres de los parámetros se asignan a sus valores."

#: of
msgid "array-like of shape (n_samples, n_components)"
msgstr "tipo arreglo de forma (n_samples, n_components)"

#: of sklearn.cross_decomposition._pls._PLS.inverse_transform:8
msgid "New data, where `n_samples` is the number of samples and `n_components` is the number of pls components."
msgstr "Nuevos datos, donde `n_samples` es el número de muestras y `n_components` es el número de componentes pls."

#: of sklearn.cross_decomposition._pls._PLS.inverse_transform:21
msgid "**x_reconstructed**"
msgstr "**x_reconstructed**"

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.cross_decomposition._pls._PLS.inverse_transform:24
#: sklearn.cross_decomposition._pls._PLS.predict:22
msgid "Notes"
msgstr "Notas"

#: of sklearn.cross_decomposition._pls._PLS.inverse_transform:25
msgid "This transformation will only be exact if `n_components=n_features`."
msgstr "Esta transformación sólo será exacta si `n_components=n_features`."

#: of sklearn.cross_decomposition._pls._PLS.predict:8
msgid "Samples."
msgstr "Muestras."

#: of sklearn.cross_decomposition._pls._PLS.predict:11
#: sklearn.cross_decomposition._pls._PLS.transform:14
msgid "Whether to copy `X` and `Y`, or perform in-place normalization."
msgstr "Si se copia `X` y `Y`, o se realiza la normalización en el lugar."

#: of sklearn.cross_decomposition._pls._PLS.predict:23
msgid "This call requires the estimation of a matrix of shape `(n_features, n_targets)`, which may be an issue in high dimensional space."
msgstr "Esta llamada requiere la estimación de una matriz de forma `(n_features, n_targets)`, lo que puede ser un problema en un espacio de alta dimensión."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma residual de cuadrados ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1,0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0,0."

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz de núcleo precalculada o una lista de objetos genéricos con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para `X`."

#: of sklearn.base.RegressorMixin.score:26
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Pesos de la muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` de ``self.predict(X)`` wrt. `y`."

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al llamar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la coherencia con el valor por defecto de :func:`~sklearn.metrics.r2_score``. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como con objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.cross_decomposition._pls._PLS.transform:8
msgid "Samples to transform."
msgstr "Muestras a transformar."

#: of sklearn.cross_decomposition._pls._PLS.transform:11
msgid "Target vectors."
msgstr "Vectores destino."

#: of sklearn.cross_decomposition._pls._PLS.transform:30
msgid "`x_scores` if `Y` is not given, `(x_scores, y_scores)` otherwise."
msgstr "Si no se indica `Y`, `(x_scores, y_scores)` en caso contrario."

