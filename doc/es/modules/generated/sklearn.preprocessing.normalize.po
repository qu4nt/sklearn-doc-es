msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-10 03:48\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.normalize.po\n"
"X-Crowdin-File-ID: 5310\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.normalize.rst:2
msgid ":mod:`sklearn.preprocessing`.normalize"
msgstr ":mod:`sklearn.preprocessing`.normalize"

#: of sklearn.preprocessing._data.normalize:2
msgid "Scale input vectors individually to unit norm (vector length)."
msgstr "Escala los vectores de entrada individualmente a la norma unitaria (longitud del vector)."

#: of sklearn.preprocessing._data.normalize:4
msgid "Read more in the :ref:`User Guide <preprocessing_normalization>`."
msgstr "Lee más en el :ref:`Manual de usuario <preprocessing_normalization>`."

#: of sklearn.preprocessing._data.normalize
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._data.normalize:11
#: sklearn.preprocessing._data.normalize:32
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.normalize:9
msgid "The data to normalize, element by element. scipy.sparse matrices should be in CSR format to avoid an un-necessary copy."
msgstr "Los datos a normalizar, elemento por elemento. Las matrices scipy.sparse deben estar en formato CSR para evitar una copia innecesaria."

#: of sklearn.preprocessing._data.normalize:15
msgid "**norm**"
msgstr "**norm**"

#: of
msgid "{'l1', 'l2', 'max'}, default='l2'"
msgstr "{'l1', 'l2', 'max'}, default='l2'"

#: of sklearn.preprocessing._data.normalize:14
msgid "The norm to use to normalize each non zero sample (or each non-zero feature if axis is 0)."
msgstr "La norma a utilizar para normalizar cada muestra distinta de cero (o cada característica distinta de cero si axis es 0)."

#: of sklearn.preprocessing._data.normalize:19
msgid "**axis**"
msgstr "**axis**"

#: of
msgid "{0, 1}, default=1"
msgstr "{0, 1}, default=1"

#: of sklearn.preprocessing._data.normalize:18
msgid "axis used to normalize the data along. If 1, independently normalize each sample, otherwise (if 0) normalize each feature."
msgstr "eje (axis) utilizado para normalizar los datos a lo largo. Si es 1, normaliza independientemente cada muestra, de lo contrario (si es 0) normaliza cada característica."

#: of sklearn.preprocessing._data.normalize:24
msgid "**copy**"
msgstr "**copy**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.preprocessing._data.normalize:22
msgid "set to False to perform inplace row normalization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSR matrix and if axis is 1)."
msgstr "establécelo en False para realizar la normalización de filas en el lugar y evitar una copia (si la entrada ya es un arreglo numpy o una matriz scipy.sparse CSR y si el eje es 1)."

#: of sklearn.preprocessing._data.normalize:27
msgid "**return_norm**"
msgstr "**return_norm**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.preprocessing._data.normalize:27
msgid "whether to return the computed norms"
msgstr "si se devuelven las normas calculadas"

#: of sklearn.preprocessing._data.normalize
msgid "Returns"
msgstr "Devuelve"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.preprocessing._data.normalize:32
msgid "Normalized input X."
msgstr ""

#: of sklearn.preprocessing._data.normalize:43
msgid "**norms**"
msgstr "**norms**"

#: of
msgid "ndarray of shape (n_samples, ) if axis=1 else (n_features, )"
msgstr "ndarray de forma (n_samples, ) si axis=1 sino (n_features, )"

#: of sklearn.preprocessing._data.normalize:35
msgid "An array of norms along given axis for X. When X is sparse, a NotImplementedError will be raised for norm 'l1' or 'l2'."
msgstr ""

#: of sklearn.preprocessing._data.normalize:48
msgid ":obj:`Normalizer`"
msgstr ":obj:`Normalizer`"

#: of sklearn.preprocessing._data.normalize:49
msgid "Performs normalization using the Transformer API (e.g. as part of a preprocessing :class:`~sklearn.pipeline.Pipeline`)."
msgstr ""

#: of sklearn.preprocessing._data.normalize:53
msgid "Notes"
msgstr "Notas"

#: of sklearn.preprocessing._data.normalize:54
msgid "For a comparison of the different scalers, transformers, and normalizers, see :ref:`examples/preprocessing/plot_all_scaling.py <sphx_glr_auto_examples_preprocessing_plot_all_scaling.py>`."
msgstr ""

