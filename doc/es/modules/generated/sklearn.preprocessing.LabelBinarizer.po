msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-12 23:05\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.preprocessing.LabelBinarizer.po\n"
"X-Crowdin-File-ID: 5792\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.preprocessing.LabelBinarizer.rst:2
msgid ":mod:`sklearn.preprocessing`.LabelBinarizer"
msgstr ":mod:`sklearn.preprocessing`.LabelBinarizer"

#: of sklearn.preprocessing._label.LabelBinarizer:2
msgid "Binarize labels in a one-vs-all fashion."
msgstr "Binariza las etiquetas de una forma uno contra todos (one-vs-all)."

#: of sklearn.preprocessing._label.LabelBinarizer:4
msgid "Several regression and binary classification algorithms are available in scikit-learn. A simple way to extend these algorithms to the multi-class classification case is to use the so-called one-vs-all scheme."
msgstr "Varios algoritmos de regresión y clasificación binaria están disponibles en scikit-learn. Una forma sencilla de extender estos algoritmos al caso de la clasificación multiclase es utilizar el llamado esquema de uno contra todos."

#: of sklearn.preprocessing._label.LabelBinarizer:9
msgid "At learning time, this simply consists in learning one regressor or binary classifier per class. In doing so, one needs to convert multi-class labels to binary labels (belong or does not belong to the class). LabelBinarizer makes this process easy with the transform method."
msgstr "En el momento del aprendizaje, esto consiste simplemente en aprender un regresor o clasificador binario por clase. Para ello, hay que convertir las etiquetas multiclase en etiquetas binarias (pertenece o no pertenece a la clase). LabelBinarizer facilita este proceso con el método de transformación."

#: of sklearn.preprocessing._label.LabelBinarizer:15
msgid "At prediction time, one assigns the class for which the corresponding model gave the greatest confidence. LabelBinarizer makes this easy with the inverse_transform method."
msgstr "En el momento de la predicción, se asigna la clase para la que el modelo correspondiente dio la mayor confianza. LabelBinarizer lo facilita con el método inverse_transform."

#: of sklearn.preprocessing._label.LabelBinarizer:19
msgid "Read more in the :ref:`User Guide <preprocessing_targets>`."
msgstr "Lee más en el :ref:`Manual de usuario <preprocessing_targets>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.preprocessing._label.LabelBinarizer
#: sklearn.preprocessing._label.LabelBinarizer.fit
#: sklearn.preprocessing._label.LabelBinarizer.fit_transform
#: sklearn.preprocessing._label.LabelBinarizer.inverse_transform
#: sklearn.preprocessing._label.LabelBinarizer.transform
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.preprocessing._label.LabelBinarizer:24
msgid "**neg_label**"
msgstr "**neg_label**"

#: of
msgid "int, default=0"
msgstr "int, default=0"

#: of sklearn.preprocessing._label.LabelBinarizer:24
msgid "Value with which negative labels must be encoded."
msgstr "Valor con el que se deben codificar las etiquetas negativas."

#: of sklearn.preprocessing._label.LabelBinarizer:27
msgid "**pos_label**"
msgstr "**pos_label**"

#: of
msgid "int, default=1"
msgstr "int, default=1"

#: of sklearn.preprocessing._label.LabelBinarizer:27
msgid "Value with which positive labels must be encoded."
msgstr "Valor con el que se deben codificar las etiquetas positivas."

#: of sklearn.preprocessing._label.LabelBinarizer:34
msgid "**sparse_output**"
msgstr "**sparse_output**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.preprocessing._label.LabelBinarizer:30
msgid "True if the returned array from transform is desired to be in sparse CSR format."
msgstr "True si se desea que el arreglo devuelto por la transformación esté en formato CSR disperso."

#: of sklearn.preprocessing._label.LabelBinarizer
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.preprocessing._label.LabelBinarizer:39
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "ndarray of shape (n_classes,)"
msgstr "ndarray de forma (n_classes,)"

#: of sklearn.preprocessing._label.LabelBinarizer:39
msgid "Holds the label for each class."
msgstr "Contiene la etiqueta para cada clase."

#: of sklearn.preprocessing._label.LabelBinarizer:45
msgid "**y_type_**"
msgstr "**y_type_**"

#: of
msgid "str"
msgstr "str"

#: of sklearn.preprocessing._label.LabelBinarizer:42
msgid "Represents the type of the target data as evaluated by utils.multiclass.type_of_target. Possible type are 'continuous', 'continuous-multioutput', 'binary', 'multiclass', 'multiclass-multioutput', 'multilabel-indicator', and 'unknown'."
msgstr "Representa el tipo de los datos objetivo evaluados por utils.multiclass.type_of_target. Los tipos posibles son 'continuous', 'continuous-multioutput', 'binary', 'multiclass', 'multiclass-multioutput', 'multilabel-indicator' y 'unknown'."

#: of sklearn.preprocessing._label.LabelBinarizer:52
msgid "**sparse_input_**"
msgstr "**sparse_input_**"

#: of
msgid "bool"
msgstr "bool"

#: of sklearn.preprocessing._label.LabelBinarizer:48
msgid "True if the input data to transform is given as a sparse matrix, False otherwise."
msgstr "True si los datos de entrada a transformar se dan como una matriz dispersa, False en caso contrario."

#: of sklearn.preprocessing._label.LabelBinarizer:57
msgid ":obj:`label_binarize`"
msgstr ":obj:`label_binarize`"

#: of sklearn.preprocessing._label.LabelBinarizer:58
msgid "Function to perform the transform operation of LabelBinarizer with fixed classes."
msgstr "Función para realizar la operación de transformación de LabelBinarizer con clases fijas."

#: of sklearn.preprocessing._label.LabelBinarizer:59
msgid ":obj:`OneHotEncoder`"
msgstr ":obj:`OneHotEncoder`"

#: of sklearn.preprocessing._label.LabelBinarizer:60
msgid "Encode categorical features using a one-hot aka one-of-K scheme."
msgstr "Codifica las características categóricas utilizando un esquema one-hot también conocido como uno de K (one-of-K)."

#: of sklearn.preprocessing._label.LabelBinarizer:66
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.preprocessing._label.LabelBinarizer:77
msgid "Binary targets transform to a column vector"
msgstr "Los objetivos binarios se transforman en un vector columna"

#: of sklearn.preprocessing._label.LabelBinarizer:86
msgid "Passing a 2D matrix for multilabel classification"
msgstr "Pasando una matriz 2D para la clasificación multietiqueta"

#: of sklearn.preprocessing._label.LabelBinarizer:100
msgid "Methods"
msgstr "Métodos"

#: of sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.LabelBinarizer.fit>`\\"
msgstr ":obj:`fit <sklearn.preprocessing.LabelBinarizer.fit>`\\"

#: of sklearn.preprocessing._label.LabelBinarizer.fit:2
#: sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid "Fit label binarizer."
msgstr "Ajusta el binarizador de etiquetas."

#: of sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.preprocessing.LabelBinarizer.fit_transform>`\\"
msgstr ":obj:`fit_transform <sklearn.preprocessing.LabelBinarizer.fit_transform>`\\"

#: of sklearn.preprocessing._label.LabelBinarizer.fit_transform:2
#: sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid "Fit label binarizer and transform multi-class labels to binary labels."
msgstr "Ajusta el binarizador de etiquetas y transforma las etiquetas multiclase en etiquetas binarias."

#: of sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.LabelBinarizer.get_params>`\\"
msgstr ":obj:`get_params <sklearn.preprocessing.LabelBinarizer.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.preprocessing.LabelBinarizer.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.preprocessing.LabelBinarizer.inverse_transform>`\\"

#: of sklearn.preprocessing._label.LabelBinarizer.inverse_transform:2
#: sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid "Transform binary labels back to multi-class labels."
msgstr "Transforma etiquetas binarias de nuevo en etiquetas multiclase."

#: of sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid ":obj:`set_params <sklearn.preprocessing.LabelBinarizer.set_params>`\\"
msgstr ":obj:`set_params <sklearn.preprocessing.LabelBinarizer.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.LabelBinarizer.transform>`\\"
msgstr ":obj:`transform <sklearn.preprocessing.LabelBinarizer.transform>`\\"

#: of sklearn.preprocessing._label.LabelBinarizer.transform:2
#: sklearn.preprocessing._label.LabelBinarizer:109:<autosummary>:1
msgid "Transform multi-class labels to binary labels."
msgstr "Transforma etiquetas de multiclase en etiquetas binarias."

#: of sklearn.preprocessing._label.LabelBinarizer.fit:9
#: sklearn.preprocessing._label.LabelBinarizer.fit_transform:13
#: sklearn.preprocessing._label.LabelBinarizer.inverse_transform:31
#: sklearn.preprocessing._label.LabelBinarizer.transform:12
msgid "**y**"
msgstr "**y**"

#: of
msgid "ndarray of shape (n_samples,) or (n_samples, n_classes)"
msgstr "ndarray de forma (n_samples,) o (n_samples, n_classes)"

#: of sklearn.preprocessing._label.LabelBinarizer.fit:8
msgid "Target values. The 2-d matrix should only contain 0 and 1, represents multilabel classification."
msgstr "Valores objetivo. La matriz 2-d sólo debe contener 0 y 1, representa la clasificación multietiqueta."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.preprocessing._label.LabelBinarizer.fit
#: sklearn.preprocessing._label.LabelBinarizer.fit_transform
#: sklearn.preprocessing._label.LabelBinarizer.inverse_transform
#: sklearn.preprocessing._label.LabelBinarizer.transform
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.preprocessing._label.LabelBinarizer.fit:25
msgid "**self**"
msgstr "**self**"

#: of
msgid "returns an instance of self."
msgstr "devuelve una instancia de sí misma."

#: of sklearn.preprocessing._label.LabelBinarizer.fit_transform:5
msgid "The output of transform is sometimes referred to as the 1-of-K coding scheme."
msgstr "La salida de la transformación se denomina a veces esquema de codificación 1-de-K."

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples,) or                 (n_samples, n_classes)"
msgstr "{ndarray, sparse matrix} de forma (n_samples,) o                 (n_samples, n_classes)"

#: of sklearn.preprocessing._label.LabelBinarizer.fit_transform:11
#: sklearn.preprocessing._label.LabelBinarizer.transform:10
msgid "Target values. The 2-d matrix should only contain 0 and 1, represents multilabel classification. Sparse matrix can be CSR, CSC, COO, DOK, or LIL."
msgstr "Valores objetivo. La matriz 2-d sólo debe contener 0 y 1, representa la clasificación multietiqueta. La matriz dispersa puede ser CSR, CSC, COO, DOK o LIL."

#: of sklearn.preprocessing._label.LabelBinarizer.fit_transform:30
#: sklearn.preprocessing._label.LabelBinarizer.inverse_transform:9
#: sklearn.preprocessing._label.LabelBinarizer.transform:29
msgid "**Y**"
msgstr "**Y**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_classes)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_classes)"

#: of sklearn.preprocessing._label.LabelBinarizer.fit_transform:18
#: sklearn.preprocessing._label.LabelBinarizer.transform:17
msgid "Shape will be (n_samples, 1) for binary problems. Sparse matrix will be of CSR format."
msgstr "La forma será (n_samples, 1) para los problemas binarios. La matriz dispersa tendrá el formato CSR."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.preprocessing._label.LabelBinarizer.inverse_transform:8
msgid "Target values. All sparse matrices are converted to CSR before inverse transformation."
msgstr "Valores objetivo. Todas las matrices dispersas se convierten en CSR antes de la transformación inversa."

#: of sklearn.preprocessing._label.LabelBinarizer.inverse_transform:19
msgid "**threshold**"
msgstr "**threshold**"

#: of
msgid "float, default=None"
msgstr "float, default=None"

#: of sklearn.preprocessing._label.LabelBinarizer.inverse_transform:12
msgid "Threshold used in the binary and multi-label cases."
msgstr "Umbral utilizado en los casos binarios y multietiqueta."

#: of sklearn.preprocessing._label.LabelBinarizer.inverse_transform:14
msgid "Use 0 when ``Y`` contains the output of decision_function (classifier). Use 0.5 when ``Y`` contains the output of predict_proba."
msgstr "Utiliza 0 cuando ``Y`` contenga la salida de decision_function (clasificador). Utiliza 0,5 cuando ``Y`` contenga la salida de predict_proba."

#: of sklearn.preprocessing._label.LabelBinarizer.inverse_transform:18
msgid "If None, the threshold is assumed to be half way between neg_label and pos_label."
msgstr "Si es None, se asume que el umbral está a medio camino entre neg_label y pos_label."

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples,)"
msgstr "{ndarray, sparse matrix} de forma (n_samples,)"

#: of sklearn.preprocessing._label.LabelBinarizer.inverse_transform:24
msgid "Target values. Sparse matrix will be of CSR format."
msgstr "Valores objetivo. La matriz dispersa tendrá el formato CSR."

#: of sklearn.preprocessing._label.LabelBinarizer.inverse_transform:34
msgid "Notes"
msgstr "Notas"

#: of sklearn.preprocessing._label.LabelBinarizer.inverse_transform:35
msgid "In the case when the binary labels are fractional (probabilistic), inverse_transform chooses the class with the greatest value. Typically, this allows to use the output of a linear model's decision_function method directly as the input of inverse_transform."
msgstr "En el caso de que las etiquetas binarias sean fraccionarias (probabilísticas), inverse_transform elige la clase con el mayor valor. Normalmente, esto permite utilizar la salida del método decision_function de un modelo lineal directamente como entrada de inverse_transform."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.preprocessing._label.LabelBinarizer.transform:4
msgid "The output of transform is sometimes referred to by some authors as the 1-of-K coding scheme."
msgstr "Algunos autores denominan a la salida de la transformación el esquema de codificación 1-de-K."

#: of
msgid "{array, sparse matrix} of shape (n_samples,) or                 (n_samples, n_classes)"
msgstr "{array, sparse matrix} de forma (n_samples,) o                 (n_samples, n_classes)"

