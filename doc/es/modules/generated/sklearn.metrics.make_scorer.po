msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-04 03:20\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.metrics.make_scorer.po\n"
"X-Crowdin-File-ID: 5034\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.metrics.make_scorer.rst:2
msgid ":mod:`sklearn.metrics`.make_scorer"
msgstr ":mod:`sklearn.metrics`.make_scorer"

#: of sklearn.metrics._scorer.make_scorer:2
msgid "Make a scorer from a performance metric or loss function."
msgstr "Hace un puntuador (scorer) a partir de una métrica de rendimiento o una función de pérdida."

#: of sklearn.metrics._scorer.make_scorer:4
msgid "This factory function wraps scoring functions for use in :class:`~sklearn.model_selection.GridSearchCV` and :func:`~sklearn.model_selection.cross_val_score`. It takes a score function, such as :func:`~sklearn.metrics.accuracy_score`, :func:`~sklearn.metrics.mean_squared_error`, :func:`~sklearn.metrics.adjusted_rand_index` or :func:`~sklearn.metrics.average_precision` and returns a callable that scores an estimator's output. The signature of the call is `(estimator, X, y)` where `estimator` is the model to be evaluated, `X` is the data and `y` is the ground truth labeling (or `None` in the case of unsupervised models)."
msgstr "Esta función de fábrica envuelve (wraps) funciones de puntuación para su uso en :class:`~sklearn.model_selection.GridSearchCV` y :func:`~sklearn.model_selection.cross_val_score`. Toma una función de puntuación, como :func:`~sklearn.metrics.accuracy_score`, :func:`~sklearn.metrics.mean_squared_error`, :func:`~sklearn.metrics.adjusted_rand_index` o :func:`~sklearn.metrics.average_precision` y devuelve un invocable (callable) que puntúa la salida de un estimador. La firma de la llamada es `(estimator, X, y)` donde `estimator` es el modelo a evaluar, `X` son los datos y `y` es el etiquetado real (o `None` en el caso de modelos no supervisados)."

#: of sklearn.metrics._scorer.make_scorer:16
msgid "Read more in the :ref:`User Guide <scoring>`."
msgstr "Leer más en el :ref:`Manual de Usuario <scoring>`."

#: of sklearn.metrics._scorer.make_scorer
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.metrics._scorer.make_scorer:22
msgid "**score_func**"
msgstr "**score_func**"

#: of
msgid "callable"
msgstr "callable"

#: of sklearn.metrics._scorer.make_scorer:21
msgid "Score function (or loss function) with signature ``score_func(y, y_pred, **kwargs)``."
msgstr "Función de puntuación (o función de pérdida) con la firma ``score_func(y, y_pred, **kwargs)``."

#: of sklearn.metrics._scorer.make_scorer:27
msgid "**greater_is_better**"
msgstr "**greater_is_better**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.metrics._scorer.make_scorer:25
msgid "Whether score_func is a score function (default), meaning high is good, or a loss function, meaning low is good. In the latter case, the scorer object will sign-flip the outcome of the score_func."
msgstr "Si score_func es una función de puntuación (por defecto), lo que significa que alto es bueno, o una función de pérdida, lo que significa que bajo es bueno. En este último caso, el objeto puntuador invertirá el signo del resultado de score_func."

#: of sklearn.metrics._scorer.make_scorer:35
msgid "**needs_proba**"
msgstr "**needs_proba**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.metrics._scorer.make_scorer:30
msgid "Whether score_func requires predict_proba to get probability estimates out of a classifier."
msgstr "Si score_func requiere predict_proba para obtener estimaciones de probabilidad de un clasificador."

#: of sklearn.metrics._scorer.make_scorer:33
msgid "If True, for binary `y_true`, the score function is supposed to accept a 1D `y_pred` (i.e., probability of the positive class, shape `(n_samples,)`)."
msgstr "Si es True, para el binario `y_true`, se supone que la función de puntuación acepta un `y_pred` 1D (es decir, la probabilidad de la clase positiva, forma `(n_samples,)`)."

#: of sklearn.metrics._scorer.make_scorer:47
msgid "**needs_threshold**"
msgstr "**needs_threshold**"

#: of sklearn.metrics._scorer.make_scorer:38
msgid "Whether score_func takes a continuous decision certainty. This only works for binary classification using estimators that have either a decision_function or predict_proba method."
msgstr "Si score_func toma una certeza de decisión continua. Esto sólo funciona para la clasificación binaria utilizando estimadores que tienen un método decision_function o predict_proba."

#: of sklearn.metrics._scorer.make_scorer:42
msgid "If True, for binary `y_true`, the score function is supposed to accept a 1D `y_pred` (i.e., probability of the positive class or the decision function, shape `(n_samples,)`)."
msgstr "Si es True, para el binario `y_true`, se supone que la función de puntuación acepta un `y_pred` 1D (es decir, la probabilidad de la clase positiva o la función de decisión, forma `(n_samples,)`)."

#: of sklearn.metrics._scorer.make_scorer:46
msgid "For example ``average_precision`` or the area under the roc curve can not be computed using discrete predictions alone."
msgstr "Por ejemplo, ``average_precision`` o el área bajo la curva roc no pueden calcularse sólo con predicciones discretas."

#: of sklearn.metrics._scorer.make_scorer:50
msgid "**\\*\\*kwargs**"
msgstr "**\\*\\*kwargs**"

#: of
msgid "additional arguments"
msgstr "argumentos adicionales"

#: of sklearn.metrics._scorer.make_scorer:50
msgid "Additional parameters to be passed to score_func."
msgstr "Parámetros adicionales que se pasan a score_func."

#: of sklearn.metrics._scorer.make_scorer
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.metrics._scorer.make_scorer:62
msgid "**scorer**"
msgstr "**scorer**"

#: of sklearn.metrics._scorer.make_scorer:55
msgid "Callable object that returns a scalar score; greater is better."
msgstr "Objeto invocable que devuelve una puntuación escalar; cuanto mayor sea, mejor."

#: of sklearn.metrics._scorer.make_scorer:65
msgid "Notes"
msgstr "Notas"

#: of sklearn.metrics._scorer.make_scorer:66
msgid "If `needs_proba=False` and `needs_threshold=False`, the score function is supposed to accept the output of :term:`predict`. If `needs_proba=True`, the score function is supposed to accept the output of :term:`predict_proba` (For binary `y_true`, the score function is supposed to accept probability of the positive class). If `needs_threshold=True`, the score function is supposed to accept the output of :term:`decision_function`."
msgstr "Si `needs_proba=False` y `needs_threshold=False`, se supone que la función de puntuación acepta la salida de :term:`predict`. Si `needs_proba=True`, se supone que la función de puntuación acepta la salida de :term:`predict_proba` (Para el binario `y_true`, la función de puntuación se supone que acepta la probabilidad de la clase positiva). Si `needs_threshold=True`, se supone que la función de puntuación acepta la salida de :term:`decision_function`."

#: of sklearn.metrics._scorer.make_scorer:76
msgid "Examples"
msgstr "Ejemplos"

#: ../modules/generated/sklearn.metrics.make_scorer.examples:4
msgid "Examples using ``sklearn.metrics.make_scorer``"
msgstr "Ejemplos utilizando ``sklearn.metrics.make_scorer``"

#: ../modules/generated/sklearn.metrics.make_scorer.examples:15
#: ../modules/generated/sklearn.metrics.make_scorer.examples:23
msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_multi_metric_evaluation.py`"
msgstr ":ref:`sphx_glr_auto_examples_model_selection_plot_multi_metric_evaluation.py`"

