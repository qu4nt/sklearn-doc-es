msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:56-0400\n"
"PO-Revision-Date: 2021-07-11 03:29\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.linear_model.Ridge.po\n"
"X-Crowdin-File-ID: 5726\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.linear_model.Ridge.rst:2
msgid ":mod:`sklearn.linear_model`.Ridge"
msgstr ":mod:`sklearn.linear_model`.Ridge"

#: of sklearn.linear_model._ridge.Ridge:2
msgid "Linear least squares with l2 regularization."
msgstr "Mínimos cuadrados lineales con regularización l2."

#: of sklearn.linear_model._ridge.Ridge:4
msgid "Minimizes the objective function::"
msgstr "Minimiza la función objetiva::"

#: of sklearn.linear_model._ridge.Ridge:8
msgid "This model solves a regression model where the loss function is the linear least squares function and regularization is given by the l2-norm. Also known as Ridge Regression or Tikhonov regularization. This estimator has built-in support for multi-variate regression (i.e., when y is a 2d-array of shape (n_samples, n_targets))."
msgstr "Este modelo resuelve un modelo de regresión donde la función de pérdida es la función lineal de mínimos cuadrados y la regularización viene dada por la norma l2. También se conoce como regresión Ridge o regularización Tikhonov. Este estimador tiene soporte incorporado para la regresión multivariada (es decir, cuando y es un arreglo de formato 2d (n_samples, n_targets))."

#: of sklearn.linear_model._ridge.Ridge:14
msgid "Read more in the :ref:`User Guide <ridge_regression>`."
msgstr "Más información en el :ref:`Manual de usuario <ridge_regression>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._ridge.Ridge sklearn.linear_model._ridge.Ridge.fit
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.linear_model._ridge.Ridge:26
msgid "**alpha**"
msgstr "**alpha**"

#: of
msgid "{float, ndarray of shape (n_targets,)}, default=1.0"
msgstr "{float, ndarray of shape (n_targets,)}, default=1.0"

#: of sklearn.linear_model._ridge.Ridge:19
msgid "Regularization strength; must be a positive float. Regularization improves the conditioning of the problem and reduces the variance of the estimates. Larger values specify stronger regularization. Alpha corresponds to ``1 / (2C)`` in other linear models such as :class:`~sklearn.linear_model.LogisticRegression` or :class:`~sklearn.svm.LinearSVC`. If an array is passed, penalties are assumed to be specific to the targets. Hence they must correspond in number."
msgstr "Fuerza de regularización; debe ser un flotante positivo. La regularización mejora el condicionamiento del problema y reduce la varianza de las estimaciones. Los valores más grandes especifican una regularización más fuerte. Alpha corresponde a ``1 / (2C)`` en otros modelos lineales como :class:`~sklearn.linear_model.LogisticRegression` o :class:`~sklearn.svm.LinearSVC`. Si se pasa un arreglo, se asume que las penalizaciones son específicas de los objetivos. Por lo tanto, deben corresponder en número."

#: of sklearn.linear_model._ridge.Ridge:31
msgid "**fit_intercept**"
msgstr "**fit_intercept**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.linear_model._ridge.Ridge:29
msgid "Whether to fit the intercept for this model. If set to false, no intercept will be used in calculations (i.e. ``X`` and ``y`` are expected to be centered)."
msgstr "Indica si se ajusta el intercepto para este modelo. Si se establece en False, no se utilizará ningún intercepto en los cálculos (es decir, se espera que ``X`` y ``y`` estén centrados)."

#: of sklearn.linear_model._ridge.Ridge:39
msgid "**normalize**"
msgstr "**normalize**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of sklearn.linear_model._ridge.Ridge:34
msgid "This parameter is ignored when ``fit_intercept`` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm. If you wish to standardize, please use :class:`~sklearn.preprocessing.StandardScaler` before calling ``fit`` on an estimator with ``normalize=False``."
msgstr "Este parámetro es ignorado cuando ``fit_intercept`` se establece como False. Si True, los regresores X serán normalizados antes de la regresión restando la media y dividiendo por la norma l2. Si tu deseas estandarizar, por favor utiliza :class:`~sklearn.preprocessing.StandardScaler` antes de llamar ``fit`` en un estimador con ``normalize=False``."

#: of sklearn.linear_model._ridge.Ridge:42
msgid "**copy_X**"
msgstr "**copy_X**"

#: of sklearn.linear_model._ridge.Ridge:42
msgid "If True, X will be copied; else, it may be overwritten."
msgstr "Si es True, X se copiará; si no, puede ser sobrescrito."

#: of sklearn.linear_model._ridge.Ridge:47
msgid "**max_iter**"
msgstr "**max_iter**"

#: of
msgid "int, default=None"
msgstr "int, default=None"

#: of sklearn.linear_model._ridge.Ridge:45
msgid "Maximum number of iterations for conjugate gradient solver. For 'sparse_cg' and 'lsqr' solvers, the default value is determined by scipy.sparse.linalg. For 'sag' solver, the default value is 1000."
msgstr "Número máximo de iteraciones para el solucionador de gradiente conjugado. Para los solucionadores 'sparse_cg' y 'lsqr', el valor predeterminado está determinado por scipy.sparse.linalg. Para los solucionadores 'sag', el valor por defecto es 1000."

#: of sklearn.linear_model._ridge.Ridge:50
msgid "**tol**"
msgstr "**tol**"

#: of
msgid "float, default=1e-3"
msgstr "float, default=1e-3"

#: of sklearn.linear_model._ridge.Ridge:50
msgid "Precision of the solution."
msgstr "Precisión de la solución."

#: of sklearn.linear_model._ridge.Ridge:87
msgid "**solver**"
msgstr "**solver**"

#: of
msgid "{'auto', 'svd', 'cholesky', 'lsqr', 'sparse_cg', 'sag', 'saga'},         default='auto'"
msgstr "{'auto', 'svd', 'cholesky', 'lsqr', 'sparse_cg', 'sag', 'saga'},         default='auto'"

#: of sklearn.linear_model._ridge.Ridge:53
msgid "Solver to use in the computational routines:"
msgstr "Solucionador a utilizar en las rutinas computacionales:"

#: of sklearn.linear_model._ridge.Ridge:55
msgid "'auto' chooses the solver automatically based on the type of data."
msgstr "'auto' elige el solucionador automáticamente en función del tipo de datos."

#: of sklearn.linear_model._ridge.Ridge:57
msgid "'svd' uses a Singular Value Decomposition of X to compute the Ridge coefficients. More stable for singular matrices than 'cholesky'."
msgstr "svd' utiliza una descomposición de valor singular de X para calcular los coeficientes de Ridge. Es más estable para matrices singulares que 'cholesky'."

#: of sklearn.linear_model._ridge.Ridge:60
msgid "'cholesky' uses the standard scipy.linalg.solve function to obtain a closed-form solution."
msgstr "'cholesky' utiliza la función estándar scipy.linalg.solve para obtener una solución de forma cerrada."

#: of sklearn.linear_model._ridge.Ridge:63
msgid "'sparse_cg' uses the conjugate gradient solver as found in scipy.sparse.linalg.cg. As an iterative algorithm, this solver is more appropriate than 'cholesky' for large-scale data (possibility to set `tol` and `max_iter`)."
msgstr "'sparse_cg' utiliza el solucionador de gradiente conjugado que se encuentra en scipy.sparse.linalg.cg. Como algoritmo iterativo, este solucionador es más apropiado que 'cholesky' para datos a gran escala (posibilidad de establecer `tol` y `max_iter`)."

#: of sklearn.linear_model._ridge.Ridge:68
msgid "'lsqr' uses the dedicated regularized least-squares routine scipy.sparse.linalg.lsqr. It is the fastest and uses an iterative procedure."
msgstr "'lsqr' utiliza la rutina dedicada de mínimos cuadrados regularizados scipy.sparse.linalg.lsqr. Es la más rápida y utiliza un procedimiento iterativo."

#: of sklearn.linear_model._ridge.Ridge:72
msgid "'sag' uses a Stochastic Average Gradient descent, and 'saga' uses its improved, unbiased version named SAGA. Both methods also use an iterative procedure, and are often faster than other solvers when both n_samples and n_features are large. Note that 'sag' and 'saga' fast convergence is only guaranteed on features with approximately the same scale. You can preprocess the data with a scaler from sklearn.preprocessing."
msgstr "'sag' utiliza un descenso de gradiente medio estocástico, y 'saga' utiliza su versión mejorada e insesgada denominada SAGA. Ambos métodos también utilizan un procedimiento iterativo, y suelen ser más rápidos que otros solucionadores cuando tanto n_samples como n_features son grandes. Ten en cuenta que la convergencia rápida de 'sag' y 'saga' sólo está garantizada en características con aproximadamente la misma escala. Puedes preprocesar los datos con un escalador de sklearn.preprocessing."

#: of sklearn.linear_model._ridge.Ridge:80
msgid "All last five solvers support both dense and sparse data. However, only 'sag' and 'sparse_cg' supports sparse input when `fit_intercept` is True."
msgstr "Los últimos cinco solucionadores admiten datos densos y dispersos. Sin embargo, sólo 'sag' y 'sparse_cg' admiten datos dispersos cuando `fit_intercept` es True."

#: of sklearn.linear_model._ridge.Ridge:84
msgid "Stochastic Average Gradient descent solver."
msgstr "Solucionador de descenso de gradiente medio estocástico."

#: of sklearn.linear_model._ridge.Ridge:86
msgid "SAGA solver."
msgstr "Solucionador SAGA."

#: of sklearn.linear_model._ridge.Ridge:97
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance, default=None"
msgstr "entero, instancia de RandomState, default=None"

#: of sklearn.linear_model._ridge.Ridge:90
msgid "Used when ``solver`` == 'sag' or 'saga' to shuffle the data. See :term:`Glossary <random_state>` for details."
msgstr "Se utiliza cuando ``solver`` == 'sag' o 'saga' para barajar al azar los datos. Consulta :term:`Glosario<random_state>` para más detalles."

#: of sklearn.linear_model._ridge.Ridge:93
msgid "`random_state` to support Stochastic Average Gradient."
msgstr "`random_state` para soportar el Gradiente Medio Estocástico (Stochastic Average Gradient)."

#: of sklearn.linear_model._ridge.Ridge
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.linear_model._ridge.Ridge:102
msgid "**coef_**"
msgstr "**coef_**"

#: of
msgid "ndarray of shape (n_features,) or (n_targets, n_features)"
msgstr "ndarray of shape (n_features,) or (n_targets, n_features)"

#: of sklearn.linear_model._ridge.Ridge:102
msgid "Weight vector(s)."
msgstr "Vector(es) de ponderación."

#: of sklearn.linear_model._ridge.Ridge:106
msgid "**intercept_**"
msgstr "**intercept_**"

#: of
msgid "float or ndarray of shape (n_targets,)"
msgstr "float or ndarray of shape (n_targets,)"

#: of sklearn.linear_model._ridge.Ridge:105
msgid "Independent term in decision function. Set to 0.0 if ``fit_intercept = False``."
msgstr "Término independiente en la función de decisión. Establecido como 0.0 si ``fit_intercept = False``."

#: of sklearn.linear_model._ridge.Ridge:115
msgid "**n_iter_**"
msgstr "**n_iter_**"

#: of
msgid "None or ndarray of shape (n_targets,)"
msgstr "None o ndarray de forma (n_targets,)"

#: of sklearn.linear_model._ridge.Ridge:109
msgid "Actual number of iterations for each target. Available only for sag and lsqr solvers. Other solvers will return None."
msgstr "Número real de iteraciones para cada objetivo. Disponible sólo para los solucionadores sag y lsqr. Otros solucionadores devolverán None."

#: of sklearn.linear_model._ridge.Ridge:120
msgid ":obj:`RidgeClassifier`"
msgstr ":obj:`RidgeClassifier`"

#: of sklearn.linear_model._ridge.Ridge:121
msgid "Ridge classifier."
msgstr "Clasificador de crestas (Ridge classifier)."

#: of sklearn.linear_model._ridge.Ridge:122
msgid ":obj:`RidgeCV`"
msgstr ":obj:`RidgeCV`"

#: of sklearn.linear_model._ridge.Ridge:123
msgid "Ridge regression with built-in cross validation."
msgstr "Regresión de cresta con validación cruzada incorporada."

#: of sklearn.linear_model._ridge.Ridge:124
msgid ":class:`~sklearn.kernel_ridge.KernelRidge`"
msgstr ":class:`~sklearn.kernel_ridge.KernelRidge`"

#: of sklearn.linear_model._ridge.Ridge:125
msgid "Kernel ridge regression combines ridge regression with the kernel trick."
msgstr "La regresión de crestas del núcleo combina la regresión de crestas con el truco del núcleo."

#: of sklearn.linear_model._ridge.Ridge:131
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.linear_model._ridge.Ridge:143
msgid "Methods"
msgstr "Métodos"

#: of sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.Ridge.fit>`\\"
msgstr ":obj:`fit <sklearn.linear_model.Ridge.fit>`\\"

#: of sklearn.linear_model._ridge.Ridge.fit:2
#: sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid "Fit Ridge regression model."
msgstr "Ajusta al modelo de regresión de Ridge."

#: of sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.Ridge.get_params>`\\"
msgstr ":obj:`get_params <sklearn.linear_model.Ridge.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.Ridge.predict>`\\"
msgstr ":obj:`predict <sklearn.linear_model.Ridge.predict>`\\"

#: of sklearn.linear_model._base.LinearModel.predict:2
#: sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid "Predict using the linear model."
msgstr "Predice utilizando el modelo lineal."

#: of sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.Ridge.score>`\\"
msgstr ":obj:`score <sklearn.linear_model.Ridge.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.Ridge.set_params>`\\"
msgstr ":obj:`set_params <sklearn.linear_model.Ridge.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._ridge.Ridge:151:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._base.LinearModel.predict:8
#: sklearn.linear_model._ridge.Ridge.fit:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "{ndarray, sparse matrix} of shape (n_samples, n_features)"
msgstr "{ndarray, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.linear_model._ridge.Ridge.fit:8
msgid "Training data"
msgstr "Datos del entrenamiento"

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._ridge.Ridge.fit:11
msgid "**y**"
msgstr "**y**"

#: of
msgid "ndarray of shape (n_samples,) or (n_samples, n_targets)"
msgstr "ndarray de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.linear_model._ridge.Ridge.fit:11
msgid "Target values"
msgstr "Valores objetivo"

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.linear_model._ridge.Ridge.fit:15
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "float or ndarray of shape (n_samples,), default=None"
msgstr "float o ndarray de forma (n_samples,), default=None"

#: of sklearn.linear_model._ridge.Ridge.fit:14
msgid "Individual weights for each sample. If given a float, every sample will have the same weight."
msgstr "Ponderación individual para cada muestra. Si se le da un flotante (float), cada muestra tendrá el mismo peso."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._ridge.Ridge.fit
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.linear_model._ridge.Ridge.fit:31
msgid "**self**"
msgstr "**self**"

#: of
msgid "returns an instance of self."
msgstr "devuelve una instancia de sí misma."

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr "array-like o sparse matrix, de forma (n_samples, n_features)"

#: of sklearn.linear_model._base.LinearModel.predict:8
msgid "Samples."
msgstr "Muestras."

#: of sklearn.linear_model._base.LinearModel.predict:24
msgid "**C**"
msgstr "**C**"

#: of
msgid "array, shape (n_samples,)"
msgstr "array, shape (n_samples,)"

#: of sklearn.linear_model._base.LinearModel.predict:13
msgid "Returns predicted values."
msgstr "Devuelve los valores predichos."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma de cuadrados de los residuos ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1.0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0.0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like of shape (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz de núcleo precalculada o una lista de objetos genéricos con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like of shape (n_samples,) or (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para `X`."

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr "Notas"

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al invocar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la consistencia con el valor predeterminado de :func:`~sklearn.metrics.r2_score`. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "estimator instance"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: ../modules/generated/sklearn.linear_model.Ridge.examples:4
msgid "Examples using ``sklearn.linear_model.Ridge``"
msgstr "Ejemplos usando ``sklearn.linear_model.Ridge``"

#: ../modules/generated/sklearn.linear_model.Ridge.examples:15
#: ../modules/generated/sklearn.linear_model.Ridge.examples:23
msgid ":ref:`sphx_glr_auto_examples_inspection_plot_linear_model_coefficient_interpretation.py`"
msgstr ":ref:`sphx_glr_auto_examples_inspection_plot_linear_model_coefficient_interpretation.py`"

#~ msgid ":ref:`sphx_glr_auto_examples_applications_plot_prediction_latency.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_ridge_path.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_ols_ridge_variance.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_ridge_coeffs.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_polynomial_interpolation.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_huber_vs_ridge.py`"
#~ msgstr ""

#~ msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_poisson_regression_non_normal_loss.py`"
#~ msgstr ""

