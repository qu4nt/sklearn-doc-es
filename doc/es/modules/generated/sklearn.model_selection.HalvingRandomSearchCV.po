msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-27 15:54\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.model_selection.HalvingRandomSearchCV.po\n"
"X-Crowdin-File-ID: 5678\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.model_selection.HalvingRandomSearchCV.rst:2
msgid ":mod:`sklearn.model_selection`.HalvingRandomSearchCV"
msgstr ":mod:`sklearn.model_selection`.HalvingRandomSearchCV"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:2
msgid "Randomized search on hyper parameters."
msgstr "Búsqueda aleatoria de hiperparámetros."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:4
msgid "The search strategy starts evaluating all the candidates with a small amount of resources and iteratively selects the best candidates, using more and more resources."
msgstr "La estrategia de búsqueda comienza a evaluar todos los candidatos con una pequeña cantidad de recursos y selecciona iterativamente los mejores candidatos, utilizando cada vez más recursos."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:8
msgid "The candidates are sampled at random from the parameter space and the number of sampled candidates is determined by ``n_candidates``."
msgstr "Los candidatos se muestrean de forma aleatoria del espacio de parámetros y el número de candidatos muestreados se determina por ``n_candidates``."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:11
msgid "Read more in the :ref:`User guide<successive_halving_user_guide>`."
msgstr "Lee más en el :ref:`Manual del usuario <successive_halving_user_guide>`."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:15
msgid "This estimator is still **experimental** for now: the predictions and the API might change without any deprecation cycle. To use it, you need to explicitly import ``enable_halving_search_cv``::"
msgstr "Este estimador es todavía **experimental** por ahora: las predicciones y la API podrían cambiar sin ningún ciclo de obsolescencia. Para utilizarlo, es necesario importar explícitamente ``enable_halving_search_cv``::"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.model_selection._search.BaseSearchCV.decision_function
#: sklearn.model_selection._search.BaseSearchCV.inverse_transform
#: sklearn.model_selection._search.BaseSearchCV.predict
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba
#: sklearn.model_selection._search.BaseSearchCV.predict_proba
#: sklearn.model_selection._search.BaseSearchCV.score
#: sklearn.model_selection._search.BaseSearchCV.score_samples
#: sklearn.model_selection._search.BaseSearchCV.transform
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV
msgid "Parameters"
msgstr "Parámetros"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:29
msgid "**estimator**"
msgstr "**estimator**"

#: of
msgid "estimator object."
msgstr "estimator object."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:27
msgid "This is assumed to implement the scikit-learn estimator interface. Either estimator needs to provide a ``score`` function, or ``scoring`` must be passed."
msgstr "Se supone que implementa la interfaz del estimador de scikit-learn. O bien el estimador necesita proporcionar una función ``score``, o se debe pasar ``scoring``."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:35
msgid "**param_distributions**"
msgstr "**param_distributions**"

#: of
msgid "dict"
msgstr "dict"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:32
msgid "Dictionary with parameters names (string) as keys and distributions or lists of parameters to try. Distributions must provide a ``rvs`` method for sampling (such as those from scipy.stats.distributions). If a list is given, it is sampled uniformly."
msgstr "Diccionario con nombres de parámetros (cadenas) como claves y distribuciones o listas de parámetros a probar. Las distribuciones deben proporcionar un método ``rvs`` para el muestreo (como los de scipy.stats.distributions). Si se da una lista, se muestrea uniformemente."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:42
msgid "**n_candidates**"
msgstr "**n_candidates**"

#: of
msgid "int, default='exhaust'"
msgstr "int, default='exhaust'"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:38
msgid "The number of candidate parameters to sample, at the first iteration. Using 'exhaust' will sample enough candidates so that the last iteration uses as many resources as possible, based on `min_resources`, `max_resources` and `factor`. In this case, `min_resources` cannot be 'exhaust'."
msgstr "El número de parámetros candidatos a muestrear, en la primera iteración. Si se utiliza 'exhaust' se muestrearán suficientes candidatos para que la última iteración utilice tantos recursos como sea posible, basándose en `min_resources`, `max_resources` y `factor`. En este caso, `min_resources` no puede ser 'exhaust'."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:47
msgid "**factor**"
msgstr "**factor**"

#: of
msgid "int or float, default=3"
msgstr "int o float, default=3"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:45
msgid "The 'halving' parameter, which determines the proportion of candidates that are selected for each subsequent iteration. For example, ``factor=3`` means that only one third of the candidates are selected."
msgstr "El parámetro 'halving', que determina la proporción de candidatos que se seleccionan en cada iteración posterior. Por ejemplo, ``factor=3`` significa que sólo se selecciona un tercio de los candidatos."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:55
msgid "**resource** : ``'n_samples'`` or str, default='n_samples'"
msgstr "**resource** : ``'n_samples'`` o str, default='n_samples'"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:54
msgid "'n_samples' or str, default='n_samples'"
msgstr "'n_samples' o str, default='n_samples'"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:50
msgid "Defines the resource that increases with each iteration. By default, the resource is the number of samples. It can also be set to any parameter of the base estimator that accepts positive integer values, e.g. 'n_iterations' or 'n_estimators' for a gradient boosting estimator. In this case ``max_resources`` cannot be 'auto' and must be set explicitly."
msgstr "Define el recurso que aumenta con cada iteración. Por defecto, el recurso es el número de muestras. También puede establecerse en cualquier parámetro del estimador base que acepte valores enteros positivos, por ejemplo, 'n_iterations' o 'n_estimators' para un estimador de potenciación de gradiente. En este caso, ``max_resources`` no puede ser 'auto' y debe establecerse explícitamente."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:60
msgid "**max_resources**"
msgstr "**max_resources**"

#: of
msgid "int, default='auto'"
msgstr "int, default='auto'"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:58
msgid "The maximum number of resources that any candidate is allowed to use for a given iteration. By default, this is set ``n_samples`` when ``resource='n_samples'`` (default), else an error is raised."
msgstr "El número máximo de recursos que se permite utilizar a cualquier candidato para una iteración determinada. Por defecto, se establece en ``n_samples`` cuando ``resource='n_samples'`` (por defecto), de lo contrario se produce un error."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:82
msgid "**min_resources**"
msgstr "**min_resources**"

#: of
msgid "{'exhaust', 'smallest'} or int, default='smallest'"
msgstr "{'exhaust', 'smallest'} o int, default='smallest'"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:63
msgid "The minimum amount of resource that any candidate is allowed to use for a given iteration. Equivalently, this defines the amount of resources `r0` that are allocated for each candidate at the first iteration."
msgstr "La cantidad mínima de recursos que cualquier candidato puede utilizar en una iteración determinada. Equivalentemente, define la cantidad de recursos `r0` que se asigna a cada candidato en la primera iteración."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:72
msgid "'smallest' is a heuristic that sets `r0` to a small value:"
msgstr "'smallest' es una heurística que establece `r0` en un valor pequeño:"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:69
msgid "``n_splits * 2`` when ``resource='n_samples'`` for a regression"
msgstr "``n_splits * 2`` cuando ``resource='n_samples'`` para una regresión"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:70
msgid "problem"
msgstr "problema"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:71
msgid "``n_classes * n_splits * 2`` when ``resource='n_samples'`` for a"
msgstr "``n_classes * n_splits * 2`` cuando ``resource='n_samples'`` para un"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:72
msgid "classification problem"
msgstr "problema de clasificación"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:73
msgid "``1`` when ``resource != 'n_samples'``"
msgstr "``1`` cuando ``resource != 'n_samples'``"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:74
msgid "'exhaust' will set `r0` such that the **last** iteration uses as much resources as possible. Namely, the last iteration will use the highest value smaller than ``max_resources`` that is a multiple of both ``min_resources`` and ``factor``. In general, using 'exhaust' leads to a more accurate estimator, but is slightly more time consuming. 'exhaust' isn't available when `n_candidates='exhaust'`."
msgstr "'exhaust' establecerá \"r0\" de forma que la **última** iteración utilice tantos recursos como sea posible. Es decir, la última iteración utilizará el mayor valor menor que ``max_resources`` que sea múltiplo de ``min_resources`` y ``factor``. En general, el uso de 'exhaust' conduce a un estimador más preciso, pero consumpero es ligeramente más lento. El uso de 'exhaust' no está disponible cuando `n_candidates='exhaust'`."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:81
msgid "Note that the amount of resources used at each iteration is always a multiple of ``min_resources``."
msgstr "Ten en cuenta que la cantidad de recursos utilizados en cada iteración es siempre un múltiplo de ``min_resources``."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:91
msgid "**aggressive_elimination**"
msgstr "**aggressive_elimination**"

#: of
msgid "bool, default=False"
msgstr "bool, default=False"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:85
msgid "This is only relevant in cases where there isn't enough resources to reduce the remaining candidates to at most `factor` after the last iteration. If ``True``, then the search process will 'replay' the first iteration for as long as needed until the number of candidates is small enough. This is ``False`` by default, which means that the last iteration may evaluate more than ``factor`` candidates. See :ref:`aggressive_elimination` for more details."
msgstr "Esto sólo es relevante en los casos en los que no hay suficientes recursos para reducir los candidatos restantes a un máximo de `factor` después de la última iteración. Si es ``True``, el proceso de búsqueda 'repetirá' la primera iteración durante el tiempo necesario hasta que el número de candidatos sea lo suficientemente pequeño. Por defecto es ``False``, lo que significa que la última iteración puede evaluar más candidatos que ``factor``. Consulta :ref:`aggressive_elimination` para más detalles."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:113
msgid "**cv**"
msgstr "**cv**"

#: of
msgid "int, cross-validation generator or an iterable, default=5"
msgstr "int, generador de validación cruzada o un iterable, default=5"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:94
msgid "Determines the cross-validation splitting strategy. Possible inputs for cv are:"
msgstr "Determina la estrategia de división de la validación cruzada. Las posibles entradas para cv son:"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:97
msgid "integer, to specify the number of folds in a `(Stratified)KFold`,"
msgstr "entero, para especificar el número de pliegues en un `(Stratified)KFold`,"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:98
msgid ":term:`CV splitter`,"
msgstr ":term:`separador de CV`,"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:99
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr "Un iterable que produce divisiones (train, test) como arreglos de índices."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:101
msgid "For integer/None inputs, if the estimator is a classifier and ``y`` is either binary or multiclass, :class:`StratifiedKFold` is used. In all other cases, :class:`KFold` is used."
msgstr "Para entradas enteras/None, si el estimador es un clasificador e ``y`` es binario o multiclase, se utiliza :class:`StratifiedKFold`. En todos los demás casos, se utiliza :class:`KFold`."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:105
msgid "Refer :ref:`User Guide <cross_validation>` for the various cross-validation strategies that can be used here."
msgstr "Consulta el :ref:`Manual de usuario <cross_validation>` para las diversas estrategias de validación cruzada que pueden ser utilizadas aquí."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:109
msgid "Due to implementation details, the folds produced by `cv` must be the same across multiple calls to `cv.split()`. For built-in `scikit-learn` iterators, this can be achieved by deactivating shuffling (`shuffle=False`), or by setting the `cv`'s `random_state` parameter to an integer."
msgstr "Debido a los detalles de implementación, los pliegues producidos por `cv` deben ser los mismos a través de múltiples invocaciones a `cv.split()`. Para los iteradores incorporados de `scikit-learn`, esto se puede lograr desactivando el mezclado (`shuffle=False`), o estableciendo el parámetro `random_state` de `cv` en un número entero."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:118
msgid "**scoring**"
msgstr "**scoring**"

#: of
msgid "string, callable, or None, default=None"
msgstr "string, invocable, o None, default=None"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:116
msgid "A single string (see :ref:`scoring_parameter`) or a callable (see :ref:`scoring`) to evaluate the predictions on the test set. If None, the estimator's score method is used."
msgstr "Una sola cadena (ver :ref:`scoring_parameter`) o un invocable \"callable\" (ver :ref:`scoring`) para evaluar las predicciones en el conjunto de pruebas. Si es None, se utiliza el método score del estimador."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:126
msgid "**refit**"
msgstr "**refit**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:121
msgid "If True, refit an estimator using the best found parameters on the whole dataset."
msgstr "Si es True, reajusta un estimador utilizando los mejores parámetros encontrados en todo el conjunto de datos."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:124
msgid "The refitted estimator is made available at the ``best_estimator_`` attribute and permits using ``predict`` directly on this ``HalvingRandomSearchCV`` instance."
msgstr "El estimador reajustado está disponible en el atributo ``best_estimator_`` y permite utilizar ``predict`` directamente en esta instancia ``HalvingRandomSearchCV``."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:132
msgid "**error_score**"
msgstr "**error_score**"

#: of
msgid "'raise' or numeric"
msgstr "'raise' o numeric"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:129
msgid "Value to assign to the score if an error occurs in estimator fitting. If set to 'raise', the error is raised. If a numeric value is given, FitFailedWarning is raised. This parameter does not affect the refit step, which will always raise the error. Default is ``np.nan``"
msgstr "Valor para asignar a la puntuación (score) si se produce un error en el ajuste del estimador. Si se establece en 'raise', se genera un error. Si se da un valor numérico, se genera FitFailedWarning. Este parámetro no afecta al paso de reajuste, que siempre generará el error. Por defecto es ``np.nan``"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:141
msgid "**return_train_score**"
msgstr "**return_train_score**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:135
msgid "If ``False``, the ``cv_results_`` attribute will not include training scores. Computing training scores is used to get insights on how different parameter settings impact the overfitting/underfitting trade-off. However computing the scores on the training set can be computationally expensive and is not strictly required to select the parameters that yield the best generalization performance."
msgstr "Si es ``False``, el atributo ``cv_results_`` no incluirá las puntuaciones de entrenamiento. El cálculo de las puntuaciones de entrenamiento se utiliza para obtener información sobre el impacto de los diferentes ajustes de los parámetros en el equilibrio entre sobreajuste/subajuste. Sin embargo, calcular las puntuaciones en el conjunto de entrenamiento puede ser costoso computacionalmente y no es estrictamente necesario para seleccionar los parámetros que producen el mejor rendimiento de generalización."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:149
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "int, RandomState instance o None, default=None"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:144
msgid "Pseudo random number generator state used for subsampling the dataset when `resources != 'n_samples'`. Also used for random uniform sampling from lists of possible values instead of scipy.stats distributions. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Estado del generador de números pseudoaleatorios utilizado para el submuestreo del conjunto de datos cuando `resources != 'n_samples'`. También se utiliza para el muestreo uniforme aleatorio de las listas de valores posibles en lugar de las distribuciones de scipy.stats. Pasa un número entero (int) para una salida reproducible a través de múltiples invocaiones a la función. Ver :term:`Glosario <random_state>`."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:155
msgid "**n_jobs**"
msgstr "**n_jobs**"

#: of
msgid "int or None, default=None"
msgstr "int o None, default=None"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:152
msgid "Number of jobs to run in parallel. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr "Número de trabajos a ejecutar en paralelo. ``None`` significa 1 a menos que esté en un contexto :obj:`joblib.parallel_backend`. ``-1`` significa utilizar todos los procesadores. Ver :term:`Glosario <n_jobs>` para más detalles."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:161
msgid "**verbose**"
msgstr "**verbose**"

#: of
msgid "int"
msgstr "int"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:158
msgid "Controls the verbosity: the higher, the more messages."
msgstr "Controla la verbosidad: cuanto más alta, más mensajes."

#: of sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV
msgid "Attributes"
msgstr "Atributos"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:166
msgid "**n_resources_**"
msgstr "**n_resources_**"

#: of
msgid "list of int"
msgstr "list de int"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:166
msgid "The amount of resources used at each iteration."
msgstr "La cantidad de recursos utilizados en cada iteración."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:170
msgid "**n_candidates_**"
msgstr "**n_candidates_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:169
msgid "The number of candidate parameters that were evaluated at each iteration."
msgstr "El número de parámetros candidatos que se evaluaron en cada iteración."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:174
msgid "**n_remaining_candidates_**"
msgstr "**n_remaining_candidates_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:173
msgid "The number of candidate parameters that are left after the last iteration. It corresponds to `ceil(n_candidates[-1] / factor)`"
msgstr "El número de parámetros candidatos que quedan después de la última iteración. Corresponde a `ceil(n_candidates[-1] / factor)`"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:181
msgid "**max_resources_**"
msgstr "**max_resources_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:177
msgid "The maximum number of resources that any candidate is allowed to use for a given iteration. Note that since the number of resources used at each iteration must be a multiple of ``min_resources_``, the actual number of resources used at the last iteration may be smaller than ``max_resources_``."
msgstr "El número máximo de recursos que cualquier candidato puede utilizar en una iteración determinada. Ten en cuenta que, dado que el número de recursos utilizados en cada iteración debe ser un múltiplo de ``min_resources_``, el número real de recursos utilizados en la última iteración puede ser menor que ``max_resources_``."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:185
msgid "**min_resources_**"
msgstr "**min_resources_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:184
msgid "The amount of resources that are allocated for each candidate at the first iteration."
msgstr "La cantidad de recursos que se asignan a cada candidato en la primera iteración."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:191
msgid "**n_iterations_**"
msgstr "**n_iterations_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:188
msgid "The actual number of iterations that were run. This is equal to ``n_required_iterations_`` if ``aggressive_elimination`` is ``True``. Else, this is equal to ``min(n_possible_iterations_, n_required_iterations_)``."
msgstr "El número real de iteraciones que se ejecutaron. Es igual a ``n_required_iterations_`` si ``aggressive_elimination`` es ``True``. De lo contrario, es igual a ``min(n_possible_iterations_, n_required_iterations_)``."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:196
msgid "**n_possible_iterations_**"
msgstr "**n_possible_iterations_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:194
msgid "The number of iterations that are possible starting with ``min_resources_`` resources and without exceeding ``max_resources_``."
msgstr "El número de iteraciones que son posibles comenzando con los recursos ``min_resources_`` y sin superar los recursos ``max_resources_``."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:202
msgid "**n_required_iterations_**"
msgstr "**n_required_iterations_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:199
msgid "The number of iterations that are required to end up with less than ``factor`` candidates at the last iteration, starting with ``min_resources_`` resources. This will be smaller than ``n_possible_iterations_`` when there isn't enough resources."
msgstr "El número de iteraciones que se requieren para terminar con menos de ``factor`` candidatos en la última iteración, comenzando con ``min_resources_`` recursos. Será menor que ``n_possible_iterations_`` cuando no haya suficientes recursos."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:209
msgid "**cv_results_**"
msgstr "**cv_results_**"

#: of
msgid "dict of numpy (masked) ndarrays"
msgstr "dict de numpy (masked) ndarrays"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:205
msgid "A dict with keys as column headers and values as columns, that can be imported into a pandas ``DataFrame``. It contains many informations for analysing the results of a search. Please refer to the :ref:`User guide<successive_halving_cv_results>` for details."
msgstr "Un diccionario (dict) con claves como cabeceras de columna y valores como columnas, que puede ser importado en un ``DataFrame`` de pandas. Contiene mucha información para analizar los resultados de una búsqueda. Por favor, consulta el :ref:`Manual de Usuario<successive_halving_cv_results>` para más detalles."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:214
msgid "**best_estimator_**"
msgstr "**best_estimator_**"

#: of
msgid "estimator or dict"
msgstr "estimator o dict"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:212
msgid "Estimator that was chosen by the search, i.e. estimator which gave highest score (or smallest loss if specified) on the left out data. Not available if ``refit=False``."
msgstr "Estimador que fue elegido por la búsqueda, es decir, el estimador que dio la puntuación más alta (o la pérdida más pequeña si se especifica) en los datos omitidos. No está disponible si ``refit = False``'."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:217
msgid "**best_score_**"
msgstr "**best_score_**"

#: of
msgid "float"
msgstr "float"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:217
msgid "Mean cross-validated score of the best_estimator."
msgstr "Puntuación media de la validación cruzada del mejor estimador (best_estimator)."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:220
msgid "**best_params_**"
msgstr "**best_params_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:220
msgid "Parameter setting that gave the best results on the hold out data."
msgstr "Configuración del parámetro que dio los mejores resultados en los datos retenidos."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:228
msgid "**best_index_**"
msgstr "**best_index_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:223
msgid "The index (of the ``cv_results_`` arrays) which corresponds to the best candidate parameter setting."
msgstr "El índice (de los arreglos ``cv_results_``) que corresponde a la mejor configuración del parámetro candidato."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:226
msgid "The dict at ``search.cv_results_['params'][search.best_index_]`` gives the parameter setting for the best model, that gives the highest mean score (``search.best_score_``)."
msgstr "El diccionario (dict) en ``search.cv_results_['params'][search.best_index_]`` da la configuración de parámetros para el mejor modelo, que da la puntuación media más alta (``search.best_score_``)."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:232
msgid "**scorer_**"
msgstr "**scorer_**"

#: of
msgid "function or a dict"
msgstr "function o un dict"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:231
msgid "Scorer function used on the held out data to choose the best parameters for the model."
msgstr "Función de puntuación utilizada en los datos retenidos para elegir los mejores parámetros para el modelo."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:235
msgid "**n_splits_**"
msgstr "**n_splits_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:235
msgid "The number of cross-validation splits (folds/iterations)."
msgstr "El número de divisiones de la validación cruzada (pliegues/iteraciones)."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:243
msgid "**refit_time_**"
msgstr "**refit_time_**"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:238
msgid "Seconds used for refitting the best model on the whole dataset."
msgstr "Segundos utilizados para reajustar el mejor modelo en todo el conjunto de datos."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:240
msgid "This is present only if ``refit`` is not False."
msgstr "Esto está presente sólo si ``refit`` no es False."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:248
msgid ":class:`HalvingGridSearchCV`"
msgstr ":class:`HalvingGridSearchCV`"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:249
msgid "Search over a grid of parameters using successive halving."
msgstr "Búsqueda sobre una cuadrícula de parámetros utilizando una división sucesiva a la mitad."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:253
msgid "Notes"
msgstr "Notas"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:254
msgid "The parameters selected are those that maximize the score of the held-out data, according to the scoring parameter."
msgstr "Los parámetros seleccionados son los que maximizan la puntuación de los datos retenidos, según el parámetro de puntuación."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:259
msgid "Examples"
msgstr "Ejemplos"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:280
msgid "Methods"
msgstr "Métodos"

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`decision_function <sklearn.model_selection.HalvingRandomSearchCV.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.model_selection.HalvingRandomSearchCV.decision_function>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Call decision_function on the estimator with the best found parameters."
msgstr "Invoca a decision_function en el estimador con los mejores parámetros encontrados."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`fit <sklearn.model_selection.HalvingRandomSearchCV.fit>`\\"
msgstr ":obj:`fit <sklearn.model_selection.HalvingRandomSearchCV.fit>`\\"

#: of
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Run fit with all sets of parameters."
msgstr "Ejecuta el ajuste con todos los conjuntos de parámetros."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`get_params <sklearn.model_selection.HalvingRandomSearchCV.get_params>`\\"
msgstr ":obj:`get_params <sklearn.model_selection.HalvingRandomSearchCV.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`inverse_transform <sklearn.model_selection.HalvingRandomSearchCV.inverse_transform>`\\"
msgstr ":obj:`inverse_transform <sklearn.model_selection.HalvingRandomSearchCV.inverse_transform>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Call inverse_transform on the estimator with the best found params."
msgstr "Invoca a inverse_transform en el estimador con los mejores parámetros encontrados."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`predict <sklearn.model_selection.HalvingRandomSearchCV.predict>`\\"
msgstr ":obj:`predict <sklearn.model_selection.HalvingRandomSearchCV.predict>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.predict:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Call predict on the estimator with the best found parameters."
msgstr "Invoca a predict en el estimador con los mejores parámetros encontrados."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`predict_log_proba <sklearn.model_selection.HalvingRandomSearchCV.predict_log_proba>`\\"
msgstr ":obj:`predict_log_proba <sklearn.model_selection.HalvingRandomSearchCV.predict_log_proba>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.predict_log_proba:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Call predict_log_proba on the estimator with the best found parameters."
msgstr "Invoca a predict_log_proba en el estimador con los mejores parámetros encontrados."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.model_selection.HalvingRandomSearchCV.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.model_selection.HalvingRandomSearchCV.predict_proba>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.predict_proba:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Call predict_proba on the estimator with the best found parameters."
msgstr "Invoca a predict_proba en el estimador con los mejores parámetros encontrados."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`score <sklearn.model_selection.HalvingRandomSearchCV.score>`\\"
msgstr ":obj:`score <sklearn.model_selection.HalvingRandomSearchCV.score>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.score:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Returns the score on the given data, if the estimator has been refit."
msgstr "Devuelve la puntuación en los datos dados, si el estimador ha sido reajustado."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`score_samples <sklearn.model_selection.HalvingRandomSearchCV.score_samples>`\\"
msgstr ":obj:`score_samples <sklearn.model_selection.HalvingRandomSearchCV.score_samples>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Call score_samples on the estimator with the best found parameters."
msgstr "Invoca a score_samples en el estimador con los mejores parámetros encontrados."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`set_params <sklearn.model_selection.HalvingRandomSearchCV.set_params>`\\"
msgstr ":obj:`set_params <sklearn.model_selection.HalvingRandomSearchCV.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid ":obj:`transform <sklearn.model_selection.HalvingRandomSearchCV.transform>`\\"
msgstr ":obj:`transform <sklearn.model_selection.HalvingRandomSearchCV.transform>`\\"

#: of sklearn.model_selection._search.BaseSearchCV.transform:2
#: sklearn.model_selection._search_successive_halving.HalvingRandomSearchCV:294:<autosummary>:1
msgid "Call transform on the estimator with the best found parameters."
msgstr "Invoca a transform en el estimador con los mejores parámetros encontrados."

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``decision_function``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente admite ``decision_function``."

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:23
#: sklearn.model_selection._search.BaseSearchCV.predict:23
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba:23
#: sklearn.model_selection._search.BaseSearchCV.predict_proba:23
#: sklearn.model_selection._search.BaseSearchCV.score:11
#: sklearn.model_selection._search.BaseSearchCV.score_samples:13
#: sklearn.model_selection._search.BaseSearchCV.transform:23
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit:9
msgid "**X**"
msgstr "**X**"

#: of
msgid "indexable, length n_samples"
msgstr "indexable, length n_samples"

#: of sklearn.model_selection._search.BaseSearchCV.decision_function:10
#: sklearn.model_selection._search.BaseSearchCV.inverse_transform:10
#: sklearn.model_selection._search.BaseSearchCV.predict:10
#: sklearn.model_selection._search.BaseSearchCV.predict_log_proba:10
#: sklearn.model_selection._search.BaseSearchCV.predict_proba:10
#: sklearn.model_selection._search.BaseSearchCV.transform:10
msgid "Must fulfill the input assumptions of the underlying estimator."
msgstr "Debe cumplir los supuestos de entrada del estimador subyacente."

#: of
msgid "array-like, shape (n_samples, n_features)"
msgstr "array-like, forma (n_samples, n_features)"

#: of
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit:8
msgid "Training vector, where n_samples is the number of samples and n_features is the number of features."
msgstr "Vector de entrenamiento, donde `n_samples` es el número de muestras y `n_features` es el número de características."

#: of sklearn.model_selection._search.BaseSearchCV.score:15
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit:13
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like, shape (n_samples,) or (n_samples, n_output), optional"
msgstr "array-like, forma (n_samples,) o (n_samples, n_output), opcional"

#: of sklearn.model_selection._search.BaseSearchCV.score:14
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit:12
msgid "Target relative to X for classification or regression; None for unsupervised learning."
msgstr "Objetivo relativo a X para la clasificación o la regresión; None para el aprendizaje no supervisado."

#: of
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit:18
msgid "**groups**"
msgstr "**groups**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit:16
msgid "Group labels for the samples used while splitting the dataset into train/test set. Only used in conjunction with a \"Group\" :term:`cv` instance (e.g., :class:`~sklearn.model_selection.GroupKFold`)."
msgstr "Etiquetas de grupo para las muestras utilizadas al dividir el conjunto de datos en conjunto de entrenamiento/prueba. Sólo se utiliza junto con una instancia \"Group\" de :term:`cv` (por ejemplo, :class:`~sklearn.model_selection.GroupKFold`)."

#: of
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit:33
msgid "**\\*\\*fit_params**"
msgstr "**\\*\\*fit_params**"

#: of
msgid "dict of string -> object"
msgstr "dict of string -> object"

#: of
#: sklearn.model_selection._search_successive_halving.BaseSuccessiveHalving.fit:21
msgid "Parameters passed to the ``fit`` method of the estimator"
msgstr "Parámetros pasados al método ``fit`` del estimador"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.model_selection._search.BaseSearchCV.score
#: sklearn.model_selection._search.BaseSearchCV.score_samples
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de los parámetros mapeados a sus valores."

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:4
msgid "Only available if the underlying estimator implements ``inverse_transform`` and ``refit=True``."
msgstr "Sólo está disponible si el estimador subyacente implementa ``inverse_transform`` y ``refit=True``."

#: of sklearn.model_selection._search.BaseSearchCV.inverse_transform:23
msgid "**Xt**"
msgstr "**Xt**"

#: of sklearn.model_selection._search.BaseSearchCV.predict:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente admite ``predict``."

#: of sklearn.model_selection._search.BaseSearchCV.predict_log_proba:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict_log_proba``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente admite ``predict_log_proba``."

#: of sklearn.model_selection._search.BaseSearchCV.predict_proba:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``predict_proba``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente admite ``predict_proba``."

#: of sklearn.model_selection._search.BaseSearchCV.score:4
msgid "This uses the score defined by ``scoring`` where provided, and the ``best_estimator_.score`` method otherwise."
msgstr "Esto utiliza la puntuación definida por ``scoring`` cuando se proporciona, y el método ``best_estimator_.score`` en caso contrario."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.model_selection._search.BaseSearchCV.score:10
msgid "Input data, where n_samples is the number of samples and n_features is the number of features."
msgstr "Datos de entrada, donde n_samples es el número de muestras y n_features es el número de características."

#: of
msgid "array-like of shape (n_samples, n_output)             or (n_samples,), default=None"
msgstr "array-like de forma (n_samples, n_output)             o (n_samples,), default=None"

#: of sklearn.model_selection._search.BaseSearchCV.score:31
msgid "**score**"
msgstr "**score**"

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:4
msgid "Only available if ``refit=True`` and the underlying estimator supports ``score_samples``."
msgstr "Sólo está disponible si ``refit=True`` y el estimador subyacente admite ``score_samples``."

#: of
msgid "iterable"
msgstr "iterable"

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:12
msgid "Data to predict on. Must fulfill input requirements of the underlying estimator."
msgstr "Datos para predecir. Deben cumplir los requisitos de entrada del estimador subyacente."

#: of sklearn.model_selection._search.BaseSearchCV.score_samples:29
msgid "**y_score**"
msgstr "**y_score**"

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto en estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr "**self**"

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia del estimador."

#: of sklearn.model_selection._search.BaseSearchCV.transform:4
msgid "Only available if the underlying estimator supports ``transform`` and ``refit=True``."
msgstr "Sólo está disponible si el estimador subyacente admite ``transform`` y ``refit=True``."

#: ../modules/generated/sklearn.model_selection.HalvingRandomSearchCV.examples:4
msgid "Examples using ``sklearn.model_selection.HalvingRandomSearchCV``"
msgstr "Ejemplos con ``sklearn.model_selection.HalvingRandomSearchCV``"

#: ../modules/generated/sklearn.model_selection.HalvingRandomSearchCV.examples:15
#: ../modules/generated/sklearn.model_selection.HalvingRandomSearchCV.examples:23
msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"
msgstr ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"

#: ../modules/generated/sklearn.model_selection.HalvingRandomSearchCV.examples:34
#: ../modules/generated/sklearn.model_selection.HalvingRandomSearchCV.examples:42
#: ../modules/generated/sklearn.model_selection.HalvingRandomSearchCV.examples:53
#: ../modules/generated/sklearn.model_selection.HalvingRandomSearchCV.examples:61
msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_successive_halving_iterations.py`"
msgstr ":ref:`sphx_glr_auto_examples_model_selection_plot_successive_halving_iterations.py`"

