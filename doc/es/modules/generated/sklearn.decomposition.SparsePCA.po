msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 00:02\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.decomposition.SparsePCA.po\n"
"X-Crowdin-File-ID: 3058\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.decomposition.SparsePCA.rst:2
msgid ":mod:`sklearn.decomposition`.SparsePCA"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:2
msgid "Sparse Principal Components Analysis (SparsePCA)."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:4
msgid "Finds the set of sparse components that can optimally reconstruct the data.  The amount of sparseness is controllable by the coefficient of the L1 penalty, given by the parameter alpha."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:8
msgid "Read more in the :ref:`User Guide <SparsePCA>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._sparse_pca.SparsePCA
#: sklearn.decomposition._sparse_pca.SparsePCA.fit
#: sklearn.decomposition._sparse_pca.SparsePCA.transform
msgid "Parameters"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:13
msgid "**n_components**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:13
msgid "Number of sparse atoms to extract."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:17
msgid "**alpha**"
msgstr ""

#: of
msgid "float, default=1"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:16
msgid "Sparsity controlling parameter. Higher values lead to sparser components."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:21
msgid "**ridge_alpha**"
msgstr ""

#: of
msgid "float, default=0.01"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:20
msgid "Amount of ridge shrinkage to apply in order to improve conditioning when calling the transform method."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:24
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=1000"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:24
msgid "Maximum number of iterations to perform."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:27
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-8"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:27
msgid "Tolerance for the stopping condition."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:34
msgid "**method**"
msgstr ""

#: of
msgid "{'lars', 'cd'}, default='lars'"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:30
msgid "lars: uses the least angle regression method to solve the lasso problem (linear_model.lars_path) cd: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). Lars will be faster if the estimated components are sparse."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:40
msgid "**n_jobs**"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:37
msgid "Number of parallel jobs to run. ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:43
msgid "**U_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components), default=None"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:43
msgid "Initial values for the loadings for warm restart scenarios."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:46
msgid "**V_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_features), default=None"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:46
msgid "Initial values for the components for warm restart scenarios."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:49
msgid "**verbose**"
msgstr ""

#: of
msgid "int or bool, default=False"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:49
msgid "Controls the verbosity; the higher, the more messages. Defaults to 0."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:57
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:52
msgid "Used during dictionary learning. Pass an int for reproducible results across multiple function calls. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA
msgid "Attributes"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:62
msgid "**components_**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:62
msgid "Sparse components extracted from the data."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:65
msgid "**error_**"
msgstr ""

#: of
msgid "ndarray"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:65
msgid "Vector of errors at each iteration."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:70
msgid "**n_components_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:68
msgid "Estimated number of components."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:73
msgid "**n_iter_**"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:73
msgid "Number of iterations run."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:80
msgid "**mean_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:76
msgid "Per-feature empirical mean, estimated from the training set. Equal to ``X.mean(axis=0)``."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:85
msgid ":obj:`PCA`"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:87
msgid ":obj:`MiniBatchSparsePCA`"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:89
msgid ":obj:`DictionaryLearning`"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:95
msgid "Examples"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:111
msgid "Methods"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.SparsePCA.fit>`\\"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA.fit:2
#: sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid "Fit the model from data in X."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.decomposition.SparsePCA.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.SparsePCA.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid ":obj:`set_params <sklearn.decomposition.SparsePCA.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.SparsePCA.transform>`\\"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA.transform:2
#: sklearn.decomposition._sparse_pca.SparsePCA:119:<autosummary>:1
msgid "Least Squares projection of the data onto the sparse components."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.decomposition._sparse_pca.SparsePCA.fit:9
#: sklearn.decomposition._sparse_pca.SparsePCA.transform:15
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA.fit:8
msgid "Training vector, where n_samples in the number of samples and n_features is the number of features."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.decomposition._sparse_pca.SparsePCA.fit:12
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.decomposition._sparse_pca.SparsePCA.fit
#: sklearn.decomposition._sparse_pca.SparsePCA.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.decomposition._sparse_pca.SparsePCA.fit:28
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA.fit:17
msgid "Returns the instance itself."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid "Fits transformer to `X` and `y` with optional parameters `fit_params` and returns a transformed version of `X`."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs),                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
#: sklearn.decomposition._sparse_pca.SparsePCA.transform:31
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA.transform:4
msgid "To avoid instability issues in case the system is under-determined, regularization can be applied (Ridge regression) via the `ridge_alpha` parameter."
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA.transform:8
msgid "Note that Sparse PCA components orthogonality is not enforced as in PCA hence one cannot use a simple linear projection."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA.transform:14
msgid "Test data to be transformed, must have the same number of features as the data used to train the model."
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.decomposition._sparse_pca.SparsePCA.transform:20
msgid "Transformed data."
msgstr ""

