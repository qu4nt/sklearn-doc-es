msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-05 17:15\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.multioutput.ClassifierChain.po\n"
"X-Crowdin-File-ID: 5756\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.multioutput.ClassifierChain.rst:2
msgid ":mod:`sklearn.multioutput`.ClassifierChain"
msgstr ":mod:`sklearn.multioutput`.ClassifierChain"

#: of sklearn.multioutput.ClassifierChain:2
msgid "A multi-label model that arranges binary classifiers into a chain."
msgstr "Un modelo multietiqueta que ordena los clasificadores binarios en una cadena (chain)."

#: of sklearn.multioutput.ClassifierChain:4
msgid "Each model makes a prediction in the order specified by the chain using all of the available features provided to the model plus the predictions of models that are earlier in the chain."
msgstr "Cada modelo realiza una predicción en el orden especificado por la cadena utilizando todas las características disponibles proporcionadas al modelo, más las predicciones de los modelos que están antes en la cadena."

#: of sklearn.multioutput.ClassifierChain:8
msgid "Read more in the :ref:`User Guide <classifierchain>`."
msgstr "Más información en el :ref:`Manual de usuario <classifierchain>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.multioutput.ClassifierChain
#: sklearn.multioutput.ClassifierChain.decision_function
#: sklearn.multioutput.ClassifierChain.fit
#: sklearn.multioutput.ClassifierChain.predict_proba
#: sklearn.multioutput._BaseChain.predict
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.multioutput.ClassifierChain:15
msgid "**base_estimator**"
msgstr "**base_estimator**"

#: of
msgid "estimator"
msgstr "estimador"

#: of sklearn.multioutput.ClassifierChain:15
msgid "The base estimator from which the classifier chain is built."
msgstr "El estimador base a partir del cual se construye la cadena de clasificación."

#: of sklearn.multioutput.ClassifierChain:32
msgid "**order**"
msgstr "**order**"

#: of
msgid "array-like of shape (n_outputs,) or 'random', default=None"
msgstr "array-like de forma (n_outputs,) o 'random ', default=None"

#: of sklearn.multioutput.ClassifierChain:18
msgid "If None, the order will be determined by the order of columns in the label matrix Y.::"
msgstr "Si es None, el orden será determinado por el orden de las columnas en la matriz de etiquetas Y.::"

#: of sklearn.multioutput.ClassifierChain:23
msgid "The order of the chain can be explicitly set by providing a list of integers. For example, for a chain of length 5.::"
msgstr "El orden de la cadena puede establecerse explícitamente proporcionando una lista de enteros. Por ejemplo, para una cadena de longitud 5.::"

#: of sklearn.multioutput.ClassifierChain:28
msgid "means that the first model in the chain will make predictions for column 1 in the Y matrix, the second model will make predictions for column 3, etc."
msgstr "significa que el primer modelo de la cadena hará predicciones para la columna 1 de la matriz Y, el segundo modelo hará predicciones para la columna 3, etc."

#: of sklearn.multioutput.ClassifierChain:32
msgid "If order is 'random' a random ordering will be used."
msgstr "Si el orden es 'random' se usará un orden aleatorio."

#: of sklearn.multioutput.ClassifierChain:42
msgid "**cv**"
msgstr "**cv**"

#: of
msgid "int, cross-validation generator or an iterable, default=None"
msgstr "entero, generador de validación cruzada o un iterable, default=None"

#: of sklearn.multioutput.ClassifierChain:35
msgid "Determines whether to use cross validated predictions or true labels for the results of previous estimators in the chain. Possible inputs for cv are:"
msgstr "Determina si se utilizan predicciones validadas de forma cruzada o etiquetas verdaderas para los resultados de los estimadores anteriores en la cadena. Las entradas posibles para cv son:"

#: of sklearn.multioutput.ClassifierChain:39
msgid "None, to use true labels when fitting,"
msgstr "None, para usar etiquetas verdaderas cuando se haga el ajuste,"

#: of sklearn.multioutput.ClassifierChain:40
msgid "integer, to specify the number of folds in a (Stratified)KFold,"
msgstr "entero, para especificar el número de pliegues en un (Stratified)KFold,"

#: of sklearn.multioutput.ClassifierChain:41
msgid ":term:`CV splitter`,"
msgstr ":term:`CV splitter`,"

#: of sklearn.multioutput.ClassifierChain:42
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr "Un iterable que produce divisiones (train, test) como arreglos de índices."

#: of sklearn.multioutput.ClassifierChain:54
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, optional (default=None)"
msgstr "entero, instancia de RandomState o None, opcional (default=None)"

#: of sklearn.multioutput.ClassifierChain:45
msgid "If ``order='random'``, determines random number generation for the chain order. In addition, it controls the random seed given at each `base_estimator` at each chaining iteration. Thus, it is only used when `base_estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Si ``order='random'``, determina la generación de números aleatorios para el orden de la cadena. Además, controla la semilla aleatoria dada en cada `base_estimator` en cada iteración de encadenamiento. Por lo tanto, sólo se utiliza cuando `base_estimator` expone un `random_state`. Pasa un int para una salida reproducible a través de múltiples llamadas a la función. Ver :term:`Glosario <random_state>`."

#: of sklearn.multioutput.ClassifierChain
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.multioutput.ClassifierChain:60
msgid "**classes_**"
msgstr "**classes_**"

#: of
msgid "list"
msgstr "lista"

#: of sklearn.multioutput.ClassifierChain:59
msgid "A list of arrays of length ``len(estimators_)`` containing the class labels for each estimator in the chain."
msgstr "Una lista de matrices de longitud ``len(estimators_)`` que contiene las etiquetas de clase de cada estimador de la cadena."

#: of sklearn.multioutput.ClassifierChain:63
msgid "**estimators_**"
msgstr "**estimators_**"

#: of sklearn.multioutput.ClassifierChain:63
msgid "A list of clones of base_estimator."
msgstr "Una lista de clones de base_estimator."

#: of sklearn.multioutput.ClassifierChain:69
msgid "**order_**"
msgstr "**order_**"

#: of sklearn.multioutput.ClassifierChain:66
msgid "The order of labels in the classifier chain."
msgstr "El orden de las etiquetas en la cadena de clasificadores."

#: of sklearn.multioutput.ClassifierChain:74
msgid ":obj:`RegressorChain`"
msgstr ":obj:`RegressorChain`"

#: of sklearn.multioutput.ClassifierChain:75
msgid "Equivalent for regression."
msgstr "Equivalente para la regresión."

#: of sklearn.multioutput.ClassifierChain:76
msgid ":obj:`MultioutputClassifier`"
msgstr ":obj:`MultioutputClassifier`"

#: of sklearn.multioutput.ClassifierChain:77
msgid "Classifies each output independently rather than chaining."
msgstr "Clasifica cada salida de forma independiente en lugar de encadenarla."

#: of sklearn.multioutput.ClassifierChain:82
msgid "References"
msgstr "Referencias"

#: of sklearn.multioutput.ClassifierChain:83
msgid "Jesse Read, Bernhard Pfahringer, Geoff Holmes, Eibe Frank, \"Classifier Chains for Multi-label Classification\", 2009."
msgstr "Jesse Read, Bernhard Pfahringer, Geoff Holmes, Eibe Frank, \"Classifier Chains for Multi-label Classification\", 2009."

#: of sklearn.multioutput.ClassifierChain:91
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.multioutput.ClassifierChain:114
msgid "Methods"
msgstr "Métodos"

#: of sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid ":obj:`decision_function <sklearn.multioutput.ClassifierChain.decision_function>`\\"
msgstr ":obj:`decision_function <sklearn.multioutput.ClassifierChain.decision_function>`\\"

#: of sklearn.multioutput.ClassifierChain.decision_function:2
#: sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid "Evaluate the decision_function of the models in the chain."
msgstr "Evaluar la decision_function de los modelos en la cadena."

#: of sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid ":obj:`fit <sklearn.multioutput.ClassifierChain.fit>`\\"
msgstr ":obj:`fit <sklearn.multioutput.ClassifierChain.fit>`\\"

#: of sklearn.multioutput.ClassifierChain.fit:2
#: sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid "Fit the model to data matrix X and targets Y."
msgstr "Ajusta el modelo a la matriz de datos X y a los objetivos Y."

#: of sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid ":obj:`get_params <sklearn.multioutput.ClassifierChain.get_params>`\\"
msgstr ":obj:`get_params <sklearn.multioutput.ClassifierChain.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid ":obj:`predict <sklearn.multioutput.ClassifierChain.predict>`\\"
msgstr ":obj:`predict <sklearn.multioutput.ClassifierChain.predict>`\\"

#: of sklearn.multioutput.ClassifierChain:124:<autosummary>:1
#: sklearn.multioutput._BaseChain.predict:2
msgid "Predict on the data matrix X using the ClassifierChain model."
msgstr "Predecir sobre la matriz de datos X utilizando el modelo ClassifierChain."

#: of sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.multioutput.ClassifierChain.predict_proba>`\\"
msgstr ":obj:`predict_proba <sklearn.multioutput.ClassifierChain.predict_proba>`\\"

#: of sklearn.multioutput.ClassifierChain.predict_proba:2
#: sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid "Predict probability estimates."
msgstr "Predecir estimaciones de probabilidad."

#: of sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid ":obj:`score <sklearn.multioutput.ClassifierChain.score>`\\"
msgstr ":obj:`score <sklearn.multioutput.ClassifierChain.score>`\\"

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr "Devuelve la precisión media en los datos y etiquetas de prueba dados."

#: of sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid ":obj:`set_params <sklearn.multioutput.ClassifierChain.set_params>`\\"
msgstr ":obj:`set_params <sklearn.multioutput.ClassifierChain.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.multioutput.ClassifierChain:124:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.multioutput.ClassifierChain.decision_function:8
#: sklearn.multioutput.ClassifierChain.fit:8
#: sklearn.multioutput.ClassifierChain.predict_proba:8
#: sklearn.multioutput._BaseChain.predict:8
msgid "**X**"
msgstr "**X**"

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples_X, n_features)"

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.multioutput.ClassifierChain.decision_function
#: sklearn.multioutput.ClassifierChain.fit
#: sklearn.multioutput.ClassifierChain.predict_proba
#: sklearn.multioutput._BaseChain.predict
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.multioutput.ClassifierChain.decision_function:25
msgid "**Y_decision**"
msgstr "**Y_decision**"

#: of
msgid "array-like of shape (n_samples, n_classes)"
msgstr "array-like de forma (n_samples, n_classes)"

#: of sklearn.multioutput.ClassifierChain.decision_function:13
msgid "Returns the decision function of the sample for each model in the chain."
msgstr "Devuelve la función de decisión de la muestra para cada modelo de la cadena."

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.multioutput.ClassifierChain.fit:8
#: sklearn.multioutput._BaseChain.predict:8
msgid "The input data."
msgstr "Los datos de entrada."

#: of sklearn.multioutput.ClassifierChain.fit:11
msgid "**Y**"
msgstr "**Y**"

#: of sklearn.multioutput.ClassifierChain.fit:11
msgid "The target values."
msgstr "Los valores objetivo."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.multioutput.ClassifierChain.fit:27
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los sub objetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "dict"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.multioutput._BaseChain.predict:24
msgid "**Y_pred**"
msgstr "**Y_pred**"

#: of sklearn.multioutput._BaseChain.predict:13
msgid "The predicted values."
msgstr "Los valores previstos."

#: of sklearn.multioutput.ClassifierChain.predict_proba:24
msgid "**Y_prob**"
msgstr "**Y_prob**"

#: of sklearn.base.ClassifierMixin.score:4
msgid "In multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted."
msgstr "En la clasificación multietiqueta, se trata de la precisión del subconjunto, que es una métrica rigurosa, ya que se requiere para cada muestra que cada conjunto de etiquetas sea predicho correctamente."

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr "Muestras de prueba."

#: of sklearn.base.ClassifierMixin.score:14
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) or (n_samples, n_outputs)"

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr "Etiquetas True para `X`."

#: of sklearn.base.ClassifierMixin.score:17
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr "Ponderaciones de la muestra."

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "float"

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr "Precisión media de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona tanto con estimadores simples como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: ../modules/generated/sklearn.multioutput.ClassifierChain.examples:4
msgid "Examples using ``sklearn.multioutput.ClassifierChain``"
msgstr "Ejemplos usando ``sklearn.multioutput.ClassifierChain``"

#: ../modules/generated/sklearn.multioutput.ClassifierChain.examples:15
#: ../modules/generated/sklearn.multioutput.ClassifierChain.examples:23
msgid ":ref:`sphx_glr_auto_examples_multioutput_plot_classifier_chain_yeast.py`"
msgstr ":ref:`sphx_glr_auto_examples_multioutput_plot_classifier_chain_yeast.py`"

