msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-25 02:38\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/generated/sklearn.ensemble.AdaBoostRegressor.po\n"
"X-Crowdin-File-ID: 5468\n"
"Language: es_ES\n"

#: ../modules/generated/sklearn.ensemble.AdaBoostRegressor.rst:2
msgid ":mod:`sklearn.ensemble`.AdaBoostRegressor"
msgstr ":mod:`sklearn.ensemble`.AdaBoostRegressor"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:2
msgid "An AdaBoost regressor."
msgstr "Un regresor de AdaBoost."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:4
msgid "An AdaBoost [1] regressor is a meta-estimator that begins by fitting a regressor on the original dataset and then fits additional copies of the regressor on the same dataset but where the weights of instances are adjusted according to the error of the current prediction. As such, subsequent regressors focus more on difficult cases."
msgstr "Un regresor de AdaBoost [1] es un meta-estimador que comienza por ajustar un regresor en el conjunto de datos original y luego se ajusta a copias adicionales del regresor en el mismo conjunto de datos pero donde el peso de las instancias se ajusta de acuerdo con el error de la predicción actual. Como tal, los retrocesos posteriores se centran más en casos difíciles."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:10
msgid "This class implements the algorithm known as AdaBoost.R2 [2]."
msgstr "Esta clase implementa el algoritmo conocido como AdaBoost.R2 [2]."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:12
msgid "Read more in the :ref:`User Guide <adaboost>`."
msgstr "Más información en el :ref:`Manual de usuario <adaboost>`."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score
msgid "Parameters"
msgstr "Parámetros"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:22
msgid "**base_estimator**"
msgstr "**base_estimator**"

#: of
msgid "object, default=None"
msgstr "object, default=None"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:19
msgid "The base estimator from which the boosted ensemble is built. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeRegressor` initialized with `max_depth=3`."
msgstr "El estimador base desde el cual se construye el ensemble potenciado. Si es ``None``, entonces el estimador base es :class:`~sklearn.tree.DecisionTreeRegressor` inicializado con `max_depth=3`."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:26
msgid "**n_estimators**"
msgstr "**n_estimators**"

#: of
msgid "int, default=50"
msgstr "entero, default=50"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:25
msgid "The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early."
msgstr "El número máximo de estimadores en los que se termina la potenciación. En caso de ajuste perfecto, el procedimiento de aprendizaje se detiene pronto."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:31
msgid "**learning_rate**"
msgstr "**learning_rate**"

#: of
msgid "float, default=1."
msgstr "flotante, default=1."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:29
msgid "Learning rate shrinks the contribution of each regressor by ``learning_rate``. There is a trade-off between ``learning_rate`` and ``n_estimators``."
msgstr "La tasa de aprendizaje reduce la contribución de cada regresor por ``learning_rate``. Hay una compensación entre ``learning_rate`` y ``n_estimators``."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:35
msgid "**loss**"
msgstr "**loss**"

#: of
msgid "{'linear', 'square', 'exponential'}, default='linear'"
msgstr "{'linear', 'square', 'exponential'}, default='linear'"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:34
msgid "The loss function to use when updating the weights after each boosting iteration."
msgstr "La función de pérdida a usar al actualizar las ponderaciones después de cada iteración potenciadora."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:47
msgid "**random_state**"
msgstr "**random_state**"

#: of
msgid "int, RandomState instance or None, default=None"
msgstr "entero, instancia RandomState o None, default=None"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:38
msgid "Controls the random seed given at each `base_estimator` at each boosting iteration. Thus, it is only used when `base_estimator` exposes a `random_state`. In addition, it controls the bootstrap of the weights used to train the `base_estimator` at each boosting iteration. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`."
msgstr "Controla la semilla aleatoria dada en cada `base_estimator` en cada iteración potenciadora. Por lo tanto, solo se utiliza cuando `base_estimator` expone un `random_state`. Además, controla el bootstrap de arranque de las ponderaciones utilizadas para entrenar el 'base_estimator' en cada iteración potenciadora. Pasa un entero para salida reproducible a través de múltiples llamadas de función. Ver :term:`Glosario <random_state>`."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor
msgid "Attributes"
msgstr "Atributos"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:52
msgid "**base_estimator_**"
msgstr "**base_estimator_**"

#: of
msgid "estimator"
msgstr "estimator"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:52
msgid "The base estimator from which the ensemble is grown."
msgstr "El estimador de base del cual el ensemble crece."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:55
msgid "**estimators_**"
msgstr "**estimators_**"

#: of
msgid "list of classifiers"
msgstr "lista de clasificadores"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:55
msgid "The collection of fitted sub-estimators."
msgstr "La colección de sub-estimadores ajustados."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:58
msgid "**estimator_weights_**"
msgstr "**estimator_weights_**"

#: of
msgid "ndarray of floats"
msgstr "ndarray de flotantes"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:58
msgid "Weights for each estimator in the boosted ensemble."
msgstr "Ponderaciones para cada estimador en el ensemble potenciado."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:61
msgid "**estimator_errors_**"
msgstr "**estimator_errors_**"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:61
msgid "Regression error for each estimator in the boosted ensemble."
msgstr "Error de regresión para cada estimador en el ensemble potenciado."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:67
msgid ":obj:`feature_importances_ <feature_importances_>`"
msgstr ":obj:`feature_importances_ <feature_importances_>`"

#: of
msgid "ndarray of shape (n_features,)"
msgstr "ndarray de forma (n_features,)"

#: of sklearn.ensemble.AdaBoostRegressor.feature_importances_:2
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor:64
msgid "The impurity-based feature importances."
msgstr "La importancia de las características basadas en la impureza."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:72
msgid ":obj:`AdaBoostClassifier`, :obj:`GradientBoostingRegressor`"
msgstr ":obj:`AdaBoostClassifier`, :obj:`GradientBoostingRegressor`"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:74
msgid ":obj:`sklearn.tree.DecisionTreeRegressor`"
msgstr ":obj:`sklearn.tree.DecisionTreeRegressor`"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:79
msgid "References"
msgstr "Referencias"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:80
msgid "Y. Freund, R. Schapire, \"A Decision-Theoretic Generalization of on-Line Learning and an Application to Boosting\", 1995."
msgstr "Y. Freund, R. Schapire, \"A Decision-Theoretic Generalization of on-Line Learning and an Application to Boosting\", 1995."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:83
msgid "Drucker, \"Improving Regressors using Boosting Techniques\", 1997."
msgstr "Drucker, \"Improving Regressors using Boosting Techniques\", 1997."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:87
msgid "[R0c261b7dee9d-1]_, [R0c261b7dee9d-2]_"
msgstr "[R0c261b7dee9d-1]_, [R0c261b7dee9d-2]_"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:90
msgid "Examples"
msgstr "Ejemplos"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:104
msgid "Methods"
msgstr "Métodos"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.AdaBoostRegressor.fit>`\\"
msgstr ":obj:`fit <sklearn.ensemble.AdaBoostRegressor.fit>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit:2
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid "Build a boosted regressor from the training set (X, y)."
msgstr "Construye un regresor potenciado a partir del set de entrenamiento (X, y)."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid ":obj:`get_params <sklearn.ensemble.AdaBoostRegressor.get_params>`\\"
msgstr ":obj:`get_params <sklearn.ensemble.AdaBoostRegressor.get_params>`\\"

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr "Obtiene los parámetros para este estimador."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.AdaBoostRegressor.predict>`\\"
msgstr ":obj:`predict <sklearn.ensemble.AdaBoostRegressor.predict>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict:2
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid "Predict regression value for X."
msgstr "Predice el objetivo de regresión para X."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid ":obj:`score <sklearn.ensemble.AdaBoostRegressor.score>`\\"
msgstr ":obj:`score <sklearn.ensemble.AdaBoostRegressor.score>`\\"

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr "Devuelve el coeficiente de determinación :math:`R^2` de la predicción."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid ":obj:`set_params <sklearn.ensemble.AdaBoostRegressor.set_params>`\\"
msgstr ":obj:`set_params <sklearn.ensemble.AdaBoostRegressor.set_params>`\\"

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr "Establece los parámetros de este estimador."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid ":obj:`staged_predict <sklearn.ensemble.AdaBoostRegressor.staged_predict>`\\"
msgstr ":obj:`staged_predict <sklearn.ensemble.AdaBoostRegressor.staged_predict>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict:2
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid "Return staged predictions for X."
msgstr "Devuelve predicciones escalonadas para X."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
msgid ":obj:`staged_score <sklearn.ensemble.AdaBoostRegressor.staged_score>`\\"
msgstr ":obj:`staged_score <sklearn.ensemble.AdaBoostRegressor.staged_score>`\\"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor:114:<autosummary>:1
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:2
msgid "Return staged scores for X, y."
msgstr "Devuelve las puntuaciones escalonadas para X, y."

#: of sklearn.ensemble.AdaBoostRegressor.feature_importances_:4
msgid "The higher, the more important the feature. The importance of a feature is computed as the (normalized) total reduction of the criterion brought by that feature.  It is also known as the Gini importance."
msgstr "Cuanto más alto, más importante sera la característica. La importancia de una característica se calcula como la reducción total (normalizada) del criterio traído por esa función. También se le conoce como la importancia de Gini."

#: of sklearn.ensemble.AdaBoostRegressor.feature_importances_:9
msgid "Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative."
msgstr "Advertencia: las importancias de característica basadas en la impureza pueden ser engañosas para las características de alta cardinalidad (muchos valores únicos). Ver :func:`sklearn.inspection.permutation_importance` como una alternativa."

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.ensemble.AdaBoostRegressor.feature_importances_
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict
msgid "Returns"
msgstr "Devuelve"

#: of sklearn.ensemble.AdaBoostRegressor.feature_importances_:28
msgid "**feature_importances_**"
msgstr "**feature_importances_**"

#: of sklearn.ensemble.AdaBoostRegressor.feature_importances_:17
msgid "The feature importances."
msgstr "La importancia de las características."

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit:9
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict:11
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict:15
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:12
msgid "**X**"
msgstr "**X**"

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr "{array-like, sparse matrix} de forma (n_samples, n_features)"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit:8
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict:10
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:11
msgid "The training input samples. Sparse matrix can be CSC, CSR, COO, DOK, or LIL. COO, DOK, and LIL are converted to CSR."
msgstr "Las muestras de entrada de entrenamiento. La matriz dispersa puede ser CSC, CSR, COO, DOK o LIL. COO, DOK, y LIL se convierten en CSR."

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit:12
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict:27
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict:30
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:15
msgid "**y**"
msgstr "**y**"

#: of
msgid "array-like of shape (n_samples,)"
msgstr "array-like de forma (n_samples,)"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit:12
msgid "The target values (real numbers)."
msgstr "Los valores objetivo (números reales)."

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit:16
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:19
msgid "**sample_weight**"
msgstr "**sample_weight**"

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr "array-like de forma (n_samples,), default=None"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit:15
msgid "Sample weights. If None, the sample weights are initialized to 1 / n_samples."
msgstr "Ponderaciones de muestras. Si es None, las ponderaciones de las muestras se inicializan a ``1 / n_samples."

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.fit:32
msgid "**self**"
msgstr "**self**"

#: of
msgid "object"
msgstr "object"

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr "**deep**"

#: of
msgid "bool, default=True"
msgstr "bool, default=True"

#: of sklearn.base.BaseEstimator.get_params:8
msgid "If True, will return the parameters for this estimator and contained subobjects that are estimators."
msgstr "Si es True, devolverá los parámetros para este estimador y los subobjetos contenidos que son estimadores."

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr "**params**"

#: of
msgid "dict"
msgstr "diccionario"

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr "Nombres de parámetros mapeados a sus valores."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict:4
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict:4
msgid "The predicted regression value of an input sample is computed as the weighted median prediction of the classifiers in the ensemble."
msgstr "El valor de regresión predicho de una muestra de entrada se calcula como la predicción mediana ponderada de los clasificadores en el ensemble."

#: of
msgid "ndarray of shape (n_samples,)"
msgstr "ndarray de forma (n_samples,)"

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.predict:16
#: sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict:20
msgid "The predicted regression values."
msgstr "Los valores de regresión previstos."

#: of sklearn.base.RegressorMixin.score:5
msgid "The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** 2).sum()`` and :math:`v` is the total sum of squares ``((y_true - y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of `y`, disregarding the input features, would get a :math:`R^2` score of 0.0."
msgstr "El coeficiente :math:`R^2` se define como :math:`(1 - \\frac{u}{v})`, donde :math:`u` es la suma residual de cuadrados ``((y_true - y_pred) ** 2).sum()`` y :math:`v` es la suma total de cuadrados ``((y_true - y_true.mean()) ** 2).sum()``. La mejor puntuación posible es 1.0 y puede ser negativa (porque el modelo puede ser arbitrariamente peor). Un modelo constante que siempre predice el valor esperado de `y`, sin tener en cuenta las características de entrada, obtendría una puntuación :math:`R^2` de 0,0."

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr "array-like de forma (n_samples, n_features)"

#: of sklearn.base.RegressorMixin.score:17
msgid "Test samples. For some estimators this may be a precomputed kernel matrix or a list of generic objects instead with shape ``(n_samples, n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples used in the fitting for the estimator."
msgstr "Muestras de prueba. Para algunos estimadores puede ser una matriz de núcleo precalculada o una lista de objetos genéricos con forma ``(n_samples, n_samples_fitted)``, donde ``n_samples_fitted`` es el número de muestras utilizadas en el ajuste para el estimador."

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr "array-like de forma (n_samples,) o (n_samples, n_outputs)"

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr "Valores verdaderos para `X`."

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:18
msgid "Sample weights."
msgstr "Ponderaciones de muestra."

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr "**score**"

#: of
msgid "float"
msgstr "flotante"

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ":math:`R^2` de ``self.predict(X)`` con respecto a `y`."

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr "Notas"

#: of sklearn.base.RegressorMixin.score:42
msgid "The :math:`R^2` score used when calling ``score`` on a regressor uses ``multioutput='uniform_average'`` from version 0.23 to keep consistent with default value of :func:`~sklearn.metrics.r2_score`. This influences the ``score`` method of all the multioutput regressors (except for :class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr "La puntuación :math:`R^2` utilizada al llamar a ``score`` en un regresor utiliza ``multioutput='uniform_average'`` desde la versión 0.23 para mantener la coherencia con el valor por defecto de :func:`~sklearn.metrics.r2_score``. Esto influye en el método ``score`` de todos los regresores de salida múltiple (excepto para :class:`~sklearn.multioutput.MultiOutputRegressor`)."

#: of sklearn.base.BaseEstimator.set_params:4
msgid "The method works on simple estimators as well as on nested objects (such as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of the form ``<component>__<parameter>`` so that it's possible to update each component of a nested object."
msgstr "El método funciona en estimadores simples así como en objetos anidados (como :class:`~sklearn.pipeline.Pipeline`). Estos últimos tienen parámetros de la forma ``<component>__<parameter>`` para que sea posible actualizar cada componente de un objeto anidado."

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr "**\\*\\*params**"

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr "Parámetros del estimador."

#: of
msgid "estimator instance"
msgstr "instancia del estimador"

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr "Instancia de estimador."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict:7
msgid "This generator method yields the ensemble prediction after each iteration of boosting and therefore allows monitoring, such as to determine the prediction on a test set after each boost."
msgstr "Este método generador produce la predicción del ensemble después de cada iteración potenciadora y por lo tanto permite el monitoreo, tal como determinar la predicción en un conjunto de pruebas después de cada potenciación."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict:14
msgid "The training input samples."
msgstr "Las muestras de entrada de entrenamiento."

#: of sklearn.ensemble._weight_boosting.AdaBoostRegressor.staged_predict
#: sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score
msgid "Yields"
msgstr "Rendimiento"

#: of
msgid "generator of ndarray of shape (n_samples,)"
msgstr "generador de ndarray de forma (n_samples,)"

#: of sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:4
msgid "This generator method yields the ensemble score after each iteration of boosting and therefore allows monitoring, such as to determine the score on a test set after each boost."
msgstr "Este método generador produce la puntuación del ensemble después de cada iteración potenciadora y por lo tanto permite el monitoreo, tal como determinar la puntuación en un conjunto de pruebas después de cada potenciación."

#: of sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:15
msgid "Labels for X."
msgstr "Etiquetas para X."

#: of sklearn.ensemble._weight_boosting.BaseWeightBoosting.staged_score:34
msgid "**z**"
msgstr "**z**"

