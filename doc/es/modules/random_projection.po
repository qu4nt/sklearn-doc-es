msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-06 00:42\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/random_projection.po\n"
"X-Crowdin-File-ID: 4856\n"
"Language: es_ES\n"

#: ../modules/random_projection.rst:5
msgid "Random Projection"
msgstr "Proyección aleatoria"

#: ../modules/random_projection.rst:8
msgid "The :mod:`sklearn.random_projection` module implements a simple and computationally efficient way to reduce the dimensionality of the data by trading a controlled amount of accuracy (as additional variance) for faster processing times and smaller model sizes. This module implements two types of unstructured random matrix: :ref:`Gaussian random matrix <gaussian_random_matrix>` and :ref:`sparse random matrix <sparse_random_matrix>`."
msgstr "El módulo :mod:`sklearn.random_projection` implementa una forma simple y computacionalmente eficiente de reducir la dimensionalidad de los datos intercambiando una cantidad controlada de precisión (como varianza adicional) por tiempos de procesamiento más rápidos y tamaños de modelos más pequeños. Este módulo implementa dos tipos de matrices aleatorias no estructuradas: :ref:`matriz aleatoria Gaussiana <gaussian_random_matrix>` y :ref:`matriz aleatoria dispersa <sparse_random_matrix>`."

#: ../modules/random_projection.rst:16
msgid "The dimensions and distribution of random projections matrices are controlled so as to preserve the pairwise distances between any two samples of the dataset. Thus random projection is a suitable approximation technique for distance based method."
msgstr "Las dimensiones y distribución de las matrices de proyecciones aleatorias se controlan para preservar las distancias por pares entre dos muestras cualesquiera del conjunto de datos. Así, la proyección aleatoria es una técnica de aproximación adecuada para el método basado en la distancia."

#: ../modules/random_projection.rst:24
msgid "Sanjoy Dasgupta. 2000. `Experiments with random projection. <https://cseweb.ucsd.edu/~dasgupta/papers/randomf.pdf>`_ In Proceedings of the Sixteenth conference on Uncertainty in artificial intelligence (UAI'00), Craig Boutilier and Moisés Goldszmidt (Eds.). Morgan Kaufmann Publishers Inc., San Francisco, CA, USA, 143-151."
msgstr "Sanjoy Dasgupta. 2000. `Experiments with random projection. <https://cseweb.ucsd.edu/~dasgupta/papers/randomf.pdf>`_ In Proceedings of the Sixteenth conference on Uncertainty in artificial intelligence (UAI'00), Craig Boutilier and Moisés Goldszmidt (Eds.). Morgan Kaufmann Publishers Inc., San Francisco, CA, USA, 143-151."

#: ../modules/random_projection.rst:30
msgid "Ella Bingham and Heikki Mannila. 2001. `Random projection in dimensionality reduction: applications to image and text data. <http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.5135&rep=rep1&type=pdf>`_ In Proceedings of the seventh ACM SIGKDD international conference on Knowledge discovery and data mining (KDD '01). ACM, New York, NY, USA, 245-250."
msgstr "Ella Bingham and Heikki Mannila. 2001. `Random projection in dimensionality reduction: applications to image and text data. <http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.5135&rep=rep1&type=pdf>`_ In Proceedings of the seventh ACM SIGKDD international conference on Knowledge discovery and data mining (KDD '01). ACM, New York, NY, USA, 245-250."

#: ../modules/random_projection.rst:40
msgid "The Johnson-Lindenstrauss lemma"
msgstr "El lema Johnson-Lindenstrauss"

#: ../modules/random_projection.rst:42
#, python-format
msgid "The main theoretical result behind the efficiency of random projection is the `Johnson-Lindenstrauss lemma (quoting Wikipedia) <https://en.wikipedia.org/wiki/Johnson%E2%80%93Lindenstrauss_lemma>`_:"
msgstr "El principal resultado teórico detrás de la eficiencia de la proyección aleatoria es el `Lema de Johnson-Lindenstrauss (citando a Wikipedia) <https://en.wikipedia.org/wiki/Johnson%E2%80%93Lindenstrauss_lemma>`_:"

#: ../modules/random_projection.rst:46
msgid "In mathematics, the Johnson-Lindenstrauss lemma is a result concerning low-distortion embeddings of points from high-dimensional into low-dimensional Euclidean space. The lemma states that a small set of points in a high-dimensional space can be embedded into a space of much lower dimension in such a way that distances between the points are nearly preserved. The map used for the embedding is at least Lipschitz, and can even be taken to be an orthogonal projection."
msgstr "En matemáticas, el lema Johnson-Lindenstrauss es un resultado concerniente a las inserciones de baja distorsión de puntos de un espacio de alta dimensión en un espacio euclideano de baja dimensión. El lema afirma que un pequeño conjunto de puntos en un espacio de alta dimensión puede integrarse en un espacio de dimensión mucho más baja de tal manera que las distancias entre los puntos casi se conservan. El mapa utilizado para la inserción es al menos Lipschitz, e incluso puede tomarse como una proyección ortogonal."

#: ../modules/random_projection.rst:54
msgid "Knowing only the number of samples, the :func:`johnson_lindenstrauss_min_dim` estimates conservatively the minimal size of the random subspace to guarantee a bounded distortion introduced by the random projection::"
msgstr "Conociendo sólo el número de muestras, la función :func:`johnson_lindenstrauss_min_dim` estima de forma conservadora el tamaño mínimo del subespacio aleatorio para garantizar una distorsión acotada introducida por la proyección aleatoria::"

#: ../modules/random_projection.rst:79
msgid "See :ref:`sphx_glr_auto_examples_miscellaneous_plot_johnson_lindenstrauss_bound.py` for a theoretical explication on the Johnson-Lindenstrauss lemma and an empirical validation using sparse random matrices."
msgstr "Véase :ref:`sphx_glr_auto_examples_miscellaneous_plot_johnson_lindenstrauss_bound.py` para una explicación teórica sobre el lema Johnson-Lindenstrauss y una validación empírica usando matrices aleatorias dispersas."

#: ../modules/random_projection.rst:85
msgid "Sanjoy Dasgupta and Anupam Gupta, 1999. `An elementary proof of the Johnson-Lindenstrauss Lemma. <http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.39.3334&rep=rep1&type=pdf>`_"
msgstr "Sanjoy Dasgupta and Anupam Gupta, 1999. `An elementary proof of the Johnson-Lindenstrauss Lemma. <http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.39.3334&rep=rep1&type=pdf>`_"

#: ../modules/random_projection.rst:92
msgid "Gaussian random projection"
msgstr "Proyección aleatoria Gaussiana"

#: ../modules/random_projection.rst:93
msgid "The :class:`GaussianRandomProjection` reduces the dimensionality by projecting the original input space on a randomly generated matrix where components are drawn from the following distribution :math:`N(0, \\frac{1}{n_{components}})`."
msgstr "La clase :class:`GaussianRandomProjection` reduce la dimensionalidad proyectando el espacio de entrada original en una matriz generada aleatoriamente donde los componentes se extraen de la siguiente distribución :math:`N(0, \\frac{1}{n_{components}})`."

#: ../modules/random_projection.rst:98
msgid "Here a small excerpt which illustrates how to use the Gaussian random projection transformer::"
msgstr "Aquí un pequeño extracto que ilustra cómo utilizar el transformador de proyección aleatoria Gaussiana::"

#: ../modules/random_projection.rst:113
msgid "Sparse random projection"
msgstr "Proyección aleatoria dispersa"

#: ../modules/random_projection.rst:114
msgid "The :class:`SparseRandomProjection` reduces the dimensionality by projecting the original input space using a sparse random matrix."
msgstr "La clase :class:`SparseRandomProjection` reduce la dimensionalidad proyectando el espacio de entrada original usando una matriz aleatoria dispersa."

#: ../modules/random_projection.rst:118
msgid "Sparse random matrices are an alternative to dense Gaussian random projection matrix that guarantees similar embedding quality while being much more memory efficient and allowing faster computation of the projected data."
msgstr "Las matrices aleatorias dispersas son una alternativa a la densa matriz de proyección aleatoria gaussiana que garantiza una calidad de inserción similar, a la vez que es mucho más eficiente en términos de memoria y permite un cálculo más rápido de los datos proyectados."

#: ../modules/random_projection.rst:122
msgid "If we define ``s = 1 / density``, the elements of the random matrix are drawn from"
msgstr "Si definimos ``s = 1 / density``, los elementos de la matriz aleatoria se extraen de"

#: ../modules/random_projection.rst:125
msgid "\\left\\{\n"
"\\begin{array}{c c l}\n"
"-\\sqrt{\\frac{s}{n_{\\text{components}}}} & & 1 / 2s\\\\\n"
"0 &\\text{with probability}  & 1 - 1 / s \\\\\n"
"+\\sqrt{\\frac{s}{n_{\\text{components}}}} & & 1 / 2s\\\\\n"
"\\end{array}\n"
"\\right."
msgstr "\\left\\{\n"
"\\begin{array}{c c l}\n"
"-\\sqrt{\\frac{s}{n_{\\text{components}}}} & & 1 / 2s\\\\\n"
"0 &\\text{with probability}  & 1 - 1 / s \\\\\n"
"+\\sqrt{\\frac{s}{n_{\\text{components}}}} & & 1 / 2s\\\\\n"
"\\end{array}\n"
"\\right."

#: ../modules/random_projection.rst:135
msgid "where :math:`n_{\\text{components}}` is the size of the projected subspace. By default the density of non zero elements is set to the minimum density as recommended by Ping Li et al.: :math:`1 / \\sqrt{n_{\\text{features}}}`."
msgstr "donde :math:`n_{\\text{components}}` es el tamaño del subespacio proyectado. Por defecto, la densidad de los elementos no nulos se establece en la densidad mínima recomendada por Ping Li et al. :math:`1 / \\sqrt{n_{\\text{features}}}`."

#: ../modules/random_projection.rst:139
msgid "Here a small excerpt which illustrates how to use the sparse random projection transformer::"
msgstr "Aquí un pequeño extracto que ilustra cómo utilizar el transformador de proyección aleatoria dispersa::"

#: ../modules/random_projection.rst:153
msgid "D. Achlioptas. 2003. `Database-friendly random projections: Johnson-Lindenstrauss  with binary coins <http://www.cs.ucsc.edu/~optas/papers/jl.pdf>`_. Journal of Computer and System Sciences 66 (2003) 671–687"
msgstr "D. Achlioptas. 2003. `Database-friendly random projections: Johnson-Lindenstrauss  with binary coins <http://www.cs.ucsc.edu/~optas/papers/jl.pdf>`_. Journal of Computer and System Sciences 66 (2003) 671–687"

#: ../modules/random_projection.rst:158
msgid "Ping Li, Trevor J. Hastie, and Kenneth W. Church. 2006. `Very sparse random projections. <https://web.stanford.edu/~hastie/Papers/Ping/KDD06_rp.pdf>`_ In Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining (KDD '06). ACM, New York, NY, USA, 287-296."
msgstr "Ping Li, Trevor J. Hastie, and Kenneth W. Church. 2006. `Very sparse random projections. <https://web.stanford.edu/~hastie/Papers/Ping/KDD06_rp.pdf>`_ In Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining (KDD '06). ACM, New York, NY, USA, 287-296."

