msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-13 22:03\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/modules/mixture.po\n"
"X-Crowdin-File-ID: 4842\n"
"Language: es_ES\n"

#: ../modules/mixture.rst:7
msgid "Gaussian mixture models"
msgstr "Modelos de mezclas gaussianas"

#: ../modules/mixture.rst:11
msgid "``sklearn.mixture`` is a package which enables one to learn Gaussian Mixture Models (diagonal, spherical, tied and full covariance matrices supported), sample them, and estimate them from data. Facilities to help determine the appropriate number of components are also provided."
msgstr "``sklearn.mixture`` es un paquete que permite aprender Modelos de Mezcla Gaussiana (matrices diagonales, esféricas, enlazadas y de completa covarianza soportadas), su muestreo, y estimarlos desde los datos. También se proporcionan facultades para ayudar a determinar el número apropiado de componentes."

#: ../modules/mixture.rst:22
msgid "**Two-component Gaussian mixture model:** *data points, and equi-probability surfaces of the model.*"
msgstr "**Modelo de mezcla Gaussiana de dos componentes:** *puntos de datos, y superficies de probabilidad equiparables al modelo.*"

#: ../modules/mixture.rst:25
msgid "A Gaussian mixture model is a probabilistic model that assumes all the data points are generated from a mixture of a finite number of Gaussian distributions with unknown parameters. One can think of mixture models as generalizing k-means clustering to incorporate information about the covariance structure of the data as well as the centers of the latent Gaussians."
msgstr "Un modelo de mezcla Gaussiana es un modelo probabilista que asume que todos los puntos de datos son generados de una mezcla de un número finito de distribuciones Gaussianas con parámetros desconocidos. Uno puede pensar en los modelos de mezcla como la generalización de agrupamiento k-medias para incorporar información acerca de tanto la estructura de covarianza de los datos como los centros de los Gaussianes latentes."

#: ../modules/mixture.rst:32
msgid "Scikit-learn implements different classes to estimate Gaussian mixture models, that correspond to different estimation strategies, detailed below."
msgstr "Scikit-learn implementa diferentes clases para estimar modelos de mezcla Gaussiana, que corresponden a diferentes estrategias de estimación, detalladas a continuación."

#: ../modules/mixture.rst:37
msgid "Gaussian Mixture"
msgstr "Mezcla Gaussiana"

#: ../modules/mixture.rst:39
msgid "The :class:`GaussianMixture` object implements the :ref:`expectation-maximization <expectation_maximization>` (EM) algorithm for fitting mixture-of-Gaussian models. It can also draw confidence ellipsoids for multivariate models, and compute the Bayesian Information Criterion to assess the number of clusters in the data. A :meth:`GaussianMixture.fit` method is provided that learns a Gaussian Mixture Model from train data. Given test data, it can assign to each sample the Gaussian it mostly probably belong to using the :meth:`GaussianMixture.predict` method."
msgstr "El objeto :class:`GaussianMixture` implementa el algoritmo :ref:`expectation-maximization <expectation_maximization>` (EM) para el encaje de modelos mezcla-de-Gaussianos. Puede también dibujar elipsoides de confidencia para modelos multivariante, y calcular el Criterio de Información Bayesiano para estimar el número de clústers en los datos. Se proporciona un método :meth:`GaussianMixture.fit` que aprende un modelo de mezcla Gaussiana de los datos de entrenamiento. Dados ciertos datos de prueba, se puede asignar a cada muestra el Gaussiano al que probablemente pertenezca usando el método :meth:`GaussianMixture.predict`."

#: ../modules/mixture.rst:54
msgid "The :class:`GaussianMixture` comes with different options to constrain the covariance of the difference classes estimated: spherical, diagonal, tied or full covariance."
msgstr "La :class:`GaussianMixture` viene con diferentes opciones para restringir la covarianza de las clases de diferencia estimadas: esférico, diagonal, empatado o covarianza completa."

#: ../modules/mixture.rst:65
msgid "See :ref:`sphx_glr_auto_examples_mixture_plot_gmm_covariances.py` for an example of using the Gaussian mixture as clustering on the iris dataset."
msgstr "Vea :ref:`sphx_glr_auto_examples_mixture_plot_gmm_covariances.py` para un ejemplo del uso de la mezcla Gaussiana como agrupamiento en el conjunto de datos iris."

#: ../modules/mixture.rst:68
msgid "See :ref:`sphx_glr_auto_examples_mixture_plot_gmm_pdf.py` for an example on plotting the density estimation."
msgstr "Vea :ref:`sphx_glr_auto_examples_mixture_plot_gmm_pdf.py` para un ejemplo sobre graficar la estimación de densidad."

#: ../modules/mixture.rst:72
msgid "Pros and cons of class :class:`GaussianMixture`"
msgstr "Pros y contras de la clase :class:`GaussianMixture`"

#: ../modules/mixture.rst:75 ../modules/mixture.rst:253
msgid "Pros"
msgstr "Pros"

#: ../modules/mixture.rst
msgid "Speed"
msgstr "Velocidad"

#: ../modules/mixture.rst:77
msgid "It is the fastest algorithm for learning mixture models"
msgstr "Es el algoritmo más rápido para aprender modelos de mezcla"

#: ../modules/mixture.rst
msgid "Agnostic"
msgstr "Agnóstico"

#: ../modules/mixture.rst:79
msgid "As this algorithm maximizes only the likelihood, it will not bias the means towards zero, or bias the cluster sizes to have specific structures that might or might not apply."
msgstr "Ya que este algoritmo solo maximiza la probabilidad, no sesgará los medios hacia cero, ni sesgará los tamaños de clúster para tener estructuras especificas que podrían o no aplicar."

#: ../modules/mixture.rst:84 ../modules/mixture.rst:277
msgid "Cons"
msgstr "Contras"

#: ../modules/mixture.rst
msgid "Singularities"
msgstr "Singularidades"

#: ../modules/mixture.rst:86
msgid "When one has insufficiently many points per mixture, estimating the covariance matrices becomes difficult, and the algorithm is known to diverge and find solutions with infinite likelihood unless one regularizes the covariances artificially."
msgstr "Cuando uno tiene insuficientes puntos por mezcla, estimar las matrices de covarianza se vuelve difícil, y se sabe que el algoritmo diverge y encuentra soluciones con probabilidades infinitas a menos que uno regularice las covarianzas artificialmente."

#: ../modules/mixture.rst
msgid "Number of components"
msgstr "Número de componentes"

#: ../modules/mixture.rst:91
msgid "This algorithm will always use all the components it has access to, needing held-out data or information theoretical criteria to decide how many components to use in the absence of external cues."
msgstr "Este algoritmo siempre utilizará todos los componentes a los que tiene acceso, necesitando criterios teóricos de apartado de datos o información para decidir cuantos componentes usar en la ausencia de señas externas."

#: ../modules/mixture.rst:97
msgid "Selecting the number of components in a classical Gaussian Mixture Model"
msgstr "Seleccionando el número de componentes en un modelo clásico de mezcla de Gaussianos"

#: ../modules/mixture.rst:99
msgid "The BIC criterion can be used to select the number of components in a Gaussian Mixture in an efficient way. In theory, it recovers the true number of components only in the asymptotic regime (i.e. if much data is available and assuming that the data was actually generated i.i.d. from a mixture of Gaussian distribution). Note that using a :ref:`Variational Bayesian Gaussian mixture <bgmm>` avoids the specification of the number of components for a Gaussian mixture model."
msgstr "El criterio de BIC puede ser utilizado para seleccionar el número de componentes en una mezcla Gaussiana de una manera eficiente. En teoría, recupera el verdadero número de componentes solo en el régimen asíntota (es decir, si muchos datos son disponibles y suponiendo que los datos fueron generados i.i.d. desde una mezcla de distribución Gaussiana). Note que utilizar una :ref:`Variational Bayesian Gaussian mixture <bgmm>` evita la especificación del número de componentes para un modelo de mezcla Gaussiana."

#: ../modules/mixture.rst:114
msgid "See :ref:`sphx_glr_auto_examples_mixture_plot_gmm_selection.py` for an example of model selection performed with classical Gaussian mixture."
msgstr "Vea :ref:`sphx_glr_auto_examples_mixture_plot_gmm_selection.py` para un ejemplo de selección de modelo realizado con la mezcla Gaussiana clásica."

#: ../modules/mixture.rst:120
msgid "Estimation algorithm Expectation-maximization"
msgstr "Algoritmo de estimación Esperanza-maximización"

#: ../modules/mixture.rst:122
#, python-format
msgid "The main difficulty in learning Gaussian mixture models from unlabeled data is that it is one usually doesn't know which points came from which latent component (if one has access to this information it gets very easy to fit a separate Gaussian distribution to each set of points). `Expectation-maximization <https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm>`_ is a well-founded statistical algorithm to get around this problem by an iterative process. First one assumes random components (randomly centered on data points, learned from k-means, or even just normally distributed around the origin) and computes for each point a probability of being generated by each component of the model. Then, one tweaks the parameters to maximize the likelihood of the data given those assignments. Repeating this process is guaranteed to always converge to a local optimum."
msgstr "La dificultad principal en aprende modelos de mezcla Gaussiana desde datos sin etiquetar se trata de que es uno quien usualmente no sabe cuales puntos vinieron de que componente latente (si uno tiene acceso a esta información se vuelve muy facil encajar una distribución Gaussiana separada a cada conjunto de puntos). `Esperanza-maximización <https://es.wikipedia.org/wiki/Algoritmo_esperanza-maximizaci%C3%B3n>`_ es un algoritmo estadístico bien fundamentado para evitar este problema mediante un proceso iterativo. Primero uno asume que componentes aleatorios (centrados aleatoriamente en puntos de datos, aprendidos de k-medias, o inclusive solo distribuidos normalmente alrededor del origen) y calcula por cada punto una probabilidad de ser generado por cada componente del modelo. Y entonces, uno ajusta los parámetros para maximizar la probabilidad de los datos dadas esas asignaciones. La repetición este proceso está garantizada a siempre converger a un óptimo local."

#: ../modules/mixture.rst:141
msgid "Variational Bayesian Gaussian Mixture"
msgstr "Mezcla Gaussiana Bayesiana Variante"

#: ../modules/mixture.rst:143
msgid "The :class:`BayesianGaussianMixture` object implements a variant of the Gaussian mixture model with variational inference algorithms. The API is similar as the one defined by :class:`GaussianMixture`."
msgstr "El objeto :class:`BayesianGaussianMixture` implementa una variante del modelo de mezcla Gaussiana con algoritmos de inferencia variacionales. La API es similar a la definida por :class:`GaussianMixture`."

#: ../modules/mixture.rst:150
msgid "Estimation algorithm: variational inference"
msgstr "Algoritmo de estimación: inferencia variacional"

#: ../modules/mixture.rst:152
msgid "Variational inference is an extension of expectation-maximization that maximizes a lower bound on model evidence (including priors) instead of data likelihood. The principle behind variational methods is the same as expectation-maximization (that is both are iterative algorithms that alternate between finding the probabilities for each point to be generated by each mixture and fitting the mixture to these assigned points), but variational methods add regularization by integrating information from prior distributions. This avoids the singularities often found in expectation-maximization solutions but introduces some subtle biases to the model. Inference is often notably slower, but not usually as much so as to render usage unpractical."
msgstr "La inferencia variacional es una extensión de la esperanza-maximización que maximiza un limite inferior en la evidencia del modelo (incluyendo los priores) en lugar de la probabilidad de datos. El principio detrás de los métodos variacionales es el mismo que en la esperanza-maximización (es decir, ambos son algoitmos iterativos que alternan entre encontrar las probabilidades de cada punto a ser generadas por cada mezcla y encajar la mezcla a estos puntos asignados), pero los métodos variacionales añaden regularización mediante la integración de información desde distribuciones priores. Esto evita las singularidades comúnmente encontradas en soluciones de esperanza-maximización pero introduce algunos sesgos sutiles al modelo. La inferencia suele ser notablemente mas lenta, pero no tanto como para que su uso sea impractico."

#: ../modules/mixture.rst:165
msgid "Due to its Bayesian nature, the variational algorithm needs more hyper- parameters than expectation-maximization, the most important of these being the concentration parameter ``weight_concentration_prior``. Specifying a low value for the concentration prior will make the model put most of the weight on few components set the remaining components weights very close to zero. High values of the concentration prior will allow a larger number of components to be active in the mixture."
msgstr "Debido a su naturaleza bayesiana, el algoritmo necesita mas hiperparámetros que la esperanza-maximización, el mas importante de estos siendo el parámetro de concentración ``weight_concentration_prior``. Especificar un valor bajo para la concentración previa hará que el modelo ponga la mayor parte del ponderado en pocos componentes y que establezca el ponderado del resto de los componentes muy cerca de 0. Si se usan valores altos para la concentración previa, se permitirá que un número más grande de componentes sea activo en la mezcla."

#: ../modules/mixture.rst:173
msgid "The parameters implementation of the :class:`BayesianGaussianMixture` class proposes two types of prior for the weights distribution: a finite mixture model with Dirichlet distribution and an infinite mixture model with the Dirichlet Process. In practice Dirichlet Process inference algorithm is approximated and uses a truncated distribution with a fixed maximum number of components (called the Stick-breaking representation). The number of components actually used almost always depends on the data."
msgstr "La implementación de parámetros de la clase :class:`BayesianGaussianMixture` propone dos tipos de previos para la distribución de ponderados: un modelo de mezcla finita con distribución Dirichlet y un modelo de mezcla infinita con el proceso Dirichlet. En la práctica, el algoritmo de inferencia del Proceso Dirichlet es aproximado y utiliza una distribución truncada con un número máximo de componentes fijo (llamada la representación rompe-palos). El número de componentes realmente utilizados casi siempre depende de los datos."

#: ../modules/mixture.rst:181
msgid "The next figure compares the results obtained for the different type of the weight concentration prior (parameter ``weight_concentration_prior_type``) for different values of ``weight_concentration_prior``. Here, we can see the value of the ``weight_concentration_prior`` parameter has a strong impact on the effective number of active components obtained. We can also notice that large values for the concentration weight prior lead to more uniform weights when the type of prior is 'dirichlet_distribution' while this is not necessarily the case for the 'dirichlet_process' type (used by default)."
msgstr "La siguiente figura compara los resultados obtenidos para distintos tipos del previo de ponderado de concentración (el parámetro ``weight_concentration_prior_type``) para distintos valores de ``weight_concentration_prior``. Aquí podemos observar que el valor de parámetro ``weight_concentration_prior`` tiene un fuerte impacto en el número efectivo de componentes activos obtenido. Podemos también notar que valores grandes para el ponderado de concentración llevan a ponderados mas uniformes cuando el tipo de previo es 'dirichlet_distribution' mientras que esto no es necesariamente el caso para el tipo 'dirichlet_process' (usado por defecto)."

#: ../modules/mixture.rst:200
msgid "plot_bgmm plot_dpgmm"
msgstr "plot_bgmm plot_dpgmm"

#: ../modules/mixture.rst:201
msgid "The examples below compare Gaussian mixture models with a fixed number of components, to the variational Gaussian mixture models with a Dirichlet process prior. Here, a classical Gaussian mixture is fitted with 5 components on a dataset composed of 2 clusters. We can see that the variational Gaussian mixture with a Dirichlet process prior is able to limit itself to only 2 components whereas the Gaussian mixture fits the data with a fixed number of components that has to be set a priori by the user. In this case the user has selected ``n_components=5`` which does not match the true generative distribution of this toy dataset. Note that with very little observations, the variational Gaussian mixture models with a Dirichlet process prior can take a conservative stand, and fit only one component."
msgstr "Los ejemplos a continuación comparan los modelos de mezcla Gaussiana con un número fijo de componentes, a los modelos de mezcla Gaussiana variacional con un proceso Dirichlet previo. Aquí, una mezcla Gaussiana clasica es encajada con 5 componentes en un conjunto de datos compuesto de 2 clústers. Podemos ver que la mezcla variacional Gaussiana con un proceso Dirichlet previo es capaz de limitarse a si misma a solo 2 componentes, mientras que la mezcla Gaussiana ajusta los datos con un número fijo de componentes que tiene que ser establecido a priori por el usuario: En este caso el usuario ha seleccionado ``n_componentes=5`` lo cual no corresponde a la distribución generativa real de este conjunto de datos de juguete. Note que con muy pocas observaciones, los modelos de mezcla Gaussiana variacional con un proceso Dirichlet previo puede tomar una postura conservadora, y encajar solo un componente."

#: ../modules/mixture.rst:219
msgid "On the following figure we are fitting a dataset not well-depicted by a Gaussian mixture. Adjusting the ``weight_concentration_prior``, parameter of the :class:`BayesianGaussianMixture` controls the number of components used to fit this data. We also present on the last two plots a random sampling generated from the two resulting mixtures."
msgstr "En la siguiente figura estamos encajando un conjuntos de datos que no está bien representado por una mezcla gaussiana. Ajustando el parámetro ``weight_concentration_prior`` del :class:`BayesianGaussianMixture` controlamos el número de componentes usados para ajustar estos datos. También presentamos en las ultimas dos gráficas un muestreo aleatorio generado de las dos mezclas resultantes."

#: ../modules/mixture.rst:234
msgid "See :ref:`sphx_glr_auto_examples_mixture_plot_gmm.py` for an example on plotting the confidence ellipsoids for both :class:`GaussianMixture` and :class:`BayesianGaussianMixture`."
msgstr "Vea :ref:`sphx_glr_auto_examples_mixture_plot_gm.py` para un ejemplo de gráfica de elipsoides de confianza para :class:`GaussianMixture` y :class:`BayesianGaussianMixture`."

#: ../modules/mixture.rst:238
msgid ":ref:`sphx_glr_auto_examples_mixture_plot_gmm_sin.py` shows using :class:`GaussianMixture` and :class:`BayesianGaussianMixture` to fit a sine wave."
msgstr ":ref:`sphx_glr_auto_examples_mixture_plot_gm_sin.py` muestra el uso de :class:`GaussianMixture` y :class:`BayesianGaussianMixture` para ajustar una onda seno."

#: ../modules/mixture.rst:242
msgid "See :ref:`sphx_glr_auto_examples_mixture_plot_concentration_prior.py` for an example plotting the confidence ellipsoids for the :class:`BayesianGaussianMixture` with different ``weight_concentration_prior_type`` for different values of the parameter ``weight_concentration_prior``."
msgstr "Vea :ref:`sphx_glr_auto_examples_mixture_plot_concentration_prior.py` para un ejemplo de grafica de los elipsoides de confianza para la :class:`BayesianGaussianMixture` con diferentes ``weight_concentration_prior_type`` para diferentes valores del parámetro ``weight_concentration_prior``."

#: ../modules/mixture.rst:250
msgid "Pros and cons of variational inference with :class:`BayesianGaussianMixture`"
msgstr "Pros y contras de la inferencia variacional con :class:`BayesianGaussianMixture`"

#: ../modules/mixture.rst
msgid "Automatic selection"
msgstr "Selección automática"

#: ../modules/mixture.rst:255
msgid "when ``weight_concentration_prior`` is small enough and ``n_components`` is larger than what is found necessary by the model, the Variational Bayesian mixture model has a natural tendency to set some mixture weights values close to zero. This makes it possible to let the model choose a suitable number of effective components automatically. Only an upper bound of this number needs to be provided. Note however that the \"ideal\" number of active components is very application specific and is typically ill-defined in a data exploration setting."
msgstr "cuando ``weight_concentration_prior`` es lo suficientemente pequeño y ``n_components`` es mas grande que lo que el modelo considera necesario, el modelo de mezcla Bayesiana variacional tiene una tendencia natural a establecer algunos valores de ponderados de mezcla cerca de cero. Esto hace posible dejar que el modelo escoja un número adecuado de componentes efectivos automáticamente. Solo se necesita proporcionar un limite superior de este número. Sin embargo, tome en cuenta que el número \"ideal\" de componentes activos depende mucho de la aplicación y suele estar mal definido en una configuración de exploración de datos."

#: ../modules/mixture.rst
msgid "Less sensitivity to the number of parameters"
msgstr "Menor sensibilidad al número de parámetros"

#: ../modules/mixture.rst:264
msgid "unlike finite models, which will almost always use all components as much as they can, and hence will produce wildly different solutions for different numbers of components, the variational inference with a Dirichlet process prior (``weight_concentration_prior_type='dirichlet_process'``) won't change much with changes to the parameters, leading to more stability and less tuning."
msgstr "a diferencia de los modelos finitos, que casi siempre usarán tantos componentes como puedan, y, por lo tanto, producirán soluciones incontroladamente diferentes para diferentes números de componentes, la inferencia variacional con un proceso Dirichlet previo (``weight_concentration_prior_type='dirichlet_process'``) no cambiará mucho con los cambios en los parámetros, lo que llevará a mayor estabilidad y menos ajustamiento."

#: ../modules/mixture.rst
msgid "Regularization"
msgstr "Regularización"

#: ../modules/mixture.rst:271
msgid "due to the incorporation of prior information, variational solutions have less pathological special cases than expectation-maximization solutions."
msgstr "debido a la incorporación de información previa, las soluciones variacionales presentan menos casos especiales patológicos que las soluciones de esperanza-maximización."

#: ../modules/mixture.rst:279
msgid "the extra parametrization necessary for variational inference make inference slower, although not by much."
msgstr "la parametrización adicional necesaria para la inferencia variacional hace que la inferencia sea más lenta, aunque no mucho."

#: ../modules/mixture.rst
msgid "Hyperparameters"
msgstr "Hiperparámetros"

#: ../modules/mixture.rst:282
msgid "this algorithm needs an extra hyperparameter that might need experimental tuning via cross-validation."
msgstr "este algoritmo necesita un hiperparámetro adicional que quizás necesite ajustes experimentales mediante una validación cruzada."

#: ../modules/mixture.rst
msgid "Bias"
msgstr "Sesgo"

#: ../modules/mixture.rst:285
msgid "there are many implicit biases in the inference algorithms (and also in the Dirichlet process if used), and whenever there is a mismatch between these biases and the data it might be possible to fit better models using a finite mixture."
msgstr "hay muchos sesgos impícitos en los algoritmos de inferencia (y también en el proceso de Dirichlet si se utiliza), y cada vez que hay un desajuste entre estos sesgos y los datos quizás sea posible encajar mejores modelos utilizando una mezcla finita."

#: ../modules/mixture.rst:294
msgid "The Dirichlet Process"
msgstr "El proceso de Dirichlet"

#: ../modules/mixture.rst:296
msgid "Here we describe variational inference algorithms on Dirichlet process mixture. The Dirichlet process is a prior probability distribution on *clusterings with an infinite, unbounded, number of partitions*. Variational techniques let us incorporate this prior structure on Gaussian mixture models at almost no penalty in inference time, comparing with a finite Gaussian mixture model."
msgstr "Aquí describimos los algoritmos de inferencia variacional en una mezcla de procesos de Dirichlet. El proceso de Dirichlet es una distribución de probabilidad previa en *agrupaciones con un número infinito, sin limite alguno, de particiones*. Las técnicas variacionales nos deja incorporar esta estructura previa en modelos de mezcla Gaussiana sin casi ningun costo en tiempo de inferencia, comparado a un modelo de mezcla Gaussiana finita."

#: ../modules/mixture.rst:303
msgid "An important question is how can the Dirichlet process use an infinite, unbounded number of clusters and still be consistent. While a full explanation doesn't fit this manual, one can think of its `stick breaking process <https://en.wikipedia.org/wiki/Dirichlet_process#The_stick-breaking_process>`_ analogy to help understanding it. The stick breaking process is a generative story for the Dirichlet process. We start with a unit-length stick and in each step we break off a portion of the remaining stick. Each time, we associate the length of the piece of the stick to the proportion of points that falls into a group of the mixture. At the end, to represent the infinite mixture, we associate the last remaining piece of the stick to the proportion of points that don't fall into all the other groups. The length of each piece is a random variable with probability proportional to the concentration parameter. Smaller value of the concentration will divide the unit-length into larger pieces of the stick (defining more concentrated distribution). Larger concentration values will create smaller pieces of the stick (increasing the number of components with non zero weights)."
msgstr "Una pregunta importante es como el proceso de Dirichlet puede usar un número infinito y sin límites de agrupaciones e igualmente ser consistente. Mientras que una explicación completa no encaja dentro de este manual, uno puede pensar en la analogía de su `proceso rompe-palos <https://en.wikipedia.org/wiki/Dirichlet_process#The_stick-breaking_process>`_ para ayudar a entenderlo. El proceso rompe-palos es una historia generativa para el proceso de Dirichlet. Empezamos con un palo de longitud unitaria y en cada paso partimos una porción del palo restante, asociando la longitud de la porción del palo a la proporción de puntos que cae dentro de un grupo de la mezcla. Al final, para representar la mezcla infinita, asociamos la ultima porción restante del palo a la proporción de puntos que no caen en todos los demás grupos. La longitud de cada pieza es una variable aleatoria con una probabilidad proporcional al parámetro de concentración. Un valor mas pequeño de la concentración dividira la longitud unitaria en porciones más grandes del palo (definiendo una distribución mas concentrada). Valores de concentración mas grandes crearan pedazos mas pequeños del palo (incrementando el número de componentes con ponderados que no sean cero)."

#: ../modules/mixture.rst:320
msgid "Variational inference techniques for the Dirichlet process still work with a finite approximation to this infinite mixture model, but instead of having to specify a priori how many components one wants to use, one just specifies the concentration parameter and an upper bound on the number of mixture components (this upper bound, assuming it is higher than the \"true\" number of components, affects only algorithmic complexity, not the actual number of components used)."
msgstr "Las técnicas de inferencia variacional para el proceso de Dirichlet todavía funcionan con una aproximación finita a este modelo de mezcla infinita, pero en lugar de tener que especificar a priori cuantos componentes uno desea usar, uno solo especifica el parámetro de concentración y un límite superior en el número de componentes de mezcla (este límite superior, asumiendo que queda mas alto que el \"verdadero\" número de componentes, afecta solo la complejidad algorítmica, no el número real de componentes usados)."

