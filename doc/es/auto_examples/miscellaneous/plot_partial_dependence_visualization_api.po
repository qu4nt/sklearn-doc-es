msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-06-23 15:44\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/miscellaneous/plot_partial_dependence_visualization_api.po\n"
"X-Crowdin-File-ID: 4596\n"
"Language: es_ES\n"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_partial_dependence_visualization_api.py>` to download the full example code or to run this example in your browser via Binder"
msgstr "Haz clic :ref:`aquí <sphx_glr_download_auto_examples_miscellaneous_plot_partial_dependence_visualization_api.py>` para descargar el código completo del ejemplo o para ejecutar este ejemplo en tu navegador a través de Binder"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:23
msgid "Advanced Plotting With Partial Dependence"
msgstr "Graficación Avanzada Con Dependencia Parcial"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:24
msgid "The :func:`~sklearn.inspection.plot_partial_dependence` function returns a :class:`~sklearn.inspection.PartialDependenceDisplay` object that can be used for plotting without needing to recalculate the partial dependence. In this example, we show how to plot partial dependence plots and how to quickly customize the plot with the visualization API."
msgstr "La función :func:`~sklearn.inspection.plot_partial_dependence` devuelve un objeto :class:`~sklearn.inspection.PartialDependenceDisplay` que puede utilizarse para graficar sin necesidad de recalcular la dependencia parcial. En este ejemplo, mostramos cómo trazar gráficos de dependencia parcial y cómo personalizar rápidamente el gráfico con la API de visualización."

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:32
msgid "See also :ref:`sphx_glr_auto_examples_miscellaneous_plot_roc_curve_visualization_api.py`"
msgstr "Ver también :ref:`sphx_glr_auto_examples_miscellaneous_plot_roc_curve_visualization_api.py`"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:60
msgid "Train models on the diabetes dataset"
msgstr "Entrenar modelos en el conjunto de datos de diabetes"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:62
msgid "First, we train a decision tree and a multi-layer perceptron on the diabetes dataset."
msgstr "Primero, entrenamos un árbol de decisión y un perceptrón multicapa en el conjunto de datos de diabetes."

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:87
#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:199
#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:238
msgid "Out:"
msgstr "Salida:"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:104
msgid "Plotting partial dependence for two features"
msgstr "Gráfico de la dependencia parcial para dos características"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:106
msgid "We plot partial dependence curves for features \"age\" and \"bmi\" (body mass index) for the decision tree. With two features, :func:`~sklearn.inspection.plot_partial_dependence` expects to plot two curves. Here the plot function place a grid of two plots using the space defined by `ax` ."
msgstr ""

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:133
msgid "The partial depdendence curves can be plotted for the multi-layer perceptron. In this case, `line_kw` is passed to :func:`~sklearn.inspection.plot_partial_dependence` to change the color of the curve."
msgstr ""

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:161
msgid "Plotting partial dependence of the two models together"
msgstr ""

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:163
msgid "The `tree_disp` and `mlp_disp` :class:`~sklearn.inspection.PartialDependenceDisplay` objects contain all the computed information needed to recreate the partial dependence curves. This means we can easily create additional plots without needing to recompute the curves."
msgstr ""

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:169
msgid "One way to plot the curves is to place them in the same figure, with the curves of each model on each row. First, we create a figure with two axes within two rows and one column. The two axes are passed to the :func:`~sklearn.inspection.PartialDependenceDisplay.plot` functions of `tree_disp` and `mlp_disp`. The given axes will be used by the plotting function to draw the partial dependence. The resulting plot places the decision tree partial dependence curves in the first row of the multi-layer perceptron in the second row."
msgstr ""

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:210
msgid "Another way to compare the curves is to plot them on top of each other. Here, we create a figure with one row and two columns. The axes are passed into the :func:`~sklearn.inspection.PartialDependenceDisplay.plot` function as a list, which will plot the partial dependence curves of each model on the same axes. The length of the axes list must be equal to the number of plots drawn."
msgstr ""

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:249
msgid "`tree_disp.axes_` is a numpy array container the axes used to draw the partial dependence plots. This can be passed to `mlp_disp` to have the same affect of drawing the plots on top of each other. Furthermore, the `mlp_disp.figure_` stores the figure, which allows for resizing the figure after calling `plot`. In this case `tree_disp.axes_` has two dimensions, thus `plot` will only show the y label and y ticks on the left most plot."
msgstr ""

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:283
msgid "Plotting partial dependence for one feature"
msgstr ""

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:285
msgid "Here, we plot the partial dependence curves for a single feature, \"age\", on the same axes. In this case, `tree_disp.axes_` is passed into the second plot function."
msgstr ""

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:311
msgid "**Total running time of the script:** ( 0 minutes  5.812 seconds)"
msgstr "**Tiempo total de ejecución del script:** (0 minutos 5,812 segundos)"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:333
msgid ":download:`Download Python source code: plot_partial_dependence_visualization_api.py <plot_partial_dependence_visualization_api.py>`"
msgstr ":download:`Descargar el código fuente de Python: plot_partial_dependence_visualization_api.py <plot_partial_dependence_visualization_api.py>`"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:339
msgid ":download:`Download Jupyter notebook: plot_partial_dependence_visualization_api.ipynb <plot_partial_dependence_visualization_api.ipynb>`"
msgstr ":download:`Descargar el cuaderno de Jupyter: plot_partial_dependence_visualization_api.ipynb <plot_partial_dependence_visualization_api.ipynb>`"

#: ../auto_examples/miscellaneous/plot_partial_dependence_visualization_api.rst:346
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr "`Galería generada por Sphinx-Gallery <https://sphinx-gallery.github.io>`_"

#~ msgid "**Total running time of the script:** ( 0 minutes  0.003 seconds)"
#~ msgstr ""

