msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 05:58\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/miscellaneous/plot_kernel_ridge_regression.po\n"
"X-Crowdin-File-ID: 4590\n"
"Language: es_ES\n"

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_kernel_ridge_regression.py>` to download the full example code or to run this example in your browser via Binder"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:23
msgid "Comparison of kernel ridge regression and SVR"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:25
msgid "Both kernel ridge regression (KRR) and SVR learn a non-linear function by employing the kernel trick, i.e., they learn a linear function in the space induced by the respective kernel which corresponds to a non-linear function in the original space. They differ in the loss functions (ridge versus epsilon-insensitive loss). In contrast to SVR, fitting a KRR can be done in closed-form and is typically faster for medium-sized datasets. On the other hand, the learned model is non-sparse and thus slower than SVR at prediction-time."
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:34
msgid "This example illustrates both methods on an artificial dataset, which consists of a sinusoidal target function and strong noise added to every fifth datapoint. The first figure compares the learned model of KRR and SVR when both complexity/regularization and bandwidth of the RBF kernel are optimized using grid-search. The learned functions are very similar; however, fitting KRR is approx. seven times faster than fitting SVR (both with grid-search). However, prediction of 100000 target values is more than tree times faster with SVR since it has learned a sparse model using only approx. 1/3 of the 100 training datapoints as support vectors."
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:44
msgid "The next figure compares the time for fitting and prediction of KRR and SVR for different sizes of the training set. Fitting KRR is faster than SVR for medium- sized training sets (less than 1000 samples); however, for larger training sets SVR scales better. With regard to prediction time, SVR is faster than KRR for all sizes of the training set because of the learned sparse solution. Note that the degree of sparsity and thus the prediction time depends on the parameters epsilon and C of the SVR."
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:80
msgid "Out:"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:241
msgid "**Total running time of the script:** ( 0 minutes  48.599 seconds)"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:263
msgid ":download:`Download Python source code: plot_kernel_ridge_regression.py <plot_kernel_ridge_regression.py>`"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:269
msgid ":download:`Download Jupyter notebook: plot_kernel_ridge_regression.ipynb <plot_kernel_ridge_regression.ipynb>`"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_ridge_regression.rst:276
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

