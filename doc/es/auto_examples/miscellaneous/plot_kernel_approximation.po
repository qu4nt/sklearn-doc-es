msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-10 15:37\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/miscellaneous/plot_kernel_approximation.po\n"
"X-Crowdin-File-ID: 4582\n"
"Language: es_ES\n"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_miscellaneous_plot_kernel_approximation.py>` to download the full example code or to run this example in your browser via Binder"
msgstr "Haz clic :ref:`aquí <sphx_glr_download_auto_examples_miscellaneous_plot_kernel_approximation.py>` para descargar el código completo del ejemplo o para ejecutar este ejemplo en tu navegador a través de Binder"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:23
msgid "Explicit feature map approximation for RBF kernels"
msgstr "Aproximación explícita del mapeo de características para los núcleos RBF"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:25
msgid "An example illustrating the approximation of the feature map of an RBF kernel."
msgstr "Un ejemplo que ilustra la aproximación del mapeo de características de un núcleo RBF."

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:30
msgid "It shows how to use :class:`RBFSampler` and :class:`Nystroem` to approximate the feature map of an RBF kernel for classification with an SVM on the digits dataset. Results using a linear SVM in the original space, a linear SVM using the approximate mappings and using a kernelized SVM are compared. Timings and accuracy for varying amounts of Monte Carlo samplings (in the case of :class:`RBFSampler`, which uses random Fourier features) and different sized subsets of the training set (for :class:`Nystroem`) for the approximate mapping are shown."
msgstr "Se muestra cómo utilizar :class:`RBFSampler` y :class:`Nystroem` para aproximar el mapeo de características de un kernel RBF para la clasificación con una SVM en el conjunto de datos de dígitos. Se comparan los resultados utilizando una SVM lineal en el espacio original, una SVM lineal utilizando los mapeos aproximados y utilizando una SVM kernelizada. Se muestran los tiempos y la precisión para diferentes cantidades de muestreos de Monte Carlo (en el caso de :class:`RBFSampler`, que utiliza características aleatorias de Fourier) y subconjuntos de diferente tamaño del conjunto de entrenamiento (para :class:`Nystroem`) para el mapeo aproximado."

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:39
msgid "Please note that the dataset here is not large enough to show the benefits of kernel approximation, as the exact SVM is still reasonably fast."
msgstr "Ten en cuenta que el conjunto de datos aquí no es lo suficientemente grande como para mostrar los beneficios de la aproximación núcleo, ya que la SVM exacta sigue siendo razonablemente rápida."

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:42
msgid "Sampling more dimensions clearly leads to better classification results, but comes at a greater cost. This means there is a tradeoff between runtime and accuracy, given by the parameter n_components. Note that solving the Linear SVM and also the approximate kernel SVM could be greatly accelerated by using stochastic gradient descent via :class:`~sklearn.linear_model.SGDClassifier`. This is not easily possible for the case of the kernelized SVM."
msgstr "El muestreo de más dimensiones conduce claramente a mejores resultados de clasificación, pero tiene un costo mayor. Esto significa que hay una compensación entre el tiempo de ejecución y la precisión, dada por el parámetro n_components. Ten en cuenta que la resolución de la SVM lineal y también de la SVM de aproximación núcleo podría acelerarse en gran medida mediante el uso del descenso de gradiente estocástico a través de :class:`~sklearn.linear_model.SGDClassifier`. Esto no es posible fácilmente para el caso de la SVM kernelizada."

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:52
msgid "Python package and dataset imports, load dataset"
msgstr "Importación de paquetes y conjuntos de datos de Python, carga de conjuntos de datos"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:91
msgid "Timing and accuracy plots"
msgstr "Gráficos de tiempo y precisión"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:92
msgid "To apply an classifier on this data, we need to flatten the image, to turn the data in a (samples, feature) matrix:"
msgstr "Para aplicar un clasificador sobre estos datos, necesitamos aplanar la imagen, para convertir los datos en una matriz (samples, feature):"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:218
msgid "Decision Surfaces of RBF Kernel SVM and Linear SVM"
msgstr "Superficies de decisión de la SVM de núcleo RBF y la SVM lineal"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:219
msgid "The second plot visualized the decision surfaces of the RBF kernel SVM and the linear SVM with approximate kernel maps. The plot shows decision surfaces of the classifiers projected onto the first two principal components of the data. This visualization should be taken with a grain of salt since it is just an interesting slice through the decision surface in 64 dimensions. In particular note that a datapoint (represented as a dot) does not necessarily be classified into the region it is lying in, since it will not lie on the plane that the first two principal components span. The usage of :class:`RBFSampler` and :class:`Nystroem` is described in detail in :ref:`kernel_approximation`."
msgstr "El segundo gráfico visualiza las superficies de decisión de la SVM de núcleo RBF y la SVM lineal con mapeo de aproximación núcleo. El gráfico muestra las superficies de decisión de los clasificadores proyectadas sobre los dos primeros componentes principales de los datos. Esta visualización debe ser tomada con cautela ya que es sólo un corte interesante a través de la superficie de decisión en 64 dimensiones. En particular, ten en cuenta que un punto de datos (representado como un punto) no se clasifica necesariamente en la región en la que se encuentra, ya que no se ubicará en el plano que abarcan los dos primeros componentes principales. El uso de :class:`RBFSampler` y :class:`Nystroem` se describe en detalle en :ref:`kernel_approximation`."

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:295
msgid "**Total running time of the script:** ( 0 minutes  5.556 seconds)"
msgstr "**Tiempo total de ejecución del script:** (0 minutos 5.556 segundos)"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:317
msgid ":download:`Download Python source code: plot_kernel_approximation.py <plot_kernel_approximation.py>`"
msgstr ":download:`Descargar el código fuente de Python: plot_kernel_approximation.py <plot_kernel_approximation.py>`"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:323
msgid ":download:`Download Jupyter notebook: plot_kernel_approximation.ipynb <plot_kernel_approximation.ipynb>`"
msgstr ":download:`Descargar el cuaderno de Jupyter: plot_kernel_approximation.ipynb <plot_kernel_approximation.ipynb>`"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:330
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr "`Galería generada por Sphinx-Gallery <https://sphinx-gallery.github.io>`_"

