msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 04:40\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/tree/plot_unveil_tree_structure.po\n"
"X-Crowdin-File-ID: 4080\n"
"Language: es_ES\n"

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_tree_plot_unveil_tree_structure.py>` to download the full example code or to run this example in your browser via Binder"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:23
msgid "Understanding the decision tree structure"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:25
msgid "The decision tree structure can be analysed to gain further insight on the relation between the features and the target to predict. In this example, we show how to retrieve:"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:29
msgid "the binary tree structure;"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:30
msgid "the depth of each node and whether or not it's a leaf;"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:31
msgid "the nodes that were reached by a sample using the ``decision_path`` method;"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:32
msgid "the leaf that was reached by a sample using the apply method;"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:33
msgid "the rules that were used to predict a sample;"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:34
msgid "the decision path shared by a group of samples."
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:58
msgid "Train tree classifier"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:59
msgid "First, we fit a :class:`~sklearn.tree.DecisionTreeClassifier` using the :func:`~sklearn.datasets.load_iris` dataset."
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:91
msgid "Tree structure"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:93
msgid "The decision classifier has an attribute called ``tree_`` which allows access to low level attributes such as ``node_count``, the total number of nodes, and ``max_depth``, the maximal depth of the tree. It also stores the entire binary tree structure, represented as a number of parallel arrays. The i-th element of each array holds information about the node ``i``. Node 0 is the tree's root. Some of the arrays only apply to either leaves or split nodes. In this case the values of the nodes of the other type is arbitrary. For example, the arrays ``feature`` and ``threshold`` only apply to split nodes. The values for leaf nodes in these arrays are therefore arbitrary."
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:103
msgid "Among these arrays, we have:"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:105
msgid "``children_left[i]``: id of the left child of node ``i`` or -1 if leaf node"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:107
msgid "``children_right[i]``: id of the right child of node ``i`` or -1 if leaf node"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:109
msgid "``feature[i]``: feature used for splitting node ``i``"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:110
msgid "``threshold[i]``: threshold value at node ``i``"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:111
msgid "``n_node_samples[i]``: the number of of training samples reaching node ``i``"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:113
msgid "``impurity[i]``: the impurity at node ``i``"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:115
msgid "Using the arrays, we can traverse the tree structure to compute various properties. Below, we will compute the depth of each node and whether or not it is a leaf."
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:172
#: ../auto_examples/tree/plot_unveil_tree_structure.rst:270
#: ../auto_examples/tree/plot_unveil_tree_structure.rst:309
msgid "Out:"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:189
msgid "We can compare the above output to the plot of the decision tree."
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:213
msgid "Decision path"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:215
msgid "We can also retrieve the decision path of samples of interest. The ``decision_path`` method outputs an indicator matrix that allows us to retrieve the nodes the samples of interest traverse through. A non zero element in the indicator matrix at position ``(i, j)`` indicates that the sample ``i`` goes through the node ``j``. Or, for one sample ``i``, the positions of the non zero elements in row ``i`` of the indicator matrix designate the ids of the nodes that sample goes through."
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:223
msgid "The leaf ids reached by samples of interest can be obtained with the ``apply`` method. This returns an array of the node ids of the leaves reached by each sample of interest. Using the leaf ids and the ``decision_path`` we can obtain the splitting conditions that were used to predict a sample or a group of samples. First, let's do it for one sample. Note that ``node_index`` is a sparse matrix."
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:284
msgid "For a group of samples, we can determine the common nodes the samples go through."
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:323
msgid "**Total running time of the script:** ( 0 minutes  0.135 seconds)"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:345
msgid ":download:`Download Python source code: plot_unveil_tree_structure.py <plot_unveil_tree_structure.py>`"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:351
msgid ":download:`Download Jupyter notebook: plot_unveil_tree_structure.ipynb <plot_unveil_tree_structure.ipynb>`"
msgstr ""

#: ../auto_examples/tree/plot_unveil_tree_structure.rst:358
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

