msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-08-17 15:54\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/compose/plot_column_transformer_mixed_types.po\n"
"X-Crowdin-File-ID: 4508\n"
"Language: es_ES\n"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_compose_plot_column_transformer_mixed_types.py>` to download the full example code or to run this example in your browser via Binder"
msgstr "Haz clic en :ref:`aquí <sphx_glr_download_auto_examples_compose_plot_column_transformer_mixed_types.py>` para descargar el código de ejemplo completo o para ejecutar este ejemplo en tu navegador a través de Binder"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:23
msgid "Column Transformer with Mixed Types"
msgstr "Transformador de columna con tipos mixtos"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:27
msgid "This example illustrates how to apply different preprocessing and feature extraction pipelines to different subsets of features, using :class:`~compose.ColumnTransformer`. This is particularly handy for the case of datasets that contain heterogeneous data types, since we may want to scale the numeric features and one-hot encode the categorical ones."
msgstr "Este ejemplo ilustra cómo aplicar diferentes pipelines de preprocesamiento y extracción de características a diferentes subconjuntos de características, utilizando :class:`~compose.ColumnTransformer`. Esto es particularmente útil para el caso de conjuntos de datos que contienen tipos de datos heterogéneos, ya que podemos querer escalar las características numéricas y codificar de una sola vez las categóricas."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:33
msgid "In this example, the numeric data is standard-scaled after mean-imputation, while the categorical data is one-hot encoded after imputing missing values with a new category (``'missing'``)."
msgstr "En este ejemplo, los datos numéricos se ajustan a la escala estándar después de la imputación de la media, mientras que los datos categóricos se codifican de una sola vez después de imputar los valores faltantes con una nueva categoría (``'missing'``)."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:37
msgid "In addition, we show two different ways to dispatch the columns to the particular pre-processor: by column names and by column data types."
msgstr "Además, mostramos dos formas diferentes de enviar las columnas al preprocesador particular: por nombres de columna y por tipos de datos de columna."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:40
msgid "Finally, the preprocessing pipeline is integrated in a full prediction pipeline using :class:`~pipeline.Pipeline`, together with a simple classification model."
msgstr "Por último, el pipeline de preprocesamiento se integra en un pipeline de predicción completo utilizando :class:`~pipeline.Pipeline`, junto con un modelo de clasificación simple."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:82
msgid "Use ``ColumnTransformer`` by selecting column by names"
msgstr "Usa ``ColumnTransformer`` seleccionando columna por nombres"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:83
msgid "We will train our classifier with the following features:"
msgstr "Entrenaremos a nuestro clasificador con las siguientes características:"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:85
msgid "Numeric Features:"
msgstr "Características numéricas:"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:87
msgid "``age``: float;"
msgstr "``age``: float;"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:88
msgid "``fare``: float."
msgstr "``fare``: float."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:90
msgid "Categorical Features:"
msgstr "Características categóricas:"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:92
msgid "``embarked``: categories encoded as strings ``{'C', 'S', 'Q'}``;"
msgstr "``embarked``: categorías codificadas como cadenas ``{'C', 'S', 'Q'}``;"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:93
msgid "``sex``: categories encoded as strings ``{'female', 'male'}``;"
msgstr "``sex``: categorías codificadas como cadenas ``{'female', 'male'}``;"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:94
msgid "``pclass``: ordinal integers ``{1, 2, 3}``."
msgstr "``pclass``: enteros ordinales ``{1, 2, 3}``."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:96
msgid "We create the preprocessing pipelines for both numeric and categorical data. Note that ``pclass`` could either be treated as a categorical or numeric feature."
msgstr "Creamos pipelines de preprocesamiento para datos numéricos y categóricos. Tenga en cuenta que ``pclass`` puede ser tratada como una característica categórica o numérica."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:135
#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:233
#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:293
#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:321
#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:343
#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:430
#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:456
#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:576
msgid "Out:"
msgstr "Out:"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:147
msgid "HTML representation of ``Pipeline``"
msgstr "Representación HTML de ``Pipeline``"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:148
msgid "When the ``Pipeline`` is printed out in a jupyter notebook an HTML representation of the estimator is displayed as follows:"
msgstr "Cuando el ``Pipeline`` se imprime en un Cuaderno de Jupyter se muestra una representación HTML del estimador como la siguiente:"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:193
msgid "Use ``ColumnTransformer`` by selecting column by data types"
msgstr "Utiliza ``ColumnTransformer`` seleccionando la columna por tipos de datos"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:194
msgid "When dealing with a cleaned dataset, the preprocessing can be automatic by using the data types of the column to decide whether to treat a column as a numerical or categorical feature. :func:`sklearn.compose.make_column_selector` gives this possibility. First, let's only select a subset of columns to simplify our example."
msgstr "Cuando se trata de un conjunto de datos limpio, el preprocesamiento puede ser automático utilizando los tipos de datos de la columna para decidir si se trata una columna como característica numérica o categórica. :func:`sklearn.compose.make_column_selector` ofrece esta posibilidad. Primero, vamos a seleccionar sólo un subconjunto de columnas para simplificar nuestro ejemplo."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:218
msgid "Then, we introspect the information regarding each column data type."
msgstr "A continuación, introspeccionamos la información relativa a cada tipo de dato de la columna."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:255
msgid "We can observe that the `embarked` and `sex` columns were tagged as `category` columns when loading the data with ``fetch_openml``. Therefore, we can use this information to dispatch the categorical columns to the ``categorical_transformer`` and the remaining columns to the ``numerical_transformer``."
msgstr "Podemos observar que las columnas `embarked` y `sex` fueron etiquetadas como columnas de `categoría` al cargar los datos con ``fetch_openml``. Por tanto, podemos utilizar esta información para enviar las columnas categóricas al ``categorical_transformer`` y el resto de columnas al ``numerical_transformer``."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:263
msgid "In practice, you will have to handle yourself the column data type. If you want some columns to be considered as `category`, you will have to convert them into categorical columns. If you are using pandas, you can refer to their documentation regarding `Categorical data <https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html>`_."
msgstr "En la práctica, deberás manejar tú mismo el tipo de datos de la columna. Si quieres que algunas columnas sean consideradas como `categoría`, tendrás que convertirlas en columnas categóricas. Si utilizas pandas, puede consultar su documentación sobre `Datos categóricos <https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html>`_."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:304
msgid "The resulting score is not exactly the same as the one from the previous pipeline becase the dtype-based selector treats the ``pclass`` columns as a numeric features instead of a categorical feature as previously:"
msgstr "La puntuación resultante no es exactamente la misma que la del pipeline anterior porque el selector basado en dtype trata las columnas ``pclass`` como características numéricas en lugar de categóricas como anteriormente:"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:355
msgid "Using the prediction pipeline in a grid search"
msgstr "Uso del pipeline de predicción en una búsqueda en cuadrícula"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:356
msgid "Grid search can also be performed on the different preprocessing steps defined in the ``ColumnTransformer`` object, together with the classifier's hyperparameters as part of the ``Pipeline``. We will search for both the imputer strategy of the numeric preprocessing and the regularization parameter of the logistic regression using :class:`~sklearn.model_selection.GridSearchCV`."
msgstr "La búsqueda en cuadrícula también se puede realizar en los diferentes pasos de preprocesamiento definidos en el objeto ``ColumnTransformer``, junto con los hiperparámetros del clasificador como parte del ``Pipeline``. Buscaremos tanto la estrategia de imputación del preprocesamiento numérico como el parámetro de regularización de la regresión logística utilizando :class:`~sklearn.model_selection.GridSearchCV`."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:411
msgid "Calling 'fit' triggers the cross-validated search for the best hyper-parameters combination:"
msgstr "Al llamar a 'fit' se desencadena la búsqueda de validada cruzada de la mejor combinación de hiperparámetros:"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:442
msgid "The internal cross-validation scores obtained by those parameters is:"
msgstr "La puntuación de validación cruzada interna obtenida por esos parámetros es:"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:467
msgid "We can also introspect the top grid search results as a pandas dataframe:"
msgstr "También podemos introspeccionar los resultados de la búsqueda en cuadrícula superior como un dataframe de pandas:"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:559
msgid "The best hyper-parameters have be used to re-fit a final model on the full training set. We can evaluate that final model on held out test data that was not used for hyparameter tuning."
msgstr "Los mejores hiperparámetros se han utilizado para reajustar un modelo final en el conjunto de entrenamiento completo. Podemos evaluar ese modelo final en los datos de prueba retenidos que no se utilizaron para el ajuste de los hiperparámetros."

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:588
msgid "**Total running time of the script:** ( 0 minutes  2.496 seconds)"
msgstr "**Tiempo total de ejecución del script:** ( 0 minutos 2.496 segundos)"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:610
msgid ":download:`Download Python source code: plot_column_transformer_mixed_types.py <plot_column_transformer_mixed_types.py>`"
msgstr ":download:`Descargar el código fuente de Python: plot_column_transformer_mixed_types.py <plot_column_transformer_mixed_types.py>`"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:616
msgid ":download:`Download Jupyter notebook: plot_column_transformer_mixed_types.ipynb <plot_column_transformer_mixed_types.ipynb>`"
msgstr ":download:`Descargar el cuaderno Jupyter: plot_column_transformer_mixed_types.ipynb <plot_column_transformer_mixed_types.ipynb>`"

#: ../auto_examples/compose/plot_column_transformer_mixed_types.rst:623
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr "`Galería generada por Sphinx-Gallery <https://sphinx-gallery.github.io>`_"

#~ msgid "**Total running time of the script:** ( 0 minutes  1.225 seconds)"
#~ msgstr ""

