msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-07-16 19:52\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/linear_model/plot_poisson_regression_non_normal_loss.po\n"
"X-Crowdin-File-ID: 4706\n"
"Language: es_ES\n"

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_linear_model_plot_poisson_regression_non_normal_loss.py>` to download the full example code or to run this example in your browser via Binder"
msgstr "Haz clic en :ref:`aquí <sphx_glr_download_auto_examples_linear_model_plot_poisson_regression_non_normal_loss.py>` para descargar el código de ejemplo completo o para ejecutar este ejemplo en tu navegador a través de Binder"

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:23
msgid "Poisson regression and non-normal loss"
msgstr "Regresión de Poisson y pérdida no normal"

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:25
msgid "This example illustrates the use of log-linear Poisson regression on the `French Motor Third-Party Liability Claims dataset <https://www.openml.org/d/41214>`_ from [1]_ and compares it with a linear model fitted with the usual least squared error and a non-linear GBRT model fitted with the Poisson loss (and a log-link)."
msgstr "Este ejemplo ilustra el uso de la regresión logarítmica lineal de Poisson en el conjunto de datos de reclamaciones de responsabilidad civil de automóviles de Francia <https://www.openml.org/d/41214>`_ de [1]_ y lo compara con un modelo lineal ajustado con el error mínimo cuadrático habitual y un modelo no lineal GBRT ajustado con la pérdida de Poisson (y un enlace logarítmico)."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:31
msgid "A few definitions:"
msgstr "Unas cuantas definiciones:"

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:33
msgid "A **policy** is a contract between an insurance company and an individual: the **policyholder**, that is, the vehicle driver in this case."
msgstr "Una **póliza** es un contrato entre una compañía de seguros y un individuo: el **tomador del seguro**, es decir, el conductor del vehículo en este caso."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:36
msgid "A **claim** is the request made by a policyholder to the insurer to compensate for a loss covered by the insurance."
msgstr "Un **reclamo** es la petición que hace el asegurado a la aseguradora para que le indemnice por un siniestro cubierto por el seguro."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:39
msgid "The **exposure** is the duration of the insurance coverage of a given policy, in years."
msgstr "La **exposición** es la duración de la cobertura del seguro de una determinada póliza, en años."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:42
msgid "The claim **frequency** is the number of claims divided by the exposure, typically measured in number of claims per year."
msgstr "La **frecuencia de los siniestros** es el número de siniestros dividido por la exposición, que suele medirse en número de siniestros por año."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:45
msgid "In this dataset, each sample corresponds to an insurance policy. Available features include driver age, vehicle age, vehicle power, etc."
msgstr "En este conjunto de datos, cada muestra corresponde a una póliza de seguro. Las características disponibles incluyen la edad del conductor, la edad del vehículo, la potencia del vehículo, etc."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:48
msgid "Our goal is to predict the expected frequency of claims following car accidents for a new policyholder given the historical data over a population of policyholders."
msgstr "Nuestro objetivo es predecir la frecuencia esperada de siniestros tras un accidente de coche para un nuevo asegurado, dados los datos históricos sobre una población de asegurados."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:52
msgid "A. Noll, R. Salzmann and M.V. Wuthrich, Case Study: French Motor Third-Party Liability Claims (November 8, 2018). `doi:10.2139/ssrn.3164764 <http://dx.doi.org/10.2139/ssrn.3164764>`_"
msgstr "A. Noll, R. Salzmann y M.V. Wuthrich, Estudio de caso: French Motor Third-Party Liability Claims (8 de noviembre de 2018). `doi:10.2139/ssrn.3164764 <http://dx.doi.org/10.2139/ssrn.3164764>`_"

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:80
msgid "The French Motor Third-Party Liability Claims dataset"
msgstr "El conjunto de datos de siniestros de responsabilidad civil del automóvil en Francia"

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:82
msgid "Let's load the motor claim dataset from OpenML: https://www.openml.org/d/41214"
msgstr "Carguemos el conjunto de datos de siniestros de automóviles desde OpenML: https://www.openml.org/d/41214"

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:102
#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:362
#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:507
#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:573
#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:624
#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:694
#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:891
#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:999
msgid "Out:"
msgstr "Out:"

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:321
msgid "The number of claims (``ClaimNb``) is a positive integer that can be modeled as a Poisson distribution. It is then assumed to be the number of discrete events occurring with a constant rate in a given time interval (``Exposure``, in units of years)."
msgstr "El número de siniestros (``ClaimNb``) es un número entero positivo que puede modelarse como una distribución de Poisson. Se supone entonces que es el número de eventos discretos que ocurren con una tasa constante en un intervalo de tiempo determinado (``Exposure``, en unidades de años)."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:326
msgid "Here we want to model the frequency ``y = ClaimNb / Exposure`` conditionally on ``X`` via a (scaled) Poisson distribution, and use ``Exposure`` as ``sample_weight``."
msgstr "Aquí queremos modelar la frecuencia ``y = ClaimNb / Exposure`` condicionada a ``X`` mediante una distribución de Poisson (escalada), y utilizar ``Exposure`` como ``sample_weight``."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:374
msgid "The remaining columns can be used to predict the frequency of claim events. Those columns are very heterogeneous with a mix of categorical and numeric variables with different scales, possibly very unevenly distributed."
msgstr "Las columnas restantes pueden utilizarse para predecir la frecuencia de los siniestros. Esas columnas son muy heterogéneas con una mezcla de variables categóricas y numéricas con diferentes escalas, posiblemente muy desigualmente distribuidas."

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:378
msgid "In order to fit linear models with those predictors it is therefore necessary to perform standard feature transformations as follows:"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:421
msgid "A constant prediction baseline"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:423
#, python-format
msgid "It is worth noting that more than 93% of policyholders have zero claims. If we were to convert this problem into a binary classification task, it would be significantly imbalanced, and even a simplistic model that would only predict mean can achieve an accuracy of 93%."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:428
msgid "To evaluate the pertinence of the used metrics, we will consider as a baseline a \"dummy\" estimator that constantly predicts the mean frequency of the training sample."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:459
msgid "Let's compute the performance of this constant prediction baseline with 3 different regression metrics:"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:522
msgid "(Generalized) linear models"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:524
msgid "We start by modeling the target variable with the (l2 penalized) least squares linear regression model, more comonly known as Ridge regression. We use a low penalization `alpha`, as we expect such a linear model to under-fit on such a large dataset."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:552
msgid "The Poisson deviance cannot be computed on non-positive values predicted by the model. For models that do return a few non-positive predictions (e.g. :class:`~sklearn.linear_model.Ridge`) we ignore the corresponding samples, meaning that the obtained Poisson deviance is approximate. An alternative approach could be to use :class:`~sklearn.compose.TransformedTargetRegressor` meta-estimator to map ``y_pred`` to a strictly positive domain."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:588
msgid "Next we fit the Poisson regressor on the target variable. We set the regularization strength ``alpha`` to approximately 1e-6 over number of samples (i.e. `1e-12`) in order to mimic the Ridge regressor whose L2 penalty term scales differently with the number of samples."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:593
msgid "Since the Poisson regressor internally models the log of the expected target value instead of the expected value directly (log vs identity link function), the relationship between X and y is not exactly linear anymore. Therefore the Poisson regressor is called a Generalized Linear Model (GLM) rather than a vanilla linear model as is the case for Ridge regression."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:639
msgid "Gradient Boosting Regression Trees for Poisson regression"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:641
msgid "Finally, we will consider a non-linear model, namely Gradient Boosting Regression Trees. Tree-based models do not require the categorical data to be one-hot encoded: instead, we can encode each category label with an arbitrary integer using :class:`~sklearn.preprocessing.OrdinalEncoder`. With this encoding, the trees will treat the categorical features as ordered features, which might not be always a desired behavior. However this effect is limited for deep enough trees which are able to recover the categorical nature of the features. The main advantage of the :class:`~sklearn.preprocessing.OrdinalEncoder` over the :class:`~sklearn.preprocessing.OneHotEncoder` is that it will make training faster."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:653
msgid "Gradient Boosting also gives the possibility to fit the trees with a Poisson loss (with an implicit log-link function) instead of the default least-squares loss. Here we only fit trees with the Poisson loss to keep this example concise."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:708
msgid "Like the Poisson GLM above, the gradient boosted trees model minimizes the Poisson deviance. However, because of a higher predictive power, it reaches lower values of Poisson deviance."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:712
msgid "Evaluating models with a single train / test split is prone to random fluctuations. If computing resources allow, it should be verified that cross-validated performance metrics would lead to similar conclusions."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:716
msgid "The qualitative difference between these models can also be visualized by comparing the histogram of observed target values with that of predicted values:"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:765
msgid "The experimental data presents a long tail distribution for ``y``. In all models, we predict the expected frequency of a random variable, so we will have necessarily fewer extreme values than for the observed realizations of that random variable. This explains that the mode of the histograms of model predictions doesn't necessarily correspond to the smallest value. Additionally, the normal distribution used in ``Ridge`` has a constant variance, while for the Poisson distribution used in ``PoissonRegressor`` and ``HistGradientBoostingRegressor``, the variance is proportional to the predicted expected value."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:775
msgid "Thus, among the considered estimators, ``PoissonRegressor`` and ``HistGradientBoostingRegressor`` are a-priori better suited for modeling the long tail distribution of the non-negative data as compared to the ``Ridge`` model which makes a wrong assumption on the distribution of the target variable."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:781
msgid "The ``HistGradientBoostingRegressor`` estimator has the most flexibility and is able to predict higher expected values."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:784
msgid "Note that we could have used the least squares loss for the ``HistGradientBoostingRegressor`` model. This would wrongly assume a normal distributed response variable as does the `Ridge` model, and possibly also lead to slightly negative predictions. However the gradient boosted trees would still perform relatively well and in particular better than ``PoissonRegressor`` thanks to the flexibility of the trees combined with the large number of training samples."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:793
msgid "Evaluation of the calibration of predictions"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:795
msgid "To ensure that estimators yield reasonable predictions for different policyholder types, we can bin test samples according to ``y_pred`` returned by each model. Then for each bin, we compare the mean predicted ``y_pred``, with the mean observed target:"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:906
msgid "The dummy regression model predicts a constant frequency. This model does not attribute the same tied rank to all samples but is none-the-less globally well calibrated (to estimate the mean frequency of the entire population)."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:910
msgid "The ``Ridge`` regression model can predict very low expected frequencies that do not match the data. It can therefore severly under-estimate the risk for some policyholders."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:914
msgid "``PoissonRegressor`` and ``HistGradientBoostingRegressor`` show better consistency between predicted and observed targets, especially for low predicted target values."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:918
msgid "The sum of all predictions also confirms the calibration issue of the ``Ridge`` model: it under-estimates by more than 3% the total number of claims in the test set while the other three models can approximately recover the total number of claims of the test portfolio."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:924
msgid "Evaluation of the ranking power"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:926
msgid "For some business applications, we are interested in the ability of the model to rank the riskiest from the safest policyholders, irrespective of the absolute value of the prediction. In this case, the model evaluation would cast the problem as a ranking problem rather than a regression problem."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:931
msgid "To compare the 3 models from this perspective, one can plot the cumulative proportion of claims vs the cumulative proportion of exposure for the test samples order by the model predictions, from safest to riskiest according to each model."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:936
msgid "This plot is called a Lorenz curve and can be summarized by the Gini index:"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1010
msgid "As expected, the dummy regressor is unable to correctly rank the samples and therefore performs the worst on this plot."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1013
msgid "The tree-based model is significantly better at ranking policyholders by risk while the two linear models perform similarly."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1016
msgid "All three models are significantly better than chance but also very far from making perfect predictions."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1019
msgid "This last point is expected due to the nature of the problem: the occurrence of accidents is mostly dominated by circumstantial causes that are not captured in the columns of the dataset and can indeed be considered as purely random."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1024
#, python-format
msgid "The linear models assume no interactions between the input variables which likely causes under-fitting. Inserting a polynomial feature extractor (:func:`~sklearn.preprocessing.PolynomialFeatures`) indeed increases their discrimative power by 2 points of Gini index. In particular it improves the ability of the models to identify the top 5% riskiest profiles."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1031
msgid "Main takeaways"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1033
msgid "The performance of the models can be evaluated by their ability to yield well-calibrated predictions and a good ranking."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1036
msgid "The calibration of the model can be assessed by plotting the mean observed value vs the mean predicted value on groups of test samples binned by predicted risk."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1040
msgid "The least squares loss (along with the implicit use of the identity link function) of the Ridge regression model seems to cause this model to be badly calibrated. In particular, it tends to underestimate the risk and can even predict invalid negative frequencies."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1045
msgid "Using the Poisson loss with a log-link can correct these problems and lead to a well-calibrated linear model."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1048
msgid "The Gini index reflects the ability of a model to rank predictions irrespective of their absolute values, and therefore only assess their ranking power."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1052
msgid "Despite the improvement in calibration, the ranking power of both linear models are comparable and well below the ranking power of the Gradient Boosting Regression Trees."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1056
msgid "The Poisson deviance computed as an evaluation metric reflects both the calibration and the ranking power of the model. It also makes a linear assumption on the ideal relationship between the expected value and the variance of the response variable. For the sake of conciseness we did not check whether this assumption holds."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1062
msgid "Traditional regression metrics such as Mean Squared Error and Mean Absolute Error are hard to meaningfully interpret on count values with many zeros."
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1081
msgid "**Total running time of the script:** ( 1 minutes  35.081 seconds)"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1103
msgid ":download:`Download Python source code: plot_poisson_regression_non_normal_loss.py <plot_poisson_regression_non_normal_loss.py>`"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1109
msgid ":download:`Download Jupyter notebook: plot_poisson_regression_non_normal_loss.ipynb <plot_poisson_regression_non_normal_loss.ipynb>`"
msgstr ""

#: ../auto_examples/linear_model/plot_poisson_regression_non_normal_loss.rst:1116
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

#~ msgid "**Total running time of the script:** ( 0 minutes  0.002 seconds)"
#~ msgstr ""

