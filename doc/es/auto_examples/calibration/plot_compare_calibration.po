msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-20 17:04\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/calibration/plot_compare_calibration.po\n"
"X-Crowdin-File-ID: 4266\n"
"Language: es_ES\n"

#: ../auto_examples/calibration/plot_compare_calibration.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_calibration_plot_compare_calibration.py>` to download the full example code or to run this example in your browser via Binder"
msgstr "Haz clic en :ref:`aquí <sphx_glr_download_auto_examples_calibration_plot_compare_calibration.py>` para descargar el código de ejemplo completo o para ejecutar este ejemplo en tu navegador a través de Binder"

#: ../auto_examples/calibration/plot_compare_calibration.rst:23
msgid "Comparison of Calibration of Classifiers"
msgstr "Comparación de la calibración de los clasificadores"

#: ../auto_examples/calibration/plot_compare_calibration.rst:25
msgid "Well calibrated classifiers are probabilistic classifiers for which the output of the predict_proba method can be directly interpreted as a confidence level. For instance a well calibrated (binary) classifier should classify the samples such that among the samples to which it gave a predict_proba value close to 0.8, approx. 80% actually belong to the positive class."
msgstr "Los clasificadores bien calibrados son clasificadores probabilísticos para los que el resultado del método predict_proba puede interpretarse directamente como un nivel de confianza. Por ejemplo, un clasificador (binario) bien calibrado debería clasificar las muestras de tal manera que, entre las muestras a las que dio un valor de predict_proba cercano a 0,8, aproximadamente el 80% pertenecen realmente a la clase positiva."

#: ../auto_examples/calibration/plot_compare_calibration.rst:31
msgid "LogisticRegression returns well calibrated predictions as it directly optimizes log-loss. In contrast, the other methods return biased probabilities, with different biases per method:"
msgstr "LogisticRegression devuelve predicciones bien calibradas, ya que optimiza directamente la pérdida logarítmica. En cambio, los otros métodos devuelven probabilidades sesgadas, con diferentes sesgos por método:"

#: ../auto_examples/calibration/plot_compare_calibration.rst:35
msgid "GaussianNaiveBayes tends to push probabilities to 0 or 1 (note the counts in the histograms). This is mainly because it makes the assumption that features are conditionally independent given the class, which is not the case in this dataset which contains 2 redundant features."
msgstr "GaussianNaiveBayes tiende a empujar las probabilidades a 0 o 1 (observe los recuentos en los histogramas). Esto se debe principalmente a que asume que las características son condicionalmente independientes dada la clase, lo que no es el caso en este conjunto de datos que contiene 2 características redundantes."

#: ../auto_examples/calibration/plot_compare_calibration.rst:40
msgid "RandomForestClassifier shows the opposite behavior: the histograms show peaks at approx. 0.2 and 0.9 probability, while probabilities close to 0 or 1 are very rare. An explanation for this is given by Niculescu-Mizil and Caruana [1]_: \"Methods such as bagging and random forests that average predictions from a base set of models can have difficulty making predictions near 0 and 1 because variance in the underlying base models will bias predictions that should be near zero or one away from these values. Because predictions are restricted to the interval [0,1], errors caused by variance tend to be one- sided near zero and one. For example, if a model should predict p = 0 for a case, the only way bagging can achieve this is if all bagged trees predict zero. If we add noise to the trees that bagging is averaging over, this noise will cause some trees to predict values larger than 0 for this case, thus moving the average prediction of the bagged ensemble away from 0. We observe this effect most strongly with random forests because the base-level trees trained with random forests have relatively high variance due to feature subsetting.\" As a result, the calibration curve shows a characteristic sigmoid shape, indicating that the classifier could trust its \"intuition\" more and return probabilities closer to 0 or 1 typically."
msgstr "RandomForestClassifier muestra el comportamiento opuesto: los histogramas muestran picos con una probabilidad de aproximadamente 0,2 y 0,9, mientras que las probabilidades cercanas a 0 o 1 son muy raras. Niculescu-Mizil y Caruana [1]_ dan una explicación para esto \"Los métodos como el bagging y los bosques aleatorios que promedian las predicciones de un conjunto de modelos base pueden tener dificultades para hacer predicciones cercanas a 0 y 1 porque la varianza en los modelos base subyacentes sesgará las predicciones que deberían estar cerca de cero o uno lejos de estos valores. Dado que las predicciones están restringidas al intervalo [0,1], los errores causados por la varianza tienden a ser unilaterales cerca de cero y uno. Por ejemplo, si un modelo debe predecir p = 0 para un caso, la única forma de conseguirlo es que todos los árboles empaquetados predigan cero. Si añadimos ruido a los árboles sobre los que el ensamblaje hace la media, este ruido hará que algunos árboles predigan valores mayores que 0 para este caso, alejando así la predicción media del conjunto ensamblado de 0. Observamos este efecto con más fuerza con los bosques aleatorios porque los árboles de nivel base entrenados con bosques aleatorios tienen una varianza relativamente alta debido al subconjunto de características\". Como resultado, la curva de calibración muestra una forma sigmoidea característica, lo que indica que el clasificador podría confiar más en su \"intuición\" y devolver probabilidades más cercanas a 0 o 1 normalmente."

#: ../auto_examples/calibration/plot_compare_calibration.rst:59
msgid "Support Vector Classification (SVC) shows an even more sigmoid curve as the  RandomForestClassifier, which is typical for maximum-margin methods (compare Niculescu-Mizil and Caruana [1]_), which focus on hard samples that are close to the decision boundary (the support vectors)."
msgstr "La clasificación de vectores de soporte (SVC) muestra una curva aún más sigmoidea que el clasificador RandomForest, lo que es típico de los métodos de margen máximo (compárese con Niculescu-Mizil y Caruana [1]_), que se centran en las muestras duras que están cerca de la frontera de decisión (los vectores de soporte)."

#: ../auto_examples/calibration/plot_compare_calibration.rst:66
msgid "Predicting Good Probabilities with Supervised Learning, A. Niculescu-Mizil & R. Caruana, ICML 2005"
msgstr "Predicting Good Probabilities with Supervised Learning, A. Niculescu-Mizil & R. Caruana, ICML 2005"

#: ../auto_examples/calibration/plot_compare_calibration.rst:160
msgid "**Total running time of the script:** ( 0 minutes  1.549 seconds)"
msgstr "**Tiempo total de ejecución del script:** (0 minutos 1.549 segundos)"

#: ../auto_examples/calibration/plot_compare_calibration.rst:182
msgid ":download:`Download Python source code: plot_compare_calibration.py <plot_compare_calibration.py>`"
msgstr ":download:`Descargar el código fuente de Python: plot_compare_calibration.py <plot_compare_calibration.py>`"

#: ../auto_examples/calibration/plot_compare_calibration.rst:188
msgid ":download:`Download Jupyter notebook: plot_compare_calibration.ipynb <plot_compare_calibration.ipynb>`"
msgstr ":download:`Descargar el cuaderno de Jupyter: plot_compare_calibration.ipynb <plot_compare_calibration.ipynb>`"

#: ../auto_examples/calibration/plot_compare_calibration.rst:195
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr "`Galería generada por Sphinx-Gallery <https://sphinx-gallery.github.io>`_"

