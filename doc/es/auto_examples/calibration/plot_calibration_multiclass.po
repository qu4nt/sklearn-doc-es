msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-16 03:18\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/calibration/plot_calibration_multiclass.po\n"
"X-Crowdin-File-ID: 4260\n"
"Language: es_ES\n"

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_calibration_plot_calibration_multiclass.py>` to download the full example code or to run this example in your browser via Binder"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:23
msgid "Probability Calibration for 3-class classification"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:25
msgid "This example illustrates how sigmoid :ref:`calibration <calibration>` changes predicted probabilities for a 3-class classification problem. Illustrated is the standard 2-simplex, where the three corners correspond to the three classes. Arrows point from the probability vectors predicted by an uncalibrated classifier to the probability vectors predicted by the same classifier after sigmoid calibration on a hold-out validation set. Colors indicate the true class of an instance (red: class 1, green: class 2, blue: class 3)."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:36
msgid "Data"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:37
msgid "Below, we generate a classification dataset with 2000 samples, 2 features and 3 target classes. We then split the data as follows:"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:40
msgid "train: 600 samples (for training the classifier)"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:41
msgid "valid: 400 samples (for calibrating predicted probabilities)"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:42
msgid "test: 1000 samples"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:44
msgid "Note that we also create `X_train_valid` and `y_train_valid`, which consists of both the train and valid subsets. This is used when we only want to train the classifier but not calibrate the predicted probabilities."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:78
msgid "Fitting and calibration"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:80
msgid "First, we will train a :class:`~sklearn.ensemble.RandomForestClassifier` with 25 base estimators (trees) on the concatenated train and validation data (1000 samples). This is the uncalibrated classifier."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:109
msgid "To train the calibrated classifier, we start with the same :class:`~sklearn.ensemble.RandomForestClassifier` but train it using only the train data subset (600 samples) then calibrate, with `method='sigmoid'`, using the valid data subset (400 samples) in a 2-stage process."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:143
msgid "Compare probabilities"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:144
msgid "Below we plot a 2-simplex with arrows showing the change in predicted probabilities of the test samples."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:232
msgid "In the figure above, each vertex of the simplex represents a perfectly predicted class (e.g., 1, 0, 0). The mid point inside the simplex represents predicting the three classes with equal probability (i.e., 1/3, 1/3, 1/3). Each arrow starts at the uncalibrated probabilities and end with the arrow head at the calibrated probability. The color of the arrow represents the true class of that test sample."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:240
msgid "The uncalibrated classifier is overly confident in its predictions and incurs a large :ref:`log loss <log_loss>`. The calibrated classifier incurs a lower :ref:`log loss <log_loss>` due to two factors. First, notice in the figure above that the arrows generally point away from the edges of the simplex, where the probability of one class is 0. Second, a large proportion of the arrows point towards the true class, e.g., green arrows (samples where the true class is 'green') generally point towards the green vertex. This results in fewer over-confident, 0 predicted probabilities and at the same time an increase in the the predicted probabilities of the correct class. Thus, the calibrated classifier produces more accurate predicted probablities that incur a lower :ref:`log loss <log_loss>`"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:252
msgid "We can show this objectively by comparing the :ref:`log loss <log_loss>` of the uncalibrated and calibrated classifiers on the predictions of the 1000 test samples. Note that an alternative would have been to increase the number of base estimators (trees) of the :class:`~sklearn.ensemble.RandomForestClassifier` which would have resulted in a similar decrease in :ref:`log loss <log_loss>`."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:279
msgid "Out:"
msgstr "Out:"

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:292
msgid "Finally we generate a grid of possibile uncalibrated probabilities over the 2-simplex, compute the corresponding calibrated probabilities and plot arrows for each. The arrows are colored according the highest uncalibrated probability. This illustrates the learned calibration map:"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:357
msgid "**Total running time of the script:** ( 0 minutes  2.063 seconds)"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:379
msgid ":download:`Download Python source code: plot_calibration_multiclass.py <plot_calibration_multiclass.py>`"
msgstr ":download:`Descarga el c√≥digo fuente de Python: plot_calibration_multiclass.py <plot_calibration_multiclass.py>`"

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:385
msgid ":download:`Download Jupyter notebook: plot_calibration_multiclass.ipynb <plot_calibration_multiclass.ipynb>`"
msgstr ":download:`Descarga el cuaderno de Jupyter: plot_calibration_multiclass.ipynb <plot_calibration_multiclass.ipynb>`"

#: ../auto_examples/calibration/plot_calibration_multiclass.rst:392
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

