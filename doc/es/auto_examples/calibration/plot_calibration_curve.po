msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 04:41\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/calibration/plot_calibration_curve.po\n"
"X-Crowdin-File-ID: 4264\n"
"Language: es_ES\n"

#: ../auto_examples/calibration/plot_calibration_curve.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_calibration_plot_calibration_curve.py>` to download the full example code or to run this example in your browser via Binder"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:23
msgid "Probability Calibration curves"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:25
msgid "When performing classification one often wants to predict not only the class label, but also the associated probability. This probability gives some kind of confidence on the prediction. This example demonstrates how to display how well calibrated the predicted probabilities are and how to calibrate an uncalibrated classifier."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:31
msgid "The experiment is performed on an artificial dataset for binary classification with 100,000 samples (1,000 of them are used for model fitting) with 20 features. Of the 20 features, only 2 are informative and 10 are redundant. The first figure shows the estimated probabilities obtained with logistic regression, Gaussian naive Bayes, and Gaussian naive Bayes with both isotonic calibration and sigmoid calibration. The calibration performance is evaluated with Brier score, reported in the legend (the smaller the better). One can observe here that logistic regression is well calibrated while raw Gaussian naive Bayes performs very badly. This is because of the redundant features which violate the assumption of feature-independence and result in an overly confident classifier, which is indicated by the typical transposed-sigmoid curve."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:44
msgid "Calibration of the probabilities of Gaussian naive Bayes with isotonic regression can fix this issue as can be seen from the nearly diagonal calibration curve. Sigmoid calibration also improves the brier score slightly, albeit not as strongly as the non-parametric isotonic regression. This can be attributed to the fact that we have plenty of calibration data such that the greater flexibility of the non-parametric model can be exploited."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:51
msgid "The second figure shows the calibration curve of a linear support-vector classifier (LinearSVC). LinearSVC shows the opposite behavior as Gaussian naive Bayes: the calibration curve has a sigmoid curve, which is typical for an under-confident classifier. In the case of LinearSVC, this is caused by the margin property of the hinge loss, which lets the model focus on hard samples that are close to the decision boundary (the support vectors)."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:58
msgid "Both kinds of calibration can fix this issue and yield nearly identical results. This shows that sigmoid calibration can deal with situations where the calibration curve of the base classifier is sigmoid (e.g., for LinearSVC) but not where it is transposed-sigmoid (e.g., Gaussian naive Bayes)."
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:85
msgid "Out:"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:243
msgid "**Total running time of the script:** ( 0 minutes  2.912 seconds)"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:265
msgid ":download:`Download Python source code: plot_calibration_curve.py <plot_calibration_curve.py>`"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:271
msgid ":download:`Download Jupyter notebook: plot_calibration_curve.ipynb <plot_calibration_curve.ipynb>`"
msgstr ""

#: ../auto_examples/calibration/plot_calibration_curve.rst:278
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

