msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-04-15 05:59\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/cross_decomposition/plot_pcr_vs_pls.po\n"
"X-Crowdin-File-ID: 4454\n"
"Language: es_ES\n"

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_cross_decomposition_plot_pcr_vs_pls.py>` to download the full example code or to run this example in your browser via Binder"
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:23
msgid "Principal Component Regression vs Partial Least Squares Regression"
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:25
msgid "This example compares `Principal Component Regression <https://en.wikipedia.org/wiki/Principal_component_regression>`_ (PCR) and `Partial Least Squares Regression <https://en.wikipedia.org/wiki/Partial_least_squares_regression>`_ (PLS) on a toy dataset. Our goal is to illustrate how PLS can outperform PCR when the target is strongly correlated with some directions in the data that have a low variance."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:33
msgid "PCR is a regressor composed of two steps: first, :class:`~sklearn.decomposition.PCA` is applied to the training data, possibly performing dimensionality reduction; then, a regressor (e.g. a linear regressor) is trained on the transformed samples. In :class:`~sklearn.decomposition.PCA`, the transformation is purely unsupervised, meaning that no information about the targets is used. As a result, PCR may perform poorly in some datasets where the target is strongly correlated with *directions* that have low variance. Indeed, the dimensionality reduction of PCA projects the data into a lower dimensional space where the variance of the projected data is greedily maximized along each axis. Despite them having the most predictive power on the target, the directions with a lower variance will be dropped, and the final regressor will not be able to leverage them."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:47
msgid "PLS is both a transformer and a regressor, and it is quite similar to PCR: it also applies a dimensionality reduction to the samples before applying a linear regressor to the transformed data. The main difference with PCR is that the PLS transformation is supervised. Therefore, as we will see in this example, it does not suffer from the issue we just mentioned."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:70
msgid "The data"
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:72
msgid "We start by creating a simple dataset with two features. Before we even dive into PCR and PLS, we fit a PCA estimator to display the two principal components of this dataset, i.e. the two directions that explain the most variance in the data."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:117
msgid "For the purpose of this example, we now define the target `y` such that it is strongly correlated with a direction that has a small variance. To this end, we will project `X` onto the second component, and add some noise to it."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:151
msgid "Projection on one component and predictive power"
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:153
msgid "We now create two regressors: PCR and PLS, and for our illustration purposes we set the number of components to 1. Before feeding the data to the PCA step of PCR, we first standardize it, as recommended by good practice. The PLS estimator has built-in scaling capabilities."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:158
msgid "For both models, we plot the projected data onto the first component against the target. In both cases, this projected data is what the regressors will use as training data."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:211
msgid "As expected, the unsupervised PCA transformation of PCR has dropped the second component, i.e. the direction with the lowest variance, despite it being the most predictive direction. This is because PCA is a completely unsupervised transformation, and results in the projected data having a low predictive power on the target."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:217
msgid "On the other hand, the PLS regressor manages to capture the effect of the direction with the lowest variance, thanks to its use of target information during the transformation: it can recogize that this direction is actually the most predictive. We note that the first PLS component is negatively correlated with the target, which comes from the fact that the signs of eigenvectors are arbitrary."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:224
msgid "We also print the R-squared scores of both estimators, which further confirms that PLS is a better alternative than PCR in this case. A negative R-squared indicates that PCR performs worse than a regressor that would simply predict the mean of the target."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:243
#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:273
msgid "Out:"
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:255
msgid "As a final remark, we note that PCR with 2 components performs as well as PLS: this is because in this case, PCR was able to leverage the second component which has the most preditive power on the target."
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:285
msgid "**Total running time of the script:** ( 0 minutes  0.965 seconds)"
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:307
msgid ":download:`Download Python source code: plot_pcr_vs_pls.py <plot_pcr_vs_pls.py>`"
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:313
msgid ":download:`Download Jupyter notebook: plot_pcr_vs_pls.ipynb <plot_pcr_vs_pls.ipynb>`"
msgstr ""

#: ../auto_examples/cross_decomposition/plot_pcr_vs_pls.rst:320
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

