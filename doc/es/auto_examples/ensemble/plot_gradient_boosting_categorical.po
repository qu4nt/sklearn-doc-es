msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-08-10 19:33\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/ensemble/plot_gradient_boosting_categorical.po\n"
"X-Crowdin-File-ID: 4542\n"
"Language: es_ES\n"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_ensemble_plot_gradient_boosting_categorical.py>` to download the full example code or to run this example in your browser via Binder"
msgstr "Haz clic en :ref:`aquí <sphx_glr_download_auto_examples_ensemble_plot_gradient_boosting_categorical.py>` para descargar el código de ejemplo completo o para ejecutar este ejemplo en tu navegador a través de Binder"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:23
msgid "Categorical Feature Support in Gradient Boosting"
msgstr "Soporte de características categóricas en Potenciación del Gradiente (Gradient Boosting)"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:27
msgid "In this example, we will compare the training times and prediction performances of :class:`~ensemble.HistGradientBoostingRegressor` with different encoding strategies for categorical features. In particular, we will evaluate:"
msgstr "En este ejemplo, compararemos los tiempos de entrenamiento y las prestaciones de predicción de :class:`~ensemble.HistGradientBoostingRegressor` con diferentes estrategias de codificación de características categóricas. En particular, evaluaremos:"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:32
msgid "dropping the categorical features"
msgstr "dejando de lado las características categóricas"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:33
msgid "using a :class:`~preprocessing.OneHotEncoder`"
msgstr "usando un :class:`~preprocessing.OneHotEncoder`"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:34
msgid "using an :class:`~preprocessing.OrdinalEncoder` and treat categories as ordered, equidistant quantities"
msgstr "utilizando un :class:`~preprocessing.OrdinalEncoder` y tratar las categorías como cantidades ordenadas y equidistantes"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:36
msgid "using an :class:`~preprocessing.OrdinalEncoder` and rely on the :ref:`native category support <categorical_support_gbdt>` of the :class:`~ensemble.HistGradientBoostingRegressor` estimator."
msgstr "utilizando un :class:`~preprocessing.OrdinalEncoder` y confiar en el :ref:`native category support <categorical_support_gbdt>` del estimador :class:`~ensemble.HistGradientBoostingRegressor`."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:40
msgid "We will work with the Ames Lowa Housing dataset which consists of numerical and categorical features, where the houses' sales prices is the target."
msgstr "Trabajaremos con el conjunto de datos de Ames Lowa Housing, que consta de características numéricas y categóricas, y cuyo objetivo es el precio de venta de las viviendas."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:59
msgid "Load Ames Housing dataset"
msgstr "Cargar conjunto de datos Ames Housing"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:60
msgid "First, we load the ames housing data as a pandas dataframe. The features are either categorical or numerical:"
msgstr "En primer lugar, cargamos los datos de Ames Housing como un dataframe de Pandas. Las características son categóricas o numéricas:"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:84
msgid "Out:"
msgstr "Out:"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:101
msgid "Gradient boosting estimator with dropped categorical features"
msgstr "Estimador de potenciación de gradiente con características categóricas eliminadas"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:102
msgid "As a baseline, we create an estimator where the categorical features are dropped:"
msgstr "Como línea de base, creamos un estimador en el que se eliminan las características categóricas:"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:132
msgid "Gradient boosting estimator with one-hot encoding"
msgstr "Estimador de potenciación de gradiente con codificación one-hot"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:133
msgid "Next, we create a pipeline that will one-hot encode the categorical features and let the rest of the numerical data to passthrough:"
msgstr "A continuación, creamos un pipeline que codificará las características categóricas con un one-hot y dejará pasar el resto de los datos numéricos:"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:161
msgid "Gradient boosting estimator with ordinal encoding"
msgstr "Estimador de potenciación de gradiente (gradient boosting) con codificación one-hot"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:162
msgid "Next, we create a pipeline that will treat categorical features as if they were ordered quantities, i.e. the categories will be encoded as 0, 1, 2, etc., and treated as continuous features."
msgstr "A continuación, creamos un pipeline que tratará las características categóricas como si fueran cantidades ordenadas, es decir, las categorías se codificarán como 0, 1, 2, etc., y se tratarán como características continuas."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:192
msgid "Gradient boosting estimator with native categorical support"
msgstr "Estimador de potenciación de gradiente con soporte categórico nativo"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:193
msgid "We now create a :class:`~ensemble.HistGradientBoostingRegressor` estimator that will natively handle categorical features. This estimator will not treat categorical features as ordered quantities."
msgstr "Ahora creamos un estimador :class:`~ensemble.HistGradientBoostingRegressor` que manejará de forma nativa las características categóricas. Este estimador no tratará las características categóricas como cantidades ordenadas."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:197
msgid "Since the :class:`~ensemble.HistGradientBoostingRegressor` requires category values to be encoded in `[0, n_unique_categories - 1]`, we still rely on an :class:`~preprocessing.OrdinalEncoder` to pre-process the data."
msgstr "Dado que el :class:`~ensemble.HistGradientBoostingRegressor` requiere que los valores de las categorías se codifiquen en `[0, n_unique_categories - 1]`, seguimos dependiendo de un :class:`~preprocessing.OrdinalEncoder` para preprocesar los datos."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:201
msgid "The main difference between this pipeline and the previous one is that in this one, we let the :class:`~ensemble.HistGradientBoostingRegressor` know which features are categorical."
msgstr "La principal diferencia entre este pipeline y el anterior es que en éste, dejamos que el :class:`~ensemble.HistGradientBoostingRegressor` sepa qué características son categóricas."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:231
msgid "Model comparison"
msgstr "Comparación de modelos"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:232
msgid "Finally, we evaluate the models using cross validation. Here we compare the models performance in terms of :func:`~metrics.mean_absolute_percentage_error` and fit times."
msgstr "Por último, evaluamos los modelos mediante validación cruzada. Aquí comparamos el rendimiento de los modelos en términos de :func:`~metrics.mean_absolute_percentage_error` y tiempos de ajuste."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:286
msgid "We see that the model with one-hot-encoded data is by far the slowest. This is to be expected, since one-hot-encoding creates one additional feature per category value (for each categorical feature), and thus more split points need to be considered during fitting. In theory, we expect the native handling of categorical features to be slightly slower than treating categories as ordered quantities ('Ordinal'), since native handling requires :ref:`sorting categories <categorical_support_gbdt>`. Fitting times should however be close when the number of categories is small, and this may not always be reflected in practice."
msgstr "Vemos que el modelo con datos codificados one-hot es, con mucho, el más lento. Esto es de esperar, ya que la codificación one-hot crea una característica adicional por cada valor de categoría (para cada característica categórica), y por lo tanto hay que considerar más puntos de división durante el ajuste. En teoría, esperamos que el manejo nativo de las características categóricas sea ligeramente más lento que el tratamiento de las categorías como cantidades ordenadas ('Ordinal'), ya que el manejo nativo requiere :ref:`sorting categories <categorical_support_gbdt>`. Sin embargo, los tiempos de ajuste deberían ser cercanos cuando el número de categorías es pequeño, y esto puede no reflejarse siempre en la práctica."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:296
msgid "In terms of prediction performance, dropping the categorical features leads to poorer performance. The three models that use categorical features have comparable error rates, with a slight edge for the native handling."
msgstr "En cuanto al rendimiento de la predicción, la supresión de las características categóricas da lugar a un rendimiento inferior. Los tres modelos que utilizan características categóricas tienen tasas de error comparables, con una ligera ventaja para el tratamiento nativo."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:303
msgid "Limitting the number of splits"
msgstr "Limitar el número de divisiones (splits)"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:305
msgid "In general, one can expect poorer predictions from one-hot-encoded data, especially when the tree depths or the number of nodes are limited: with one-hot-encoded data, one needs more split points, i.e. more depth, in order to recover an equivalent split that could be obtained in one single split point with native handling."
msgstr "En general, cabe esperar predicciones más pobres a partir de los datos codificados one-hot, especialmente cuando la profundidad del árbol o el número de nodos son limitados: con los datos codificados con un solo punto, se necesitan más puntos de división, es decir, más profundidad, para recuperar una división equivalente a la que podría obtenerse en un solo punto de división con la manipulación nativa."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:311
msgid "This is also true when categories are treated as ordinal quantities: if categories are `A..F` and the best split is `ACF - BDE` the one-hot-encoder model will need 3 split points (one per category in the left node), and the ordinal non-native model will need 4 splits: 1 split to isolate `A`, 1 split to isolate `F`, and 2 splits to isolate `C` from `BCDE`."
msgstr "Esto también es cierto cuando las categorías se tratan como cantidades ordinales: si las categorías son `A..F` y la mejor división es `ACF - BDE`, el modelo de codificador one-hot necesitará 3 puntos de división (uno por categoría en el nodo izquierdo), y el modelo ordinal no nativo necesitará 4 divisiones: 1 división para aislar `A`, 1 división para aislar `F` y 2 divisiones para aislar `C` de `BCDE`."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:317
msgid "How strongly the models' performances differ in practice will depend on the dataset and on the flexibility of the trees."
msgstr "La diferencia de rendimiento de los modelos en la práctica dependerá del conjunto de datos y de la flexibilidad de los árboles."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:320
msgid "To see this, let us re-run the same analysis with under-fitting models where we artificially limit the total number of splits by both limitting the number of trees and the depth of each tree."
msgstr "Para ver esto, volvamos a realizar el mismo análisis con modelos de subajuste en los que limitamos artificialmente el número total de divisiones limitando tanto el número de árboles como la profundidad de cada uno de ellos."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:355
msgid "The results for these under-fitting models confirm our previous intuition: the native category handling strategy performs the best when the splitting budget is constrained. The two other strategies (one-hot encoding and treating categories as ordinal values) lead to error values comparable to the baseline model that just dropped the categorical features altogether."
msgstr "Los resultados de estos modelos de subajuste confirman nuestra intuición anterior: la estrategia de tratamiento de las categorías nativas es la que mejor funciona cuando el presupuesto de división es limitado. Las otras dos estrategias (codificación one-hot y tratamiento de las categorías como valores ordinales) conducen a valores de error comparables a los del modelo de referencia que simplemente elimina las características categóricas."

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:364
msgid "**Total running time of the script:** ( 0 minutes  16.601 seconds)"
msgstr "**Tiempo total de ejecución del script:** (0 minutos 16.601 segundos)"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:386
msgid ":download:`Download Python source code: plot_gradient_boosting_categorical.py <plot_gradient_boosting_categorical.py>`"
msgstr ":download:`Descarga el código fuente de Python: plot_gradient_boosting_categorical.py <plot_gradient_boosting_categorical.py>`"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:392
msgid ":download:`Download Jupyter notebook: plot_gradient_boosting_categorical.ipynb <plot_gradient_boosting_categorical.ipynb>`"
msgstr ":download:`Descarga el cuaderno Jupyter: plot_gradient_boosting_categorical.ipynb <plot_gradient_boosting_categorical.ipynb>`"

#: ../auto_examples/ensemble/plot_gradient_boosting_categorical.rst:399
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr "`Galería generada por Sphinx-Gallery <https://sphinx-gallery.github.io>`_"

#~ msgid "**Total running time of the script:** ( 0 minutes  3.319 seconds)"
#~ msgstr ""

