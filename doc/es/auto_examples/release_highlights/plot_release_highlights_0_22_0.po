msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: 2021-07-20 19:06\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/auto_examples/release_highlights/plot_release_highlights_0_22_0.po\n"
"X-Crowdin-File-ID: 4496\n"
"Language: es_ES\n"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:13
msgid "Click :ref:`here <sphx_glr_download_auto_examples_release_highlights_plot_release_highlights_0_22_0.py>` to download the full example code or to run this example in your browser via Binder"
msgstr "Haz clic :ref:`aquí <sphx_glr_download_auto_examples_release_highlights_plot_release_highlights_0_22_0.py>` para descargar el código de ejemplo completo o para ejecutar este ejemplo en tu navegador a través de Binder"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:23
msgid "Release Highlights for scikit-learn 0.22"
msgstr "Aspectos Destacados de scikit-learn 0.22"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:27
msgid "We are pleased to announce the release of scikit-learn 0.22, which comes with many bug fixes and new features! We detail below a few of the major features of this release. For an exhaustive list of all the changes, please refer to the :ref:`release notes <changes_0_22>`."
msgstr "¡Nos complace anunciar el lanzamiento de scikit-learn 0.22, que viene con muchas correcciones de errores y nuevas características¡. A continuación detallamos algunas de las principales características de esta versión. Para una lista exhaustiva de todos los cambios, por favor consulta la :ref:`nota de lanzamiento <changes_0_22>`."

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:32
msgid "To install the latest version (with pip)::"
msgstr "Para instalar la última versión (con pip)::"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:36
msgid "or with conda::"
msgstr "o con conda::"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:43
msgid "New plotting API"
msgstr "Nueva API plotting (de graficación)"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:45
msgid "A new plotting API is available for creating visualizations. This new API allows for quickly adjusting the visuals of a plot without involving any recomputation. It is also possible to add different plots to the same figure. The following example illustrates :class:`~metrics.plot_roc_curve`, but other plots utilities are supported like :class:`~inspection.plot_partial_dependence`, :class:`~metrics.plot_precision_recall_curve`, and :class:`~metrics.plot_confusion_matrix`. Read more about this new API in the :ref:`User Guide <visualizations>`."
msgstr "Una nueva API plotting está disponible para crear visualizaciones. Esta nueva API permite ajustar rápidamente el aspecto visual de un gráfico sin necesidad de volver a calcular. También es posible añadir diferentes trazados a la misma figura. El siguiente ejemplo ilustra :class:`~metrics.plot_roc_curve`, pero se admiten otras utilidades de graficación como :class:`~inspection.plot_partial_dependence`, :class:`~metrics.plot_precision_recall_curve`, y :class:`~metrics.plot_confusion_matrix`. Lee más sobre esta nueva API en el :ref:`Manual de Usuario <visualizations>`."

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:95
msgid "Stacking Classifier and Regressor"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:96
msgid ":class:`~ensemble.StackingClassifier` and :class:`~ensemble.StackingRegressor` allow you to have a stack of estimators with a final classifier or a regressor. Stacked generalization consists in stacking the output of individual estimators and use a classifier to compute the final prediction. Stacking allows to use the strength of each individual estimator by using their output as input of a final estimator. Base estimators are fitted on the full ``X`` while the final estimator is trained using cross-validated predictions of the base estimators using ``cross_val_predict``."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:108
msgid "Read more in the :ref:`User Guide <stacking>`."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:143
#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:228
#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:316
#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:358
#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:391
#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:476
msgid "Out:"
msgstr "Out:"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:155
msgid "Permutation-based feature importance"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:157
msgid "The :func:`inspection.permutation_importance` can be used to get an estimate of the importance of each feature, for any fitted estimator:"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:201
msgid "Native support for missing values for gradient boosting"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:203
msgid "The :class:`ensemble.HistGradientBoostingClassifier` and :class:`ensemble.HistGradientBoostingRegressor` now have native support for missing values (NaNs). This means that there is no need for imputing data when training or predicting."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:240
msgid "Precomputed sparse nearest neighbors graph"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:241
msgid "Most estimators based on nearest neighbors graphs now accept precomputed sparse graphs as input, to reuse the same graph for multiple estimator fits. To use this feature in a pipeline, one can use the `memory` parameter, along with one of the two new transformers, :class:`neighbors.KNeighborsTransformer` and :class:`neighbors.RadiusNeighborsTransformer`. The precomputation can also be performed by custom estimators to use alternative implementations, such as approximate nearest neighbors methods. See more details in the :ref:`User Guide <neighbors_transformer>`."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:285
msgid "KNN Based Imputation"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:286
msgid "We now support imputation for completing missing values using k-Nearest Neighbors."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:289
msgid "Each sample's missing values are imputed using the mean value from ``n_neighbors`` nearest neighbors found in the training set. Two samples are close if the features that neither is missing are close. By default, a euclidean distance metric that supports missing values, :func:`~metrics.nan_euclidean_distances`, is used to find the nearest neighbors."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:297
msgid "Read more in the :ref:`User Guide <knnimpute>`."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:331
msgid "Tree pruning"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:333
msgid "It is now possible to prune most tree-based estimators once the trees are built. The pruning is based on minimal cost-complexity. Read more in the :ref:`User Guide <minimal_cost_complexity_pruning>` for details."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:371
msgid "Retrieve dataframes from OpenML"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:372
msgid ":func:`datasets.fetch_openml` can now return pandas dataframe and thus properly handle datasets with heterogeneous data:"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:408
msgid "Checking scikit-learn compatibility of an estimator"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:409
msgid "Developers can check the compatibility of their scikit-learn compatible estimators using :func:`~utils.estimator_checks.check_estimator`. For instance, the ``check_estimator(LinearSVC())`` passes."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:413
msgid "We now provide a ``pytest`` specific decorator which allows ``pytest`` to run all checks independently and report the checks that are failing."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:418
msgid "..note::"
msgstr "..nota::"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:417
msgid "This entry was slightly updated in version 0.24, where passing classes isn't supported anymore: pass instances instead."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:444
msgid "ROC AUC now supports multiclass classification"
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:445
msgid "The :func:`roc_auc_score` function can also be used in multi-class classification. Two averaging strategies are currently supported: the one-vs-one algorithm computes the average of the pairwise ROC AUC scores, and the one-vs-rest algorithm computes the average of the ROC AUC scores for each class against all other classes. In both cases, the multiclass ROC AUC scores are computed from the probability estimates that a sample belongs to a particular class according to the model. The OvO and OvR algorithms support weighting uniformly (``average='macro'``) and weighting by the prevalence (``average='weighted'``)."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:455
msgid "Read more in the :ref:`User Guide <roc_metrics>`."
msgstr ""

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:488
msgid "**Total running time of the script:** ( 0 minutes  1.892 seconds)"
msgstr "**Tiempo total de ejecución del script:** (0 minutos 1.892 segundos)"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:510
msgid ":download:`Download Python source code: plot_release_highlights_0_22_0.py <plot_release_highlights_0_22_0.py>`"
msgstr ":download:`Descargar el código fuente de Python: plot_release_highlights_0_22_0.py <plot_release_highlights_0_22_0.py>`"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:516
msgid ":download:`Download Jupyter notebook: plot_release_highlights_0_22_0.ipynb <plot_release_highlights_0_22_0.ipynb>`"
msgstr ":download:`Descargar el cuaderno de Jupyter: plot_release_highlights_0_22_0.ipynb <plot_release_highlights_0_22_0.ipynb>`"

#: ../auto_examples/release_highlights/plot_release_highlights_0_22_0.rst:523
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr "`Galería generada por Sphinx-Gallery <https://sphinx-gallery.github.io>`_"

#~ msgid "**Total running time of the script:** ( 0 minutes  4.396 seconds)"
#~ msgstr ""

