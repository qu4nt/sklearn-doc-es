msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-05-25 19:37\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/glossary.po\n"
"X-Crowdin-File-ID: 4002\n"
"Language: es_ES\n"

#: ../glossary.rst:7
msgid "Glossary of Common Terms and API Elements"
msgstr "Glosario de Términos Comunes y Elementos de la API"

#: ../glossary.rst:9
msgid "This glossary hopes to definitively represent the tacit and explicit conventions applied in Scikit-learn and its API, while providing a reference for users and contributors. It aims to describe the concepts and either detail their corresponding API or link to other relevant parts of the documentation which do so. By linking to glossary entries from the API Reference and User Guide, we may minimize redundancy and inconsistency."
msgstr "Este glosario espera representar definitivamente las convenciones tácitas y explícitas aplicadas en scikit-learn y su API, proporcionando al mismo tiempo una referencia para los usuarios y colaboradores. Su objetivo es describir los conceptos y detallar su correspondiente API o bien enlazar con otras partes relevantes de la documentación que lo hagan. Al enlazar con las entradas de glosario de la Referencia de la API y la Guía de Usuario, podemos minimizar la redundancia y la inconsistencia."

#: ../glossary.rst:16
msgid "We begin by listing general concepts (and any that didn't fit elsewhere), but more specific sets of related terms are listed below: :ref:`glossary_estimator_types`, :ref:`glossary_target_types`, :ref:`glossary_methods`, :ref:`glossary_parameters`, :ref:`glossary_attributes`, :ref:`glossary_sample_props`."
msgstr "Empezamos por listar los conceptos generales (y cualquiera que no encajaba en otra parte), pero conjuntos más específicos de términos relacionados se listan a continuación: :ref:`glossary_estimator_types`, :ref:`glossary_target_types`, :ref:`glossary_methods`, :ref:`glossary_parameters`, :ref:`glossary_attributes`, :ref:`glossary_sample_props`."

#: ../glossary.rst:23
msgid "General Concepts"
msgstr "Conceptos Generales"

#: ../glossary.rst:26
msgid "1d"
msgstr "1D"

#: ../glossary.rst:27
msgid "1d array"
msgstr "Arreglo 1D"

#: ../glossary.rst:29
msgid "One-dimensional array. A NumPy array whose ``.shape`` has length 1. A vector."
msgstr "Un arreglo unidimensional. Un arreglo NumPy cuyo ``.shape`` tiene longitud 1. Un vector."

#: ../glossary.rst:31
msgid "2d"
msgstr "2D"

#: ../glossary.rst:32
msgid "2d array"
msgstr "Arreglo 2D"

#: ../glossary.rst:34
msgid "Two-dimensional array. A NumPy array whose ``.shape`` has length 2. Often represents a matrix."
msgstr "Un arreglo bidimensional. Un arreglo NumPy cuyo ``.shape`` tiene longitud 2. A menudo representa una matriz."

#: ../glossary.rst:36
msgid "API"
msgstr "API"

#: ../glossary.rst:38
msgid "Refers to both the *specific* interfaces for estimators implemented in Scikit-learn and the *generalized* conventions across types of estimators as described in this glossary and :ref:`overviewed in the contributor documentation <api_overview>`."
msgstr "Se refiere tanto a las interfaces *específicas* para los estimadores implementados en scikit-learn como a las convenciones *generalizadas* entre los tipos de estimadores, tal como se describe en este glosario y :ref:`se resume en la documentación de los colaboradores <api_overview>`."

#: ../glossary.rst:43
msgid "The specific interfaces that constitute Scikit-learn's public API are largely documented in :ref:`api_ref`. However, we less formally consider anything as public API if none of the identifiers required to access it begins with ``_``.  We generally try to maintain :term:`backwards compatibility` for all objects in the public API."
msgstr "Las interfaces específicas que constituyen la API pública de scikit-learn están ampliamente documentadas en :ref:`api_ref`. Sin embargo, consideramos menos formalmente cualquier cosa como API pública si ninguno de los identificadores requeridos para acceder a ella comienza con ``_``.  En general, tratamos de mantener :term:`compatibilidad con versiones anteriores` para todos los objetos en la API pública."

#: ../glossary.rst:49
msgid "Private API, including functions, modules and methods beginning ``_`` are not assured to be stable."
msgstr "La API privada, incluyendo funciones, módulos y métodos que empiezan por ``_`` no tienen garantizada su estabilidad."

#: ../glossary.rst:51
msgid "array-like"
msgstr "array-like"

#: ../glossary.rst:53
msgid "The most common data format for *input* to Scikit-learn estimators and functions, array-like is any type object for which :func:`numpy.asarray` will produce an array of appropriate shape (usually 1 or 2-dimensional) of appropriate dtype (usually numeric)."
msgstr "El formato de datos más común de *entrada* a los estimadores y funciones de Scikit-learn, array-like es cualquier tipo objeto para el que :func:`numpy.asarray` producirá un arreglo de forma apropiada (normalmente de 1 o 2 dimensiones) de dtype apropiado (normalmente numérico)."

#: ../glossary.rst:58
msgid "This includes:"
msgstr "Esto incluye:"

#: ../glossary.rst:60
msgid "a numpy array"
msgstr "un arreglo numpy"

#: ../glossary.rst:61
msgid "a list of numbers"
msgstr "una lista de números"

#: ../glossary.rst:62
msgid "a list of length-k lists of numbers for some fixed length k"
msgstr "una lista de listas de números de longitud-k para alguna longitud fija k"

#: ../glossary.rst:63
msgid "a :class:`pandas.DataFrame` with all columns numeric"
msgstr "una :class:`pandas.DataFrame` con todas las columnas numéricas"

#: ../glossary.rst:64
msgid "a numeric :class:`pandas.Series`"
msgstr "una :class:`pandas.Series` numérica"

#: ../glossary.rst:66
msgid "It excludes:"
msgstr "Excluye:"

#: ../glossary.rst:68
msgid "a :term:`sparse matrix`"
msgstr "una :term:`matriz dispersa`"

#: ../glossary.rst:69
msgid "an iterator"
msgstr "un iterador"

#: ../glossary.rst:70
msgid "a generator"
msgstr "un generador"

#: ../glossary.rst:72
msgid "Note that *output* from scikit-learn estimators and functions (e.g. predictions) should generally be arrays or sparse matrices, or lists thereof (as in multi-output :class:`tree.DecisionTreeClassifier`'s ``predict_proba``). An estimator where ``predict()`` returns a list or a `pandas.Series` is not valid."
msgstr "Tenga en cuenta que las *salidas* de los estimadores y funciones de scikit-learn (por ejemplo, las predicciones) deben ser generalmente arreglos o matrices dispersas, o listas de las mismas (como en ``predict_proba`` de la :class:`tree.DecisionTreeClassifier` de salida múltiple). Un estimador en el que ``predict()`` devuelve una lista o una ``pandas.Series`` no es válido."

#: ../glossary.rst:77
msgid "attribute"
msgstr "atributo"

#: ../glossary.rst:78
msgid "attributes"
msgstr "atributos"

#: ../glossary.rst:80
msgid "We mostly use attribute to refer to how model information is stored on an estimator during fitting.  Any public attribute stored on an estimator instance is required to begin with an alphabetic character and end in a single underscore if it is set in :term:`fit` or :term:`partial_fit`.  These are what is documented under an estimator's *Attributes* documentation.  The information stored in attributes is usually either: sufficient statistics used for prediction or transformation; :term:`transductive` outputs such as :term:`labels_` or :term:`embedding_`; or diagnostic data, such as :term:`feature_importances_`. Common attributes are listed :ref:`below <glossary_attributes>`."
msgstr "La mayoría de las veces utilizamos atributo para referirnos a cómo se almacena la información del modelo en un estimador durante el ajuste.  Cualquier atributo público almacenado en una instancia del estimador debe empezar con un carácter alfabético y terminar con un solo guión bajo si se establece en :term:`fit` o :term:`partial_fit`.  Esto es lo que se encuentra en la documentación *Atributos* de un estimador.  La información almacenada en los atributos suele ser: estadísticos suficientes utilizados para la predicción o la transformación; salidas :term:`transductivo`(as) como :term:`labels_` o :term:`embedding_`; o datos de diagnóstico, como :term:`feature_importances_`. Los atributos comunes se listan :ref:`a continuación <glossary_attributes>`."

#: ../glossary.rst:92
msgid "A public attribute may have the same name as a constructor :term:`parameter`, with a ``_`` appended.  This is used to store a validated or estimated version of the user's input. For example, :class:`decomposition.PCA` is constructed with an ``n_components`` parameter. From this, together with other parameters and the data, PCA estimates the attribute ``n_components_``."
msgstr "Un atributo público puede tener el mismo nombre que un :term:`parámetro` del constructor, con un ``_` añadido.  Se utiliza para almacenar una versión validada o estimada de la entrada del usuario. Por ejemplo, :class:`decomposition.PCA` se construye con un parámetro ``n_components``. A partir de esto, junto con otros parámetros y los datos, PCA estima el atributo ``n_componentes_``."

#: ../glossary.rst:99
msgid "Further private attributes used in prediction/transformation/etc. may also be set when fitting.  These begin with a single underscore and are not assured to be stable for public access."
msgstr "También pueden establecerse otros atributos privados utilizados en la predicción/transformación/etc. durante el ajuste.  Estos empiezan con un solo guión bajo y no se asegura que sean estables para el acceso público."

#: ../glossary.rst:103
msgid "A public attribute on an estimator instance that does not end in an underscore should be the stored, unmodified value of an ``__init__`` :term:`parameter` of the same name.  Because of this equivalence, these are documented under an estimator's *Parameters* documentation."
msgstr "Un atributo público en una instancia del estimador que no termine en un guión bajo debe ser el valor almacenado y no modificado de un :term:`parámetro` ``__init__``  del mismo nombre.  Debido a esta equivalencia, se agregan en la documentación de *Parámetros* de un estimador."

#: ../glossary.rst:107
msgid "backwards compatibility"
msgstr "compatibilidad con versiones anteriores"

#: ../glossary.rst:109
msgid "We generally try to maintain backward compatibility (i.e. interfaces and behaviors may be extended but not changed or removed) from release to release but this comes with some exceptions:"
msgstr "Por lo general, intentamos mantener la compatibilidad con versiones anteriores (es decir, las interfaces y los comportamientos pueden ampliarse, pero no modificarse ni eliminarse) de una versión a otra, pero esto tiene algunas excepciones:"

#: ../glossary.rst:115
msgid "Public API only"
msgstr "Solamente API pública"

#: ../glossary.rst:114
msgid "The behavior of objects accessed through private identifiers (those beginning ``_``) may be changed arbitrarily between versions."
msgstr "El comportamiento de los objetos a los que se accede a través de identificadores privados (los que empiezan por ``_``) puede cambiar arbitrariamente entre versiones."

#: ../glossary.rst:120
msgid "As documented"
msgstr "Como está documentado"

#: ../glossary.rst:118
msgid "We will generally assume that the users have adhered to the documented parameter types and ranges. If the documentation asks for a list and the user gives a tuple, we do not assure consistent behavior from version to version."
msgstr "Por lo general, asumiremos que los usuarios se han ceñido a los tipos y rangos de parámetros documentados. Si la documentación pide una lista y el usuario proporciona una tupla, no garantizamos un comportamiento consistente de una versión a otra."

#: ../glossary.rst:124
msgid "Deprecation"
msgstr "Obsolescencia"

#: ../glossary.rst:123
msgid "Behaviors may change following a :term:`deprecation` period (usually two releases long).  Warnings are issued using Python's :mod:`warnings` module."
msgstr "Los comportamientos pueden cambiar tras un periodo de  :term:`obsolescencia` (normalmente de dos versiones).  Las advertencias se emiten utilizando el módulo :mod:`warnings` de Python."

#: ../glossary.rst:128
msgid "Keyword arguments"
msgstr "Argumentos de palabras clave"

#: ../glossary.rst:127
msgid "We may sometimes assume that all optional parameters (other than X and y to :term:`fit` and similar methods) are passed as keyword arguments only and may be positionally reordered."
msgstr "A veces podemos suponer que todos los parámetros opcionales (que no sean X e y para :term:`fit` y métodos similares) se pasan sólo como argumentos de palabra clave y pueden ser reordenados posicionalmente."

#: ../glossary.rst:133
msgid "Bug fixes and enhancements"
msgstr "Corrección de errores y mejoras"

#: ../glossary.rst:131
msgid "Bug fixes and -- less often -- enhancements may change the behavior of estimators, including the predictions of an estimator trained on the same data and :term:`random_state`.  When this happens, we attempt to note it clearly in the changelog."
msgstr "Las correcciones de errores y -menos a menudo- las mejoras pueden cambiar el comportamiento de los estimadores, incluyendo las predicciones de un estimador entrenado con los mismos datos y :term:`random_state`.  Cuando esto ocurre, intentamos indicarlo claramente en el registro de cambios."

#: ../glossary.rst:139
msgid "Serialization"
msgstr "Serialización"

#: ../glossary.rst:136
msgid "We make no assurances that pickling an estimator in one version will allow it to be unpickled to an equivalent model in the subsequent version.  (For estimators in the sklearn package, we issue a warning when this unpickling is attempted, even if it may happen to work.)  See :ref:`persistence_limitations`."
msgstr "No aseguramos que el pickling de un estimador en una versión permita que sea unpickled a un modelo equivalente en la versión siguiente.  (En el caso de los estimadores del paquete sklearn, emitimos una advertencia cuando se intenta realizar este unpickling, incluso si es posible que funcione). Ver :ref:`persistence_limitations`."

#: ../glossary.rst:145
msgid ":func:`utils.estimator_checks.check_estimator`"
msgstr ":func:`utils.estimator_checks.check_estimator`"

#: ../glossary.rst:142
msgid "We provide limited backwards compatibility assurances for the estimator checks: we may add extra requirements on estimators tested with this function, usually when these were informally assumed but not formally tested."
msgstr "Proporcionamos garantías limitadas de compatibilidad con versiones anteriores para las comprobaciones de los estimadores: podemos añadir requisitos adicionales a los estimadores probados con esta función, normalmente cuando éstos se asumían de manera informal pero no se probaban formalmente."

#: ../glossary.rst:147
msgid "Despite this informal contract with our users, the software is provided as is, as stated in the license.  When a release inadvertently introduces changes that are not backward compatible, these are known as software regressions."
msgstr "A pesar de este contrato informal con nuestros usuarios, el software se proporciona tal cual, tal como se indica en la licencia.  Cuando una versión introduce inadvertidamente cambios que no son compatibles con las versiones anteriores, estos se conocen como regresiones de software."

#: ../glossary.rst:151
msgid "callable"
msgstr "invocable"

#: ../glossary.rst:153
msgid "A function, class or an object which implements the ``__call__`` method; anything that returns True when the argument of `callable() <https://docs.python.org/3/library/functions.html#callable>`_."
msgstr "Una función, una clase o un objeto que implementa el método ``__call__``; cualquier cosa que devuelva True cuando sea el argumento de `callable() <https://docs.python.org/3/library/functions.html#callable>`_."

#: ../glossary.rst:156
msgid "categorical feature"
msgstr "característica categórica"

#: ../glossary.rst:158
msgid "A categorical or nominal :term:`feature` is one that has a finite set of discrete values across the population of data. These are commonly represented as columns of integers or strings. Strings will be rejected by most scikit-learn estimators, and integers will be treated as ordinal or count-valued. For the use with most estimators, categorical variables should be one-hot encoded. Notable exceptions include tree-based models such as random forests and gradient boosting models that often work better and faster with integer-coded categorical variables. :class:`~sklearn.preprocessing.OrdinalEncoder` helps encoding string-valued categorical features as ordinal integers, and :class:`~sklearn.preprocessing.OneHotEncoder` can be used to one-hot encode categorical features. See also :ref:`preprocessing_categorical_features` and the `categorical-encoding <https://contrib.scikit-learn.org/categorical-encoding>`_ package for tools related to encoding categorical features."
msgstr "Una :term:`característica` categórica o nominal es aquella que tiene un conjunto finito de valores discretos en la población de datos. Normalmente se representan como columnas de enteros o cadenas. Las cadenas serán rechazadas por la mayoría de los estimadores de scikit-learn, y los enteros serán tratados como ordinales o valores de conteo. Para el uso con la mayoría de los estimadores, las variables categóricas deben ser codificadas one-hot. Algunas excepciones notables son los modelos basados en árboles, como los modelos de bosques aleatorios y de potenciación del gradiente, que suelen funcionar mejor y más rápido con variables categóricas codificadas con números enteros. :class:`~sklearn.preprocessing.OrdinalEncoder` ayuda a codificar las características categóricas con valores de cadena como enteros ordinales, y :class:`~sklearn.preprocessing.OneHotEncoder` puede utilizarse para codificar one-hot las características categóricas. Véase también :ref:`preprocessing_categorical_features` y el paquete `categorical-encoding <https://contrib.scikit-learn.org/categorical-encoding>`_ para las herramientas relacionadas con la codificación de características categóricas."

#: ../glossary.rst:176
msgid "clone"
msgstr "clonar"

#: ../glossary.rst:177
msgid "cloned"
msgstr "clonado"

#: ../glossary.rst:179
msgid "To copy an :term:`estimator instance` and create a new one with identical :term:`parameters`, but without any fitted :term:`attributes`, using :func:`~sklearn.base.clone`."
msgstr "Para copiar una :term:`instancia del estimador` y crear una nueva con :term:`parámetros` idénticos, pero sin :term:`atributos` ajustados, utilizando :func:`~sklearn.base.clone`."

#: ../glossary.rst:183
msgid "When ``fit`` is called, a :term:`meta-estimator` usually clones a wrapped estimator instance before fitting the cloned instance. (Exceptions, for legacy reasons, include :class:`~pipeline.Pipeline` and :class:`~pipeline.FeatureUnion`.)"
msgstr "Cuando se llama a ``fit``, un :term:`meta-estimator` normalmente clona una instancia de estimador wrapped antes de ajustar la instancia clonada. (Las excepciones, por razones de legado, incluyen :class:`~pipeline.Pipeline` y :class:`~pipeline.FeatureUnion`.)"

#: ../glossary.rst:189
msgid "If the estimator's `random_state` parameter is an integer (or if the estimator doesn't have a `random_state` parameter), an *exact clone* is returned: the clone and the original estimator will give the exact same results. Otherwise, *statistical clone* is returned: the clone might yield different results from the original estimator. More details can be found in :ref:`randomness`."
msgstr "Si el parámetro `random_state` del estimador es un entero (o si el estimador no tiene un parámetro `random_state`), se devuelve un *clon exacto*: el clon y el estimador original darán exactamente los mismos resultados. En caso contrario, se devuelve un *clon estadístico*: el clon puede dar resultados diferentes a los del estimador original. Puedes encontrar más detalles en :ref:`randomness`."

#: ../glossary.rst:195
msgid "common tests"
msgstr "tests comunes"

#: ../glossary.rst:197
msgid "This refers to the tests run on almost every estimator class in Scikit-learn to check they comply with basic API conventions.  They are available for external use through :func:`utils.estimator_checks.check_estimator`, with most of the implementation in ``sklearn/utils/estimator_checks.py``."
msgstr "Esto se refiere a las pruebas que se ejecutan en casi todas las clases de estimadores en scikit-learn para comprobar que cumplen con las convenciones básicas de la API.  Están disponibles para uso externo a través de :func:`utils.estimator_checks.check_estimator`, con la mayor parte de la implementación en ``sklearn/utils/estimator_checks.py``."

#: ../glossary.rst:203
msgid "Note: Some exceptions to the common testing regime are currently hard-coded into the library, but we hope to replace this by marking exceptional behaviours on the estimator using semantic :term:`estimator tags`."
msgstr "Nota: Algunas excepciones al régimen común de pruebas son actualmente de codificación fija en la biblioteca, pero esperamos reemplazar esto marcando comportamientos excepcionales en el estimador usando :term:`etiquetas del estimador` (semánticas)."

#: ../glossary.rst:207
msgid "deprecation"
msgstr "obsolescencia"

#: ../glossary.rst:209
msgid "We use deprecation to slowly violate our :term:`backwards compatibility` assurances, usually to to:"
msgstr "Usamos la obsolescencia para violar lentamente nuestras garantías de :term:`compatibilidad con versiones anteriores`, generalmente para:"

#: ../glossary.rst:212
msgid "change the default value of a parameter; or"
msgstr "cambiar el valor por defecto de un parámetro; o"

#: ../glossary.rst:213
msgid "remove a parameter, attribute, method, class, etc."
msgstr "eliminar un parámetro, atributo, método, clase, etc."

#: ../glossary.rst:215
msgid "We will ordinarily issue a warning when a deprecated element is used, although there may be limitations to this.  For instance, we will raise a warning when someone sets a parameter that has been deprecated, but may not when they access that parameter's attribute on the estimator instance."
msgstr "Normalmente emitiremos una advertencia cuando se utilice un elemento obsoleto aunque puede haber limitaciones en este sentido.  Por ejemplo, emitiremos una advertencia cuando alguien establezca un parámetro que haya sido obsoleto, pero puede que no lo hagamos cuando accedan al atributo de ese parámetro en la instancia del estimador."

#: ../glossary.rst:221
msgid "See the :ref:`Contributors' Guide <contributing_deprecation>`."
msgstr "Ver la :ref:`Guía de Colaboradores <contributing_deprecation>`."

#: ../glossary.rst:222
msgid "dimensionality"
msgstr "dimensionalidad"

#: ../glossary.rst:224
msgid "May be used to refer to the number of :term:`features` (i.e. :term:`n_features`), or columns in a 2d feature matrix. Dimensions are, however, also used to refer to the length of a NumPy array's shape, distinguishing a 1d array from a 2d matrix."
msgstr "Puede usarse para referirse al número de :term:`características` (es decir, :term:`n_features`), o de columnas en una matriz de características 2D. Sin embargo, las dimensiones también se utilizan para referirse a la longitud de la forma de un arreglo NumPy, distinguiendo un arreglo 1D de una matriz 2D."

#: ../glossary.rst:228
msgid "docstring"
msgstr "cadena de documentación"

#: ../glossary.rst:230
msgid "The embedded documentation for a module, class, function, etc., usually in code as a string at the beginning of the object's definition, and accessible as the object's ``__doc__`` attribute."
msgstr "La documentación incrustada para un módulo, clase, función, etc., normalmente en el código como una cadena al principio de la definición del objeto, y accesible como el atributo ``__doc__`` del objeto."

#: ../glossary.rst:234
msgid "We try to adhere to `PEP257 <https://www.python.org/dev/peps/pep-0257/>`_, and follow `NumpyDoc conventions <https://numpydoc.readthedocs.io/en/latest/format.html>`_."
msgstr "Intentamos adherirnos a la `PEP257 <https://www.python.org/dev/peps/pep-0257/>`_, y seguir `las convenciones de NumpyDoc <https://numpydoc.readthedocs.io/en/latest/format.html>`_."

#: ../glossary.rst:237
msgid "double underscore"
msgstr "doble guión bajo"

#: ../glossary.rst:238
msgid "double underscore notation"
msgstr "notación de doble guión bajo"

#: ../glossary.rst:240
msgid "When specifying parameter names for nested estimators, ``__`` may be used to separate between parent and child in some contexts. The most common use is when setting parameters through a meta-estimator with :term:`set_params` and hence in specifying a search grid in :ref:`parameter search <grid_search>`. See :term:`parameter`. It is also used in :meth:`pipeline.Pipeline.fit` for passing :term:`sample properties` to the ``fit`` methods of estimators in the pipeline."
msgstr "Cuando se especifican los nombres de los parámetros para los estimadores anidados, se puede utilizar ``__`` para separar entre padre e hijo en algunos contextos. El uso más común es cuando se establecen parámetros a través de un meta estimador con :term:`set_params` y por lo tanto en la especificación de una cuadrícula de búsqueda en :ref:`la búsqueda de parámetros <grid_search>`. Ver :term:`parámetro`. También se utiliza en :meth:`pipeline.Pipeline.fit` para pasar :term:`propiedades de la muestra` a los métodos ``fit`` de los estimadores en el pipeline."

#: ../glossary.rst:248
msgid "dtype"
msgstr "dtype"

#: ../glossary.rst:249
msgid "data type"
msgstr "tipo de dato"

#: ../glossary.rst:251
msgid "NumPy arrays assume a homogeneous data type throughout, available in the ``.dtype`` attribute of an array (or sparse matrix). We generally assume simple data types for scikit-learn data: float or integer. We may support object or string data types for arrays before encoding or vectorizing.  Our estimators do not work with struct arrays, for instance."
msgstr "Los arreglos de NumPy asumen un tipo de datos homogéneo en todo momento, disponible en el atributo ``.dtype`` de un arreglo (o matriz dispersa). Generalmente asumimos tipos de datos simples para los datos de scikit-learn: de punto flotante (float) o entero. Podemos admitir tipos de datos de objeto o de cadena para los arreglos antes de codificarlos o vectorizarlos.  Nuestros estimadores no funcionan con arreglos struct, por ejemplo."

#: ../glossary.rst:258
msgid "Our documentation can sometimes give information about the dtype precision, e.g. `np.int32`, `np.int64`, etc. When the precision is provided, it refers to the NumPy dtype. If an arbitrary precision is used, the documentation will refer to dtype `integer` or `floating`. Note that in this case, the precision can be platform dependent. The `numeric` dtype refers to accepting both `integer` and `floating`."
msgstr "Nuestra documentación puede dar a veces información sobre la precisión del dtype, por ejemplo `np.int32`, `np.int64`, etc. Cuando se proporciona la precisión, se refiere al dtype de NumPy. Si se utiliza una precisión arbitraria, la documentación se referirá al dtype `integer` o `floating`. Ten en cuenta que en este caso, la precisión puede ser dependiente de la plataforma. El dtype `numeric` se refiere a aceptar tanto `integer` como `floating`."

#: ../glossary.rst:265
msgid "TODO: Mention efficiency and precision issues; casting policy."
msgstr "TODO: Mencionar incidencias de eficiencia y precisión; política de reparto."

#: ../glossary.rst:266
msgid "duck typing"
msgstr "duck typing"

#: ../glossary.rst:268
msgid "We try to apply `duck typing <https://en.wikipedia.org/wiki/Duck_typing>`_ to determine how to handle some input values (e.g. checking whether a given estimator is a classifier).  That is, we avoid using ``isinstance`` where possible, and rely on the presence or absence of attributes to determine an object's behaviour.  Some nuance is required when following this approach:"
msgstr "Intentamos aplicar `duck typing <https://en.wikipedia.org/wiki/Duck_typing>`_ para determinar cómo manejar algunos valores de entrada (por ejemplo, comprobar si un estimador dado es un clasificador).  Es decir, evitamos utilizar ``isinstance`` siempre que sea posible, y nos basamos en la presencia o ausencia de atributos para determinar el comportamiento de un objeto.  Es necesario hacer algunas matizaciones cuando se sigue este enfoque:"

#: ../glossary.rst:276
msgid "For some estimators, an attribute may only be available once it is :term:`fitted`.  For instance, we cannot a priori determine if :term:`predict_proba` is available in a grid search where the grid includes alternating between a probabilistic and a non-probabilistic predictor in the final step of the pipeline.  In the following, we can only determine if ``clf`` is probabilistic after fitting it on some data::"
msgstr "Para algunos estimadores, un atributo sólo puede estar disponible una vez que es :term:`ajustado`.  Por ejemplo, no podemos determinar a priori si :term:`predict_proba` está disponible en una búsqueda exhaustiva en la que la cuadrícula incluye la alternancia entre un predictor probabilístico y uno no probabilístico en el último paso del pipeline.  A continuación, sólo podemos determinar si ``clf`` es probabilístico después de ajustarlo a algunos datos::"

#: ../glossary.rst:289
msgid "This means that we can only check for duck-typed attributes after fitting, and that we must be careful to make :term:`meta-estimators` only present attributes according to the state of the underlying estimator after fitting."
msgstr "Esto significa que sólo podemos comprobar los atributos duck-typed después del ajuste, y que debemos tener cuidado para que los :term:`meta estimadores` sólo presenten atributos según el estado del estimador subyacente después del ajuste."

#: ../glossary.rst:294
msgid "Checking if an attribute is present (using ``hasattr``) is in general just as expensive as getting the attribute (``getattr`` or dot notation).  In some cases, getting the attribute may indeed be expensive (e.g. for some implementations of :term:`feature_importances_`, which may suggest this is an API design flaw).  So code which does ``hasattr`` followed by ``getattr`` should be avoided; ``getattr`` within a try-except block is preferred."
msgstr "Comprobar si un atributo está presente (usando ``hasattr``) es en general tan costoso como obtener el atributo (``getattr`` o notación de puntos).  En algunos casos, obtener el atributo puede ser realmente costoso (por ejemplo, para algunas implementaciones de :term:`feature_importances_`, lo que puede sugerir que se trata de un defecto de diseño de la API).  Así que el código que ejecuta ``hasattr`` seguido de ``getattr`` debe ser evitado; ``getattr`` dentro de un bloque try-except es preferible."

#: ../glossary.rst:302
msgid "For determining some aspects of an estimator's expectations or support for some feature, we use :term:`estimator tags` instead of duck typing."
msgstr "Para determinar algunos aspectos de las expectativas de un estimador o el soporte para alguna característica, utilizamos :term:`etiquetas del estimador` en lugar de duck typing."

#: ../glossary.rst:305
msgid "early stopping"
msgstr "parada anticipada"

#: ../glossary.rst:307
msgid "This consists in stopping an iterative optimization method before the convergence of the training loss, to avoid over-fitting. This is generally done by monitoring the generalization score on a validation set. When available, it is activated through the parameter ``early_stopping`` or by setting a positive :term:`n_iter_no_change`."
msgstr "Consiste en detener un método de optimización iterativo antes de la convergencia de la pérdida asociada al entrenamiento, para evitar el sobreajuste. Por lo general, esto se hace controlando la puntuación de generalización en un conjunto de validación. Cuando está disponible, se activa a través del parámetro ``early_stopping`` o estableciendo un :term:`n_iter_no_change` positivo."

#: ../glossary.rst:312
msgid "estimator instance"
msgstr "instancia del estimador"

#: ../glossary.rst:314
msgid "We sometimes use this terminology to distinguish an :term:`estimator` class from a constructed instance. For example, in the following, ``cls`` is an estimator class, while ``est1`` and ``est2`` are instances::"
msgstr "A veces utilizamos esta terminología para distinguir una clase :term:`estimador` de una instancia construida. Por ejemplo, en lo siguiente, ``cls`` es una clase estimador, mientras que ``est1`` y ``est2`` son instancias::"

#: ../glossary.rst:322
msgid "examples"
msgstr "ejemplos"

#: ../glossary.rst:324
msgid "We try to give examples of basic usage for most functions and classes in the API:"
msgstr "Intentamos dar ejemplos de uso básico para la mayoría de las funciones y clases de la API:"

#: ../glossary.rst:327
msgid "as doctests in their docstrings (i.e. within the ``sklearn/`` library code itself)."
msgstr "como doctests en sus cadenas de documentación (es decir, dentro del propio código de la biblioteca ``sklearn/``)."

#: ../glossary.rst:329
msgid "as examples in the :ref:`example gallery <general_examples>` rendered (using `sphinx-gallery <https://sphinx-gallery.readthedocs.io/>`_) from scripts in the ``examples/`` directory, exemplifying key features or parameters of the estimator/function.  These should also be referenced from the User Guide."
msgstr "como ejemplos en la :ref:`galería de ejemplos <general_examples>` renderizada (usando `sphinx-gallery <https://sphinx-gallery.readthedocs.io/>`_) a partir de scripts en el directorio ``examples/``, ejemplificando características o parámetros clave del estimador/función.  Estos también deben ser referenciados desde el Manual de Usuario."

#: ../glossary.rst:335
msgid "sometimes in the :ref:`User Guide <user_guide>` (built from ``doc/``) alongside a technical description of the estimator."
msgstr "a veces en el :ref:`Manual de Usuario <user_guide>` (construido a partir de ``doc/``) junto a una descripción técnica del estimador."

#: ../glossary.rst:337
msgid "experimental"
msgstr "experimental"

#: ../glossary.rst:339
msgid "An experimental tool is already usable but its public API, such as default parameter values or fitted attributes, is still subject to change in future versions without the usual :term:`deprecation` warning policy."
msgstr "Una herramienta experimental ya es utilizable, pero su API pública, como los valores de los parámetros por defecto o los atributos ajustados, sigue estando sujeta a cambios en futuras versiones sin la habitual política de advertencias de :term:`obsolescencia`."

#: ../glossary.rst:343
msgid "evaluation metric"
msgstr "métrica de evaluación"

#: ../glossary.rst:344
msgid "evaluation metrics"
msgstr "métricas de evaluación"

#: ../glossary.rst:346
msgid "Evaluation metrics give a measure of how well a model performs.  We may use this term specifically to refer to the functions in :mod:`metrics` (disregarding :mod:`metrics.pairwise`), as distinct from the :term:`score` method and the :term:`scoring` API used in cross validation. See :ref:`model_evaluation`."
msgstr "Las métricas de evaluación dan una medida del rendimiento de un modelo.  Podemos utilizar este término específicamente para referirnos a las funciones de :mod:`metrics` (sin tener en cuenta :mod:`metrics.pairwise`), a diferencia del método :term:`score` y la API :term:`scoring` utilizada en la validación cruzada. Véase :ref:`model_evaluation`."

#: ../glossary.rst:352
msgid "These functions usually accept a ground truth (or the raw data where the metric evaluates clustering without a ground truth) and a prediction, be it the output of :term:`predict` (``y_pred``), of :term:`predict_proba` (``y_proba``), or of an arbitrary score function including :term:`decision_function` (``y_score``). Functions are usually named to end with ``_score`` if a greater score indicates a better model, and ``_loss`` if a lesser score indicates a better model.  This diversity of interface motivates the scoring API."
msgstr "Estas funciones suelen aceptar una verdad fundamental (o los datos crudos en los que la métrica evalúa el agrupamiento sin una verdad fundamental) y una predicción, ya sea la salida de :term:`predict` (``y_pred``), de :term:`predict_proba` (``y_proba``), o de una función de puntuación arbitraria incluyendo :term:`decision_function` (``y_score``). Las funciones suelen tener un nombre que termina con ``_score`` si una puntuación mayor indica un modelo mejor, y ``_loss`` si una puntuación menor indica un modelo mejor.  Esta diversidad de interfaz motiva la API de puntuación."

#: ../glossary.rst:362
msgid "Note that some estimators can calculate metrics that are not included in :mod:`metrics` and are estimator-specific, notably model likelihoods."
msgstr "Tenga en cuenta que algunos estimadores pueden calcular métricas que no están incluidas en :mod:`metrics` y que son específicas del estimador, especialmente las verosimilitudes del modelo."

#: ../glossary.rst:365
msgid "estimator tags"
msgstr "etiquetas del estimador"

#: ../glossary.rst:367
msgid "A proposed feature (e.g. :issue:`8022`) by which the capabilities of an estimator are described through a set of semantic tags.  This would enable some runtime behaviors based on estimator inspection, but it also allows each estimator to be tested for appropriate invariances while being excepted from other :term:`common tests`."
msgstr "Una característica propuesta (por ejemplo, :issue:`8022`) por la cual las capacidades de un estimador se describen a través de un conjunto de etiquetas semánticas. Esto permitiría algunos comportamientos en tiempo de ejecución basados en la inspección del estimador, pero también permite que cada estimador se someta a las pruebas de invarianzas apropiadas mientras se exceptúa de otros :term:`tests comunes`."

#: ../glossary.rst:373
msgid "Some aspects of estimator tags are currently determined through the :term:`duck typing` of methods like ``predict_proba`` and through some special attributes on estimator objects:"
msgstr "Algunos aspectos de las etiquetas del estimador se determinan actualmente a través del :term:`duck typing` de métodos como ``predict_proba`` y a través de algunos atributos especiales en los objetos de los estimadores:"

#: ../glossary.rst:378
msgid "``_estimator_type``"
msgstr "``_estimator_type``"

#: ../glossary.rst:380
msgid "This string-valued attribute identifies an estimator as being a classifier, regressor, etc. It is set by mixins such as :class:`base.ClassifierMixin`, but needs to be more explicitly adopted on a :term:`meta-estimator`.  Its value should usually be checked by way of a helper such as :func:`base.is_classifier`."
msgstr "Este atributo con valor de cadena identifica un estimador como clasificador, regresor, etc. Se establece mediante mixins como :class:`base.ClassifierMixin`, pero debe adoptarse más explícitamente en un :term:`meta-estimador`. Su valor debe comprobarse normalmente mediante un helper como :func:`base.is_classifier`."

#: ../glossary.rst:385
msgid "``_pairwise``"
msgstr "``_pairwise``"

#: ../glossary.rst:387
msgid "This boolean attribute indicates whether the data (``X``) passed to :func:`fit` and similar methods consists of pairwise measures over samples rather than a feature representation for each sample.  It is usually ``True`` where an estimator has a ``metric`` or ``affinity`` or ``kernel`` parameter with value 'precomputed'. Its primary purpose is that when a :term:`meta-estimator` extracts a sub-sample of data intended for a pairwise estimator, the data needs to be indexed on both axes, while other data is indexed only on the first axis."
msgstr "Este atributo booleano indica si los datos (``X``) pasados a :func:`fit` y métodos similares consisten en medidas de pares sobre muestras en lugar de una representación de características para cada muestra.  Suele ser ``True`` cuando un estimador tiene un parámetro ``metric`` o ``affinity`` o ``kernel`` con valor ``precalculado``. Su propósito principal es que cuando un :term:`meta-estimador` extrae una submuestra de datos destinada a un estimador por pares, los datos necesitan ser indexados en ambos ejes, mientras que otros datos son indexados sólo en el primer eje."

#: ../glossary.rst:399
msgid "The _pairwise attribute is deprecated in 0.24. From 1.1 (renaming of 0.26) onward, the `pairwise` estimator tag should be used instead."
msgstr "El atributo _pairwise queda obsoleto en 0.24. A partir de la versión 1.1 (cambio de nombre de la versión 0.26), se utilizará la etiqueta del estimador `pairwise`."

#: ../glossary.rst:403
msgid "For more detailed info, see :ref:`estimator_tags`."
msgstr "Para obtener información más detallada, ver :ref:`estimator_tags`."

#: ../glossary.rst:404
msgid "feature"
msgstr "característica"

#: ../glossary.rst:405
msgid "features"
msgstr "características"

#: ../glossary.rst:406
msgid "feature vector"
msgstr "vector de características"

#: ../glossary.rst:408
msgid "In the abstract, a feature is a function (in its mathematical sense) mapping a sampled object to a numeric or categorical quantity. \"Feature\" is also commonly used to refer to these quantities, being the individual elements of a vector representing a sample. In a data matrix, features are represented as columns: each column contains the result of applying a feature function to a set of samples."
msgstr "En abstracto, una característica es una función (en su sentido matemático) que asigna un objeto muestreado a una cantidad numérica o categórica. El término \"característica\" también se utiliza comúnmente para referirse a estas cantidades, siendo los elementos individuales de un vector que representa una muestra. En una matriz de datos, las características se representan como columnas: cada columna contiene el resultado de aplicar una función de característica a un conjunto de muestras."

#: ../glossary.rst:415
msgid "Elsewhere features are known as attributes, predictors, regressors, or independent variables."
msgstr "En otras partes, las características se conocen como atributos, predictores, regresores o variables independientes."

#: ../glossary.rst:418
msgid "Nearly all estimators in scikit-learn assume that features are numeric, finite and not missing, even when they have semantically distinct domains and distributions (categorical, ordinal, count-valued, real-valued, interval). See also :term:`categorical feature` and :term:`missing values`."
msgstr "Casi todos los estimadores de scikit-learn asumen que las características son numéricas, finitas y no faltan, incluso cuando tienen dominios y distribuciones semánticamente distintas (categóricas, ordinales, de valores de conteo, de valores reales, de intervalo). Ver también :term:`característica categórica` y :term:`valores faltantes`."

#: ../glossary.rst:424
msgid "``n_features`` indicates the number of features in a dataset."
msgstr "``n_features`` indica el número de características de un conjunto de datos."

#: ../glossary.rst:425
msgid "fitting"
msgstr "ajuste"

#: ../glossary.rst:427
msgid "Calling :term:`fit` (or :term:`fit_transform`, :term:`fit_predict`, etc.) on an estimator."
msgstr "Llamando a :term:`fit` (o :term:`fit_transform`, :term:`fit_predict`, etc.) en un estimador."

#: ../glossary.rst:429
msgid "fitted"
msgstr "ajustado"

#: ../glossary.rst:431
msgid "The state of an estimator after :term:`fitting`."
msgstr "El estado de un estimador después del :term:`ajuste`."

#: ../glossary.rst:433
msgid "There is no conventional procedure for checking if an estimator is fitted.  However, an estimator that is not fitted:"
msgstr "No existe un procedimiento convencional para comprobar si un estimador está ajustado.  Sin embargo, un estimador que no está ajustado:"

#: ../glossary.rst:436
msgid "should raise :class:`exceptions.NotFittedError` when a prediction method (:term:`predict`, :term:`transform`, etc.) is called. (:func:`utils.validation.check_is_fitted` is used internally for this purpose.)"
msgstr "debería emitir :class:`exceptions.NotFittedError` cuando se llama a un método de predicción (:term:`predict`, :term:`transform`, etc.). (:func:`utils.validation.check_is_fitted` se utiliza internamente para este propósito)."

#: ../glossary.rst:440
msgid "should not have any :term:`attributes` beginning with an alphabetic character and ending with an underscore. (Note that a descriptor for the attribute may still be present on the class, but hasattr should return False)"
msgstr "no debe tener :term:`atributos` que comiencen con un carácter alfabético y termine con un guión bajo. (Ten en cuenta que un descriptor para el atributo todavía puede estar presente en la clase, pero hasattr debe devolver False)."

#: ../glossary.rst:444
msgid "function"
msgstr "función"

#: ../glossary.rst:446
msgid "We provide ad hoc function interfaces for many algorithms, while :term:`estimator` classes provide a more consistent interface."
msgstr "Proporcionamos interfaces de funciones ad hoc para muchos algoritmos, mientras que las clases de :term:`estimador`(es) proporcionan una interfaz más consistente."

#: ../glossary.rst:449
msgid "In particular, Scikit-learn may provide a function interface that fits a model to some data and returns the learnt model parameters, as in :func:`linear_model.enet_path`.  For transductive models, this also returns the embedding or cluster labels, as in :func:`manifold.spectral_embedding` or :func:`cluster.dbscan`.  Many preprocessing transformers also provide a function interface, akin to calling :term:`fit_transform`, as in :func:`preprocessing.maxabs_scale`.  Users should be careful to avoid :term:`data leakage` when making use of these ``fit_transform``-equivalent functions."
msgstr "En particular, scikit-learn puede proporcionar una interfaz de función que ajusta un modelo a algunos datos y devuelve los parámetros del modelo entrenado, como en :func:`linear_model.enet_path`.  Para los modelos transductivos, también devuelve las etiquetas de embedding o de conglomerado, como en :func:`manifold.spectral_embedding` o :func:`cluster.dbscan`.  Muchos transformadores de preprocesamiento también proporcionan una interfaz de función, similar a la llamada a :term:`fit_transform`, como en :func:`preprocessing.maxabs_scale`.  Los usuarios deben tener cuidado de evitar :term:`fuga de datos` cuando hagan uso de estas funciones equivalentes a ``fit_transform``."

#: ../glossary.rst:460
msgid "We do not have a strict policy about when to or when not to provide function forms of estimators, but maintainers should consider consistency with existing interfaces, and whether providing a function would lead users astray from best practices (as regards data leakage, etc.)"
msgstr "No tenemos una política estricta sobre cuándo proporcionar o no formas de función de los estimadores, pero los encargados del mantenimiento considerar la coherencia con las interfaces existentes, y si proporcionar una función podría apartar a los usuarios de las mejores prácticas (en lo que respecta a la fuga de datos, etc.)."

#: ../glossary.rst:465
msgid "gallery"
msgstr "galería"

#: ../glossary.rst:467
msgid "See :term:`examples`."
msgstr "Ver :term:`ejemplos`."

#: ../glossary.rst:468
msgid "hyperparameter"
msgstr "hiperparámetro"

#: ../glossary.rst:469
msgid "hyper-parameter"
msgstr "hiperparámetro"

#: ../glossary.rst:471
msgid "See :term:`parameter`."
msgstr "Ver :term:`parámetro`."

#: ../glossary.rst:472
msgid "impute"
msgstr "imputar"

#: ../glossary.rst:473
msgid "imputation"
msgstr "imputación"

#: ../glossary.rst:475
msgid "Most machine learning algorithms require that their inputs have no :term:`missing values`, and will not work if this requirement is violated. Algorithms that attempt to fill in (or impute) missing values are referred to as imputation algorithms."
msgstr "La mayoría de los algoritmos de aprendizaje automático requieren que sus entradas no tengan :term:`valores faltantes`, y no funcionarán si se viola este requisito. Los algoritmos que intentan rellenar (o imputar) los valores faltantes se denominan algoritmos de imputación."

#: ../glossary.rst:479
msgid "indexable"
msgstr "indexable"

#: ../glossary.rst:481
msgid "An :term:`array-like`, :term:`sparse matrix`, pandas DataFrame or sequence (usually a list)."
msgstr "Un :term:`array-like`, :term:`matriz dispersa`, DataFrame pandas o secuencia (generalmente una lista)."

#: ../glossary.rst:483
msgid "induction"
msgstr "inducción"

#: ../glossary.rst:484
msgid "inductive"
msgstr "inductivo(a)"

#: ../glossary.rst:486
msgid "Inductive (contrasted with :term:`transductive`) machine learning builds a model of some data that can then be applied to new instances. Most estimators in Scikit-learn are inductive, having :term:`predict` and/or :term:`transform` methods."
msgstr "El aprendizaje automático inductivo (en contraste con :term:`transductivo`) construye un modelo de algunos datos que luego puede aplicarse a nuevas instancias. La mayoría de los estimadores en scikit-learn son inductivos, con métodos :term:`predict` y/o :term:`transform`."

#: ../glossary.rst:490
msgid "joblib"
msgstr "joblib"

#: ../glossary.rst:492
msgid "A Python library (https://joblib.readthedocs.io) used in Scikit-learn to facilite simple parallelism and caching.  Joblib is oriented towards efficiently working with numpy arrays, such as through use of :term:`memory mapping`. See :ref:`parallelism` for more information."
msgstr "Una biblioteca de Python (https://joblib.readthedocs.io) utilizada en scikit-learn para facilitar el paralelismo simple y el almacenamiento en caché.  Joblib está orientada a trabajar eficientemente con arreglos de numpy, por ejemplo mediante el uso de :term:`mapeo de memoria`. Ver :ref:`parallelism` para más información."

#: ../glossary.rst:497
msgid "label indicator matrix"
msgstr "matriz indicatriz de etiqueta"

#: ../glossary.rst:498
msgid "multilabel indicator matrix"
msgstr "matriz indicatriz multietiqueta"

#: ../glossary.rst:499
msgid "multilabel indicator matrices"
msgstr "matrices indicatrices multietiqueta"

#: ../glossary.rst:501
msgid "The format used to represent multilabel data, where each row of a 2d array or sparse matrix corresponds to a sample, each column corresponds to a class, and each element is 1 if the sample is labeled with the class and 0 if not."
msgstr "El formato utilizado para representar datos multietiqueta, en el que cada fila de un arreglo 2D o matriz dispersa corresponde a una muestra, cada columna corresponde a una clase, y cada elemento es 1 si la muestra está etiquetada con la clase y 0 si no es así."

#: ../glossary.rst:505
msgid "leakage"
msgstr "fuga"

#: ../glossary.rst:506
msgid "data leakage"
msgstr "fuga de datos"

#: ../glossary.rst:508
msgid "A problem in cross validation where generalization performance can be over-estimated since knowledge of the test data was inadvertently included in training a model.  This is a risk, for instance, when applying a :term:`transformer` to the entirety of a dataset rather than each training portion in a cross validation split."
msgstr "Un problema en la validación cruzada en el que el rendimiento de la generalización puede sobreestimarse ya que el conocimiento de los datos de prueba se incluyó inadvertidamente en el entrenamiento de un modelo.  Este es un riesgo, por ejemplo, cuando se aplica un :term:`transformador` a la totalidad de un conjunto de datos en lugar de a cada porción de entrenamiento en una división de validación cruzada."

#: ../glossary.rst:514
msgid "We aim to provide interfaces (such as :mod:`pipeline` and :mod:`model_selection`) that shield the user from data leakage."
msgstr "Nuestro objetivo es proporcionar interfaces (como :mod:`pipeline` y :mod:`model_selection`) que protejan al usuario de la fuga de datos."

#: ../glossary.rst:516
msgid "memmapping"
msgstr "mapeo de memoria"

#: ../glossary.rst:517
msgid "memory map"
msgstr "mapa de memoria"

#: ../glossary.rst:518
msgid "memory mapping"
msgstr "mapeo de memoria"

#: ../glossary.rst:520
msgid "A memory efficiency strategy that keeps data on disk rather than copying it into main memory.  Memory maps can be created for arrays that can be read, written, or both, using :obj:`numpy.memmap`. When using :term:`joblib` to parallelize operations in Scikit-learn, it may automatically memmap large arrays to reduce memory duplication overhead in multiprocessing."
msgstr "Una estrategia de eficiencia de memoria que mantiene los datos en el disco en lugar de copiarlos en la memoria principal.  Los mapas de memoria pueden ser creados para arreglos que pueden ser leídos, escritos, o ambos, usando :obj:`numpy.memmap`. Cuando se utiliza :term:`joblib` para paralelizar las operaciones en scikit-learn, se pueden crear automáticamente mapas de memoria para arreglos grandes para reducir la sobrecarga de duplicación de memoria en el multiprocesamiento."

#: ../glossary.rst:526
msgid "missing values"
msgstr "valores faltantes"

#: ../glossary.rst:528
msgid "Most Scikit-learn estimators do not work with missing values. When they do (e.g. in :class:`impute.SimpleImputer`), NaN is the preferred representation of missing values in float arrays.  If the array has integer dtype, NaN cannot be represented. For this reason, we support specifying another ``missing_values`` value when :term:`imputation` or learning can be performed in integer space. :term:`Unlabeled data <unlabeled data>` is a special case of missing values in the :term:`target`."
msgstr "La mayoría de los estimadores de scikit-learn no trabajan con valores faltantes. Cuando lo hacen (por ejemplo, en :class:`impute.SimpleImputer`), NaN es la representación preferida de los valores faltantes en los arreglos de punto flotante (float).  Si el arreglo tiene un dtype entero, no se puede representar NaN. Por esta razón, apoyamos la especificación de otro valor ``missing_values`` cuando :term:`imputación` o el aprendizaje se puede realizar en el espacio de enteros. :term:`Datos no etiquetados <unlabeled data>` es un caso especial de valores faltantes en el :term:`objetivo`."

#: ../glossary.rst:536
msgid "``n_features``"
msgstr "``n_features``"

#: ../glossary.rst:538
msgid "The number of :term:`features`."
msgstr "El número de :term:`características`."

#: ../glossary.rst:539
msgid "``n_outputs``"
msgstr "``n_outputs``"

#: ../glossary.rst:541
msgid "The number of :term:`outputs` in the :term:`target`."
msgstr "El número de :term:`salidas` en el :term:`objetivo`."

#: ../glossary.rst:542
msgid "``n_samples``"
msgstr "``n_samples``"

#: ../glossary.rst:544
msgid "The number of :term:`samples`."
msgstr "El número de :term:`muestras`."

#: ../glossary.rst:545
msgid "``n_targets``"
msgstr "``n_targets``"

#: ../glossary.rst:547
msgid "Synonym for :term:`n_outputs`."
msgstr "Sinónimo de :term:`n_outputs`."

#: ../glossary.rst:548
msgid "narrative docs"
msgstr "documentos narrativos"

#: ../glossary.rst:549
msgid "narrative documentation"
msgstr "documentación narrativa"

#: ../glossary.rst:551
msgid "An alias for :ref:`User Guide <user_guide>`, i.e. documentation written in ``doc/modules/``. Unlike the :ref:`API reference <api_ref>` provided through docstrings, the User Guide aims to:"
msgstr "Un alias para :ref:`Manual de Usuario <user_guide>`, es decir, la documentación escrita en ``doc/modules/``. A diferencia de la :ref:`Referencia API <api_ref>` proporcionada a través de docstrings, el Manual de Usuario tiene como objetivo:"

#: ../glossary.rst:555
msgid "group tools provided by Scikit-learn together thematically or in terms of usage;"
msgstr "agrupar las herramientas proporcionadas por scikit-learn de forma temática o en términos de uso;"

#: ../glossary.rst:557
msgid "motivate why someone would use each particular tool, often through comparison;"
msgstr "dar motivos de por qué alguien utilizaría cada herramienta en particular, a menudo mediante la comparación;"

#: ../glossary.rst:559
msgid "provide both intuitive and technical descriptions of tools;"
msgstr "proporcionar descripciones tanto intuitivas como técnicas de las herramientas;"

#: ../glossary.rst:560
msgid "provide or link to :term:`examples` of using key features of a tool."
msgstr "proporcionar o enlazar con :term:`ejemplos` de uso de las características clave de una herramienta."

#: ../glossary.rst:562
msgid "np"
msgstr "np"

#: ../glossary.rst:564
msgid "A shorthand for Numpy due to the conventional import statement::"
msgstr "Una abreviatura de Numpy debido a la declaración de importación convencional::"

#: ../glossary.rst:567
msgid "online learning"
msgstr "aprendizaje en línea"

#: ../glossary.rst:569
msgid "Where a model is iteratively updated by receiving each batch of ground truth :term:`targets` soon after making predictions on corresponding batch of data.  Intrinsically, the model must be usable for prediction after each batch. See :term:`partial_fit`."
msgstr "Donde un modelo se actualiza de forma iterativa recibiendo cada lote de :term:`objetivos` de verdad fundamental poco después de hacer predicciones sobre el lote de datos correspondiente. Intrínsecamente, el modelo debe ser utilizable para la predicción después de cada lote. Ver :term:`partial_fit`."

#: ../glossary.rst:573
msgid "out-of-core"
msgstr "fuera del núcleo"

#: ../glossary.rst:575
msgid "An efficiency strategy where not all the data is stored in main memory at once, usually by performing learning on batches of data. See :term:`partial_fit`."
msgstr "Una estrategia de eficiencia en la que no se almacenan todos los datos en la memoria principal a la vez, normalmente realizando el aprendizaje en lotes de datos. Ver :term:`partial_fit`."

#: ../glossary.rst:578
msgid "outputs"
msgstr "salidas"

#: ../glossary.rst:580
msgid "Individual scalar/categorical variables per sample in the :term:`target`.  For example, in multilabel classification each possible label corresponds to a binary output. Also called *responses*, *tasks* or *targets*. See :term:`multiclass multioutput` and :term:`continuous multioutput`."
msgstr "Variables escalares/categóricas individuales por muestra en el :term:`objetivo`.  Por ejemplo, en la clasificación multietiqueta cada etiqueta posible corresponde a una salida binaria. También se denominan *respuestas*, *tareas* u *objetivos*. Ver :term:`multiclase multisalida` y :term:`salida múltiple continua`."

#: ../glossary.rst:585
msgid "pair"
msgstr "par"

#: ../glossary.rst:587
msgid "A tuple of length two."
msgstr "Una tupla de longitud dos."

#: ../glossary.rst:588
msgid "parameter"
msgstr "parámetro"

#: ../glossary.rst:589
msgid "parameters"
msgstr "parámetros"

#: ../glossary.rst:590
msgid "param"
msgstr "parámetro"

#: ../glossary.rst:591
msgid "params"
msgstr "parámetros"

#: ../glossary.rst:593
msgid "We mostly use *parameter* to refer to the aspects of an estimator that can be specified in its construction. For example, ``max_depth`` and ``random_state`` are parameters of :class:`RandomForestClassifier`. Parameters to an estimator's constructor are stored unmodified as attributes on the estimator instance, and conventionally start with an alphabetic character and end with an alphanumeric character.  Each estimator's constructor parameters are described in the estimator's docstring."
msgstr "La mayoría de las veces utilizamos *parámetro* para referirnos a los aspectos de un estimador que pueden especificarse en su construcción. Por ejemplo, ``max_depth`` y ``random_state`` son parámetros de :class:`RandomForestClassifier`. Los parámetros del constructor de un estimador se almacenan sin modificar como atributos en la instancia del estimador, y convencionalmente empiezan con un carácter alfabético y terminan con un carácter alfanumérico.  Los parámetros del constructor de cada estimador se describen en la cadena de documentación del estimador."

#: ../glossary.rst:602
msgid "We do not use parameters in the statistical sense, where parameters are values that specify a model and can be estimated from data. What we call parameters might be what statisticians call hyperparameters to the model: aspects for configuring model structure that are often not directly learnt from data.  However, our parameters are also used to prescribe modeling operations that do not affect the learnt model, such as :term:`n_jobs` for controlling parallelism."
msgstr "No utilizamos parámetros en el sentido estadístico, en el que los parámetros son valores que especifican un modelo y pueden estimarse a partir de los datos. Lo que llamamos parámetros podría ser lo que los estadísticos llaman hiperparámetros del modelo: aspectos para configurar la estructura del modelo que a menudo no se aprenden directamente de los datos. Sin embargo, nuestros parámetros también se utilizan para prescribir operaciones de modelado que no afectan al modelo entrenado, como :term:`n_jobs` para controlar el paralelismo."

#: ../glossary.rst:610
msgid "When talking about the parameters of a :term:`meta-estimator`, we may also be including the parameters of the estimators wrapped by the meta-estimator.  Ordinarily, these nested parameters are denoted by using a :term:`double underscore` (``__``) to separate between the estimator-as-parameter and its parameter.  Thus ``clf = BaggingClassifier(base_estimator=DecisionTreeClassifier(max_depth=3))`` has a deep parameter ``base_estimator__max_depth`` with value ``3``, which is accessible with ``clf.base_estimator.max_depth`` or ``clf.get_params()['base_estimator__max_depth']``."
msgstr "Cuando se habla de los parámetros de un :term:`meta-estimador`, también se pueden incluir los parámetros de los estimadores incluidos (wrapped) en el meta-estimador.  Normalmente, estos parámetros anidados se denotan utilizando un :term:`subrayado doble` (``__``) para separar entre el estimador-como-parámetro y su parámetro.  Así, ``clf = BaggingClassifier(base_estimator=DecisionTreeClassifier(max_depth=3))`` tiene un parámetro de profundidad ``base_estimator__max_depth`` con valor ``3``, al que se puede acceder con ``clf.base_estimator.max_depth`` o ``clf.get_params()['base_estimator__max_depth']``."

#: ../glossary.rst:620
msgid "The list of parameters and their current values can be retrieved from an :term:`estimator instance` using its :term:`get_params` method."
msgstr "La lista de parámetros y sus valores actuales pueden recuperarse de una :term:`instancia del estimador` utilizando su método :term:`get_params`."

#: ../glossary.rst:623
msgid "Between construction and fitting, parameters may be modified using :term:`set_params`.  To enable this, parameters are not ordinarily validated or altered when the estimator is constructed, or when each parameter is set. Parameter validation is performed when :term:`fit` is called."
msgstr "Entre la construcción y el ajuste, los parámetros pueden modificarse utilizando :term:`set_params`.  Para permitir esto, los parámetros no se validan o modifican normalmente cuando se construye el estimador, o cuando se establece cada parámetro. La validación de los parámetros se realiza cuando se llama a :term:`fit`."

#: ../glossary.rst:629
msgid "Common parameters are listed :ref:`below <glossary_parameters>`."
msgstr "Los parámetros comunes están listados :ref:`abajo <glossary_parameters>`."

#: ../glossary.rst:630
msgid "pairwise metric"
msgstr "métrica por pares"

#: ../glossary.rst:631
msgid "pairwise metrics"
msgstr "métricas por pares"

#: ../glossary.rst:634
msgid "In its broad sense, a pairwise metric defines a function for measuring similarity or dissimilarity between two samples (with each ordinarily represented as a :term:`feature vector`).  We particularly provide implementations of distance metrics (as well as improper metrics like Cosine Distance) through :func:`metrics.pairwise_distances`, and of kernel functions (a constrained class of similarity functions) in :func:`metrics.pairwise_kernels`.  These can compute pairwise distance matrices that are symmetric and hence store data redundantly."
msgstr "En su sentido más amplio, una métrica por pares define una función para medir la similitud o disimilitud entre dos muestras (cada una de las cuales se representa normalmente como un :term:`vector de características`).  En particular, proporcionamos implementaciones de métricas de distancia (así como métricas impropias como la Distancia Coseno) a través de :func:`metrics.pairwise_distances`, y de funciones kernel (una clase restringida de funciones de similitud) en :func:`metrics.pairwise_kernels`.  Éstas pueden calcular matrices de distancia por pares que son simétricas y, por tanto, almacenan datos de forma redundante."

#: ../glossary.rst:643
msgid "See also :term:`precomputed` and :term:`metric`."
msgstr "Véase también :term:`precalculado` y :term:`metric`."

#: ../glossary.rst:645
msgid "Note that for most distance metrics, we rely on implementations from :mod:`scipy.spatial.distance`, but may reimplement for efficiency in our context.  The :mod:`neighbors` module also duplicates some metric implementations for integration with efficient binary tree search data structures."
msgstr "Ten en cuenta que para la mayoría de las métricas de distancia, dependemos de las implementaciones de :mod:`scipy.spatial.distance`, pero podemos reimplementarlas por eficiencia en nuestro contexto.  El módulo :mod:`neighbors` también duplica algunas implementaciones de métricas para su integración con estructuras de datos de búsqueda de árboles binarios eficientes."

#: ../glossary.rst:650
msgid "pd"
msgstr "pd"

#: ../glossary.rst:652
msgid "A shorthand for `Pandas <https://pandas.pydata.org>`_ due to the conventional import statement::"
msgstr "Una abreviatura de `Pandas <https://pandas.pydata.org>`_ debido a la declaración de importación convencional::"

#: ../glossary.rst:656
msgid "precomputed"
msgstr "precalculado"

#: ../glossary.rst:658
msgid "Where algorithms rely on :term:`pairwise metrics`, and can be computed from pairwise metrics alone, we often allow the user to specify that the :term:`X` provided is already in the pairwise (dis)similarity space, rather than in a feature space.  That is, when passed to :term:`fit`, it is a square, symmetric matrix, with each vector indicating (dis)similarity to every sample, and when passed to prediction/transformation methods, each row corresponds to a testing sample and each column to a training sample."
msgstr "Donde los algoritmos dependen de :term:`métricas por pares`, y pueden calcularse sólo a partir de las métricas por pares, a menudo permitimos al usuario especificar que el :term:`X` proporcionado ya está en el espacio de (des)similitud por pares, en lugar de en un espacio de características. Es decir, cuando se pasa a :term:`fit`, es una matriz cuadrada y simétrica, en la que cada arreglo indica la (des)similitud con cada muestra, y cuando se pasa a los métodos de predicción/transformación, cada fila corresponde a una muestra de prueba y cada columna a una muestra de entrenamiento."

#: ../glossary.rst:667
msgid "Use of precomputed X is usually indicated by setting a ``metric``, ``affinity`` or ``kernel`` parameter to the string 'precomputed'. If this is the case, then the estimator should set the `pairwise` estimator tag as True."
msgstr "El uso de X precalculado suele indicarse estableciendo un parámetro ``metric``, ``affinity`` o ``kernel`` con la cadena 'precomputed'. Si este es el caso, el estimador debe establecer la etiqueta del estimador `pairwise` como True."

#: ../glossary.rst:671
msgid "rectangular"
msgstr "rectangular"

#: ../glossary.rst:673
msgid "Data that can be represented as a matrix with :term:`samples` on the first axis and a fixed, finite set of :term:`features` on the second is called rectangular."
msgstr "Los datos que pueden representarse como una matriz con :term:`muestras` en el primer eje y un conjunto fijo y finito de :term:`características` en el segundo se denominan rectangulares."

#: ../glossary.rst:677
msgid "This term excludes samples with non-vectorial structures, such as text, an image of arbitrary size, a time series of arbitrary length, a set of vectors, etc. The purpose of a :term:`vectorizer` is to produce rectangular forms of such data."
msgstr "Este término excluye las muestras con estructuras no vectoriales, como un texto, una imagen de tamaño arbitrario, una serie de tiempo de longitud arbitraria, un conjunto de vectores, etc. El propósito de un :term:`vectorizador` es producir formas rectangulares de tales datos."

#: ../glossary.rst:681
msgid "sample"
msgstr "muestra"

#: ../glossary.rst:682
msgid "samples"
msgstr "muestras"

#: ../glossary.rst:684
msgid "We usually use this term as a noun to indicate a single feature vector. Elsewhere a sample is called an instance, data point, or observation. ``n_samples`` indicates the number of samples in a dataset, being the number of rows in a data array :term:`X`."
msgstr "Solemos utilizar este término como sustantivo para indicar un único vector de características. En otras partes, una muestra se denomina instancia, punto de datos u observación. ``n_samples`` indica el número de muestras de un conjunto de datos, siendo el número de filas de un arreglo de datos :term:`X`."

#: ../glossary.rst:688
msgid "sample property"
msgstr "propiedad de la muestra"

#: ../glossary.rst:689
msgid "sample properties"
msgstr "propiedades muestrales"

#: ../glossary.rst:691
msgid "A sample property is data for each sample (e.g. an array of length n_samples) passed to an estimator method or a similar function, alongside but distinct from the :term:`features` (``X``) and :term:`target` (``y``). The most prominent example is :term:`sample_weight`; see others at :ref:`glossary_sample_props`."
msgstr "Una propiedad de la muestra se refiere a datos para cada muestra (por ejemplo, un arreglo de longitud n_samples) que se pasa a un método de estimación o a una función similar, junto con, pero distinto de, :term:`características` (``X``) y :term:`objetivo` (``y``). El ejemplo más destacado es :term:`sample_weight`; ver otros en :ref:`glossary_sample_props`."

#: ../glossary.rst:697
msgid "As of version 0.19 we do not have a consistent approach to handling sample properties and their routing in :term:`meta-estimators`, though a ``fit_params`` parameter is often used."
msgstr "A partir de la versión 0.19 no tenemos un enfoque consistente para manejar las propiedades muestrales y su enrutamiento en :term:`meta-estimadores`, aunque a menudo se utiliza un parámetro ``fit_params``."

#: ../glossary.rst:700
msgid "scikit-learn-contrib"
msgstr "scikit-learn-contrib"

#: ../glossary.rst:702
msgid "A venue for publishing Scikit-learn-compatible libraries that are broadly authorized by the core developers and the contrib community, but not maintained by the core developer team. See https://scikit-learn-contrib.github.io."
msgstr "Un lugar para publicar bibliotecas compatibles con scikit-learn que están ampliamente autorizadas por los desarrolladores principales y la comunidad de colaboradores, pero que no son mantenidas por el equipo de desarrolladores principales. Ver https://scikit-learn-contrib.github.io."

#: ../glossary.rst:706
msgid "scikit-learn enhancement proposals"
msgstr "propuestas de mejora de scikit-learn"

#: ../glossary.rst:707
msgid "SLEP"
msgstr "SLEP"

#: ../glossary.rst:708
msgid "SLEPs"
msgstr "SLEPs"

#: ../glossary.rst:710
msgid "Changes to the API principles and changes to dependencies or supported versions happen via a :ref:`SLEP <slep>` and follows the decision-making process outlined in :ref:`governance`. For all votes, a proposal must have been made public and discussed before the vote. Such a proposal must be a consolidated document, in the form of a ‘Scikit-Learn Enhancement Proposal’ (SLEP), rather than a long discussion on an issue. A SLEP must be submitted as a pull-request to `enhancement proposals <https://scikit-learn-enhancement-proposals.readthedocs.io>`_ using the `SLEP template <https://scikit-learn-enhancement-proposals.readthedocs.io/en/latest/slep_template.html>`_."
msgstr "Los cambios en los principios de la API y los cambios en las dependencias o en las versiones soportadas se producen a través de una :ref:`SLEP <slep>` y siguen el proceso de toma de decisiones descrito en :ref:`governance`. Para todas las votaciones, una propuesta debe haberse hecho pública y debatido antes de la votación. Dicha propuesta debe ser un documento consolidado, en forma de \"Propuesta de Mejora de Scikit-Learn\" (Scikit-Learn Enhancement Proposal, SLEP), en lugar de una larga discusión sobre un tema. Una SLEP debe enviarse como un pull-request a `propuestas de mejora <https://scikit-learn-enhancement-proposals.readthedocs.io>`_ utilizando la `plantilla SLEP <https://scikit-learn-enhancement-proposals.readthedocs.io/en/latest/slep_template.html>`_."

#: ../glossary.rst:719
msgid "semi-supervised"
msgstr "semi-supervisado"

#: ../glossary.rst:720
msgid "semi-supervised learning"
msgstr "aprendizaje semi-supervisado"

#: ../glossary.rst:721
msgid "semisupervised"
msgstr "semi supervisado"

#: ../glossary.rst:723
msgid "Learning where the expected prediction (label or ground truth) is only available for some samples provided as training data when :term:`fitting` the model.  We conventionally apply the label ``-1`` to :term:`unlabeled` samples in semi-supervised classification."
msgstr "Aprendizaje en el que la predicción esperada (etiqueta o verdad fundamental) sólo está disponible para algunas muestras proporcionadas como datos de entrenamiento al hacer el :term:`ajuste` del modelo. Convencionalmente aplicamos la etiqueta ``-1`` a las muestras :term:`sin etiquetar` en la clasificación semi supervisada."

#: ../glossary.rst:727
msgid "sparse matrix"
msgstr "matriz dispersa"

#: ../glossary.rst:728
msgid "sparse graph"
msgstr "gráfico disperso"

#: ../glossary.rst:730
msgid "A representation of two-dimensional numeric data that is more memory efficient the corresponding dense numpy array where almost all elements are zero. We use the :mod:`scipy.sparse` framework, which provides several underlying sparse data representations, or *formats*. Some formats are more efficient than others for particular tasks, and when a particular format provides especial benefit, we try to document this fact in Scikit-learn parameter descriptions."
msgstr "Una representación de datos numéricos bidimensionales que es más eficiente en cuanto a la memoria que el correspondiente arreglo de numpy denso donde casi todos los elementos son cero. Utilizamos el framework :mod:`scipy.sparse`, que proporciona varias representaciones de datos dispersos subyacentes, o *formatos*. Algunos formatos son más eficientes que otros para tareas particulares, y cuando un formato particular proporciona un beneficio especial, tratamos de documentar este hecho en las descripciones de los parámetros de scikit-learn."

#: ../glossary.rst:738
msgid "Some sparse matrix formats (notably CSR, CSC, COO and LIL) distinguish between *implicit* and *explicit* zeros. Explicit zeros are stored (i.e. they consume memory in a ``data`` array) in the data structure, while implicit zeros correspond to every element not otherwise defined in explicit storage."
msgstr "Algunos formatos de matrices dispersas (especialmente CSR, CSC, COO y LIL) distinguen entre ceros *implícitos* y *explícitos*. Los ceros explícitos se almacenan (es decir, consumen memoria en un arreglo de ``datos``) en la estructura de datos, mientras que los ceros implícitos corresponden a todos los elementos no definidos en el almacenamiento explícito."

#: ../glossary.rst:744
msgid "Two semantics for sparse matrices are used in Scikit-learn:"
msgstr "En scikit-learn se utilizan dos semánticas para las matrices dispersas:"

#: ../glossary.rst:750
msgid "matrix semantics"
msgstr "semánticas de matriz"

#: ../glossary.rst:747
msgid "The sparse matrix is interpreted as an array with implicit and explicit zeros being interpreted as the number 0.  This is the interpretation most often adopted, e.g. when sparse matrices are used for feature matrices or :term:`multilabel indicator matrices`."
msgstr "La matriz dispersa se interpreta como una matriz en la que los ceros implícitos y explícitos se interpretan como el número 0. Esta es la interpretación que se adopta con más frecuencia, por ejemplo, cuando se utilizan matrices dispersas para matrices de características o :term:`matrices indicatrices multietiqueta`."

#: ../glossary.rst:761
msgid "graph semantics"
msgstr "semánticas de gráfico"

#: ../glossary.rst:753
msgid "As with :mod:`scipy.sparse.csgraph`, explicit zeros are interpreted as the number 0, but implicit zeros indicate a masked or absent value, such as the absence of an edge between two vertices of a graph, where an explicit value indicates an edge's weight. This interpretation is adopted to represent connectivity in clustering, in representations of nearest neighborhoods (e.g. :func:`neighbors.kneighbors_graph`), and for precomputed distance representation where only distances in the neighborhood of each point are required."
msgstr "Al igual que con :mod:`scipy.sparse.csgraph`, los ceros explícitos se interpretan como el número 0, pero los ceros implícitos indican un valor enmascarado o ausente, como la ausencia de una arista entre dos vértices de un grafo, donde un valor explícito indica el peso de una arista. Esta interpretación se adopta para representar la conectividad en el conglomerado, en las representaciones de vecindarios más cercanos (por ejemplo, :func:`neighbors.kneighbors_graph`), y para la representación de distancias precalculadas donde sólo se requieren las distancias en el vecindario de cada punto."

#: ../glossary.rst:763
msgid "When working with sparse matrices, we assume that it is sparse for a good reason, and avoid writing code that densifies a user-provided sparse matrix, instead maintaining sparsity or raising an error if not possible (i.e. if an estimator does not / cannot support sparse matrices)."
msgstr "Cuando se trabaja con matrices dispersas, asumimos que son dispersas por una buena razón, y evitamos escribir código que densifique una matriz dispersa proporcionada por el usuario, manteniendo en su lugar la dispersidad o generando un error si no es posible (es decir, si un estimador no soporta / no puede soportar matrices dispersas)."

#: ../glossary.rst:768
msgid "supervised"
msgstr "supervisado"

#: ../glossary.rst:769
msgid "supervised learning"
msgstr "aprendizaje supervisado"

#: ../glossary.rst:771
msgid "Learning where the expected prediction (label or ground truth) is available for each sample when :term:`fitting` the model, provided as :term:`y`.  This is the approach taken in a :term:`classifier` or :term:`regressor` among other estimators."
msgstr "Aprendizaje en el que la predicción esperada (etiqueta o verdad fundamental) está disponible para cada muestra cuando se hace el :term:`ajuste` del modelo, proporcionado como :term:`y`.  Este es el enfoque adoptado en un :term:`clasificador` o :term:`regresor` entre otros estimadores."

#: ../glossary.rst:775
msgid "target"
msgstr "objetivo"

#: ../glossary.rst:776
msgid "targets"
msgstr "objetivos"

#: ../glossary.rst:778
msgid "The *dependent variable* in :term:`supervised` (and :term:`semisupervised`) learning, passed as :term:`y` to an estimator's :term:`fit` method.  Also known as *dependent variable*, *outcome variable*, *response variable*, *ground truth* or *label*. Scikit-learn works with targets that have minimal structure: a class from a finite set, a finite real-valued number, multiple classes, or multiple numbers. See :ref:`glossary_target_types`."
msgstr "La *variable dependiente* en el aprendizaje :term:`supervisado` (y :term:`semisupervisado`), pasada como :term:`y` al método :term:`fit` de un estimador.  También se conoce como *variable dependiente*, *variable de resultado*, *variable de respuesta*, *verdad fundamental* o *etiqueta*. Scikit-learn trabaja con objetivos que tienen una estructura mínima: una clase de un conjunto finito, un número finito de valor real, múltiples clases o múltiples números. Ver :ref:`glossary_target_types`."

#: ../glossary.rst:785
msgid "transduction"
msgstr "transducción"

#: ../glossary.rst:786
msgid "transductive"
msgstr "transductivo"

#: ../glossary.rst:788
msgid "A transductive (contrasted with :term:`inductive`) machine learning method is designed to model a specific dataset, but not to apply that model to unseen data.  Examples include :class:`manifold.TSNE`, :class:`cluster.AgglomerativeClustering` and :class:`neighbors.LocalOutlierFactor`."
msgstr "Un método de aprendizaje automático transductivo (en contraste con :term:`inductivo(a)`) está diseñado para modelar un conjunto de datos específico, pero no para aplicar ese modelo a datos no vistos.  Algunos ejemplos son :class:`manifold.TSNE`, :class:`cluster.AgglomerativeClustering` y :class:`neighbors.LocalOutlierFactor`."

#: ../glossary.rst:793
msgid "unlabeled"
msgstr "sin etiquetar"

#: ../glossary.rst:794
msgid "unlabeled data"
msgstr "datos no etiquetados"

#: ../glossary.rst:796
msgid "Samples with an unknown ground truth when fitting; equivalently, :term:`missing values` in the :term:`target`.  See also :term:`semisupervised` and :term:`unsupervised` learning."
msgstr "Muestras con una verdad fundamental desconocida cuando se ajustan; equivalentemente, :term:`valores faltantes` en el :term:`objetivo`.  Ver también el aprendizaje :term:`semisupervisado` y :term:`no supervisado`."

#: ../glossary.rst:799
msgid "unsupervised"
msgstr "no supervisado"

#: ../glossary.rst:800
msgid "unsupervised learning"
msgstr "aprendizaje no supervisado"

#: ../glossary.rst:802
msgid "Learning where the expected prediction (label or ground truth) is not available for each sample when :term:`fitting` the model, as in :term:`clusterers` and :term:`outlier detectors`.  Unsupervised estimators ignore any :term:`y` passed to :term:`fit`."
msgstr "Aprendizaje en el que la predicción esperada (etiqueta o verdad fundamental) no está disponible para cada muestra cuando se hace el :term:`ajuste` del modelo, como en :term:`agrupadores` y :term:`detectores de valores atípicos`.  Los estimadores no supervisados ignoran cualquier :term:`y` pasado a :term:`fit`."

#: ../glossary.rst:810
msgid "Class APIs and Estimator Types"
msgstr "APIs de Clase y Tipos de Estimadores"

#: ../glossary.rst:813 ../glossary.rst:1334
msgid "classifier"
msgstr "clasificador"

#: ../glossary.rst:814
msgid "classifiers"
msgstr "clasificadores"

#: ../glossary.rst:816
msgid "A :term:`supervised` (or :term:`semi-supervised`) :term:`predictor` with a finite set of discrete possible output values."
msgstr "Un :term:`predictor` :term:`supervisado` (o :term:`semi supervisado`) con un conjunto finito de posibles valores de salida discretos."

#: ../glossary.rst:819
msgid "A classifier supports modeling some of :term:`binary`, :term:`multiclass`, :term:`multilabel`, or :term:`multiclass multioutput` targets.  Within scikit-learn, all classifiers support multi-class classification, defaulting to using a one-vs-rest strategy over the binary classification problem."
msgstr "Un clasificador soporta el modelado de algunos de los objetivos :term:`binario`, :term:`multiclase`, :term:`multietiqueta`, o :term:`multiclase multisalida`.  Dentro de scikit-learn, todos los clasificadores soportan la clasificación multiclase, utilizando por defecto una estrategia de uno contra el resto sobre el problema de clasificación binaria."

#: ../glossary.rst:825
msgid "Classifiers must store a :term:`classes_` attribute after fitting, and usually inherit from :class:`base.ClassifierMixin`, which sets their :term:`_estimator_type` attribute."
msgstr "Los clasificadores deben almacenar un atributo :term:`classes_` después del ajuste, y normalmente heredan de :class:`base.ClassifierMixin`, que establece su atributo :term:`_estimator_type`."

#: ../glossary.rst:829
msgid "A classifier can be distinguished from other estimators with :func:`~base.is_classifier`."
msgstr "Un clasificador puede distinguirse de otros estimadores con :func:`~base.is_classifier`."

#: ../glossary.rst:832
msgid "A classifier must implement:"
msgstr "Un clasificador debe implementar:"

#: ../glossary.rst:834 ../glossary.rst:851 ../glossary.rst:894
#: ../glossary.rst:942 ../glossary.rst:972
msgid ":term:`fit`"
msgstr ":term:`fit`"

#: ../glossary.rst:835 ../glossary.rst:973
msgid ":term:`predict`"
msgstr ":term:`predict`"

#: ../glossary.rst:836 ../glossary.rst:974
msgid ":term:`score`"
msgstr ":term:`score`"

#: ../glossary.rst:838
msgid "It may also be appropriate to implement :term:`decision_function`, :term:`predict_proba` and :term:`predict_log_proba`."
msgstr "También puede ser apropiado implementar :term:`decision_function`, :term:`predict_proba` y :term:`predict_log_proba`."

#: ../glossary.rst:840 ../glossary.rst:1340
msgid "clusterer"
msgstr "agrupador"

#: ../glossary.rst:841
msgid "clusterers"
msgstr "agrupadores"

#: ../glossary.rst:843
msgid "A :term:`unsupervised` :term:`predictor` with a finite set of discrete output values."
msgstr "Un :term:`predictor` :term:`no supervisado` con un conjunto finito de valores de salida discretos."

#: ../glossary.rst:846
msgid "A clusterer usually stores :term:`labels_` after fitting, and must do so if it is :term:`transductive`."
msgstr "Un agrupador suele almacenar :term:`labels_` después del ajuste, y debe hacerlo si es :term:`transductivo`."

#: ../glossary.rst:849
msgid "A clusterer must implement:"
msgstr "Un agrupador debe implementar:"

#: ../glossary.rst:852 ../glossary.rst:943
msgid ":term:`fit_predict` if :term:`transductive`"
msgstr ":term:`fit_predict` si es :term:`transductivo`"

#: ../glossary.rst:853 ../glossary.rst:944
msgid ":term:`predict` if :term:`inductive`"
msgstr ":term:`predict` si es :term:`inductivo(a)`"

#: ../glossary.rst:854
msgid "density estimator"
msgstr "estimador de la densidad"

#: ../glossary.rst:856 ../glossary.rst:1391 ../glossary.rst:1498
msgid "TODO"
msgstr "TODO"

#: ../glossary.rst:857
msgid "estimator"
msgstr "estimador"

#: ../glossary.rst:858
msgid "estimators"
msgstr "estimadores"

#: ../glossary.rst:860
msgid "An object which manages the estimation and decoding of a model. The model is estimated as a deterministic function of:"
msgstr "Un objeto que gestiona la estimación y decodificación de un modelo. El modelo se estima como una función determinista de:"

#: ../glossary.rst:863
msgid ":term:`parameters` provided in object construction or with :term:`set_params`;"
msgstr ":term:`parámetros` proporcionados en la construcción del objeto o con :term:`set_params`;"

#: ../glossary.rst:865
msgid "the global :mod:`numpy.random` random state if the estimator's :term:`random_state` parameter is set to None; and"
msgstr "el estado aleatorio global :mod:`numpy.random` si el parámetro :term:`random_state` del estimador se establece como None; y"

#: ../glossary.rst:867
msgid "any data or :term:`sample properties` passed to the most recent call to :term:`fit`, :term:`fit_transform` or :term:`fit_predict`, or data similarly passed in a sequence of calls to :term:`partial_fit`."
msgstr "cualquier dato o :term:`propiedades muestrales` pasados a la llamada más reciente a :term:`fit`, :term:`fit_transform` o :term:`fit_predict`, o datos pasados de forma similar en una secuencia de llamadas a :term:`partial_fit`."

#: ../glossary.rst:872
msgid "The estimated model is stored in public and private :term:`attributes` on the estimator instance, facilitating decoding through prediction and transformation methods."
msgstr "El modelo estimado se almacena en los :term:`atributos` públicos y privados de la instancia del estimador, lo que facilita la decodificación mediante métodos de predicción y transformación."

#: ../glossary.rst:876
msgid "Estimators must provide a :term:`fit` method, and should provide :term:`set_params` and :term:`get_params`, although these are usually provided by inheritance from :class:`base.BaseEstimator`."
msgstr "Los estimadores tienen que proporcionar un método :term:`fit`, y deberían proporcionar :term:`set_params` y :term:`get_params`, aunque normalmente se proporcionan por herencia de :class:`base.BaseEstimator`."

#: ../glossary.rst:880
msgid "The core functionality of some estimators may also be available as a :term:`function`."
msgstr "La funcionalidad principal de algunos estimadores también puede estar disponible como una :term:`función`."

#: ../glossary.rst:882
msgid "feature extractor"
msgstr "extractor de características"

#: ../glossary.rst:883
msgid "feature extractors"
msgstr "extractores de características"

#: ../glossary.rst:885
msgid "A :term:`transformer` which takes input where each sample is not represented as an :term:`array-like` object of fixed length, and produces an :term:`array-like` object of :term:`features` for each sample (and thus a 2-dimensional array-like for a set of samples).  In other words, it (lossily) maps a non-rectangular data representation into :term:`rectangular` data."
msgstr "Un :term:`transformador` que toma una entrada en la que cada muestra no está representada como un objeto :term:`array-like` de longitud fija, y produce un objeto :term:`array-like` de :term:`características` para cada muestra (y, por tanto, un array-like bidimensional para un conjunto de muestras). En otras palabras, mapea (con pérdida) una representación de datos no rectangulares en datos :term:`rectangular`(es)."

#: ../glossary.rst:892
msgid "Feature extractors must implement at least:"
msgstr "Los extractores de características deben implementar al menos:"

#: ../glossary.rst:895
msgid ":term:`transform`"
msgstr ":term:`transform`"

#: ../glossary.rst:896
msgid ":term:`get_feature_names`"
msgstr ":term:`get_feature_names`"

#: ../glossary.rst:897
msgid "meta-estimator"
msgstr "meta-estimador"

#: ../glossary.rst:898
msgid "meta-estimators"
msgstr "meta estimadores"

#: ../glossary.rst:899
msgid "metaestimator"
msgstr "meta estimador"

#: ../glossary.rst:900
msgid "metaestimators"
msgstr "meta estimadores"

#: ../glossary.rst:902
msgid "An :term:`estimator` which takes another estimator as a parameter. Examples include :class:`pipeline.Pipeline`, :class:`model_selection.GridSearchCV`, :class:`feature_selection.SelectFromModel` and :class:`ensemble.BaggingClassifier`."
msgstr "Un :term:`estimador` que toma otro estimador como parámetro. Algunos ejemplos son :class:`pipeline.Pipeline`, :class:`model_selection.GridSearchCV`, :class:`feature_selection.SelectFromModel` y :class:`ensemble.BaggingClassifier`."

#: ../glossary.rst:908
msgid "In a meta-estimator's :term:`fit` method, any contained estimators should be :term:`cloned` before they are fit (although FIXME: Pipeline and FeatureUnion do not do this currently). An exception to this is that an estimator may explicitly document that it accepts a pre-fitted estimator (e.g. using ``prefit=True`` in :class:`feature_selection.SelectFromModel`). One known issue with this is that the pre-fitted estimator will lose its model if the meta-estimator is cloned.  A meta-estimator should have ``fit`` called before prediction, even if all contained estimators are pre-fitted."
msgstr "En el método :term:`fit` de un meta-estimador, cualquier estimador contenido debe ser :term:`clonado` antes de ser ajustado (aunque FIXME: Pipeline y FeatureUnion no hacen esto actualmente). Una excepción a esto es que un estimador puede documentar explícitamente que acepta un estimador preajustado (por ejemplo, usando ``prefit=True`` en :class:`feature_selection.SelectFromModel`). Un problema conocido con esto es que el estimador preajustado perderá su modelo si el meta-estimador es clonado. Un meta-estimador llamar a ``fit`` antes de la predicción, incluso si todos los estimadores contenidos son preajustados."

#: ../glossary.rst:918
msgid "In cases where a meta-estimator's primary behaviors (e.g. :term:`predict` or :term:`transform` implementation) are functions of prediction/transformation methods of the provided *base estimator* (or multiple base estimators), a meta-estimator should provide at least the standard methods provided by the base estimator.  It may not be possible to identify which methods are provided by the underlying estimator until the meta-estimator has been :term:`fitted` (see also :term:`duck typing`), for which :func:`utils.metaestimators.if_delegate_has_method` may help.  It should also provide (or modify) the :term:`estimator tags` and :term:`classes_` attribute provided by the base estimator."
msgstr "En los casos en los que los comportamientos principales de un meta-estimador (por ejemplo, la implementación de :term:`predict` o :term:`transform`) son funciones de los métodos de predicción/transformación del *estimador base* proporcionado (o de múltiples estimadores base), un meta-estimador debe proporcionar al menos los métodos estándar proporcionados por el estimador base.  Puede que no sea posible identificar qué métodos proporciona el estimador subyacente hasta que el meta-estimador haya sido :term:`ajustado` (ver también :term:`duck typing`), para lo cual :func:`utils.metaestimators.if_delegate_has_method` puede ayudar.  También debería proporcionar (o modificar) las :term:`etiquetas del estimador` y el atributo :term:`classes_` proporcionados por el estimador base."

#: ../glossary.rst:930
msgid "Meta-estimators should be careful to validate data as minimally as possible before passing it to an underlying estimator. This saves computation time, and may, for instance, allow the underlying estimator to easily work with data that is not :term:`rectangular`."
msgstr "Los meta-estimadores deben tener cuidado de validar los datos lo menos posible antes de pasarlos a un estimador subyacente. Esto ahorra tiempo de cálculo y puede, por ejemplo, permitir que el estimador subyacente trabaje fácilmente con datos que no son :term:`rectangular`(es)."

#: ../glossary.rst:934 ../glossary.rst:1344
msgid "outlier detector"
msgstr "detector de valores atípicos"

#: ../glossary.rst:935
msgid "outlier detectors"
msgstr "detectores de valores atípicos"

#: ../glossary.rst:937
msgid "An :term:`unsupervised` binary :term:`predictor` which models the distinction between core and outlying samples."
msgstr "Un :term:`predictor` binario :term:`no supervisado` que modela la distinción entre muestras centrales y periféricas."

#: ../glossary.rst:940
msgid "Outlier detectors must implement:"
msgstr "Los detectores de valores atípicos deben implementar:"

#: ../glossary.rst:946
msgid "Inductive outlier detectors may also implement :term:`decision_function` to give a normalized inlier score where outliers have score below 0.  :term:`score_samples` may provide an unnormalized score per sample."
msgstr "Los detectores inductivos de valores atípicos también pueden implementar :term:`decision_function` para dar una puntuación normalizada de los valores atípicos cuando éstos tengan una puntuación inferior a 0. :term:`score_samples` puede proporcionar una puntuación no normalizada por muestra."

#: ../glossary.rst:950
msgid "predictor"
msgstr "predictor"

#: ../glossary.rst:951
msgid "predictors"
msgstr "predictores"

#: ../glossary.rst:953
msgid "An :term:`estimator` supporting :term:`predict` and/or :term:`fit_predict`. This encompasses :term:`classifier`, :term:`regressor`, :term:`outlier detector` and :term:`clusterer`."
msgstr "Un :term:`estimador` que soporta :term:`predict` y/o :term:`fit_predict`. Esto incluye :term:`clasificador`, :term:`regresor`, :term:`detector de valores atípicos` y :term:`agrupador`."

#: ../glossary.rst:957
msgid "In statistics, \"predictors\" refers to :term:`features`."
msgstr "En estadística, \"predictores\" se refiere a :term:`características`."

#: ../glossary.rst:958 ../glossary.rst:1352
msgid "regressor"
msgstr "regresor"

#: ../glossary.rst:959
msgid "regressors"
msgstr "regresores"

#: ../glossary.rst:961
msgid "A :term:`supervised` (or :term:`semi-supervised`) :term:`predictor` with :term:`continuous` output values."
msgstr "Un :term:`predictor` :term:`supervisado` (o :term:`semi-supervisado`) con valores de salida :term:`continuos <continuous>`."

#: ../glossary.rst:964
msgid "Regressors usually inherit from :class:`base.RegressorMixin`, which sets their :term:`_estimator_type` attribute."
msgstr "Los regresores suelen heredar de :class:`base.RegressorMixin`, que establece su atributo :term:`_estimator_type`."

#: ../glossary.rst:967
msgid "A regressor can be distinguished from other estimators with :func:`~base.is_regressor`."
msgstr "Un regresor puede distinguirse de otros estimadores con :func:`~base.is_regressor`."

#: ../glossary.rst:970
msgid "A regressor must implement:"
msgstr "Un regresor debe implementar:"

#: ../glossary.rst:975
msgid "transformer"
msgstr "transformador"

#: ../glossary.rst:976
msgid "transformers"
msgstr "transformadores"

#: ../glossary.rst:978
msgid "An estimator supporting :term:`transform` and/or :term:`fit_transform`. A purely :term:`transductive` transformer, such as :class:`manifold.TSNE`, may not implement ``transform``."
msgstr "Un estimador que soporta :term:`transform` y/o :term:`fit_transform`. Un transformador puramente :term:`transductivo`, como :class:`manifold.TSNE`, puede no implementar ``transform``."

#: ../glossary.rst:981
msgid "vectorizer"
msgstr "vectorizador"

#: ../glossary.rst:982
msgid "vectorizers"
msgstr "vectorizadores"

#: ../glossary.rst:984
msgid "See :term:`feature extractor`."
msgstr "Ver :term:`extractor de características`."

#: ../glossary.rst:986
msgid "There are further APIs specifically related to a small family of estimators, such as:"
msgstr "Existen otras APIs relacionadas específicamente con una pequeña familia de estimadores, como:"

#: ../glossary.rst:990
msgid "cross-validation splitter"
msgstr "separador de validación cruzada"

#: ../glossary.rst:991
msgid "CV splitter"
msgstr "separador de validación cruzada"

#: ../glossary.rst:992
msgid "cross-validation generator"
msgstr "generador de validación cruzada"

#: ../glossary.rst:994
msgid "A non-estimator family of classes used to split a dataset into a sequence of train and test portions (see :ref:`cross_validation`), by providing :term:`split` and :term:`get_n_splits` methods. Note that unlike estimators, these do not have :term:`fit` methods and do not provide :term:`set_params` or :term:`get_params`. Parameter validation may be performed in ``__init__``."
msgstr "Una familia de clases que no son estimadores y que se utilizan para dividir un conjunto de datos en una secuencia de partes de entrenamiento y de prueba (ver :ref:`cross_validation`), proporcionando métodos :term:`split` y :term:`get_n_splits`. Ten en cuenta que, a diferencia de los estimadores, éstas no tienen métodos :term:`fit` y no proporcionan :term:`set_params` o :term:`get_params`. La validación de parámetros puede realizarse en ``__init__``."

#: ../glossary.rst:1000
msgid "cross-validation estimator"
msgstr "estimador de validación cruzada"

#: ../glossary.rst:1002
msgid "An estimator that has built-in cross-validation capabilities to automatically select the best hyper-parameters (see the :ref:`User Guide <grid_search>`). Some example of cross-validation estimators are :class:`ElasticNetCV <linear_model.ElasticNetCV>` and :class:`LogisticRegressionCV <linear_model.LogisticRegressionCV>`. Cross-validation estimators are named `EstimatorCV` and tend to be roughly equivalent to `GridSearchCV(Estimator(), ...)`. The advantage of using a cross-validation estimator over the canonical :term:`estimator` class along with :ref:`grid search <grid_search>` is that they can take advantage of warm-starting by reusing precomputed results in the previous steps of the cross-validation process. This generally leads to speed improvements. An exception is the :class:`RidgeCV <linear_model.RidgeCV>` class, which can instead perform efficient Leave-One-Out CV."
msgstr "Un estimador que tiene incorporada la capacidad de validación cruzada para seleccionar automáticamente los mejores hiperparámetros (ver el :ref:`Manual de Usuario <grid_search>`). Algunos ejemplos de estimadores de validación cruzada son :class:`ElasticNetCV <linear_model.ElasticNetCV>` y :class:`LogisticRegressionCV <linear_model.LogisticRegressionCV>`. Los estimadores de validación cruzada se denominan `EstimatorCV` y suelen ser aproximadamente equivalentes a `GridSearchCV(Estimator(), ...)`. La ventaja de utilizar un estimador de validación cruzada sobre la clase canónica :term:`estimador` junto con la :ref:`búsqueda exhaustiva <grid_search>` es que pueden aprovechar el warm-starting reutilizando los resultados precalculados en los pasos anteriores del proceso de validación cruzada. Por lo general, esto supone una mejora de la velocidad. Una excepción es la clase :class:`RidgeCV <linear_model.RidgeCV>`, que en cambio puede realizar un eficiente Leave-One-Out CV."

#: ../glossary.rst:1016
msgid "scorer"
msgstr "puntuación (puntuador)"

#: ../glossary.rst:1018
msgid "A non-estimator callable object which evaluates an estimator on given test data, returning a number. Unlike :term:`evaluation metrics`, a greater returned number must correspond with a *better* score. See :ref:`scoring_parameter`."
msgstr "Un objeto invocable no estimador que evalúa un estimador en datos de prueba dados, devolviendo un número. A diferencia de las :term:`métricas de evaluación`, un número mayor devuelto debe corresponder con una *mejor* puntuación. Ver :ref:`scoring_parameter`."

#: ../glossary.rst:1023
msgid "Further examples:"
msgstr "Otros ejemplos:"

#: ../glossary.rst:1025
msgid ":class:`neighbors.DistanceMetric`"
msgstr ":class:`neighbors.DistanceMetric`"

#: ../glossary.rst:1026
msgid ":class:`gaussian_process.kernels.Kernel`"
msgstr ":class:`gaussian_process.kernels.Kernel`"

#: ../glossary.rst:1027
msgid "``tree.Criterion``"
msgstr "``tree.Criterion``"

#: ../glossary.rst:1032
msgid "Target Types"
msgstr "Tipos de Objetivos"

#: ../glossary.rst:1035
msgid "binary"
msgstr "binario"

#: ../glossary.rst:1037
msgid "A classification problem consisting of two classes.  A binary target may  be represented as for a :term:`multiclass` problem but with only two labels.  A binary decision function is represented as a 1d array."
msgstr "Un problema de clasificación que consta de dos clases.  Un objetivo binario puede representarse como para un problema :term:`multiclase` pero con sólo dos etiquetas.  Una función de decisión binaria se representa como un arreglo 1D."

#: ../glossary.rst:1041
msgid "Semantically, one class is often considered the \"positive\" class. Unless otherwise specified (e.g. using :term:`pos_label` in :term:`evaluation metrics`), we consider the class label with the greater value (numerically or lexicographically) as the positive class: of labels [0, 1], 1 is the positive class; of [1, 2], 2 is the positive class; of ['no', 'yes'], 'yes' is the positive class; of ['no', 'YES'], 'no' is the positive class.  This affects the output of :term:`decision_function`, for instance."
msgstr "Semánticamente, una clase suele considerarse la clase \"positiva\". A menos que se especifique lo contrario (por ejemplo, utilizando :term:`pos_label` en :term:`métricas de evaluación`), consideramos la etiqueta de clase con el mayor valor (numérico o lexicográfico) como la clase positiva: de las etiquetas [0, 1], 1 es la clase positiva; de [1, 2], 2 es la clase positiva; de ['no', 'yes'], 'yes' es la clase positiva; de ['no', 'YES'], 'no' es la clase positiva.  Esto afecta a la salida de :term:`decision_function`, por ejemplo."

#: ../glossary.rst:1050
msgid "Note that a dataset sampled from a multiclass ``y`` or a continuous ``y`` may appear to be binary."
msgstr "Ten en cuenta que un conjunto de datos muestreado de un ``y`` multiclase o un ``y`` continuo puede parecer binario."

#: ../glossary.rst:1053
msgid ":func:`~utils.multiclass.type_of_target` will return 'binary' for binary input, or a similar array with only a single class present."
msgstr ":func:`~utils.multiclass.type_of_target` devolverá 'binary' para la entrada binaria, o un arreglo similar con una sola clase presente."

#: ../glossary.rst:1055
msgid "continuous"
msgstr "continuo"

#: ../glossary.rst:1057
msgid "A regression problem where each sample's target is a finite floating point number represented as a 1-dimensional array of floats (or sometimes ints)."
msgstr "Un problema de regresión en el que el objetivo de cada muestra es un número de punto flotante finito representado como un arreglo unidimensional de números de punto flotante (floats) (o a veces ints)."

#: ../glossary.rst:1061
msgid ":func:`~utils.multiclass.type_of_target` will return 'continuous' for continuous input, but if the data is all integers, it will be identified as 'multiclass'."
msgstr ":func:`~utils.multiclass.type_of_target` devolverá 'continuous' para la entrada continua, pero si los datos son todos enteros, se identificará como 'multiclass'."

#: ../glossary.rst:1064
msgid "continuous multioutput"
msgstr "salida múltiple continua"

#: ../glossary.rst:1065
msgid "continuous multi-output"
msgstr "salida múltiple continua"

#: ../glossary.rst:1066
msgid "multioutput continuous"
msgstr "salida múltiple continua"

#: ../glossary.rst:1067
msgid "multi-output continuous"
msgstr "salida múltiple continua"

#: ../glossary.rst:1069
msgid "A regression problem where each sample's target consists of ``n_outputs`` :term:`outputs`, each one a finite floating point number, for a fixed int ``n_outputs > 1`` in a particular dataset."
msgstr "Un problema de regresión en el que el objetivo de cada muestra consiste en ``n_outputs`` :term:`salidas`, cada una de ellas un número de punto flotante finito, para un int fijo ``n_outputs > 1`` en un conjunto de datos particular."

#: ../glossary.rst:1073
msgid "Continuous multioutput targets are represented as multiple :term:`continuous` targets, horizontally stacked into an array of shape ``(n_samples, n_outputs)``."
msgstr "Los objetivos de salida múltiple continua se representan como múltiples objetivos :term:`continuo`(s), apilados horizontalmente en un arreglo de forma ``(n_samples, n_outputs)``."

#: ../glossary.rst:1077
msgid ":func:`~utils.multiclass.type_of_target` will return 'continuous-multioutput' for continuous multioutput input, but if the data is all integers, it will be identified as 'multiclass-multioutput'."
msgstr ":func:`~utils.multiclass.type_of_target` devolverá 'continuous-multioutput' para una entrada multisalida continua, pero si los datos son todos enteros, se identificará como 'multiclass-multioutput'."

#: ../glossary.rst:1081
msgid "multiclass"
msgstr "multiclase"

#: ../glossary.rst:1082
msgid "multi-class"
msgstr "multi-clase"

#: ../glossary.rst:1084
msgid "A classification problem consisting of more than two classes.  A multiclass target may be represented as a 1-dimensional array of strings or integers.  A 2d column vector of integers (i.e. a single output in :term:`multioutput` terms) is also accepted."
msgstr "Un problema de clasificación que consta de más de dos clases. Un objetivo multiclase puede representarse como un arreglo unidimensional de cadenas o enteros. También se acepta un vector columna 2D de enteros (es decir, una única salida en términos :term:`multisalida`)."

#: ../glossary.rst:1089
msgid "We do not officially support other orderable, hashable objects as class labels, even if estimators may happen to work when given classification targets of such type."
msgstr "No soportamos oficialmente otros objetos ordenables y hashables como etiquetas de clase, aunque los estimadores puedan funcionar cuando se dan objetivos de clasificación de ese tipo."

#: ../glossary.rst:1093
msgid "For semi-supervised classification, :term:`unlabeled` samples should have the special label -1 in ``y``."
msgstr "Para la clasificación semi supervisada, las muestras :term:`sin etiquetar` deben tener la etiqueta especial -1 en ``y``."

#: ../glossary.rst:1096
msgid "Within sckit-learn, all estimators supporting binary classification also support multiclass classification, using One-vs-Rest by default."
msgstr "Dentro de sckit-learn, todos los estimadores que soportan la clasificación binaria también soportan la clasificación multiclase, utilizando One-vs-Rest por defecto."

#: ../glossary.rst:1099
msgid "A :class:`preprocessing.LabelEncoder` helps to canonicalize multiclass targets as integers."
msgstr "Un :class:`preprocessing.LabelEncoder` ayuda a canonizar los objetivos multiclase como enteros."

#: ../glossary.rst:1102
msgid ":func:`~utils.multiclass.type_of_target` will return 'multiclass' for multiclass input. The user may also want to handle 'binary' input identically to 'multiclass'."
msgstr ":func:`~utils.multiclass.type_of_target` devolverá 'multiclass' para la entrada multiclase. El usuario también puede querer manejar la entrada 'binary' de forma idéntica a 'multiclass'."

#: ../glossary.rst:1105
msgid "multiclass multioutput"
msgstr "multiclase multisalida"

#: ../glossary.rst:1106
msgid "multi-class multi-output"
msgstr "multi-clase multi-salida"

#: ../glossary.rst:1107
msgid "multioutput multiclass"
msgstr "multiclase multisalida"

#: ../glossary.rst:1108
msgid "multi-output multi-class"
msgstr "multi-clase multi-salida"

#: ../glossary.rst:1110
msgid "A classification problem where each sample's target consists of ``n_outputs`` :term:`outputs`, each a class label, for a fixed int ``n_outputs > 1`` in a particular dataset.  Each output has a fixed set of available classes, and each sample is labeled with a class for each output. An output may be binary or multiclass, and in the case where all outputs are binary, the target is :term:`multilabel`."
msgstr "Un problema de clasificación en el que el objetivo de cada muestra consiste en ``n_outputs`` :term:`salidas`, cada una una etiqueta de clase, para un int fijo ``n_outputs > 1`` en un conjunto de datos particular. Cada salida tiene un conjunto fijo de clases disponibles, y cada muestra está etiquetada con una clase para cada salida. Una salida puede ser binaria o multiclase, y en el caso de que todas las salidas sean binarias, el objetivo es :term:`multietiqueta`."

#: ../glossary.rst:1118
msgid "Multiclass multioutput targets are represented as multiple :term:`multiclass` targets, horizontally stacked into an array of shape ``(n_samples, n_outputs)``."
msgstr "Los objetivos multisalida se representan como múltiples objetivos :term:`multiclase`, apilados horizontalmente en un arreglo de forma ``(n_samples, n_outputs)``."

#: ../glossary.rst:1122
msgid "XXX: For simplicity, we may not always support string class labels for multiclass multioutput, and integer class labels should be used."
msgstr "XXX: Por razones de simplicidad, no siempre podemos admitir etiquetas de clase de cadena para multiclase multisalida, y se deben utilizar etiquetas de clase de enteros."

#: ../glossary.rst:1125
msgid ":mod:`multioutput` provides estimators which estimate multi-output problems using multiple single-output estimators.  This may not fully account for dependencies among the different outputs, which methods natively handling the multioutput case (e.g. decision trees, nearest neighbors, neural networks) may do better."
msgstr ":mod:`multioutput` proporciona estimadores que estiman problemas de salidas múltiples utilizando múltiples estimadores de una sola salida. Es posible que esto no tenga en cuenta las dependencias entre las diferentes salidas, algo que los métodos que manejan de forma nativa el caso de las salidas múltiples (por ejemplo, árboles de decisión, vecinos más cercanos, redes neuronales) pueden hacer mejor."

#: ../glossary.rst:1131
msgid ":func:`~utils.multiclass.type_of_target` will return 'multiclass-multioutput' for multiclass multioutput input."
msgstr ":func:`~utils.multiclass.type_of_target` devolverá 'multiclass-multioutput' para una entrada multiclase multisalida."

#: ../glossary.rst:1133
msgid "multilabel"
msgstr "multietiqueta"

#: ../glossary.rst:1134
msgid "multi-label"
msgstr "multi-etiqueta"

#: ../glossary.rst:1136
msgid "A :term:`multiclass multioutput` target where each output is :term:`binary`.  This may be represented as a 2d (dense) array or sparse matrix of integers, such that each column is a separate binary target, where positive labels are indicated with 1 and negative labels are usually -1 or 0.  Sparse multilabel targets are not supported everywhere that dense multilabel targets are supported."
msgstr "Un objetivo :term:`multiclase multisalida` donde cada salida es :term:`binario`(a).  Puede representarse como un arreglo 2D (denso) o una matriz dispersa de enteros, de manera que cada columna es un objetivo binario independiente, donde las etiquetas positivas se indican con 1 y las negativas suelen ser -1 o 0. Los objetivos multietiqueta dispersos no se admiten en todos los casos en que los objetivos multietiqueta densos son admitidos."

#: ../glossary.rst:1143
msgid "Semantically, a multilabel target can be thought of as a set of labels for each sample.  While not used internally, :class:`preprocessing.MultiLabelBinarizer` is provided as a utility to convert from a list of sets representation to a 2d array or sparse matrix. One-hot encoding a multiclass target with :class:`preprocessing.LabelBinarizer` turns it into a multilabel problem."
msgstr "Semánticamente, un objetivo multietiqueta puede considerarse como un conjunto de etiquetas para cada muestra. Aunque no se utiliza internamente, :class:`preprocessing.MultiLabelBinarizer` se proporciona como una herramienta para convertir de una representación de lista de conjuntos a un arreglo 2D o matriz dispersa. La codificación one-hot de un objetivo multiclase con :class:`preprocessing.LabelBinarizer` lo convierte en un problema multietiqueta."

#: ../glossary.rst:1151
msgid ":func:`~utils.multiclass.type_of_target` will return 'multilabel-indicator' for multilabel input, whether sparse or dense."
msgstr ":func:`~utils.multiclass.type_of_target` devolverá 'multilabel-indicator' para la entrada multietiqueta, ya sea dispersa o densa."

#: ../glossary.rst:1153
msgid "multioutput"
msgstr "salida múltiple"

#: ../glossary.rst:1154
msgid "multi-output"
msgstr "salida múltiple"

#: ../glossary.rst:1156
msgid "A target where each sample has multiple classification/regression labels. See :term:`multiclass multioutput` and :term:`continuous multioutput`. We do not currently support modelling mixed classification and regression targets."
msgstr "Un objetivo en el que cada muestra tiene múltiples etiquetas de clasificación/regresión. Ver :term:`multiclase multisalida` y :term:`salida múltiple continua`. Actualmente no admitimos el modelado de objetivos mixtos de clasificación y regresión."

#: ../glossary.rst:1164
msgid "Methods"
msgstr "Métodos"

#: ../glossary.rst:1167
msgid "``decision_function``"
msgstr "``decision_function``"

#: ../glossary.rst:1169
msgid "In a fitted :term:`classifier` or :term:`outlier detector`, predicts a \"soft\" score for each sample in relation to each class, rather than the \"hard\" categorical prediction produced by :term:`predict`.  Its input is usually only some observed data, :term:`X`."
msgstr "En un :term:`clasificador` ajustado o :term:`detector de valores atípicos`, predice una puntuación \"blanda\" para cada muestra en relación con cada clase, en lugar de la predicción categórica \"dura\" producida por :term:`predict`. Su entrada suele ser sólo algunos datos observados, :term:`X`."

#: ../glossary.rst:1174 ../glossary.rst:1324 ../glossary.rst:1363
#: ../glossary.rst:1384 ../glossary.rst:1393 ../glossary.rst:1420
msgid "If the estimator was not already :term:`fitted`, calling this method should raise a :class:`exceptions.NotFittedError`."
msgstr "Si el estimador no estaba ya :term:`ajustado`, la llamada a este método debería lanzar un :class:`exceptions.NotFittedError`."

#: ../glossary.rst:1177 ../glossary.rst:1327
msgid "Output conventions:"
msgstr "Convenciones de salida:"

#: ../glossary.rst:1181
msgid "binary classification"
msgstr "clasificación binaria"

#: ../glossary.rst:1180
msgid "A 1-dimensional array, where values strictly greater than zero indicate the positive class (i.e. the last class in :term:`classes_`)."
msgstr "Un arreglo unidimensional, donde los valores estrictamente mayores que cero indican la clase positiva (es decir, la última clase en :term:`classes_`)."

#: ../glossary.rst:1185
msgid "multiclass classification"
msgstr "clasificación multiclase"

#: ../glossary.rst:1184
msgid "A 2-dimensional array, where the row-wise arg-maximum is the predicted class.  Columns are ordered according to :term:`classes_`."
msgstr "Un arreglo bidimensional, en el que el arg-máximo por fila es la clase predicha. Las columnas se ordenan según :term:`classes_`."

#: ../glossary.rst:1198
msgid "multilabel classification"
msgstr "clasificación multietiqueta"

#: ../glossary.rst:1188
msgid "Scikit-learn is inconsistent in its representation of multilabel decision functions.  Some estimators represent it like multiclass multioutput, i.e. a list of 2d arrays, each with two columns. Others represent it with a single 2d array, whose columns correspond to the individual binary classification decisions. The latter representation is ambiguously identical to the multiclass classification format, though its semantics differ: it should be interpreted, like in the binary case, by thresholding at 0."
msgstr "Scikit-learn es inconsistente en su representación de las funciones de decisión multietiqueta. Algunos estimadores la representan como una multiclase multisalida, es decir, una lista de arreglos 2D, cada uno con dos columnas. Otros la representan con un único arreglo 2D, cuyas columnas corresponden a las decisiones individuales de clasificación binaria. Esta última representación es ambiguamente idéntica al formato de clasificación multiclase, aunque su semántica difiere: debe interpretarse, como en el caso binario, fijando el umbral en 0."

#: ../glossary.rst:1197
msgid "TODO: `This gist <https://gist.github.com/jnothman/4807b1b0266613c20ba4d1f88d0f8cf5>`_ highlights the use of the different formats for multilabel."
msgstr "TODO: `Este gist <https://gist.github.com/jnothman/4807b1b0266613c20ba4d1f88d0f8cf5>`_ destaca el uso de los diferentes formatos para la multietiqueta."

#: ../glossary.rst:1201
msgid "multioutput classification"
msgstr "clasificación multisalida"

#: ../glossary.rst:1201
msgid "A list of 2d arrays, corresponding to each multiclass decision function."
msgstr "Una lista de arreglos 2D, que corresponde a cada función de decisión multiclase."

#: ../glossary.rst:1205
msgid "outlier detection"
msgstr "detección de valores atípicos"

#: ../glossary.rst:1204
msgid "A 1-dimensional array, where a value greater than or equal to zero indicates an inlier."
msgstr "Un arreglo unidimensional, en el que un valor mayor o igual a cero indica un valor típico."

#: ../glossary.rst:1206
msgid "``fit``"
msgstr "``fit``"

#: ../glossary.rst:1208
msgid "The ``fit`` method is provided on every estimator. It usually takes some :term:`samples` ``X``, :term:`targets` ``y`` if the model is supervised, and potentially other :term:`sample properties` such as :term:`sample_weight`.  It should:"
msgstr "El método ``fit`` se proporciona en cada estimador. Normalmente toma algunas :term:`muestras` ``X``, :term:`objetivos` ``y`` si el modelo es supervisado, y potencialmente otras :term:`propiedades muestrales` como :term:`sample_weight`. Debería:"

#: ../glossary.rst:1213
msgid "clear any prior :term:`attributes` stored on the estimator, unless :term:`warm_start` is used;"
msgstr "borrar cualquiera de los :term:`atributos` previos almacenados en el estimador, a menos que se utilice :term:`warm_start`;"

#: ../glossary.rst:1215
msgid "validate and interpret any :term:`parameters`, ideally raising an error if invalid;"
msgstr "validar e interpretar cualquiera de los :term:`parámetros`, idealmente lanzando un error si no es válido;"

#: ../glossary.rst:1217
msgid "validate the input data;"
msgstr "validar los datos de entrada;"

#: ../glossary.rst:1218
msgid "estimate and store model attributes from the estimated parameters and provided data; and"
msgstr "estimar y almacenar los atributos del modelo a partir de los parámetros estimados y los datos proporcionados; y"

#: ../glossary.rst:1220
msgid "return the now :term:`fitted` estimator to facilitate method chaining."
msgstr "devolver el estimador ahora :term:`ajustado` para facilitar el encadenamiento de métodos."

#: ../glossary.rst:1223
msgid ":ref:`glossary_target_types` describes possible formats for ``y``."
msgstr ":ref:`glossary_target_types` describe posibles formatos para ``y``."

#: ../glossary.rst:1224
msgid "``fit_predict``"
msgstr "``fit_predict``"

#: ../glossary.rst:1226
msgid "Used especially for :term:`unsupervised`, :term:`transductive` estimators, this fits the model and returns the predictions (similar to :term:`predict`) on the training data. In clusterers, these predictions are also stored in the :term:`labels_` attribute, and the output of ``.fit_predict(X)`` is usually equivalent to ``.fit(X).predict(X)``. The parameters to ``fit_predict`` are the same as those to ``fit``."
msgstr "Utilizado especialmente para los estimadores :term:`no supervisados <unsupervised>`, :term:`transductivos <transductive>`, ajusta el modelo y devuelve las predicciones (similar a :term:`predict`) sobre los datos de entrenamiento. En los agrupadores, estas predicciones también se almacenan en el atributo :term:`labels_`, y la salida de ``.fit_predict(X)`` suele ser equivalente a ``.fit(X).predict(X)``. Los parámetros de ``fit_predict`` son los mismos que los de ``fit``."

#: ../glossary.rst:1232
msgid "``fit_transform``"
msgstr "``fit_transform``"

#: ../glossary.rst:1234
msgid "A method on :term:`transformers` which fits the estimator and returns the transformed training data. It takes parameters as in :term:`fit` and its output should have the same shape as calling ``.fit(X, ...).transform(X)``. There are nonetheless rare cases where ``.fit_transform(X, ...)`` and ``.fit(X, ...).transform(X)`` do not return the same value, wherein training data needs to be handled differently (due to model blending in stacked ensembles, for instance; such cases should be clearly documented). :term:`Transductive <transductive>` transformers may also provide ``fit_transform`` but not :term:`transform`."
msgstr "Un método en :term:`transformadores` que ajusta el estimador y devuelve los datos de entrenamiento transformados. Toma parámetros como en :term:`fit` y su salida debería tener la misma forma que llamando a ``.fit(X, ...).transform(X)``. No obstante, hay casos raros en los que ``.fit_transform(X, ...)`` y ``.fit(X, ...).transform(X)`` no devuelven el mismo valor, donde los datos de entrenamiento deben tratarse de forma diferente (debido a la mezcla de modelos en ensembles apilados, por ejemplo; estos casos deben estar claramente documentados). Los transformadores :term:`transductivos <transductive>` también pueden proporcionar ``fit_transform`` pero no :term:`transform``."

#: ../glossary.rst:1245
msgid "One reason to implement ``fit_transform`` is that performing ``fit`` and ``transform`` separately would be less efficient than together. :class:`base.TransformerMixin` provides a default implementation, providing a consistent interface across transformers where ``fit_transform`` is or is not specialized."
msgstr "Una de las razones para implementar ``fit_transform`` es que realizar ``fit`` y ``transform`` por separado sería menos eficiente que hacerlo conjuntamente. :class:`base.TransformerMixin` proporciona una implementación por defecto, proporcionando una interfaz consistente a través de los transformadores en los que ``fit_transform`` está o no especializado."

#: ../glossary.rst:1251
msgid "In :term:`inductive` learning -- where the goal is to learn a generalized model that can be applied to new data -- users should be careful not to apply ``fit_transform`` to the entirety of a dataset (i.e. training and test data together) before further modelling, as this results in :term:`data leakage`."
msgstr "En el aprendizaje :term:`inductivo(a)` -- donde el objetivo es aprender un modelo generalizado que pueda aplicarse a nuevos datos -- los usuarios deben tener cuidado de no aplicar ``fit_transform`` a la totalidad de un conjunto de datos (es decir, los datos de entrenamiento y de prueba juntos) antes de seguir modelando, ya que esto resulta en :term:`fuga de datos`."

#: ../glossary.rst:1256
msgid "``get_feature_names``"
msgstr "``get_feature_names``"

#: ../glossary.rst:1258
msgid "Primarily for :term:`feature extractors`, but also used for other transformers to provide string names for each column in the output of the estimator's :term:`transform` method.  It outputs a list of strings and may take a list of strings as input, corresponding to the names of input columns from which output column names can be generated.  By default input features are named x0, x1, ...."
msgstr "Principalmente para :term:`extractores de características`, pero también se utiliza para que otros transformadores proporcionen nombres de cadenas para cada columna en la salida del método :term:`transform` del estimador. Tiene como salida una lista de cadenas y puede tomar una lista de cadenas como entrada, correspondiente a los nombres de las columnas de entrada a partir de las cuales se pueden generar los nombres de las columnas de salida.  Por defecto, las características de entrada se denominan x0, x1, ...."

#: ../glossary.rst:1264
msgid "``get_n_splits``"
msgstr "``get_n_splits``"

#: ../glossary.rst:1266
msgid "On a :term:`CV splitter` (not an estimator), returns the number of elements one would get if iterating through the return value of :term:`split` given the same parameters.  Takes the same parameters as split."
msgstr "En un :term:`separador de validación cruzada` (no un estimador), devuelve el número de elementos que se obtendría si se iterara a través del valor de retorno de :term:`split` dados los mismos parámetros. Toma los mismos parámetros que split."

#: ../glossary.rst:1270
msgid "``get_params``"
msgstr "``get_params``"

#: ../glossary.rst:1272
msgid "Gets all :term:`parameters`, and their values, that can be set using :term:`set_params`.  A parameter ``deep`` can be used, when set to False to only return those parameters not including ``__``, i.e.  not due to indirection via contained estimators."
msgstr "Obtiene todos los :term:`parámetros`, y sus valores, que pueden establecerse utilizando :term:`set_params`. Se puede utilizar un parámetro ``deep``, cuando se establece en False para devolver sólo aquellos parámetros que no incluyan ``__``, es decir, que no se deban a la indirección a través de estimadores contenidos."

#: ../glossary.rst:1277
msgid "Most estimators adopt the definition from :class:`base.BaseEstimator`, which simply adopts the parameters defined for ``__init__``. :class:`pipeline.Pipeline`, among others, reimplements ``get_params`` to declare the estimators named in its ``steps`` parameters as themselves being parameters."
msgstr "La mayoría de los estimadores adoptan la definición de :class:`base.BaseEstimator`, que simplemente adopta los parámetros definidos para ``__init__``. :class:`pipeline.Pipeline`, entre otros, reimplementa ``get_params`` para declarar los estimadores nombrados en sus parámetros ``steps`` como parámetros en sí mismos."

#: ../glossary.rst:1282
msgid "``partial_fit``"
msgstr "``partial_fit``"

#: ../glossary.rst:1284
msgid "Facilitates fitting an estimator in an online fashion.  Unlike ``fit``, repeatedly calling ``partial_fit`` does not clear the model, but updates it with the data provided. The portion of data provided to ``partial_fit`` may be called a mini-batch. Each mini-batch must be of consistent shape, etc. In iterative estimators, ``partial_fit`` often only performs a single iteration."
msgstr "Facilita el ajuste de un estimador en línea. A diferencia de ``fit``, llamar repetidamente a ``partial_fit`` no borra el modelo, sino que lo actualiza con los datos proporcionados. La porción de datos proporcionada a ``partial_fit`` puede llamarse mini lotes. Cada mini lote debe tener una forma consistente, etc. En los estimadores iterativos, ``partial_fit`` suele realizar una sola iteración."

#: ../glossary.rst:1291
msgid "``partial_fit`` may also be used for :term:`out-of-core` learning, although usually limited to the case where learning can be performed online, i.e. the model is usable after each ``partial_fit`` and there is no separate processing needed to finalize the model. :class:`cluster.Birch` introduces the convention that calling ``partial_fit(X)`` will produce a model that is not finalized, but the model can be finalized by calling ``partial_fit()`` i.e. without passing a further mini-batch."
msgstr "``partial_fit`` también se puede utilizar para el aprendizaje :term:`out-of-core`, aunque normalmente se limita al caso en que el aprendizaje se puede realizar en línea, es decir, el modelo es utilizable después de cada ``partial_fit`` y no hay ningún procesamiento separado necesario para finalizar el modelo. :class:`cluster.Birch` introduce la convención de que llamar a ``partial_fit(X)`` producirá un modelo que no está finalizado, pero el modelo puede ser finalizado llamando a ``partial_fit()``, es decir, sin pasar un mini lote adicional."

#: ../glossary.rst:1300
msgid "Generally, estimator parameters should not be modified between calls to ``partial_fit``, although ``partial_fit`` should validate them as well as the new mini-batch of data.  In contrast, ``warm_start`` is used to repeatedly fit the same estimator with the same data but varying parameters."
msgstr "Generalmente, los parámetros del estimador no deben ser modificados entre llamadas a ``partial_fit``, aunque ``partial_fit`` debe validarlos así como el nuevo mini lote de datos. En cambio, ``warm_start`` se utiliza para ajustar repetidamente el mismo estimador con los mismos datos pero variando los parámetros."

#: ../glossary.rst:1306
msgid "Like ``fit``, ``partial_fit`` should return the estimator object."
msgstr "Como ``fit``, ``partial_fit`` debe devolver el objeto estimador."

#: ../glossary.rst:1308
msgid "To clear the model, a new estimator should be constructed, for instance with :func:`base.clone`."
msgstr "Para borrar el modelo, debe construirse un nuevo estimador, por ejemplo con :func:`base.clone`."

#: ../glossary.rst:1311
msgid "NOTE: Using ``partial_fit`` after ``fit`` results in undefined behavior."
msgstr "NOTA: El uso de ``partial_fit`` después de ``fit`` resulta en un comportamiento indefinido."

#: ../glossary.rst:1312
msgid "``predict``"
msgstr "``predict``"

#: ../glossary.rst:1314
msgid "Makes a prediction for each sample, usually only taking :term:`X` as input (but see under regressor output conventions below). In a :term:`classifier` or :term:`regressor`, this prediction is in the same target space used in fitting (e.g. one of {'red', 'amber', 'green'} if the ``y`` in fitting consisted of these strings).  Despite this, even when ``y`` passed to :term:`fit` is a list or other array-like, the output of ``predict`` should always be an array or sparse matrix. In a :term:`clusterer` or :term:`outlier detector` the prediction is an integer."
msgstr "Hace una predicción para cada muestra, normalmente sólo tomando :term:`X` como entrada (pero consulta las convenciones de salida del regresor más abajo). En un :term:`clasificador` o :term:`regresor`, esta predicción está en el mismo espacio objetivo utilizado en el ajuste (por ejemplo, uno de {'red', 'amber', 'green'} si el ``y`` en el ajuste consistió en estas cadenas).  A pesar de esto, incluso cuando ``y`` pasado a :term:`fit` es una lista u otro array-like, la salida de ``predict`` debe ser siempre un arreglo o matriz dispersa. En un :term:`agrupador` o :term:`detector de valores atípicos` la predicción es un entero."

#: ../glossary.rst:1330
msgid "An array of shape ``(n_samples,)`` ``(n_samples, n_outputs)``. :term:`Multilabel <multilabel>` data may be represented as a sparse matrix if a sparse matrix was used in fitting. Each element should be one of the values in the classifier's :term:`classes_` attribute."
msgstr "Un arreglo de forma ``(n_samples,)`` ``(n_samples, n_outputs)``. Los datos :term:`multietiqueta <multilabel>` pueden representarse como una matriz dispersa si se ha utilizado una matriz dispersa en el ajuste. Cada elemento debe ser uno de los valores del atributo :term:`classes_` del clasificador."

#: ../glossary.rst:1337
msgid "An array of shape ``(n_samples,)`` where each value is from 0 to ``n_clusters - 1`` if the corresponding sample is clustered, and -1 if the sample is not clustered, as in :func:`cluster.dbscan`."
msgstr "Un arreglo de forma ``(n_samples,)`` donde cada valor es de 0 a ``n_clusters - 1`` si la muestra correspondiente está agrupada, y -1 si la muestra no está agrupada, como en :func:`cluster.dbscan`."

#: ../glossary.rst:1343
msgid "An array of shape ``(n_samples,)`` where each value is -1 for an outlier and 1 otherwise."
msgstr "Un arreglo de forma ``(n_samples,)`` donde cada valor es -1 para un valor atípico y 1 en caso contrario."

#: ../glossary.rst:1347
msgid "A numeric array of shape ``(n_samples,)``, usually float64. Some regressors have extra options in their ``predict`` method, allowing them to return standard deviation (``return_std=True``) or covariance (``return_cov=True``) relative to the predicted value.  In this case, the return value is a tuple of arrays corresponding to (prediction mean, std, cov) as required."
msgstr "Un arreglo numérico de forma ``(n_samples,)``, normalmente float64. Algunos regresores tienen opciones adicionales en su método ``predict``, lo que les permite devolver la desviación estándar (``return_std=True``) o la covarianza (``return_cov=True``) relativa al valor predicho.  En este caso, el valor devuelto es una tupla de arreglos correspondientes a (media de la predicción, std, cov) según se requiera."

#: ../glossary.rst:1353
msgid "``predict_log_proba``"
msgstr "``predict_log_proba``"

#: ../glossary.rst:1355
msgid "The natural logarithm of the output of :term:`predict_proba`, provided to facilitate numerical stability."
msgstr "El logaritmo natural de la salida de :term:`predict_proba`, proporcionado para facilitar la estabilidad numérica."

#: ../glossary.rst:1357
msgid "``predict_proba``"
msgstr "``predict_proba``"

#: ../glossary.rst:1359
msgid "A method in :term:`classifiers` and :term:`clusterers` that can return probability estimates for each class/cluster.  Its input is usually only some observed data, :term:`X`."
msgstr "Un método en :term:`clasificadores` y :term:`agrupadores` que puede devolver estimaciones de probabilidad para cada clase/conglomerado.  Su entrada suele ser sólo algunos datos observados, :term:`X`."

#: ../glossary.rst:1366
msgid "Output conventions are like those for :term:`decision_function` except in the :term:`binary` classification case, where one column is output for each class (while ``decision_function`` outputs a 1d array). For binary and multiclass predictions, each row should add to 1."
msgstr "Las convenciones de salida son como las de :term:`decision_function`, excepto en el caso de la clasificación :term:`binaria <binary>`, donde una columna es la salida para cada clase (mientras que ``decision_function`` tiene como salida un arreglo 1D). Para las predicciones binarias y multiclase, cada fila debe sumar 1."

#: ../glossary.rst:1371
msgid "Like other methods, ``predict_proba`` should only be present when the estimator can make probabilistic predictions (see :term:`duck typing`). This means that the presence of the method may depend on estimator parameters (e.g. in :class:`linear_model.SGDClassifier`) or training data (e.g. in :class:`model_selection.GridSearchCV`) and may only appear after fitting."
msgstr "Al igual que otros métodos, ``predict_proba`` sólo debe estar presente cuando el estimador puede realizar predicciones probabilísticas (ver :term:`duck typing`). Esto significa que la presencia del método puede depender de los parámetros del estimador (por ejemplo, en :class:`linear_model.SGDClassifier`) o de los datos de entrenamiento (por ejemplo, en :class:`model_selection.GridSearchCV`) y puede aparecer sólo después del ajuste."

#: ../glossary.rst:1377
msgid "``score``"
msgstr "``score``"

#: ../glossary.rst:1379
msgid "A method on an estimator, usually a :term:`predictor`, which evaluates its predictions on a given dataset, and returns a single numerical score.  A greater return value should indicate better predictions; accuracy is used for classifiers and R^2 for regressors by default."
msgstr "Un método en un estimador, normalmente un :term:`predictor`, que evalúa sus predicciones en un conjunto de datos dado, y devuelve una única puntuación numérica.  Un valor de retorno mayor debería indicar mejores predicciones; la precisión se utiliza para los clasificadores y R^2 para los regresores por defecto."

#: ../glossary.rst:1387
msgid "Some estimators implement a custom, estimator-specific score function, often the likelihood of the data under the model."
msgstr "Algunos estimadores implementan una función de puntuación personalizada y específica del estimador, a menudo la verosimilitud de los datos bajo el modelo."

#: ../glossary.rst:1389
msgid "``score_samples``"
msgstr "``score_samples``"

#: ../glossary.rst:1395
msgid "``set_params``"
msgstr "``set_params``"

#: ../glossary.rst:1397
msgid "Available in any estimator, takes keyword arguments corresponding to keys in :term:`get_params`.  Each is provided a new value to assign such that calling ``get_params`` after ``set_params`` will reflect the changed :term:`parameters`.  Most estimators use the implementation in :class:`base.BaseEstimator`, which handles nested parameters and otherwise sets the parameter as an attribute on the estimator. The method is overridden in :class:`pipeline.Pipeline` and related estimators."
msgstr "Disponible en cualquier estimador, toma argumentos de palabras clave correspondientes a las claves de :term:`get_params`. A cada uno se le proporciona un nuevo valor para asignar, de forma que al llamar a ``get_params`` después de ``set_params`` reflejará los :term:`parámetros` modificados. La mayoría de los estimadores utilizan la implementación en :class:`base.BaseEstimator`, que maneja los parámetros anidados y, en caso contrario, establece el parámetro como un atributo en el estimador. El método es sobreescrito en :class:`pipeline.Pipeline` y estimadores relacionados."

#: ../glossary.rst:1405
msgid "``split``"
msgstr "``split``"

#: ../glossary.rst:1407
msgid "On a :term:`CV splitter` (not an estimator), this method accepts parameters (:term:`X`, :term:`y`, :term:`groups`), where all may be optional, and returns an iterator over ``(train_idx, test_idx)`` pairs.  Each of {train,test}_idx is a 1d integer array, with values from 0 from ``X.shape[0] - 1`` of any length, such that no values appear in both some ``train_idx`` and its corresponding ``test_idx``."
msgstr "En un :term:`separador de validación cruzada` (no un estimador), este método acepta parámetros (:term:`X`, :term:`y`, :term:`groups`), donde todos pueden ser opcionales, y devuelve un iterador sobre pares ``(train_idx, test_idx)``.  Cada uno de {train,test}_idx es un arreglo 1D de enteros, con valores desde 0 hasta ``X.shape[0] - 1`` de cualquier longitud, de forma que no aparezcan valores tanto en algún ``train_idx`` como en su correspondiente ``test_idx``."

#: ../glossary.rst:1413
msgid "``transform``"
msgstr "``transform``"

#: ../glossary.rst:1415
msgid "In a :term:`transformer`, transforms the input, usually only :term:`X`, into some transformed space (conventionally notated as :term:`Xt`). Output is an array or sparse matrix of length :term:`n_samples` and with the number of columns fixed after :term:`fitting`."
msgstr "En un :term:`transformador`, transforma la entrada, normalmente sólo :term:`X`, en algún espacio transformado (convencionalmente anotado como :term:`Xt`). La salida es un arreglo o matriz dispersa de longitud :term:`n_samples` y con el número de columnas fijado después de :term:`ajustar`."

#: ../glossary.rst:1426
msgid "Parameters"
msgstr "Parámetros"

#: ../glossary.rst:1428
msgid "These common parameter names, specifically used in estimator construction (see concept :term:`parameter`), sometimes also appear as parameters of functions or non-estimator constructors."
msgstr "Estos nombres de parámetros comunes, utilizados específicamente en la construcción de estimadores (ver el concepto :term:`parámetro`), a veces también aparecen como parámetros de funciones o constructores no estimadores."

#: ../glossary.rst:1433
msgid "``class_weight``"
msgstr "``class_weight``"

#: ../glossary.rst:1435
msgid "Used to specify sample weights when fitting classifiers as a function of the :term:`target` class.  Where :term:`sample_weight` is also supported and given, it is multiplied by the ``class_weight`` contribution. Similarly, where ``class_weight`` is used in a :term:`multioutput` (including :term:`multilabel`) tasks, the weights are multiplied across outputs (i.e. columns of ``y``)."
msgstr "Se utiliza para especificar las ponderaciones de las muestras cuando se ajustan los clasificadores en función de la clase :term:`objetivo`. Donde :term:`sample_weight` también se admite y se da, se multiplica por la contribución de ``class_weight``. Del mismo modo, cuando se utiliza ``class_weight`` en tareas :term:`multisalida` (incluyendo :term:`multietiqueta`), las ponderaciones se multiplican por las salidas (es decir, las columnas de ``y``)."

#: ../glossary.rst:1442
msgid "By default, all samples have equal weight such that classes are effectively weighted by their prevalence in the training data. This could be achieved explicitly with ``class_weight={label1: 1, label2: 1, ...}`` for all class labels."
msgstr "Por defecto, todas las muestras tienen la misma ponderación, de manera que las clases se ponderan efectivamente por su prevalencia en los datos de entrenamiento. Esto podría lograrse explícitamente con ``class_weight={label1: 1, label2: 1, ...}`` para todas las etiquetas de clase."

#: ../glossary.rst:1447
msgid "More generally, ``class_weight`` is specified as a dict mapping class labels to weights (``{class_label: weight}``), such that each sample of the named class is given that weight."
msgstr "De forma más general, ``class_weight`` se especifica como un diccionario que mapea etiquetas de clase a ponderaciones (``{class_label: weight}``), de forma que cada muestra de la clase nombrada recibe esa ponderación."

#: ../glossary.rst:1451
msgid "``class_weight='balanced'`` can be used to give all classes equal weight by giving each sample a weight inversely related to its class's prevalence in the training data: ``n_samples / (n_classes * np.bincount(y))``. Class weights will be used differently depending on the algorithm: for linear models (such as linear SVM or logistic regression), the class weights will alter the loss function by weighting the loss of each sample by its class weight. For tree-based algorithms, the class weights will be used for reweighting the splitting criterion. **Note** however that this rebalancing does not take the weight of samples in each class into account."
msgstr "Se puede utilizar ``class_weight='balanced'`` para dar a todas las clases la misma ponderación dando a cada muestra una ponderación inversamente relacionada con la prevalencia de su clase en los datos de entrenamiento: ``n_samples / (n_classes * np.bincount(y))``. Las ponderaciones de las clases se utilizarán de forma diferente según el algoritmo: para los modelos lineales (como las Máquinas de Vectores de Soporte [Support Vector Machines, SVM] lineales o la regresión logística), las ponderaciones de las clases alterarán la función de pérdida ponderando la pérdida de cada muestra por su ponderación de la clase. Para los algoritmos basados en árboles, las ponderaciones de la clase se utilizarán para reponderar el criterio de separación. **Note**, sin embargo, que este reequilibrio no tiene en cuenta la ponderación de las muestras en cada clase."

#: ../glossary.rst:1463
msgid "For multioutput classification, a list of dicts is used to specify weights for each output. For example, for four-class multilabel classification weights should be ``[{0: 1, 1: 1}, {0: 1, 1: 5}, {0: 1, 1: 1}, {0: 1, 1: 1}]`` instead of ``[{1:1}, {2:5}, {3:1}, {4:1}]``."
msgstr "Para la clasificación multisalida, se utiliza una lista de diccionarios para especificar las ponderaciones de cada salida. Por ejemplo, para la clasificación multietiqueta de cuatro clases las ponderaciones deben ser ``[{0: 1, 1: 1}, {0: 1, 1: 5}, {0: 1, 1: 1}, {0: 1, 1: 1}]`` en lugar de ``[{1:1}, {2:5}, {3:1}, {4:1}]``."

#: ../glossary.rst:1468
msgid "The ``class_weight`` parameter is validated and interpreted with :func:`utils.compute_class_weight`."
msgstr "El parámetro ``class_weight`` se valida e interpreta con :func:`utils.compute_class_weight`."

#: ../glossary.rst:1470
msgid "``cv``"
msgstr "``cv``"

#: ../glossary.rst:1472
msgid "Determines a cross validation splitting strategy, as used in cross-validation based routines. ``cv`` is also available in estimators such as :class:`multioutput.ClassifierChain` or :class:`calibration.CalibratedClassifierCV` which use the predictions of one estimator as training data for another, to not overfit the training supervision."
msgstr "Determina una estrategia de separación de validación cruzada, como la utilizada en las rutinas basadas en la validación cruzada. ``cv`` también está disponible en estimadores como :class:`multioutput.ClassifierChain` o :class:`calibration.CalibratedClassifierCV` que utilizan las predicciones de un estimador como datos de entrenamiento para otro, para no sobreajustar la supervisión de entrenamiento."

#: ../glossary.rst:1479
msgid "Possible inputs for ``cv`` are usually:"
msgstr "Las entradas posibles para ``cv`` son usualmente:"

#: ../glossary.rst:1481
msgid "An integer, specifying the number of folds in K-fold cross validation. K-fold will be stratified over classes if the estimator is a classifier (determined by :func:`base.is_classifier`) and the :term:`targets` may represent a binary or multiclass (but not multioutput) classification problem (determined by :func:`utils.multiclass.type_of_target`)."
msgstr "Un número entero que especifica el número de pliegues en la validación cruzada K-fold. K-fold se estratificará sobre las clases si el estimador es un clasificador (determinado por :func:`base.is_classifier`) y los :term:`objetivos` pueden representar un problema de clasificación binario o multiclase (pero no de salida múltiple) (determinado por :func:`utils.multiclass.type_of_target`)."

#: ../glossary.rst:1487
msgid "A :term:`cross-validation splitter` instance. Refer to the :ref:`User Guide <cross_validation>` for splitters available within Scikit-learn."
msgstr "Una instancia de :term:`separador de validación cruzada`. Consulta el :ref:`Manual de Usuario <cross_validation>` para conocer los separadores disponibles en scikit-learn."

#: ../glossary.rst:1490
msgid "An iterable yielding train/test splits."
msgstr "Un iterable que produce separaciones de entrenamiento/prueba."

#: ../glossary.rst:1492
msgid "With some exceptions (especially where not using cross validation at all is an option), the default is 5-fold."
msgstr "Salvo algunas excepciones (especialmente cuando es una opción prescindir de la validación cruzada), el valor por defecto es de 5 pliegues."

#: ../glossary.rst:1495
msgid "``cv`` values are validated and interpreted with :func:`utils.check_cv`."
msgstr "Los valores de ``cv`` se validan e interpretan con :func:`utils.check_cv`."

#: ../glossary.rst:1496
msgid "``kernel``"
msgstr "``kernel``"

#: ../glossary.rst:1499
msgid "``max_iter``"
msgstr "``max_iter``"

#: ../glossary.rst:1501
msgid "For estimators involving iterative optimization, this determines the maximum number of iterations to be performed in :term:`fit`.  If ``max_iter`` iterations are run without convergence, a :class:`exceptions.ConvergenceWarning` should be raised.  Note that the interpretation of \"a single iteration\" is inconsistent across estimators: some, but not all, use it to mean a single epoch (i.e. a pass over every sample in the data)."
msgstr "Para los estimadores que implican una optimización iterativa, esto determina el número máximo de iteraciones a realizar en :term:`fit`. Si las iteraciones ``max_iter`` se ejecutan sin convergencia, se debe levantar un :class:`exceptions.ConvergenceWarning`. Ten en cuenta que la interpretación de \"una sola iteración\" es inconsistente entre los estimadores: algunos, pero no todos, lo utilizan para referirse a una sola época (es decir, una pasada por cada muestra en los datos)."

#: ../glossary.rst:1509
msgid "FIXME perhaps we should have some common tests about the relationship between ConvergenceWarning and max_iter."
msgstr "FIXME tal vez deberíamos tener algunos tests comunes sobre la relación entre ConvergenceWarning y max_iter."

#: ../glossary.rst:1511
msgid "``memory``"
msgstr "``memory``"

#: ../glossary.rst:1513
msgid "Some estimators make use of :class:`joblib.Memory` to store partial solutions during fitting. Thus when ``fit`` is called again, those partial solutions have been memoized and can be reused."
msgstr "Algunos estimadores hacen uso de :class:`joblib.Memory` para almacenar soluciones parciales durante el ajuste. Así, cuando se llama de nuevo a ``fit``, esas soluciones parciales han sido memorizadas y pueden ser reutilizadas."

#: ../glossary.rst:1517
msgid "A ``memory`` parameter can be specified as a string with a path to a directory, or a :class:`joblib.Memory` instance (or an object with a similar interface, i.e. a ``cache`` method) can be used."
msgstr "Un parámetro ``memory`` puede especificarse como una cadena con una ruta a un directorio, o puede utilizarse una instancia de :class:`joblib.Memory` (o un objeto con una interfaz similar, es decir, un método ``cache``)."

#: ../glossary.rst:1521
msgid "``memory`` values are validated and interpreted with :func:`utils.validation.check_memory`."
msgstr "Los valores de ``memory`` se validan e interpretan con :func:`utils.validation.check_memory`."

#: ../glossary.rst:1523
msgid "``metric``"
msgstr "``metric``"

#: ../glossary.rst:1525
msgid "As a parameter, this is the scheme for determining the distance between two data points.  See :func:`metrics.pairwise_distances`.  In practice, for some algorithms, an improper distance metric (one that does not obey the triangle inequality, such as Cosine Distance) may be used."
msgstr "Como parámetro, es el esquema para determinar la distancia entre dos puntos de datos.  Ver :func:`metrics.pairwise_distances`. En la práctica, para algunos algoritmos, se puede utilizar una métrica de distancia inadecuada (una que no obedece a la desigualdad del triángulo, como la Distancia del Coseno)."

#: ../glossary.rst:1530
msgid "XXX: hierarchical clustering uses ``affinity`` with this meaning."
msgstr "XXX: el análisis de conglomerados jerárquico utiliza ``affinity`` con este significado."

#: ../glossary.rst:1532
msgid "We also use *metric* to refer to :term:`evaluation metrics`, but avoid using this sense as a parameter name."
msgstr "También utilizamos *metric* para referirnos a :term:`métricas de evaluación`, pero evitamos utilizar este sentido como nombre de parámetro."

#: ../glossary.rst:1534
msgid "``n_components``"
msgstr "``n_components``"

#: ../glossary.rst:1536
msgid "The number of features which a :term:`transformer` should transform the input into. See :term:`components_` for the special case of affine projection."
msgstr "El número de características en las que un :term:`transformador` debe transformar la entrada. Ver :term:`components_` para el caso especial de la proyección afín."

#: ../glossary.rst:1539
msgid "``n_iter_no_change``"
msgstr "``n_iter_no_change``"

#: ../glossary.rst:1541
msgid "Number of iterations with no improvement to wait before stopping the iterative procedure. This is also known as a *patience* parameter. It is typically used with :term:`early stopping` to avoid stopping too early."
msgstr "Número de iteraciones sin mejora a esperar antes de detener el procedimiento iterativo. También se conoce como parámetro de *paciencia*. Se suele utilizar con :term:`parada anticipada` para evitar que se detenga demasiado pronto."

#: ../glossary.rst:1545
msgid "``n_jobs``"
msgstr "``n_jobs``"

#: ../glossary.rst:1547
msgid "This parameter is used to specify how many concurrent processes or threads should be used for routines that are parallelized with :term:`joblib`."
msgstr "Este parámetro se utiliza para especificar cuántos procesos o hilos concurrentes deben utilizarse para las rutinas que se paralelizan con :term:`joblib`."

#: ../glossary.rst:1551
msgid "``n_jobs`` is an integer, specifying the maximum number of concurrently running workers. If 1 is given, no joblib parallelism is used at all, which is useful for debugging. If set to -1, all CPUs are used. For ``n_jobs`` below -1, (n_cpus + 1 + n_jobs) are used. For example with ``n_jobs=-2``, all CPUs but one are used."
msgstr "``n_jobs`` es un número entero, que especifica el número máximo de trabajadores que se ejecutan simultáneamente. Si se da 1, no se utiliza el paralelismo joblib en absoluto, lo que es útil para la depuración. Si se establece en -1, se utilizan todas las CPUs. Para ``n_jobs`` por debajo de -1, se utilizan (n_cpus + 1 + n_jobs). Por ejemplo, con ``n_jobs=-2``, se utilizan todas las CPUs excepto una."

#: ../glossary.rst:1557
msgid "``n_jobs`` is ``None`` by default, which means *unset*; it will generally be interpreted as ``n_jobs=1``, unless the current :class:`joblib.Parallel` backend context specifies otherwise."
msgstr "``n_jobs`` es ``None`` por defecto, lo que significa *no establecido*; generalmente se interpretará como ``n_jobs=1``, a menos que el contexto actual del backend :class:`joblib.Parallel` especifique lo contrario."

#: ../glossary.rst:1561
msgid "For more details on the use of ``joblib`` and its interactions with scikit-learn, please refer to our :ref:`parallelism notes <parallelism>`."
msgstr "Para más detalles sobre el uso de ``joblib`` y sus interacciones con scikit-learn, consulta nuestras :ref:`notas de paralelismo <parallelism>`."

#: ../glossary.rst:1564
msgid "``pos_label``"
msgstr "``pos_label``"

#: ../glossary.rst:1566
msgid "Value with which positive labels must be encoded in binary classification problems in which the positive class is not assumed. This value is typically required to compute asymmetric evaluation metrics such as precision and recall."
msgstr "Valor con el que deben codificarse las etiquetas positivas en los problemas de clasificación binaria en los que no se asume la clase positiva. Este valor suele ser necesario para calcular métricas de evaluación asimétricas como la precisión y la exhaustividad."

#: ../glossary.rst:1570
msgid "``random_state``"
msgstr "``random_state``"

#: ../glossary.rst:1572
msgid "Whenever randomization is part of a Scikit-learn algorithm, a ``random_state`` parameter may be provided to control the random number generator used.  Note that the mere presence of ``random_state`` doesn't mean that randomization is always used, as it may be dependent on another parameter, e.g. ``shuffle``, being set."
msgstr "Cuando la aleatorización es parte de un algoritmo de scikit-learn, se puede proporcionar un parámetro ``random_state`` para controlar el generador de números aleatorios utilizado. Ten en cuenta que la mera presencia de ``random_state`` no significa que la aleatorización se utilice siempre, ya que puede depender de que se establezca otro parámetro, por ejemplo, ``shuffle``."

#: ../glossary.rst:1578
msgid "The passed value will have an effect on the reproducibility of the results returned by the function (:term:`fit`, :term:`split`, or any other function like :func:`~sklearn.cluster.k_means`). `random_state`'s value may be:"
msgstr "El valor pasado tendrá un efecto en la reproducibilidad de los resultados devueltos por la función (:term:`fit`, :term:`split`, o cualquier otra función como :func:`~sklearn.cluster.k_means`). El valor de `random_state` puede ser:"

#: ../glossary.rst:1586
msgid "None (default)"
msgstr "None (por defecto)"

#: ../glossary.rst:1584
msgid "Use the global random state instance from :mod:`numpy.random`. Calling the function multiple times will reuse the same instance, and will produce different results."
msgstr "Utiliza la instancia global de estado aleatorio de :mod:`numpy.random`. Si se llama a la función varias veces, se reutilizará la misma instancia y se producirán resultados diferentes."

#: ../glossary.rst:1595
msgid "An integer"
msgstr "Un número entero"

#: ../glossary.rst:1589
msgid "Use a new random number generator seeded by the given integer. Using an int will produce the same results across different calls. However, it may be worthwhile checking that your results are stable across a number of different distinct random seeds. Popular integer random seeds are 0 and `42 <https://en.wikipedia.org/wiki/Answer_to_the_Ultimate_Question_of_Life%2C_the_Universe%2C_and_Everything>`_."
msgstr "Utiliza un nuevo generador de números aleatorios cuya semilla es el número entero dado. El uso de un int producirá los mismos resultados en diferentes llamadas. Sin embargo, puede valer la pena comprobar que sus resultados son estables a través de una serie de diferentes semillas aleatorias. Las semillas aleatorias enteras más populares son 0 y `42 <https://en.wikipedia.org/wiki/Answer_to_the_Ultimate_Question_of_Life%2C_the_Universe%2C_and_Everything>`_."

#: ../glossary.rst:1601
msgid "A :class:`numpy.random.RandomState` instance"
msgstr "Una instancia de :class:`numpy.random.RandomState`"

#: ../glossary.rst:1598
msgid "Use the provided random state, only affecting other users of that same random state instance. Calling the function multiple times will reuse the same instance, and will produce different results."
msgstr "Utiliza el estado aleatorio proporcionado, afectando únicamente a otros usuarios de esa misma instancia de estado aleatorio. Llamar a la función varias veces reutilizará la misma instancia, y producirá resultados diferentes."

#: ../glossary.rst:1603
msgid ":func:`utils.check_random_state` is used internally to validate the input ``random_state`` and return a :class:`~numpy.random.RandomState` instance."
msgstr ":func:`utils.check_random_state` se utiliza internamente para validar la entrada ``random_state`` y devolver una instancia de :class:`~numpy.random.RandomState`."

#: ../glossary.rst:1607
msgid "For more details on how to control the randomness of scikit-learn objects and avoid common pitfalls, you may refer to :ref:`randomness`."
msgstr "Para más detalles sobre cómo controlar la aleatoriedad de los objetos de scikit-learn y evitar errores comunes, puedes consultar :ref:`randomness`."

#: ../glossary.rst:1609
msgid "``scoring``"
msgstr "``scoring``"

#: ../glossary.rst:1611
msgid "Specifies the score function to be maximized (usually by :ref:`cross validation <cross_validation>`), or -- in some cases -- multiple score functions to be reported. The score function can be a string accepted by :func:`metrics.get_scorer` or a callable :term:`scorer`, not to be confused with an :term:`evaluation metric`, as the latter have a more diverse API.  ``scoring`` may also be set to None, in which case the estimator's :term:`score` method is used.  See :ref:`scoring_parameter` in the User Guide."
msgstr "Especifica la función de puntuación que se va a maximizar (normalmente mediante :ref:`validación cruzada <cross_validation>`), o -- en algunos casos -- múltiples funciones de puntuación a ser reportadas. La función de puntuación puede ser una cadena aceptada por :func:`metrics.get_scorer` o un :term:`puntuador` invocable, que no debe confundirse con una :term:`métrica de evaluación`, ya que esta última tiene una API más diversa. ``scoring`` también se puede establecer como None, en cuyo caso se utiliza el método :term:`score` del estimador. Ver :ref:`scoring_parameter` en el Manual de Usuario."

#: ../glossary.rst:1620
msgid "Where multiple metrics can be evaluated, ``scoring`` may be given either as a list of unique strings, a dictionary with names as keys and callables as values or a callable that returns a dictionary. Note that this does *not* specify which score function is to be maximized, and another parameter such as ``refit`` maybe used for this purpose."
msgstr "Donde múltiples métricas pueden ser evaluadas, ``scoring`` puede ser dado como una lista de cadenas únicas, un diccionario con nombres como claves y callables como valores o un callable que devuelve un diccionario. Ten en cuenta que esto *no* especifica qué función de puntuación debe ser maximizada, y otro parámetro como ``refit`` puede ser utilizado para este propósito."

#: ../glossary.rst:1627
msgid "The ``scoring`` parameter is validated and interpreted using :func:`metrics.check_scoring`."
msgstr "El parámetro ``scoring`` se valida e interpreta mediante :func:`metrics.check_scoring`."

#: ../glossary.rst:1629
msgid "``verbose``"
msgstr "``verbose``"

#: ../glossary.rst:1631
msgid "Logging is not handled very consistently in Scikit-learn at present, but when it is provided as an option, the ``verbose`` parameter is usually available to choose no logging (set to False). Any True value should enable some logging, but larger integers (e.g. above 10) may be needed for full verbosity.  Verbose logs are usually printed to Standard Output. Estimators should not produce any output on Standard Output with the default ``verbose`` setting."
msgstr "El logging no se maneja de manera muy consistente en scikit-learn en la actualidad, pero cuando se proporciona como una opción, el parámetro ``verbose`` suele estar disponible para elegir no registrar (establecido en False). Cualquier valor True debería permitir algún tipo de registro, pero los enteros más grandes (por ejemplo, por encima de 10) pueden ser necesarios para la verbosidad completa. Los registros verbosos se imprimen normalmente en la Salida Estándar. Los estimadores no deberían producir ninguna salida en la Salida Estándar con la configuración por defecto ``verbose``."

#: ../glossary.rst:1639
msgid "``warm_start``"
msgstr "``warm_start``"

#: ../glossary.rst:1642
msgid "When fitting an estimator repeatedly on the same dataset, but for multiple parameter values (such as to find the value maximizing performance as in :ref:`grid search <grid_search>`), it may be possible to reuse aspects of the model learned from the previous parameter value, saving time.  When ``warm_start`` is true, the existing :term:`fitted` model :term:`attributes` are used to initialize the new model in a subsequent call to :term:`fit`."
msgstr "Cuando se ajusta un estimador repetidamente en el mismo conjunto de datos, pero para múltiples valores de parámetros (como para encontrar el valor que maximiza el rendimiento como en :ref:`búsqueda exhaustiva <grid_search>`), puede ser posible reutilizar aspectos del modelo aprendidos del valor de parámetro anterior, ahorrando tiempo. Cuando ``warm_start`` es verdadero, los :term:`atributos` del modelo :term:`ajustado` existente se utilizan para inicializar el nuevo modelo en una llamada posterior a :term:`fit`."

#: ../glossary.rst:1650
msgid "Note that this is only applicable for some models and some parameters, and even some orders of parameter values. For example, ``warm_start`` may be used when building random forests to add more trees to the forest (increasing ``n_estimators``) but not to reduce their number."
msgstr "Ten en cuenta que esto sólo es aplicable para algunos modelos y algunos parámetros, e incluso algunos órdenes de valores de parámetros. Por ejemplo, ``warm_start`` puede utilizarse al construir bosques aleatorios para añadir más árboles al bosque (incrementando ``n_estimators``) pero no para reducir su número."

#: ../glossary.rst:1656
msgid ":term:`partial_fit` also retains the model between calls, but differs: with ``warm_start`` the parameters change and the data is (more-or-less) constant across calls to ``fit``; with ``partial_fit``, the mini-batch of data changes and model parameters stay fixed."
msgstr ":term:`partial_fit` también conserva el modelo entre llamadas, pero difiere: con ``warm_start`` los parámetros cambian y los datos son (más o menos) constantes a través de las llamadas a ``fit``; con ``partial_fit``, el mini lote de datos cambia y los parámetros del modelo permanecen fijos."

#: ../glossary.rst:1661
msgid "There are cases where you want to use ``warm_start`` to fit on different, but closely related data. For example, one may initially fit to a subset of the data, then fine-tune the parameter search on the full dataset. For classification, all data in a sequence of ``warm_start`` calls to ``fit`` must include samples from each class."
msgstr "Hay casos en los que se desea utilizar ``warm_start`` para ajustar en datos diferentes, pero estrechamente relacionados. Por ejemplo, uno puede ajustar inicialmente a un subconjunto de los datos, y luego afinar la búsqueda de parámetros en el conjunto de datos completo. Para la clasificación, todos los datos en una secuencia de llamadas ``warm_start`` a ``fit`` deben incluir muestras de cada clase."

#: ../glossary.rst:1670
msgid "Attributes"
msgstr "Atributos"

#: ../glossary.rst:1672
msgid "See concept :term:`attribute`."
msgstr "Ver el concepto :term:`atributo`."

#: ../glossary.rst:1675
msgid "``classes_``"
msgstr "``classes_``"

#: ../glossary.rst:1677
msgid "A list of class labels known to the :term:`classifier`, mapping each label to a numerical index used in the model representation our output. For instance, the array output from :term:`predict_proba` has columns aligned with ``classes_``. For :term:`multi-output` classifiers, ``classes_`` should be a list of lists, with one class listing for each output.  For each output, the classes should be sorted (numerically, or lexicographically for strings)."
msgstr "Una lista de etiquetas de clase conocidas por el :term:`clasificador`, mapeando cada etiqueta a un índice numérico utilizado en la representación del modelo de nuestra salida. Por ejemplo, el arreglo de salida de :term:`predict_proba` tiene columnas alineadas con ``classes_``. Para los clasificadores de :term:`salida múltiple`, ``classes_`` debe ser una lista de listas, con una lista de clases para cada salida. Para cada salida, las clases deben estar ordenadas (numéricamente, o lexicográficamente para cadenas)."

#: ../glossary.rst:1685
msgid "``classes_`` and the mapping to indices is often managed with :class:`preprocessing.LabelEncoder`."
msgstr "``classes_`` y el mapeo a los índices se suele gestionar con :class:`preprocessing.LabelEncoder`."

#: ../glossary.rst:1687
msgid "``components_``"
msgstr "``components_``"

#: ../glossary.rst:1689
msgid "An affine transformation matrix of shape ``(n_components, n_features)`` used in many linear :term:`transformers` where :term:`n_components` is the number of output features and :term:`n_features` is the number of input features."
msgstr "Una matriz de transformación afín de forma ``(n_components, n_features)`` utilizada en muchos :term:`transformadores` lineales donde :term:`n_components` es el número de características de salida y :term:`n_features` es el número de características de entrada."

#: ../glossary.rst:1694
msgid "See also :term:`components_` which is a similar attribute for linear predictors."
msgstr "Ver también :term:`components_` que es un atributo similar para los predictores lineales."

#: ../glossary.rst:1696
msgid "``coef_``"
msgstr "``coef_``"

#: ../glossary.rst:1698
msgid "The weight/coefficient matrix of a generalised linear model :term:`predictor`, of shape ``(n_features,)`` for binary classification and single-output regression, ``(n_classes, n_features)`` for multiclass classification and ``(n_targets, n_features)`` for multi-output regression. Note this does not include the intercept (or bias) term, which is stored in ``intercept_``."
msgstr "La matriz de ponderaciones/coeficientes de un :term:`predictor` de modelo lineal generalizado, de forma ``(n_features,)`` para la clasificación binaria y la regresión de salida única, ``(n_clases, n_features)`` para la clasificación multiclase y ``(n_targets, n_features)`` para la regresión de salida múltiple. Ten en cuenta que esto no incluye el término de intercepto (o sesgo), que se almacena en ``intercept_``."

#: ../glossary.rst:1705
msgid "When available, ``feature_importances_`` is not usually provided as well, but can be calculated as the  norm of each feature's entry in ``coef_``."
msgstr "Cuando está disponible, ``feature_importances_`` no suele proporcionarse también, pero puede calcularse como la norma de la entrada de cada característica en ``coef_``."

#: ../glossary.rst:1709
msgid "See also :term:`components_` which is a similar attribute for linear transformers."
msgstr "Ver también :term:`components_` que es un atributo similar para los transformadores lineales."

#: ../glossary.rst:1711
msgid "``embedding_``"
msgstr "``embedding_``"

#: ../glossary.rst:1713
msgid "An embedding of the training data in :ref:`manifold learning <manifold>` estimators, with shape ``(n_samples, n_components)``, identical to the output of :term:`fit_transform`.  See also :term:`labels_`."
msgstr "Un embedding de los datos de entrenamiento en estimadores :ref:`aprendizaje múltiple <manifold>`, con forma ``(n_samples, n_components)``, idéntico a la salida de :term:`fit_transform`. Ver también :term:`labels_`."

#: ../glossary.rst:1717
msgid "``n_iter_``"
msgstr "``n_iter_``"

#: ../glossary.rst:1719
msgid "The number of iterations actually performed when fitting an iterative estimator that may stop upon convergence. See also :term:`max_iter`."
msgstr "El número de iteraciones realmente realizadas cuando se ajusta un estimador iterativo que puede detenerse en la convergencia. Ver también :term:`max_iter`."

#: ../glossary.rst:1721
msgid "``feature_importances_``"
msgstr "``feature_importances_``"

#: ../glossary.rst:1723
msgid "A vector of shape ``(n_features,)`` available in some :term:`predictors` to provide a relative measure of the importance of each feature in the predictions of the model."
msgstr "Un arreglo de forma ``(n_features,)`` disponible en algunos :term:`predictores` para proporcionar una medida relativa de la importancia de cada característica en las predicciones del modelo."

#: ../glossary.rst:1726
msgid "``labels_``"
msgstr "``labels_``"

#: ../glossary.rst:1728
msgid "A vector containing a cluster label for each sample of the training data in :term:`clusterers`, identical to the output of :term:`fit_predict`.  See also :term:`embedding_`."
msgstr "Un arreglo que contiene una etiqueta de conglomerado para cada muestra de los datos de entrenamiento en :term:`agrupadores`, idéntica a la salida de :term:`fit_predict`. Ver también :term:`embedding_`."

#: ../glossary.rst:1735
msgid "Data and sample properties"
msgstr "Datos y propiedades de la muestra"

#: ../glossary.rst:1737
msgid "See concept :term:`sample property`."
msgstr "Ver el concepto :term:`propiedad de muestra`."

#: ../glossary.rst:1740
msgid "``groups``"
msgstr "``groups``"

#: ../glossary.rst:1742
msgid "Used in cross-validation routines to identify samples that are correlated. Each value is an identifier such that, in a supporting :term:`CV splitter`, samples from some ``groups`` value may not appear in both a training set and its corresponding test set. See :ref:`group_cv`."
msgstr "Se utiliza en las rutinas de validación cruzada para identificar las muestras que están correlacionadas. Cada valor es un identificador tal que, en un :term:`separador de validación cruzada` de apoyo, las muestras de algún valor de ``groups`` pueden no aparecer tanto en un conjunto de entrenamiento como en su correspondiente conjunto de prueba. Ver :ref:`group_cv`."

#: ../glossary.rst:1747
msgid "``sample_weight``"
msgstr "``sample_weight``"

#: ../glossary.rst:1749
msgid "A relative weight for each sample.  Intuitively, if all weights are integers, a weighted model or score should be equivalent to that calculated when repeating the sample the number of times specified in the weight.  Weights may be specified as floats, so that sample weights are usually equivalent up to a constant positive scaling factor."
msgstr "Una ponderación relativa para cada muestra. Intuitivamente, si todos las ponderaciones son números enteros, un modelo o puntuación ponderada debería ser equivalente a la calculada al repetir la muestra el número de veces especificado en la ponderación. Las ponderaciones pueden especificarse como números de punto flotante (floats), de modo que las ponderaciones de las muestras suelen ser equivalentes hasta un factor de escalamiento positivo constante."

#: ../glossary.rst:1755
msgid "FIXME  Is this interpretation always the case in practice? We have no common tests."
msgstr "FIXME ¿Es esta interpretación siempre el caso en la práctica? No tenemos tests comunes."

#: ../glossary.rst:1758
msgid "Some estimators, such as decision trees, support negative weights. FIXME: This feature or its absence may not be tested or documented in many estimators."
msgstr "Algunos estimadores, como los árboles de decisión, admiten ponderaciones negativas. FIXME: Esta característica o su ausencia puede no estar probada o documentada en muchos estimadores."

#: ../glossary.rst:1762
msgid "This is not entirely the case where other parameters of the model consider the number of samples in a region, as with ``min_samples`` in :class:`cluster.DBSCAN`.  In this case, a count of samples becomes to a sum of their weights."
msgstr "Este no es del todo el caso en que otros parámetros del modelo consideran el número de muestras en una región, como ocurre con ``min_samples`` en :class:`cluster.DBSCAN`. En este caso, un conteo de muestras se convierte en una suma de sus ponderaciones."

#: ../glossary.rst:1767
msgid "In classification, sample weights can also be specified as a function of class with the :term:`class_weight` estimator :term:`parameter`."
msgstr "En la clasificación, las ponderaciones de las muestras también pueden especificarse como una función de la clase con el :term:`parámetro` estimador :term:`class_weight`."

#: ../glossary.rst:1769
msgid "``X``"
msgstr "``X``"

#: ../glossary.rst:1771
msgid "Denotes data that is observed at training and prediction time, used as independent variables in learning.  The notation is uppercase to denote that it is ordinarily a matrix (see :term:`rectangular`). When a matrix, each sample may be represented by a :term:`feature` vector, or a vector of :term:`precomputed` (dis)similarity with each training sample. ``X`` may also not be a matrix, and may require a :term:`feature extractor` or a :term:`pairwise metric` to turn it into one before learning a model."
msgstr "Denota los datos que se observan en el momento del entrenamiento y de la predicción, utilizados como variables independientes en el aprendizaje. La notación es mayúscula para indicar que se trata normalmente de una matriz (véase :term:`rectangular`). Cuando se trata de una matriz, cada muestra puede estar representada por un vector de :term:`características <característica>`, o un vector de (des)similitudes :term:`precalculado` con cada muestra de entrenamiento. ``X`` también puede no ser una matriz, y puede requerir un :term:`extractor de características` o una :term:`métrica por pares` para convertirla en una antes del aprendizaje de un modelo."

#: ../glossary.rst:1779
msgid "``Xt``"
msgstr "``Xt``"

#: ../glossary.rst:1781
msgid "Shorthand for \"transformed :term:`X`\"."
msgstr "Abreviatura de \":term:`X` transformada\"."

#: ../glossary.rst:1782
msgid "``y``"
msgstr "``y``"

#: ../glossary.rst:1783
msgid "``Y``"
msgstr "``Y``"

#: ../glossary.rst:1785
msgid "Denotes data that may be observed at training time as the dependent variable in learning, but which is unavailable at prediction time, and is usually the :term:`target` of prediction.  The notation may be uppercase to denote that it is a matrix, representing :term:`multi-output` targets, for instance; but usually we use ``y`` and sometimes do so even when multiple outputs are assumed."
msgstr "Denota datos que pueden observarse en el momento del entrenamiento como variable dependiente en el aprendizaje, pero que no están disponibles en el momento de la predicción, y suele ser el :term:`objetivo` de la predicción. La notación puede ser mayúscula para indicar que se trata de una matriz, que representa objetivos de :term:`salida múltiple`, por ejemplo; pero normalmente utilizamos ``y`` y a veces lo hacemos incluso cuando se asumen múltiples salidas."

