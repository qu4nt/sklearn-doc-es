msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-17 01:52\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/developers/tips.po\n"
"X-Crowdin-File-ID: 4026\n"
"Language: es_ES\n"

#: ../developers/tips.rst:5
msgid "Developers' Tips and Tricks"
msgstr "Consejos y Trucos de los Desarrolladores"

#: ../developers/tips.rst:8
msgid "Productivity and sanity-preserving tips"
msgstr "Consejos para preservar la productividad y la cordura"

#: ../developers/tips.rst:10
msgid "In this section we gather some useful advice and tools that may increase your quality-of-life when reviewing pull requests, running unit tests, and so forth. Some of these tricks consist of userscripts that require a browser extension such as `TamperMonkey`_ or `GreaseMonkey`_; to set up userscripts you must have one of these extensions installed, enabled and running.  We provide userscripts as GitHub gists; to install them, click on the \"Raw\" button on the gist page."
msgstr "En esta sección recogemos algunos consejos y herramientas útiles que pueden aumentar tu calidad de vida a la hora de revisar pull requests, ejecutar pruebas unitarias, etc. Algunos de estos trucos consisten en userscripts que requieren una extensión del navegador como `TamperMonkey`_ o `GreaseMonkey`_; para configurar los userscripts debes tener una de estas extensiones instalada, habilitada y funcionando.  Proporcionamos los userscripts como gists de GitHub; para instalarlos, haz clic en el botón \"Raw\" de la página del gist."

#: ../developers/tips.rst:21
msgid "Folding and unfolding outdated diffs on pull requests"
msgstr "Pliegue y despliegue de diffs obsoletos en pull requests"

#: ../developers/tips.rst:23
msgid "GitHub hides discussions on PRs when the corresponding lines of code have been changed in the mean while. This `userscript <https://raw.githubusercontent.com/lesteve/userscripts/master/github-expand-all.user.js>`__ provides a shortcut (Control-Alt-P at the time of writing but look at the code to be sure) to unfold all such hidden discussions at once, so you can catch up."
msgstr "GitHub oculta las discusiones en los PR cuando las líneas de código correspondientes han sido cambiadas mientras tanto. Este `userscript <https://raw.githubusercontent.com/lesteve/userscripts/master/github-expand-all.user.js>`__ proporciona un atajo (Control-Alt-P en el momento de escribir esto, pero mira el código para estar seguro) para desplegar todas esas discusiones ocultas a la vez, para que puedas ponerte al día."

#: ../developers/tips.rst:30
msgid "Checking out pull requests as remote-tracking branches"
msgstr "Comprobación de pull requests como ramas de seguimiento remoto"

#: ../developers/tips.rst:32
msgid "In your local fork, add to your ``.git/config``, under the ``[remote \"upstream\"]`` heading, the line::"
msgstr "En tu fork local, añade a tu ``.git/config``, bajo el encabezado ``[remote \"upstream\"]``, la línea::"

#: ../developers/tips.rst:37
msgid "You may then use ``git checkout pr/PR_NUMBER`` to navigate to the code of the pull-request with the given number. (`Read more in this gist. <https://gist.github.com/piscisaureus/3342247>`_)"
msgstr "A continuación, puedes utilizar ``git checkout pr/PR_NUMBER`` para navegar hasta el código del pull-request con el número dado. (`Lee más en este gist. <https://gist.github.com/piscisaureus/3342247>`_)"

#: ../developers/tips.rst:42
msgid "Display code coverage in pull requests"
msgstr "Mostrar la cobertura del código en los pull requests"

#: ../developers/tips.rst:44
msgid "To overlay the code coverage reports generated by the CodeCov continuous integration, consider `this browser extension <https://github.com/codecov/browser-extension>`_. The coverage of each line will be displayed as a color background behind the line number."
msgstr "Para superponer los informes de cobertura de código generados por la integración continua de CodeCov, considere `esta extensión del navegador <https://github.com/codecov/browser-extension>`_. La cobertura de cada línea se mostrará como un fondo de color detrás del número de línea."

#: ../developers/tips.rst:53
msgid "Useful pytest aliases and flags"
msgstr "Alias e indicadores útiles de pytest"

#: ../developers/tips.rst:55
msgid "The full test suite takes fairly long to run. For faster iterations, it is possibly to select a subset of tests using pytest selectors. In particular, one can run a `single test based on its node ID <https://docs.pytest.org/en/latest/example/markers.html#selecting-tests-based-on-their-node-id>`_:"
msgstr "El conjunto de pruebas completo tarda bastante en ejecutarse. Para iteraciones más rápidas, es posible seleccionar un subconjunto de pruebas utilizando selectores de pytest. En particular, se puede ejecutar una `sola prueba basada en su ID de nodo <https://docs.pytest.org/en/latest/example/markers.html#selecting-tests-based-on-their-node-id>`_:"

#: ../developers/tips.rst:64
msgid "or use the `-k pytest parameter <https://docs.pytest.org/en/latest/example/markers.html#using-k-expr-to-select-tests-based-on-their-name>`_ to select tests based on their name. For instance,:"
msgstr "o utilizar el `parámetro -k pytest <https://docs.pytest.org/en/latest/example/markers.html#using-k-expr-to-select-tests-based-on-their-name>`_ para seleccionar las pruebas en función de su nombre. Por ejemplo:"

#: ../developers/tips.rst:72
msgid "will run all :term:`common tests` for the ``LogisticRegression`` estimator."
msgstr "ejecutará todas las :term:` pruebas comunes` para el estimador ``LogisticRegression``."

#: ../developers/tips.rst:74
msgid "When a unit test fails, the following tricks can make debugging easier:"
msgstr "Cuando una prueba unitaria falla, los siguientes trucos pueden facilitar la depuración:"

#: ../developers/tips.rst:76
msgid "The command line argument ``pytest -l`` instructs pytest to print the local variables when a failure occurs."
msgstr "El argumento de la línea de comandos ``pytest -l`` indica a pytest que imprima las variables locales cuando se produce un fallo."

#: ../developers/tips.rst:79
msgid "The argument ``pytest --pdb`` drops into the Python debugger on failure. To instead drop into the rich IPython debugger ``ipdb``, you may set up a shell alias to:"
msgstr "El argumento ``pytest --pdb`` pasa al depurador de Python en caso de fallo. En cambio, para entrar en el depurador enriquecido de IPython ``ipdb``, puedes configurar un alias de shell para:"

#: ../developers/tips.rst:87
msgid "Other `pytest` options that may become useful include:"
msgstr "Otras opciones de `pytest` que pueden resultar útiles son:"

#: ../developers/tips.rst:89
msgid "``-x`` which exits on the first failed test"
msgstr "``-x`` que sale en la primera prueba fallida"

#: ../developers/tips.rst:90
msgid "``--lf`` to rerun the tests that failed on the previous run"
msgstr "``--lf`` para volver a ejecutar las pruebas que fallaron en la ejecución anterior"

#: ../developers/tips.rst:91
msgid "``--ff`` to rerun all previous tests, running the ones that failed first"
msgstr "``--ff`` para volver a ejecutar todas las pruebas anteriores, ejecutando las que fallaron primero"

#: ../developers/tips.rst:92
msgid "``-s`` so that pytest does not capture the output of ``print()`` statements"
msgstr "``-s`` para que pytest no capture la salida de las declaraciones ``print()``"

#: ../developers/tips.rst:94
msgid "``--tb=short`` or ``--tb=line`` to control the length of the logs"
msgstr "``--tb=short`` o ``--tb=line`` para controlar la longitud de los registros"

#: ../developers/tips.rst:95
msgid "``--runxfail`` also run tests marked as a known failure (XFAIL) and report errors."
msgstr "``--runxfail`` también ejecuta las pruebas marcadas como fallo conocido (XFAIL) y reporta los errores."

#: ../developers/tips.rst:98
msgid "Since our continuous integration tests will error if ``FutureWarning`` isn't properly caught, it is also recommended to run ``pytest`` along with the ``-Werror::FutureWarning`` flag."
msgstr "Dado que nuestras pruebas de integración continua darán un error si ``FutureWarning`` no se captura correctamente, también se recomienda ejecutar ``pytest`` junto con el indicador ``-Werror::FutureWarning``."

#: ../developers/tips.rst:106
msgid "Standard replies for reviewing"
msgstr "Respuestas estándar para la revisión"

#: ../developers/tips.rst:108
msgid "It may be helpful to store some of these in GitHub's `saved replies <https://github.com/settings/replies/>`_ for reviewing:"
msgstr "Puede ser útil almacenar algunas de ellas en las `respuestas guardadas <https://github.com/settings/replies/>`_ de GitHub para revisarlas:"

#: ../developers/tips.rst:122
msgid "Issue: Usage questions"
msgstr "Incidencia: Preguntas sobre el uso"

#: ../developers/tips.rst:127
msgid "Issue: You're welcome to update the docs"
msgstr "Incidencia: Puedes actualizar los documentos"

#: ../developers/tips.rst:132
msgid "Issue: Self-contained example for bug"
msgstr "Incidencia: Ejemplo autocontenido para el error"

#: ../developers/tips.rst:141
msgid "Issue: Software versions"
msgstr "Incidencia: Versiones de software"

#: ../developers/tips.rst:168
msgid "Issue: Code blocks"
msgstr "Incidencia: Bloques de código"

#: ../developers/tips.rst:173
msgid "Issue/Comment: Linking to code"
msgstr "Incidencias/comentarios: Vinculación con el código"

#: ../developers/tips.rst:178
msgid "Issue/Comment: Linking to comments"
msgstr "Incidencias/Comentarios: Vinculación con los comentarios"

#: ../developers/tips.rst:183
msgid "PR-NEW: Better description and title"
msgstr "PR-NEW: Mejor descripción y título"

#: ../developers/tips.rst:188
msgid "PR-NEW: Fix #"
msgstr "PR-NUEVO: Arreglo #"

#: ../developers/tips.rst:193
msgid "PR-NEW or Issue: Maintenance cost"
msgstr "PR-NUEVO o Incidencia: Coste de mantenimiento"

#: ../developers/tips.rst:198
msgid "PR-WIP: What's needed before merge?"
msgstr "PR-WIP: ¿Qué se necesita antes de la fusión (merge)?"

#: ../developers/tips.rst:203
msgid "PR-WIP: Regression test needed"
msgstr "PR-WIP: Se necesita una prueba de regresión"

#: ../developers/tips.rst:208
msgid "PR-WIP: PEP8"
msgstr "PR-WIP: PEP8"

#: ../developers/tips.rst:213
msgid "PR-MRG: Patience"
msgstr "PR-MRG: Paciencia"

#: ../developers/tips.rst:218
msgid "PR-MRG: Add to what's new"
msgstr "PR-MRG: Añadir a las novedades"

#: ../developers/tips.rst:223
msgid "PR: Don't change unrelated"
msgstr "PR: No cambies lo que no está relacionado"

#: ../developers/tips.rst:228
msgid "Debugging memory errors in Cython with valgrind"
msgstr "Depuración de errores de memoria en Cython con valgrind"

#: ../developers/tips.rst:230
msgid "While python/numpy's built-in memory management is relatively robust, it can lead to performance penalties for some routines. For this reason, much of the high-performance code in scikit-learn in written in cython. This performance gain comes with a tradeoff, however: it is very easy for memory bugs to crop up in cython code, especially in situations where that code relies heavily on pointer arithmetic."
msgstr "Aunque la gestión de la memoria incorporada en python/numpy es relativamente robusta, puede llevar a penalizaciones en el rendimiento de algunas rutinas. Por esta razón, gran parte del código de alto rendimiento en scikit-learn está escrito en cython. Sin embargo, esta ganancia de rendimiento viene con una compensación: es muy fácil que surjan errores de memoria en el código de cython, especialmente en situaciones en las que ese código depende en gran medida de la aritmética de punteros."

#: ../developers/tips.rst:237
msgid "Memory errors can manifest themselves a number of ways. The easiest ones to debug are often segmentation faults and related glibc errors. Uninitialized variables can lead to unexpected behavior that is difficult to track down. A very useful tool when debugging these sorts of errors is valgrind_."
msgstr "Los errores de memoria pueden manifestarse de varias maneras. Los más fáciles de depurar suelen ser los fallos de segmentación y los errores glibc relacionados. Las variables no inicializadas pueden conducir a un comportamiento inesperado que es difícil de rastrear. Una herramienta muy útil para depurar este tipo de errores es valgrind_."

#: ../developers/tips.rst:244
msgid "Valgrind is a command-line tool that can trace memory errors in a variety of code. Follow these steps:"
msgstr "Valgrind es una herramienta de línea de comandos que puede rastrear errores de memoria en una variedad de código. Sigue estos pasos:"

#: ../developers/tips.rst:247
msgid "Install `valgrind`_ on your system."
msgstr "Instala `valgrind`_ en tu sistema."

#: ../developers/tips.rst:249
msgid "Download the python valgrind suppression file: `valgrind-python.supp`_."
msgstr "Descarga el archivo de supresión de valgrind de python: `valgrind-python.supp`_."

#: ../developers/tips.rst:251
msgid "Follow the directions in the `README.valgrind`_ file to customize your python suppressions. If you don't, you will have spurious output coming related to the python interpreter instead of your own code."
msgstr "Sigue las instrucciones del archivo `README.valgrind`_ para personalizar tus supresiones de python. Si no lo haces, tendrás salidas espurias relacionadas con el intérprete de python en lugar de tu propio código."

#: ../developers/tips.rst:255
msgid "Run valgrind as follows:"
msgstr "Ejecuta valgrind de la siguiente manera:"

#: ../developers/tips.rst:266
msgid "The result will be a list of all the memory-related errors, which reference lines in the C-code generated by cython from your .pyx file. If you examine the referenced lines in the .c file, you will see comments which indicate the corresponding location in your .pyx source file. Hopefully the output will give you clues as to the source of your memory error."
msgstr "El resultado será una lista de todos los errores relacionados con la memoria, que hacen referencia a líneas en el código C generado por cython desde su archivo .pyx. Si examinas las líneas referenciadas en el archivo .c, verás comentarios que indican la ubicación correspondiente en tu archivo fuente .pyx. Con suerte, la salida te dará pistas sobre el origen de tu error de memoria."

#: ../developers/tips.rst:272
msgid "For more information on valgrind and the array of options it has, see the tutorials and documentation on the `valgrind web site <http://valgrind.org>`_."
msgstr "Para más información sobre valgrind y el arreglo de opciones que tiene, consulta los tutoriales y la documentación en el `sitio web de valgrind <http://valgrind.org>`_."

#: ../developers/tips.rst:278
msgid "Building and testing for the ARM64 platform on a x86_64 machine"
msgstr "Construcción y pruebas para la plataforma ARM64 en una máquina x86_64"

#: ../developers/tips.rst:280
msgid "ARM-based machines are a popular target for mobile, edge or other low-energy deployments (including in the cloud, for instance on Scaleway or AWS Graviton)."
msgstr "Las máquinas basadas en ARM son un objetivo popular para las implementaciones móviles, de arista u otras de bajo consumo de energía (incluso en la nube, por ejemplo en Scaleway o AWS Graviton)."

#: ../developers/tips.rst:283
msgid "Here are instructions to setup a local dev environment to reproduce ARM-specific bugs or test failures on a x86_64 host laptop or workstation. This is based on QEMU user mode emulation using docker for convenience (see https://github.com/multiarch/qemu-user-static)."
msgstr "Aquí tienes las instrucciones para configurar un entorno de desarrollo local para reproducir errores específicos de ARM o fallos de prueba en una computadora portátil o estación de trabajo host x86_64. Esto se basa en la emulación del modo de usuario de QEMU que utiliza docker para mayor comodidad (consulta https://github.com/multiarch/qemu-user-static)."

#: ../developers/tips.rst:290
msgid "The following instructions are illustrated for ARM64 but they also apply to ppc64le, after changing the Docker image and Miniforge paths appropriately."
msgstr "Las siguientes instrucciones se ilustran para ARM64 pero también se aplican a ppc64le, después de cambiar la imagen Docker y las rutas de Miniforge apropiadamente."

#: ../developers/tips.rst:293
msgid "Prepare a folder on the host filesystem and download the necessary tools and source code:"
msgstr ""

#: ../developers/tips.rst:303
msgid "Use docker to install QEMU user mode and run an ARM64v8 container with access to your shared folder under the `/io` mount point:"
msgstr ""

#: ../developers/tips.rst:311
msgid "In the container, install miniforge3 for the ARM64 (a.k.a. aarch64) architecture:"
msgstr ""

#: ../developers/tips.rst:319
msgid "Whenever you restart a new container, you will need to reinit the conda env previously installed under `/io/miniforge3`:"
msgstr ""

#: ../developers/tips.rst:327
msgid "as the `/root` home folder is part of the ephemeral docker container. Every file or directory stored under `/io` is persistent on the other hand."
msgstr ""

#: ../developers/tips.rst:330
msgid "You can then build scikit-learn as usual (you will need to install compiler tools and dependencies using apt or conda as usual). Building scikit-learn takes a lot of time because of the emulation layer, however it needs to be done only once if you put the scikit-learn folder under the `/io` mount point."
msgstr ""

#: ../developers/tips.rst:336
msgid "Then use pytest to run only the tests of the module you are interested in debugging."
msgstr ""

