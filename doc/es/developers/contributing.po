msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-07-01 17:59\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/developers/contributing.po\n"
"X-Crowdin-File-ID: 4030\n"
"Language: es_ES\n"

#: ../developers/contributing.rst:5
msgid "Contributing"
msgstr "Contribuyendo"

#: ../developers/contributing.rst:9
msgid "This project is a community effort, and everyone is welcome to contribute."
msgstr "Este proyecto es un esfuerzo comunitario, y todos son bienvenidos a contribuir."

#: ../developers/contributing.rst:12
msgid "The project is hosted on https://github.com/scikit-learn/scikit-learn"
msgstr "El proyecto está alojado en https://github.com/scikit-learn/scikit-learn"

#: ../developers/contributing.rst:14
msgid "The decision making process and governance structure of scikit-learn is laid out in the governance document: :ref:`governance`."
msgstr "El proceso de toma de decisiones y la estructura de gobernanza de scikit-learn se exponen en el documento de gobernanza: :ref:`governance`."

#: ../developers/contributing.rst:17
msgid "Scikit-learn is somewhat :ref:`selective <selectiveness>` when it comes to adding new algorithms, and the best way to contribute and to help the project is to start working on known issues. See :ref:`new_contributors` to get started."
msgstr "Scikit-learn es un poco :ref:`selective <selectiveness>` cuando se trata de añadir nuevos algoritmos, y la mejor manera de contribuir y ayudar al proyecto es empezar a trabajar en los issues conocidos. Véase :ref:`new_contributors` para empezar."

msgid "**Our community, our values**"
msgstr "**Nuestra comunidad, nuestros valores**"

#: ../developers/contributing.rst:24
msgid "We are a community based on openness and friendly, didactic, discussions."
msgstr "Somos una comunidad basada en la apertura y los debates amistosos y didácticos."

#: ../developers/contributing.rst:27
msgid "We aspire to treat everybody equally, and value their contributions.  We are particularly seeking people from underrepresented backgrounds in Open Source Software and scikit-learn in particular to participate and contribute their expertise and experience."
msgstr "Aspiramos a tratar a todos por igual y a valorar sus contribuciones.  Buscamos especialmente a personas con poca representación en el software de código abierto y en scikit-learn en particular para que participen y aporten sus conocimientos y experiencia."

#: ../developers/contributing.rst:32
msgid "Decisions are made based on technical merit and consensus."
msgstr "Las decisiones se toman basándose en el mérito técnico y el consenso."

#: ../developers/contributing.rst:34
msgid "Code is not the only way to help the project. Reviewing pull requests, answering questions to help others on mailing lists or issues, organizing and teaching tutorials, working on the website, improving the documentation, are all priceless contributions."
msgstr "El código no es la única forma de ayudar al proyecto. Revisar pull requests, responder a preguntas para ayudar a otros en las listas de correo o en los issues, organizar y enseñar tutoriales, trabajar en el sitio web, mejorar la documentación, son todas contribuciones que no tienen precio."

#: ../developers/contributing.rst:39
msgid "We abide by the principles of openness, respect, and consideration of others of the Python Software Foundation: https://www.python.org/psf/codeofconduct/"
msgstr "Nos atenemos a los principios de apertura, respeto y consideración de los demás de la Python Software Foundation: https://www.python.org/psf/codeofconduct/"

#: ../developers/contributing.rst:44
msgid "In case you experience issues using this package, do not hesitate to submit a ticket to the `GitHub issue tracker <https://github.com/scikit-learn/scikit-learn/issues>`_. You are also welcome to post feature requests or pull requests."
msgstr "En caso de que experimente problemas al utilizar este paquete, no dude en enviar un ticket al `Gestor de issues de GitHub(GitHub issue tracker) <https://github.com/scikit-learn/scikit-learn/issues>`_. También puede enviar solicitudes de funcionalidades(feature requests) o solicitudes de extracción(pull requests)."

#: ../developers/contributing.rst:51
msgid "Ways to contribute"
msgstr "Formas de contribuir"

#: ../developers/contributing.rst:53
msgid "There are many ways to contribute to scikit-learn, with the most common ones being contribution of code or documentation to the project. Improving the documentation is no less important than improving the library itself.  If you find a typo in the documentation, or have made improvements, do not hesitate to send an email to the mailing list or preferably submit a GitHub pull request. Full documentation can be found under the doc/ directory."
msgstr "Hay muchas maneras de contribuir a scikit-learn, siendo las más comunes la contribución de código o a la documentación del proyecto. Mejorar la documentación no es menos importante que mejorar la propia biblioteca.  Si usted encuentra un error en la documentación, o ha hecho mejoras, no dude en enviar un correo electrónico a la lista de correo o, preferiblemente, enviar una solicitud de extracción de GitHub. La documentación completa se encuentra en el directorio doc/."

#: ../developers/contributing.rst:60
msgid "But there are many other ways to help. In particular helping to :ref:`improve, triage, and investigate issues <bug_triaging>` and :ref:`reviewing other developers' pull requests <code_review>` are very valuable contributions that decrease the burden on the project maintainers."
msgstr "Pero hay muchas otras formas de ayudar. En particular, ayudar a :ref:`improve, triage, and investigate issues <bug_triaging>` y :ref:`reviewing other developers' pull requests <code_review>` son contribuciones muy valiosas que disminuyen la carga de los mantenedores del proyecto."

#: ../developers/contributing.rst:66
msgid "Another way to contribute is to report issues you're facing, and give a \"thumbs up\" on issues that others reported and that are relevant to you.  It also helps us if you spread the word: reference the project from your blog and articles, link to it from your website, or simply star to say \"I use it\":"
msgstr "Otra forma de contribuir es informar de los problemas a los que te enfrentas, y dar un \"pulgar arriba\" a los problemas que otros informaron y que son relevantes para ti. También nos ayuda que corras la voz: haz referencia al proyecto desde tu blog y artículos, enlaza con él desde tu sitio web, o simplemente destaca para decir \"yo lo uso\":"

#: ../developers/contributing.rst:71
msgid "In case a contribution/issue involves changes to the API principles or changes to dependencies or supported versions, it must be backed by a :ref:`slep`, where a SLEP must be submitted as a pull-request to `enhancement proposals <https://scikit-learn-enhancement-proposals.readthedocs.io>`_ using the `SLEP template <https://scikit-learn-enhancement-proposals.readthedocs.io/en/latest/slep_template.html>`_ and follows the decision-making process outlined in :ref:`governance`."
msgstr "En el caso de que una contribución/problema implique cambios en los principios de la API o cambios en las dependencias o en las versiones soportadas, debe estar respaldada por un :ref:`slep`, donde un SLEP debe ser enviado como una solicitud de extracción a `propuestas de mejora <https://scikit-learn-enhancement-proposals.readthedocs.io>`_ utilizando la plantilla `SLEP <https://scikit-learn-enhancement-proposals.readthedocs.io/en/latest/slep_template.html>`_ y sigue el proceso de toma de decisiones descrito en :ref:`governance`."

msgid "Contributing to related projects"
msgstr "Contribuyendo a proyectos relacionados"

#: ../developers/contributing.rst:87
msgid "Scikit-learn thrives in an ecosystem of several related projects, which also may have relevant issues to work on, including smaller projects such as:"
msgstr "Scikit-learn prospera en un ecosistema de varios proyectos relacionados, que también pueden tener temas relevantes en los que trabajar, incluyendo proyectos más pequeños como:"

#: ../developers/contributing.rst:90
msgid "`scikit-learn-contrib <https://github.com/search?q=org%3Ascikit-learn-contrib+is%3Aissue+is%3Aopen+sort%3Aupdated-desc&type=Issues>`__"
msgstr "`scikit-learn-contrib <https://github.com/search?q=org%3Ascikit-learn-contrib+is%3Aissue+is%3Aopen+sort%3Aupdated-desc&type=Issues>`__"

#: ../developers/contributing.rst:91
msgid "`joblib <https://github.com/joblib/joblib/issues>`__"
msgstr "`joblib <https://github.com/joblib/joblib/issues>`__"

#: ../developers/contributing.rst:92
msgid "`sphinx-gallery <https://github.com/sphinx-gallery/sphinx-gallery/issues>`__"
msgstr "`sphinx-gallery <https://github.com/sphinx-gallery/sphinx-gallery/issues>`__"

#: ../developers/contributing.rst:93
msgid "`numpydoc <https://github.com/numpy/numpydoc/issues>`__"
msgstr "`numpydoc <https://github.com/numpy/numpydoc/issues>`__"

#: ../developers/contributing.rst:94
msgid "`liac-arff <https://github.com/renatopp/liac-arff>`__"
msgstr "`liac-arff <https://github.com/renatopp/liac-arff>`__"

#: ../developers/contributing.rst:96
msgid "and larger projects:"
msgstr "y proyectos más grandes:"

#: ../developers/contributing.rst:98
msgid "`numpy <https://github.com/numpy/numpy/issues>`__"
msgstr "`numpy <https://github.com/numpy/numpy/issues>`__"

#: ../developers/contributing.rst:99
msgid "`scipy <https://github.com/scipy/scipy/issues>`__"
msgstr "`scipy <https://github.com/scipy/scipy/issues>`__"

#: ../developers/contributing.rst:100
msgid "`matplotlib <https://github.com/matplotlib/matplotlib/issues>`__"
msgstr "`matplotlib <https://github.com/matplotlib/matplotlib/issues>`__"

#: ../developers/contributing.rst:101
msgid "and so on."
msgstr "y así sucesivamente."

#: ../developers/contributing.rst:103
msgid "Look for issues marked \"help wanted\" or similar. Helping these projects may help Scikit-learn too. See also :ref:`related_projects`."
msgstr "Busca temas marcados como \"se necesita ayuda\" o similares. Ayudar a estos proyectos puede ayudar a Scikit-learn también. Ver también :ref:`related_projects`."

#: ../developers/contributing.rst:109
msgid "Submitting a bug report or a feature request"
msgstr "Enviar un informe de errores o una solicitud de funcionalidad(feature request)"

#: ../developers/contributing.rst:111
msgid "We use GitHub issues to track all bugs and feature requests; feel free to open an issue if you have found a bug or wish to see a feature implemented."
msgstr "Utilizamos los problemas(issues) de GitHub para hacer un seguimiento de todos los errores y solicitudes de funcionalidades; no dudes en abrir un issue si has encontrado un error o deseas que se implemente una funcionalidad."

#: ../developers/contributing.rst:114
msgid "In case you experience issues using this package, do not hesitate to submit a ticket to the `Bug Tracker <https://github.com/scikit-learn/scikit-learn/issues>`_. You are also welcome to post feature requests or pull requests."
msgstr "En caso de que experimente problemas al utilizar este paquete, no dude en enviar un ticket al `Bug Tracker <https://github.com/scikit-learn/scikit-learn/issues>`_. También puede enviar solicitudes de funcionalidades(feature requests) o solicitudes de extracción(pull requests)."

#: ../developers/contributing.rst:119
msgid "It is recommended to check that your issue complies with the following rules before submitting:"
msgstr "Se recomienda comprobar que su problema se ajusta a las siguientes normas antes de presentarlo:"

#: ../developers/contributing.rst:122
msgid "Verify that your issue is not being currently addressed by other `issues <https://github.com/scikit-learn/scikit-learn/issues?q=>`_ or `pull requests <https://github.com/scikit-learn/scikit-learn/pulls?q=>`_."
msgstr ""

#: ../developers/contributing.rst:126
msgid "If you are submitting an algorithm or feature request, please verify that the algorithm fulfills our `new algorithm requirements <http://scikit-learn.org/stable/faq.html#what-are-the-inclusion-criteria-for-new-algorithms>`_."
msgstr ""

#: ../developers/contributing.rst:131
msgid "If you are submitting a bug report, we strongly encourage you to follow the guidelines in :ref:`filing_bugs`."
msgstr ""

#: ../developers/contributing.rst:137
msgid "How to make a good bug report"
msgstr ""

#: ../developers/contributing.rst:139
msgid "When you submit an issue to `Github <https://github.com/scikit-learn/scikit-learn/issues>`__, please do your best to follow these guidelines! This will make it a lot easier to provide you with good feedback:"
msgstr ""

#: ../developers/contributing.rst:144
msgid "The ideal bug report contains a **short reproducible code snippet**, this way anyone can try to reproduce the bug easily (see `this <https://stackoverflow.com/help/mcve>`_ for more details). If your snippet is longer than around 50 lines, please link to a `gist <https://gist.github.com>`_ or a github repo."
msgstr ""

#: ../developers/contributing.rst:150
msgid "If not feasible to include a reproducible snippet, please be specific about what **estimators and/or functions are involved and the shape of the data**."
msgstr ""

#: ../developers/contributing.rst:153
msgid "If an exception is raised, please **provide the full traceback**."
msgstr ""

#: ../developers/contributing.rst:155
msgid "Please include your **operating system type and version number**, as well as your **Python, scikit-learn, numpy, and scipy versions**. This information can be found by running the following code snippet::"
msgstr ""

#: ../developers/contributing.rst:164
msgid "This utility function is only available in scikit-learn v0.20+. For previous versions, one has to explicitly run::"
msgstr ""

#: ../developers/contributing.rst:173
msgid "Please ensure all **code snippets and error messages are formatted in appropriate code blocks**.  See `Creating and highlighting code blocks <https://help.github.com/articles/creating-and-highlighting-code-blocks>`_ for more details."
msgstr ""

#: ../developers/contributing.rst:178
msgid "If you want to help curate issues, read :ref:`the following <bug_triaging>`."
msgstr ""

#: ../developers/contributing.rst:182
msgid "Contributing code"
msgstr ""

#: ../developers/contributing.rst:186
msgid "To avoid duplicating work, it is highly advised that you search through the `issue tracker <https://github.com/scikit-learn/scikit-learn/issues>`_ and the `PR list <https://github.com/scikit-learn/scikit-learn/pulls>`_. If in doubt about duplicated work, or if you want to work on a non-trivial feature, it's recommended to first open an issue in the `issue tracker <https://github.com/scikit-learn/scikit-learn/issues>`_ to get some feedbacks from core developers."
msgstr ""

#: ../developers/contributing.rst:194
msgid "One easy way to find an issue to work on is by applying the \"help wanted\" label in your search. This lists all the issues that have been unclaimed so far. In order to claim an issue for yourself, please comment exactly ``take`` on it for the CI to automatically assign the issue to you."
msgstr ""

#: ../developers/contributing.rst:200
msgid "Video resources"
msgstr ""

#: ../developers/contributing.rst:201
msgid "These videos are step-by-step introductions on how to contribute to scikit-learn, and are a great companion to the following text guidelines. Please make sure to still check our guidelines below, since they describe our latest up-to-date workflow."
msgstr ""

#: ../developers/contributing.rst:206
msgid "Crash Course in Contributing to Scikit-Learn & Open Source Projects: `Video <https://youtu.be/5OL8XoMMOfA>`__, `Transcript <https://github.com/data-umbrella/event-transcripts/blob/main/2020/05-andreas-mueller-contributing.md>`__"
msgstr ""

#: ../developers/contributing.rst:211
msgid "Example of Submitting a Pull Request to scikit-learn: `Video <https://youtu.be/PU1WyDPGePI>`__, `Transcript <https://github.com/data-umbrella/event-transcripts/blob/main/2020/06-reshama-shaikh-sklearn-pr.md>`__"
msgstr ""

#: ../developers/contributing.rst:216
msgid "Sprint-specific instructions and practical tips: `Video <https://youtu.be/p_2Uw2BxdhA>`__, `Transcript <https://github.com/data-umbrella/data-umbrella-scikit-learn-sprint/blob/master/3_transcript_ACM_video_vol2.md>`__"
msgstr ""

#: ../developers/contributing.rst:222
msgid "How to contribute"
msgstr ""

#: ../developers/contributing.rst:224
msgid "The preferred way to contribute to scikit-learn is to fork the `main repository <https://github.com/scikit-learn/scikit-learn/>`__ on GitHub, then submit a \"pull request\" (PR)."
msgstr ""

#: ../developers/contributing.rst:228
msgid "In the first few steps, we explain how to locally install scikit-learn, and how to set up your git repository:"
msgstr ""

#: ../developers/contributing.rst:231
msgid "`Create an account <https://github.com/join>`_ on GitHub if you do not already have one."
msgstr ""

#: ../developers/contributing.rst:234
msgid "Fork the `project repository <https://github.com/scikit-learn/scikit-learn>`__: click on the 'Fork' button near the top of the page. This creates a copy of the code under your account on the GitHub user account. For more details on how to fork a repository see `this guide <https://help.github.com/articles/fork-a-repo/>`_."
msgstr ""

#: ../developers/contributing.rst:240
msgid "Clone your fork of the scikit-learn repo from your GitHub account to your local disk:"
msgstr ""

#: ../developers/contributing.rst:248
msgid "Install the development dependencies:"
msgstr ""

#: ../developers/contributing.rst:254
msgid "Install scikit-learn in editable mode:"
msgstr ""

#: ../developers/contributing.rst:260
msgid "If you receive errors in building scikit-learn, see the :ref:`install_bleeding_edge` section."
msgstr ""

#: ../developers/contributing.rst:265
msgid "Add the ``upstream`` remote. This saves a reference to the main scikit-learn repository, which you can use to keep your repository synchronized with the latest changes:"
msgstr ""

#: ../developers/contributing.rst:273
msgid "You should now have a working installation of scikit-learn, and your git repository properly configured. The next steps now describe the process of modifying code and submitting a PR:"
msgstr ""

#: ../developers/contributing.rst:277
msgid "Synchronize your main branch with the upstream main branch:"
msgstr ""

#: ../developers/contributing.rst:284
msgid "Create a feature branch to hold your development changes:"
msgstr ""

#: ../developers/contributing.rst:290
msgid "and start making changes. Always use a feature branch. It's good practice to never work on the ``main`` branch!"
msgstr ""

#: ../developers/contributing.rst:293
msgid "(**Optional**) Install `pre-commit <https://pre-commit.com/#install>`_ to run code style checks before each commit:"
msgstr ""

#: ../developers/contributing.rst:301
msgid "pre-commit checks can be disabled for a particular commit with `git commit -n`."
msgstr ""

#: ../developers/contributing.rst:304
msgid "Develop the feature on your feature branch on your computer, using Git to do the version control. When you're done editing, add changed files using ``git add`` and then ``git commit``:"
msgstr ""

#: ../developers/contributing.rst:313
msgid "to record your changes in Git, then push the changes to your GitHub account with:"
msgstr ""

#: ../developers/contributing.rst:320
msgid "Follow `these <https://help.github.com/articles/creating-a-pull-request-from-a-fork>`_ instructions to create a pull request from your fork. This will send an email to the committers. You may want to consider sending an email to the mailing list for more visibility."
msgstr ""

#: ../developers/contributing.rst:328
msgid "If you are modifying a Cython module, you have to re-compile after modifications and before testing them:"
msgstr ""

#: ../developers/contributing.rst:335
msgid "Use the ``--no-build-isolation`` flag to avoid compiling the whole project each time, only the files you have modified."
msgstr ""

#: ../developers/contributing.rst:338
msgid "It is often helpful to keep your local feature branch synchronized with the latest changes of the main scikit-learn repository:"
msgstr ""

#: ../developers/contributing.rst:346
msgid "Subsequently, you might need to solve the conflicts. You can refer to the `Git documentation related to resolving merge conflict using the command line <https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/>`_."
msgstr ""

msgid "Learning git:"
msgstr ""

#: ../developers/contributing.rst:353
msgid "The `Git documentation <https://git-scm.com/documentation>`_ and http://try.github.io are excellent resources to get started with git, and understanding all of the commands shown here."
msgstr ""

#: ../developers/contributing.rst:360
msgid "Pull request checklist"
msgstr ""

#: ../developers/contributing.rst:362
msgid "Before a PR can be merged, it needs to be approved by two core developers. Please prefix the title of your pull request with ``[MRG]`` if the contribution is complete and should be subjected to a detailed review. An incomplete contribution -- where you expect to do more work before receiving a full review -- should be prefixed ``[WIP]`` (to indicate a work in progress) and changed to ``[MRG]`` when it matures. WIPs may be useful to: indicate you are working on something to avoid duplicated work, request broad review of functionality or API, or seek collaborators. WIPs often benefit from the inclusion of a `task list <https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments>`_ in the PR description."
msgstr ""

#: ../developers/contributing.rst:374
msgid "In order to ease the reviewing process, we recommend that your contribution complies with the following rules before marking a PR as ``[MRG]``. The **bolded** ones are especially important:"
msgstr ""

#: ../developers/contributing.rst:378
msgid "**Give your pull request a helpful title** that summarises what your contribution does. This title will often become the commit message once merged so it should summarise your contribution for posterity. In some cases \"Fix <ISSUE TITLE>\" is enough. \"Fix #<ISSUE NUMBER>\" is never a good title."
msgstr ""

#: ../developers/contributing.rst:384
msgid "**Make sure your code passes the tests**. The whole test suite can be run with `pytest`, but it is usually not recommended since it takes a long time. It is often enough to only run the test related to your changes: for example, if you changed something in `sklearn/linear_model/logistic.py`, running the following commands will usually be enough:"
msgstr ""

#: ../developers/contributing.rst:391
msgid "`pytest sklearn/linear_model/logistic.py` to make sure the doctest examples are correct"
msgstr ""

#: ../developers/contributing.rst:393
msgid "`pytest sklearn/linear_model/tests/test_logistic.py` to run the tests specific to the file"
msgstr ""

#: ../developers/contributing.rst:395
msgid "`pytest sklearn/linear_model` to test the whole :mod:`~sklearn.linear_model` module"
msgstr ""

#: ../developers/contributing.rst:397
msgid "`pytest doc/modules/linear_model.rst` to make sure the user guide examples are correct."
msgstr ""

#: ../developers/contributing.rst:399
msgid "`pytest sklearn/tests/test_common.py -k LogisticRegression` to run all our estimator checks (specifically for `LogisticRegression`, if that's the estimator you changed)."
msgstr ""

#: ../developers/contributing.rst:403
msgid "There may be other failing tests, but they will be caught by the CI so you don't need to run the whole test suite locally. For guidelines on how to use ``pytest`` efficiently, see the :ref:`pytest_tips`."
msgstr ""

#: ../developers/contributing.rst:407
msgid "**Make sure your code is properly commented and documented**, and **make sure the documentation renders properly**. To build the documentation, please refer to our :ref:`contribute_documentation` guidelines. The CI will also build the docs: please refer to :ref:`generated_doc_CI`."
msgstr ""

#: ../developers/contributing.rst:412
msgid "**Tests are necessary for enhancements to be accepted**. Bug-fixes or new features should be provided with `non-regression tests <https://en.wikipedia.org/wiki/Non-regression_testing>`_. These tests verify the correct behavior of the fix or feature. In this manner, further modifications on the code base are granted to be consistent with the desired behavior. In the case of bug fixes, at the time of the PR, the non-regression tests should fail for the code base in the main branch and pass for the PR code."
msgstr ""

#: ../developers/contributing.rst:422
msgid "**Make sure that your PR does not add PEP8 violations**. To check the code that you changed, you can run the following command (see :ref:`above <upstream>` to set up the upstream remote):"
msgstr ""

#: ../developers/contributing.rst:430
msgid "or `make flake8-diff` which should work on unix-like system."
msgstr ""

#: ../developers/contributing.rst:432
msgid "Follow the :ref:`coding-guidelines`."
msgstr ""

#: ../developers/contributing.rst:435
msgid "When applicable, use the validation tools and scripts in the ``sklearn.utils`` submodule.  A list of utility routines available for developers can be found in the :ref:`developers-utils` page."
msgstr ""

#: ../developers/contributing.rst:439
msgid "Often pull requests resolve one or more other issues (or pull requests). If merging your pull request means that some other issues/PRs should be closed, you should `use keywords to create link to them <https://github.com/blog/1506-closing-issues-via-pull-requests/>`_ (e.g., ``Fixes #1234``; multiple issues/PRs are allowed as long as each one is preceded by a keyword). Upon merging, those issues/PRs will automatically be closed by GitHub. If your pull request is simply related to some other issues/PRs, create a link to them without using the keywords (e.g., ``See also #1234``)."
msgstr ""

#: ../developers/contributing.rst:449
msgid "PRs should often substantiate the change, through benchmarks of performance and efficiency (see :ref:`monitoring_performances`) or through examples of usage. Examples also illustrate the features and intricacies of the library to users. Have a look at other examples in the `examples/ <https://github.com/scikit-learn/scikit-learn/tree/main/examples>`_ directory for reference. Examples should demonstrate why the new functionality is useful in practice and, if possible, compare it to other methods available in scikit-learn."
msgstr ""

#: ../developers/contributing.rst:458
msgid "New features often need to be illustrated with narrative documentation in the user guide, with small code snippets. If relevant, please also add references in the literature, with PDF links when possible."
msgstr ""

#: ../developers/contributing.rst:462
msgid "The user guide should also include expected time and space complexity of the algorithm and scalability, e.g. \"this algorithm can scale to a large number of samples > 100000, but does not scale in dimensionality: n_features is expected to be lower than 100\"."
msgstr ""

#: ../developers/contributing.rst:467
msgid "You can also check our :ref:`code_review` to get an idea of what reviewers will expect."
msgstr ""

#: ../developers/contributing.rst:470
msgid "You can check for common programming errors with the following tools:"
msgstr ""

#: ../developers/contributing.rst:472
msgid "Code with a good unittest coverage (at least 80%, better 100%), check with:"
msgstr ""

#: ../developers/contributing.rst:480
msgid "see also :ref:`testing_coverage`"
msgstr ""

#: ../developers/contributing.rst:482
msgid "Run static analysis with `mypy`:"
msgstr ""

#: ../developers/contributing.rst:488
msgid "must not produce new errors in your pull request. Using `# type: ignore` annotation can be a workaround for a few cases that are not supported by mypy, in particular,"
msgstr ""

#: ../developers/contributing.rst:492
msgid "when importing C or Cython modules"
msgstr ""

#: ../developers/contributing.rst:493
msgid "on properties with decorators"
msgstr ""

#: ../developers/contributing.rst:495
msgid "Bonus points for contributions that include a performance analysis with a benchmark script and profiling output (see :ref:`monitoring_performances`)."
msgstr ""

#: ../developers/contributing.rst:498
msgid "Also check out the :ref:`performance-howto` guide for more details on profiling and Cython optimizations."
msgstr ""

#: ../developers/contributing.rst:503
msgid "The current state of the scikit-learn code base is not compliant with all of those guidelines, but we expect that enforcing those constraints on all new contributions will get the overall code base quality in the right direction."
msgstr ""

#: ../developers/contributing.rst:510
msgid "For two very well documented and more detailed guides on development workflow, please pay a visit to the `Scipy Development Workflow <https://docs.scipy.org/doc/numpy/dev/gitwash/development_workflow.html>`_ - and the `Astropy Workflow for Developers <https://astropy.readthedocs.io/en/latest/development/workflow/development_workflow.html>`_ sections."
msgstr ""

#: ../developers/contributing.rst:518
msgid "Continuous Integration (CI)"
msgstr ""

#: ../developers/contributing.rst:520
msgid "Azure pipelines are used for testing scikit-learn on Linux, Mac and Windows, with different dependencies and settings."
msgstr ""

#: ../developers/contributing.rst:522
msgid "CircleCI is used to build the docs for viewing, for linting with flake8, and for testing with PyPy on Linux"
msgstr ""

#: ../developers/contributing.rst:525
msgid "Please note that if one of the following markers appear in the latest commit message, the following actions are taken."
msgstr ""

#: ../developers/contributing.rst:529
msgid "Commit Message Marker"
msgstr ""

#: ../developers/contributing.rst:529
msgid "Action Taken by CI"
msgstr ""

#: ../developers/contributing.rst:531
msgid "[ci skip]"
msgstr ""

#: ../developers/contributing.rst:531
msgid "CI is skipped completely"
msgstr ""

#: ../developers/contributing.rst:532
msgid "[cd build]"
msgstr ""

#: ../developers/contributing.rst:532
msgid "CD is run (wheels and source distribution are built)"
msgstr ""

#: ../developers/contributing.rst:533
msgid "[lint skip]"
msgstr ""

#: ../developers/contributing.rst:533
msgid "Azure pipeline skips linting"
msgstr ""

#: ../developers/contributing.rst:534
msgid "[scipy-dev]"
msgstr ""

#: ../developers/contributing.rst:534
msgid "Add a Travis build with our dependencies (numpy, scipy, etc ...) development builds"
msgstr ""

#: ../developers/contributing.rst:535
msgid "[icc-build]"
msgstr ""

#: ../developers/contributing.rst:535
msgid "Add a Travis build with the Intel C compiler (ICC)"
msgstr ""

#: ../developers/contributing.rst:536
msgid "[arm64]"
msgstr ""

#: ../developers/contributing.rst:536
msgid "Add a Travis build for the ARM64 / aarch64 little endian architecture"
msgstr ""

#: ../developers/contributing.rst:537
msgid "[doc skip]"
msgstr ""

#: ../developers/contributing.rst:537
msgid "Docs are not built"
msgstr ""

#: ../developers/contributing.rst:538
msgid "[doc quick]"
msgstr ""

#: ../developers/contributing.rst:538
msgid "Docs built, but excludes example gallery plots"
msgstr ""

#: ../developers/contributing.rst:539
msgid "[doc build]"
msgstr ""

#: ../developers/contributing.rst:539
msgid "Docs built including example gallery plots (very long)"
msgstr ""

#: ../developers/contributing.rst:542
msgid "Note that, by default, the documentation is built but only the examples that are directly modified by the pull request are executed."
msgstr ""

#: ../developers/contributing.rst:548
msgid "Stalled pull requests"
msgstr ""

#: ../developers/contributing.rst:550
msgid "As contributing a feature can be a lengthy process, some pull requests appear inactive but unfinished. In such a case, taking them over is a great service for the project."
msgstr ""

#: ../developers/contributing.rst:554
msgid "A good etiquette to take over is:"
msgstr ""

#: ../developers/contributing.rst:556
msgid "**Determine if a PR is stalled**"
msgstr ""

#: ../developers/contributing.rst:558
msgid "A pull request may have the label \"stalled\" or \"help wanted\" if we have already identified it as a candidate for other contributors."
msgstr ""

#: ../developers/contributing.rst:561
msgid "To decide whether an inactive PR is stalled, ask the contributor if she/he plans to continue working on the PR in the near future. Failure to respond within 2 weeks with an activity that moves the PR forward suggests that the PR is stalled and will result in tagging that PR with \"help wanted\"."
msgstr ""

#: ../developers/contributing.rst:567
msgid "Note that if a PR has received earlier comments on the contribution that have had no reply in a month, it is safe to assume that the PR is stalled and to shorten the wait time to one day."
msgstr ""

#: ../developers/contributing.rst:571
msgid "After a sprint, follow-up for un-merged PRs opened during sprint will be communicated to participants at the sprint, and those PRs will be tagged \"sprint\". PRs tagged with \"sprint\" can be reassigned or declared stalled by sprint leaders."
msgstr ""

#: ../developers/contributing.rst:576
msgid "**Taking over a stalled PR**: To take over a PR, it is important to comment on the stalled PR that you are taking over and to link from the new PR to the old one. The new PR should be created by pulling from the old one."
msgstr ""

#: ../developers/contributing.rst:582
msgid "Stalled and Unclaimed Issues"
msgstr ""

#: ../developers/contributing.rst:584
msgid "Generally speaking, issues which are up for grabs will have a `\"help wanted\" <https://github.com/scikit-learn/scikit-learn/labels/help%20wanted>`_. tag. However, not all issues which need contributors will have this tag, as the \"help wanted\" tag is not always up-to-date with the state of the issue. Contributors can find issues which are still up for grabs using the following guidelines:"
msgstr ""

#: ../developers/contributing.rst:591
msgid "First, to **determine if an issue is claimed**:"
msgstr ""

#: ../developers/contributing.rst:593
msgid "Check for linked pull requests"
msgstr ""

#: ../developers/contributing.rst:594
msgid "Check the conversation to see if anyone has said that they're working on creating a pull request"
msgstr ""

#: ../developers/contributing.rst:597
msgid "If a contributor comments on an issue to say they are working on it, a pull request is expected within 2 weeks (new contributor) or 4 weeks (contributor or core dev), unless an larger time frame is explicitly given. Beyond that time, another contributor can take the issue and make a pull request for it. We encourage contributors to comment directly on the stalled or unclaimed issue to let community members know that they will be working on it."
msgstr ""

#: ../developers/contributing.rst:605
msgid "If the issue is linked to a :ref:`stalled pull request <stalled_pull_request>`, we recommend that contributors follow the procedure described in the :ref:`stalled_pull_request` section rather than working directly on the issue."
msgstr ""

#: ../developers/contributing.rst:613
msgid "Issues for New Contributors"
msgstr ""

#: ../developers/contributing.rst:615
msgid "New contributors should look for the following tags when looking for issues.  We strongly recommend that new contributors tackle \"easy\" issues first: this helps the contributor become familiar with the contribution workflow, and for the core devs to become acquainted with the contributor; besides which, we frequently underestimate how easy an issue is to solve!"
msgstr ""

msgid "good first issue tag"
msgstr ""

#: ../developers/contributing.rst:623
#, python-format
msgid "A great way to start contributing to scikit-learn is to pick an item from the list of `good first issues <https://github.com/scikit-learn/scikit-learn/labels/good%20first%20issue>`_ in the issue tracker. Resolving these issues allow you to start contributing to the project without much prior knowledge. If you have already contributed to scikit-learn, you should look at Easy issues instead."
msgstr ""

msgid "Easy tag"
msgstr ""

#: ../developers/contributing.rst:632
msgid "If you have already contributed to scikit-learn, another great way to contribute to scikit-learn is to pick an item from the list of `Easy issues <https://github.com/scikit-learn/scikit-learn/labels/Easy>`_ in the issue tracker. Your assistance in this area will be greatly appreciated by the more experienced developers as it helps free up their time to concentrate on other issues."
msgstr ""

msgid "help wanted tag"
msgstr ""

#: ../developers/contributing.rst:641
msgid "We often use the help wanted tag to mark issues regardless of difficulty. Additionally, we use the help wanted tag to mark Pull Requests which have been abandoned by their original contributor and are available for someone to pick up where the original contributor left off. The list of issues with the help wanted tag can be found `here <https://github.com/scikit-learn/scikit-learn/labels/help%20wanted>`_."
msgstr ""

#: ../developers/contributing.rst:647
msgid "Note that not all issues which need contributors will have this tag."
msgstr ""

#: ../developers/contributing.rst ../developers/contributing.rst:652
msgid "Documentation"
msgstr ""

#: ../developers/contributing.rst:654
msgid "We are glad to accept any sort of documentation: function docstrings, reStructuredText documents (like this one), tutorials, etc. reStructuredText documents live in the source code repository under the ``doc/`` directory."
msgstr ""

#: ../developers/contributing.rst:658
msgid "You can edit the documentation using any text editor, and then generate the HTML output by typing ``make`` from the ``doc/`` directory. Alternatively, ``make html`` may be used to generate the documentation **with** the example gallery (which takes quite some time). The resulting HTML files will be placed in ``_build/html/stable`` and are viewable in a web browser."
msgstr ""

#: ../developers/contributing.rst:666
msgid "Building the documentation"
msgstr ""

#: ../developers/contributing.rst:668
msgid "First, make sure you have :ref:`properly installed <install_bleeding_edge>` the development version."
msgstr ""

#: ../developers/contributing.rst:674
msgid "Building the documentation requires installing some additional packages:"
msgstr ""

#: ../developers/contributing.rst:681
msgid "To build the documentation, you need to be in the ``doc`` folder:"
msgstr ""

#: ../developers/contributing.rst:687
msgid "In the vast majority of cases, you only need to generate the full web site, without the example gallery:"
msgstr ""

#: ../developers/contributing.rst:694
msgid "The documentation will be generated in the ``_build/html/stable`` directory. To also generate the example gallery you can use:"
msgstr ""

#: ../developers/contributing.rst:701
msgid "This will run all the examples, which takes a while. If you only want to generate a few examples, you can use:"
msgstr ""

#: ../developers/contributing.rst:708
msgid "This is particularly useful if you are modifying a few examples."
msgstr ""

#: ../developers/contributing.rst:710
msgid "Set the environment variable `NO_MATHJAX=1` if you intend to view the documentation in an offline setting."
msgstr ""

#: ../developers/contributing.rst:713
msgid "To build the PDF manual, run:"
msgstr ""

#: ../developers/contributing.rst:719
msgid "**Sphinx version**"
msgstr ""

#: ../developers/contributing.rst:721
#, python-format
msgid "While we do our best to have the documentation build under as many versions of Sphinx as possible, the different versions tend to behave slightly differently. To get the best results, you should use the same version as the one we used on CircleCI. Look at this `github search <https://github.com/search?utf8=%E2%9C%93&q=sphinx+repo%3Ascikit-learn%2Fscikit-learn+extension%3Ash+path%3Abuild_tools%2Fcircle&type=Code>`_ to know the exact version."
msgstr ""

#: ../developers/contributing.rst:729
msgid "Guidelines for writing documentation"
msgstr ""

#: ../developers/contributing.rst:731
msgid "It is important to keep a good compromise between mathematical and algorithmic details, and give intuition to the reader on what the algorithm does."
msgstr ""

#: ../developers/contributing.rst:734
msgid "Basically, to elaborate on the above, it is best to always start with a small paragraph with a hand-waving explanation of what the method does to the data. Then, it is very helpful to point out why the feature is useful and when it should be used - the latter also including \"big O\" (:math:`O\\left(g\\left(n\\right)\\right)`) complexities of the algorithm, as opposed to just *rules of thumb*, as the latter can be very machine-dependent. If those complexities are not available, then rules of thumb may be provided instead."
msgstr ""

#: ../developers/contributing.rst:742
msgid "Secondly, a generated figure from an example (as mentioned in the previous paragraph) should then be included to further provide some intuition."
msgstr ""

#: ../developers/contributing.rst:745
msgid "Next, one or two small code examples to show its use can be added."
msgstr ""

#: ../developers/contributing.rst:747
msgid "Next, any math and equations, followed by references, can be added to further the documentation. Not starting the documentation with the maths makes it more friendly towards users that are just interested in what the feature will do, as opposed to how it works \"under the hood\"."
msgstr ""

#: ../developers/contributing.rst:753
msgid "Finally, follow the formatting rules below to make it consistently good:"
msgstr ""

#: ../developers/contributing.rst:755
msgid "Add \"See Also\" in docstrings for related classes/functions."
msgstr ""

#: ../developers/contributing.rst:757
msgid "\"See Also\" in docstrings should be one line per reference, with a colon and an explanation, for example::"
msgstr ""

#: ../developers/contributing.rst:765
msgid "When documenting the parameters and attributes, here is a list of some well-formatted examples::"
msgstr ""

#: ../developers/contributing.rst:789
msgid "In general have the following in mind:"
msgstr ""

#: ../developers/contributing.rst:791
msgid "Use Python basic types. (``bool`` instead of ``boolean``)"
msgstr ""

#: ../developers/contributing.rst:792
msgid "Use parenthesis for defining shapes: ``array-like of shape (n_samples,)`` or ``array-like of shape (n_samples, n_features)``"
msgstr ""

#: ../developers/contributing.rst:794
msgid "For strings with multiple options, use brackets: ``input: {'log', 'squared', 'multinomial'}``"
msgstr ""

#: ../developers/contributing.rst:796
msgid "1D or 2D data can be a subset of ``{array-like, ndarray, sparse matrix, dataframe}``. Note that ``array-like`` can also be a ``list``, while ``ndarray`` is explicitly only a ``numpy.ndarray``."
msgstr ""

#: ../developers/contributing.rst:799
msgid "Specify ``dataframe`` when \"frame-like\" features are being used, such as the column names."
msgstr ""

#: ../developers/contributing.rst:801
msgid "When specifying the data type of a list, use ``of`` as a delimiter: ``list of int``. When the parameter supports arrays giving details about the shape and/or data type and a list of such arrays, you can use one of ``array-like of shape (n_samples,) or list of such arrays``."
msgstr ""

#: ../developers/contributing.rst:805
msgid "When specifying the dtype of an ndarray, use e.g. ``dtype=np.int32`` after defining the shape: ``ndarray of shape (n_samples,), dtype=np.int32``. You can specify multiple dtype as a set: ``array-like of shape (n_samples,), dtype={np.float64, np.float32}``. If one wants to mention arbitrary precision, use `integral` and `floating` rather than the Python dtype `int` and `float`. When both `int` and `floating` are supported, there is no need to specify the dtype."
msgstr ""

#: ../developers/contributing.rst:814
msgid "When the default is ``None``, ``None`` only needs to be specified at the end with ``default=None``. Be sure to include in the docstring, what it means for the parameter or attribute to be ``None``."
msgstr ""

#: ../developers/contributing.rst:818
msgid "For unwritten formatting rules, try to follow existing good works:"
msgstr ""

#: ../developers/contributing.rst:820
msgid "For \"References\" in docstrings, see the Silhouette Coefficient (:func:`sklearn.metrics.silhouette_score`)."
msgstr ""

#: ../developers/contributing.rst:823
msgid "When editing reStructuredText (``.rst``) files, try to keep line length under 80 characters when possible (exceptions include links and tables)."
msgstr ""

#: ../developers/contributing.rst:826
msgid "Do not modify sphinx labels as this would break existing cross references and external links pointing to specific sections in the scikit-learn documentation."
msgstr ""

#: ../developers/contributing.rst:830
msgid "Before submitting your pull request check if your modifications have introduced new sphinx warnings and try to fix them."
msgstr ""

#: ../developers/contributing.rst:836
msgid "Generated documentation on CircleCI"
msgstr ""

#: ../developers/contributing.rst:838
msgid "When you change the documentation in a pull request, CircleCI automatically builds it. To view the documentation generated by CircleCI, simply go at the bottom of your PR page and look for the \"ci/circleci: doc artifact\" link."
msgstr ""

#: ../developers/contributing.rst:845
msgid "Testing and improving test coverage"
msgstr ""

#: ../developers/contributing.rst:847
msgid "High-quality `unit testing <https://en.wikipedia.org/wiki/Unit_testing>`_ is a corner-stone of the scikit-learn development process. For this purpose, we use the `pytest <https://docs.pytest.org>`_ package. The tests are functions appropriately named, located in `tests` subdirectories, that check the validity of the algorithms and the different options of the code."
msgstr ""

#: ../developers/contributing.rst:854
msgid "Running `pytest` in a folder will run all the tests of the corresponding subpackages. For a more detailed `pytest` workflow, please refer to the :ref:`pr_checklist`."
msgstr ""

#: ../developers/contributing.rst:858
msgid "We expect code coverage of new features to be at least around 90%."
msgstr ""

#: ../developers/contributing.rst:862
msgid "Writing matplotlib related tests"
msgstr ""

#: ../developers/contributing.rst:864
msgid "Test fixtures ensure that a set of tests will be executing with the appropriate initialization and cleanup. The scikit-learn test suite implements a fixture which can be used with ``matplotlib``."
msgstr ""

#: ../developers/contributing.rst:873
msgid "``pyplot``"
msgstr ""

#: ../developers/contributing.rst:869
msgid "The ``pyplot`` fixture should be used when a test function is dealing with ``matplotlib``. ``matplotlib`` is a soft dependency and is not required. This fixture is in charge of skipping the tests if ``matplotlib`` is not installed. In addition, figures created during the tests will be automatically closed once the test function has been executed."
msgstr ""

#: ../developers/contributing.rst:875
msgid "To use this fixture in a test function, one needs to pass it as an argument::"
msgstr ""

#: ../developers/contributing.rst:882
msgid "Workflow to improve test coverage"
msgstr ""

#: ../developers/contributing.rst:884
msgid "To test code coverage, you need to install the `coverage <https://pypi.org/project/coverage/>`_ package in addition to pytest."
msgstr ""

#: ../developers/contributing.rst:888
msgid "Run 'make test-coverage'. The output lists for each file the line"
msgstr ""

#: ../developers/contributing.rst:888
msgid "numbers that are not tested."
msgstr ""

#: ../developers/contributing.rst:891
msgid "Find a low hanging fruit, looking at which lines are not tested,"
msgstr ""

#: ../developers/contributing.rst:891
msgid "write or adapt a test specifically for these lines."
msgstr ""

#: ../developers/contributing.rst:893
msgid "Loop."
msgstr ""

#: ../developers/contributing.rst:898
msgid "Monitoring performance"
msgstr ""

#: ../developers/contributing.rst:900
msgid "*This section is heavily inspired from the* `pandas documentation <https://pandas.pydata.org/docs/development/contributing.html#running-the-performance-test-suite>`_."
msgstr ""

#: ../developers/contributing.rst:903
msgid "When proposing changes to the existing code base, it's important to make sure that they don't introduce performance regressions. Scikit-learn uses `asv benchmarks <https://github.com/airspeed-velocity/asv>`_ to monitor the performance of a selection of common estimators and functions. The benchmark suite can be found in the `scikit-learn/asv_benchmarks` directory."
msgstr ""

#: ../developers/contributing.rst:909
msgid "To use all features of asv, you will need either `conda` or `virtualenv`. For more details please check the `asv installation webpage <https://asv.readthedocs.io/en/latest/installing.html>`_."
msgstr ""

#: ../developers/contributing.rst:913
msgid "First of all you need to install the development version of asv:"
msgstr ""

#: ../developers/contributing.rst:919
msgid "and change your directory to `asv_benchmarks/`:"
msgstr ""

#: ../developers/contributing.rst:925
msgid "The benchmark suite is configured to run against your local clone of scikit-learn. Make sure it is up to date:"
msgstr ""

#: ../developers/contributing.rst:932
msgid "In the benchmark suite, the benchmarks are organized following the same structure as scikit-learn. For example, you can compare the performance of a specific estimator between upstream/main and the branch you are working on:"
msgstr ""

#: ../developers/contributing.rst:940
msgid "The command uses conda by default for creating the benchmark environments. If you want to use virtualenv instead, use the `-E` flag:"
msgstr ""

#: ../developers/contributing.rst:947
msgid "You can also specify a whole module to benchmark:"
msgstr ""

#: ../developers/contributing.rst:953
msgid "You can replace `HEAD` by any local branch. By default it will only report the benchmarks that have change by at least 10%. You can control this ratio with the `-f` flag."
msgstr ""

#: ../developers/contributing.rst:957
msgid "To run the full benchmark suite, simply remove the `-b` flag :"
msgstr ""

#: ../developers/contributing.rst:963
msgid "However this can take up to two hours. The `-b` flag also accepts a regular expression for a more complex subset of benchmarks to run."
msgstr ""

#: ../developers/contributing.rst:966
msgid "To run the benchmarks without comparing to another branch, use the `run` command:"
msgstr ""

#: ../developers/contributing.rst:973
msgid "You can also run the benchmark suite using the version of scikit-learn already installed in your current Python environment:"
msgstr ""

#: ../developers/contributing.rst:980
msgid "It's particulary useful when you installed scikit-learn in editable mode to avoid creating a new environment each time you run the benchmarks. By default the results are not saved when using an existing installation. To save the results you must specify a commit hash:"
msgstr ""

#: ../developers/contributing.rst:989
msgid "Benchmarks are saved and organized by machine, environment and commit. To see the list of all saved benchmarks:"
msgstr ""

#: ../developers/contributing.rst:996
msgid "and to see the report of a specific run:"
msgstr ""

#: ../developers/contributing.rst:1002
msgid "When running benchmarks for a pull request you're working on please report the results on github."
msgstr ""

#: ../developers/contributing.rst:1005
msgid "The benchmark suite supports additional configurable options which can be set in the `benchmarks/config.json` configuration file. For example, the benchmarks can run for a provided list of values for the `n_jobs` parameter."
msgstr ""

#: ../developers/contributing.rst:1009
msgid "More information on how to write a benchmark and how to use asv can be found in the `asv documentation <https://asv.readthedocs.io/en/latest/index.html>`_."
msgstr ""

#: ../developers/contributing.rst:1015
msgid "Issue Tracker Tags"
msgstr ""

#: ../developers/contributing.rst:1017
msgid "All issues and pull requests on the `GitHub issue tracker <https://github.com/scikit-learn/scikit-learn/issues>`_ should have (at least) one of the following tags:"
msgstr ""

#: ../developers/contributing.rst
msgid "Bug / Crash"
msgstr ""

#: ../developers/contributing.rst:1022
msgid "Something is happening that clearly shouldn't happen. Wrong results as well as unexpected errors from estimators go here."
msgstr ""

#: ../developers/contributing.rst
msgid "Cleanup / Enhancement"
msgstr ""

#: ../developers/contributing.rst:1026
msgid "Improving performance, usability, consistency."
msgstr ""

#: ../developers/contributing.rst:1029
msgid "Missing, incorrect or sub-standard documentations and examples."
msgstr ""

#: ../developers/contributing.rst
msgid "New Feature"
msgstr ""

#: ../developers/contributing.rst:1032
msgid "Feature requests and pull requests implementing a new feature."
msgstr ""

#: ../developers/contributing.rst:1034
msgid "There are four other tags to help new contributors:"
msgstr ""

#: ../developers/contributing.rst
msgid "good first issue"
msgstr ""

#: ../developers/contributing.rst:1037
msgid "This issue is ideal for a first contribution to scikit-learn. Ask for help if the formulation is unclear. If you have already contributed to scikit-learn, look at Easy issues instead."
msgstr ""

#: ../developers/contributing.rst
msgid "Easy"
msgstr ""

#: ../developers/contributing.rst:1042
msgid "This issue can be tackled without much prior experience."
msgstr ""

#: ../developers/contributing.rst
msgid "Moderate"
msgstr ""

#: ../developers/contributing.rst:1045
msgid "Might need some knowledge of machine learning or the package, but is still approachable for someone new to the project."
msgstr ""

#: ../developers/contributing.rst
msgid "help wanted"
msgstr ""

#: ../developers/contributing.rst:1049
msgid "This tag marks an issue which currently lacks a contributor or a PR that needs another contributor to take over the work. These issues can range in difficulty, and may not be approachable for new contributors. Note that not all issues which need contributors will have this tag."
msgstr ""

#: ../developers/contributing.rst:1058
msgid "Maintaining backwards compatibility"
msgstr ""

#: ../developers/contributing.rst:1063
msgid "Deprecation"
msgstr ""

#: ../developers/contributing.rst:1065
msgid "If any publicly accessible method, function, attribute or parameter is renamed, we still support the old one for two releases and issue a deprecation warning when it is called/passed/accessed. E.g., if the function ``zero_one`` is renamed to ``zero_one_loss``, we add the decorator ``deprecated`` (from ``sklearn.utils``) to ``zero_one`` and call ``zero_one_loss`` from that function::"
msgstr ""

#: ../developers/contributing.rst:1085
msgid "If an attribute is to be deprecated, use the decorator ``deprecated`` on a property. Please note that the ``property`` decorator should be placed before the ``deprecated`` decorator for the docstrings to be rendered properly. E.g., renaming an attribute ``labels_`` to ``classes_`` can be done as::"
msgstr ""

#: ../developers/contributing.rst:1097
msgid "If a parameter has to be deprecated, a ``FutureWarning`` warning must be raised too. In the following example, k is deprecated and renamed to n_clusters::"
msgstr ""

#: ../developers/contributing.rst:1110 ../developers/contributing.rst:1168
msgid "When the change is in a class, we validate and raise warning in ``fit``::"
msgstr ""

#: ../developers/contributing.rst:1128
msgid "As in these examples, the warning message should always give both the version in which the deprecation happened and the version in which the old behavior will be removed. If the deprecation happened in version 0.x-dev, the message should say deprecation occurred in version 0.x and the removal will be in 0.(x+2), so that users will have enough time to adapt their code to the new behaviour. For example, if the deprecation happened in version 0.18-dev, the message should say it happened in version 0.18 and the old behavior will be removed in version 0.20."
msgstr ""

#: ../developers/contributing.rst:1137
msgid "In addition, a deprecation note should be added in the docstring, recalling the same information as the deprecation warning as explained above. Use the ``.. deprecated::`` directive::"
msgstr ""

#: ../developers/contributing.rst:1145
msgid "What's more, a deprecation requires a test which ensures that the warning is raised in relevant cases but not in other cases. The warning should be caught in all other tests (using e.g., ``@pytest.mark.filterwarnings``), and there should be no warning in the examples."
msgstr ""

#: ../developers/contributing.rst:1152
msgid "Change the default value of a parameter"
msgstr ""

#: ../developers/contributing.rst:1154
msgid "If the default value of a parameter needs to be changed, please replace the default value with a specific value (e.g., ``warn``) and raise ``FutureWarning`` when users are using the default value. In the following example, we change the default value of ``n_clusters`` from 5 to 10 (current version is 0.20)::"
msgstr ""

#: ../developers/contributing.rst:1182
msgid "Similar to deprecations, the warning message should always give both the version in which the change happened and the version in which the old behavior will be removed. The docstring needs to be updated accordingly. We need a test which ensures that the warning is raised in relevant cases but not in other cases. The warning should be caught in all other tests (using e.g., ``@pytest.mark.filterwarnings``), and there should be no warning in the examples."
msgstr ""

#: ../developers/contributing.rst:1195
msgid "Code Review Guidelines"
msgstr ""

#: ../developers/contributing.rst:1196
msgid "Reviewing code contributed to the project as PRs is a crucial component of scikit-learn development. We encourage anyone to start reviewing code of other developers. The code review process is often highly educational for everybody involved. This is particularly appropriate if it is a feature you would like to use, and so can respond critically about whether the PR meets your needs. While each pull request needs to be signed off by two core developers, you can speed up this process by providing your feedback."
msgstr ""

#: ../developers/contributing.rst:1204
msgid "Here are a few important aspects that need to be covered in any code review, from high-level questions to a more detailed check-list."
msgstr ""

#: ../developers/contributing.rst:1207
msgid "Do we want this in the library? Is it likely to be used? Do you, as a scikit-learn user, like the change and intend to use it? Is it in the scope of scikit-learn? Will the cost of maintaining a new feature be worth its benefits?"
msgstr ""

#: ../developers/contributing.rst:1212
msgid "Is the code consistent with the API of scikit-learn? Are public functions/classes/parameters well named and intuitively designed?"
msgstr ""

#: ../developers/contributing.rst:1215
msgid "Are all public functions/classes and their parameters, return types, and stored attributes named according to scikit-learn conventions and documented clearly?"
msgstr ""

#: ../developers/contributing.rst:1218
msgid "Is any new functionality described in the user-guide and illustrated with examples?"
msgstr ""

#: ../developers/contributing.rst:1220
msgid "Is every public function/class tested? Are a reasonable set of parameters, their values, value types, and combinations tested? Do the tests validate that the code is correct, i.e. doing what the documentation says it does? If the change is a bug-fix, is a non-regression test included? Look at `this <https://jeffknupp.com/blog/2013/12/09/improve-your-python-understanding-unit-testing>`__ to get started with testing in Python."
msgstr ""

#: ../developers/contributing.rst:1228
msgid "Do the tests pass in the continuous integration build? If appropriate, help the contributor understand why tests failed."
msgstr ""

#: ../developers/contributing.rst:1231
msgid "Do the tests cover every line of code (see the coverage report in the build log)? If not, are the lines missing coverage good exceptions?"
msgstr ""

#: ../developers/contributing.rst:1234
msgid "Is the code easy to read and low on redundancy? Should variable names be improved for clarity or consistency? Should comments be added? Should comments be removed as unhelpful or extraneous?"
msgstr ""

#: ../developers/contributing.rst:1238
msgid "Could the code easily be rewritten to run much more efficiently for relevant settings?"
msgstr ""

#: ../developers/contributing.rst:1241
msgid "Is the code backwards compatible with previous versions? (or is a deprecation cycle necessary?)"
msgstr ""

#: ../developers/contributing.rst:1244
msgid "Will the new code add any dependencies on other libraries? (this is unlikely to be accepted)"
msgstr ""

#: ../developers/contributing.rst:1247
msgid "Does the documentation render properly (see the :ref:`contribute_documentation` section for more details), and are the plots instructive?"
msgstr ""

#: ../developers/contributing.rst:1251
msgid ":ref:`saved_replies` includes some frequent comments that reviewers may make."
msgstr ""

#: ../developers/contributing.rst:1254
msgid "Reading the existing code base"
msgstr ""

#: ../developers/contributing.rst:1256
msgid "Reading and digesting an existing code base is always a difficult exercise that takes time and experience to main. Even though we try to write simple code in general, understanding the code can seem overwhelming at first, given the sheer size of the project. Here is a list of tips that may help make this task easier and faster (in no particular order)."
msgstr ""

#: ../developers/contributing.rst:1262
msgid "Get acquainted with the :ref:`api_overview`: understand what :term:`fit`, :term:`predict`, :term:`transform`, etc. are used for."
msgstr ""

#: ../developers/contributing.rst:1264
msgid "Before diving into reading the code of a function / class, go through the docstrings first and try to get an idea of what each parameter / attribute is doing. It may also help to stop a minute and think *how would I do this myself if I had to?*"
msgstr ""

#: ../developers/contributing.rst:1268
msgid "The trickiest thing is often to identify which portions of the code are relevant, and which are not. In scikit-learn **a lot** of input checking is performed, especially at the beginning of the :term:`fit` methods. Sometimes, only a very small portion of the code is doing the actual job. For example looking at the ``fit()`` method of :class:`~linear_model.LinearRegression`, what you're looking for might just be the call the ``scipy.linalg.lstsq``, but it is buried into multiple lines of input checking and the handling of different kinds of parameters."
msgstr ""

#: ../developers/contributing.rst:1277
msgid "Due to the use of `Inheritance <https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)>`_, some methods may be implemented in parent classes. All estimators inherit at least from :class:`~base.BaseEstimator`, and from a ``Mixin`` class (e.g. :class:`~base.ClassifierMixin`) that enables default behaviour depending on the nature of the estimator (classifier, regressor, transformer, etc.)."
msgstr ""

#: ../developers/contributing.rst:1284
msgid "Sometimes, reading the tests for a given function will give you an idea of what its intended purpose is. You can use ``git grep`` (see below) to find all the tests written for a function. Most tests for a specific function/class are placed under the ``tests/`` folder of the module"
msgstr ""

#: ../developers/contributing.rst:1288
msgid "You'll often see code looking like this: ``out = Parallel(...)(delayed(some_function)(param) for param in some_iterable)``. This runs ``some_function`` in parallel using `Joblib <https://joblib.readthedocs.io/>`_. ``out`` is then an iterable containing the values returned by ``some_function`` for each call."
msgstr ""

#: ../developers/contributing.rst:1293
msgid "We use `Cython <https://cython.org/>`_ to write fast code. Cython code is located in ``.pyx`` and ``.pxd`` files. Cython code has a more C-like flavor: we use pointers, perform manual memory allocation, etc. Having some minimal experience in C / C++ is pretty much mandatory here."
msgstr ""

#: ../developers/contributing.rst:1297
msgid "Master your tools."
msgstr ""

#: ../developers/contributing.rst:1299
msgid "With such a big project, being efficient with your favorite editor or IDE goes a long way towards digesting the code base. Being able to quickly jump (or *peek*) to a function/class/attribute definition helps a lot. So does being able to quickly see where a given name is used in a file."
msgstr ""

#: ../developers/contributing.rst:1303
msgid "`git <https://git-scm.com/book/en>`_ also has some built-in killer features. It is often useful to understand how a file changed over time, using e.g. ``git blame`` (`manual <https://git-scm.com/docs/git-blame>`_). This can also be done directly on GitHub. ``git grep`` (`examples <https://git-scm.com/docs/git-grep#_examples>`_) is also extremely useful to see every occurrence of a pattern (e.g. a function call or a variable) in the code base."
msgstr ""

