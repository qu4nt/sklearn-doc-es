msgid ""
msgstr ""
"Project-Id-Version: scikit-learn\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: 2021-06-18 03:36\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: scikit-learn\n"
"X-Crowdin-Project-ID: 450526\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /main/doc/en/developers/advanced_installation.po\n"
"X-Crowdin-File-ID: 4012\n"
"Language: es_ES\n"

#: ../developers/advanced_installation.rst:8
msgid "Installing the development version of scikit-learn"
msgstr "Instalación de la versión de desarrollo de scikit-learn"

#: ../developers/advanced_installation.rst:10
msgid "This section introduces how to install the **main branch** of scikit-learn. This can be done by either installing a nightly build or building from source."
msgstr "Esta sección presenta cómo instalar la **rama principal** de scikit-learn. Esto se puede hacer ya sea instalando una compilación nocturna o compilando desde el código fuente."

#: ../developers/advanced_installation.rst:16
msgid "Installing nightly builds"
msgstr "Instalación de compilaciones nocturnas"

#: ../developers/advanced_installation.rst:18
msgid "The continuous integration servers of the scikit-learn project build, test and upload wheel packages for the most recent Python version on a nightly basis."
msgstr "Los servidores de integración continua del proyecto scikit-learn compilan, prueban y suben paquetes wheel para la versión más reciente de Python cada noche."

#: ../developers/advanced_installation.rst:22
msgid "Installing a nightly build is the quickest way to:"
msgstr "Instalar una compilación nocturna es la forma más rápida de:"

#: ../developers/advanced_installation.rst:24
msgid "try a new feature that will be shipped in the next release (that is, a feature from a pull-request that was recently merged to the main branch);"
msgstr "probar una nueva característica que será enviada en la próxima versión (es decir, una característica de una solicitud de pull que fue recientemente fusionada con la rama principal);"

#: ../developers/advanced_installation.rst:27
msgid "check whether a bug you encountered has been fixed since the last release."
msgstr "comprobar si un error detectado ha sido corregido desde la última versión."

#: ../developers/advanced_installation.rst:37
msgid "Building from source"
msgstr "Compilando desde la fuente"

#: ../developers/advanced_installation.rst:39
msgid "Building from source is required to work on a contribution (bug fix, new feature, code or documentation improvement)."
msgstr "Es necesario compilar desde el código fuente para trabajar en una contribución (corrección de errores, nueva función, mejora del código o de la documentación)."

#: ../developers/advanced_installation.rst:44
msgid "Use `Git <https://git-scm.com/>`_ to check out the latest source from the `scikit-learn repository <https://github.com/scikit-learn/scikit-learn>`_ on Github.:"
msgstr "Usa `Git <https://git-scm.com/>`_ para revisar la última fuente del repositorio `scikit-learn <https://github.com/scikit-learn/scikit-learn>`_ en Github.:"

#: ../developers/advanced_installation.rst:53
msgid "If you plan on submitting a pull-request, you should clone from your fork instead."
msgstr "Si planeas enviar una solicitud de pull, deberías clonar desde su bifurcación."

#: ../developers/advanced_installation.rst:56
msgid "Install a compiler with OpenMP_ support for your platform. See instructions for :ref:`compiler_windows`, :ref:`compiler_macos`, :ref:`compiler_linux` and :ref:`compiler_freebsd`."
msgstr "Instala un compilador con soporte OpenMP_ para su plataforma. Ver instrucciones para :ref:`compiler_windows`, :ref:`compiler_macos`, :ref:`compiler_linux` y :ref:`compiler_freebsd`."

#: ../developers/advanced_installation.rst:60
msgid "Optional (but recommended): create and activate a dedicated virtualenv_ or `conda environment`_."
msgstr "Opcional (pero recomendado): crear y activar un entorno virtual dedicado_ o `conda`_."

#: ../developers/advanced_installation.rst:63
msgid "Install Cython_ and build the project with pip in :ref:`editable_mode`:"
msgstr "Instala Cython_ y compila el proyecto con pip en :ref:`editable_mode`:"

#: ../developers/advanced_installation.rst:70
msgid "Check that the installed scikit-learn has a version number ending with `.dev0`:"
msgstr "Comprueba que el scikit-learn instalado tiene un número de versión que termina con `.dev0`:"

#: ../developers/advanced_installation.rst:77
msgid "Please refer to the :ref:`developers_guide` and :ref:`pytest_tips` to run the tests on the module of your choice."
msgstr "Por favor, consulta :ref:`developers_guide` y :ref:`pytest_tips` para ejecutar las pruebas en el módulo de tu elección."

#: ../developers/advanced_installation.rst:82
msgid "You will have to run the ``pip install --no-build-isolation --editable .`` command every time the source code of a Cython file is updated (ending in `.pyx` or `.pxd`). Use the ``--no-build-isolation`` flag to avoid compiling the whole project each time, only the files you have modified."
msgstr "Tendrás que ejecutar el comando ``pip install --no-build-isolation --editable .`` cada vez que se actualice el código fuente de un archivo Cython (que termine en `.pyx` o `.pxd`). Utilice la bandera ``--no-build-isolation`` para evitar compilar todo el proyecto cada vez, sólo los archivos que ha modificado."

#: ../developers/advanced_installation.rst:89
msgid "Dependencies"
msgstr "Dependencias"

#: ../developers/advanced_installation.rst:92
msgid "Runtime dependencies"
msgstr "Dependencias de ejecución"

#: ../developers/advanced_installation.rst:94
msgid "Scikit-learn requires the following dependencies both at build time and at runtime:"
msgstr "Scikit-learn requiere las siguientes dependencias tanto en tiempo de compilación como en tiempo de ejecución:"

#: ../developers/advanced_installation.rst:97
msgid "Python (>= 3.6),"
msgstr "Python (>= 3.6),"

#: ../developers/advanced_installation.rst:98
msgid "NumPy (>= |NumpyMinVersion|),"
msgstr "NumPy (>= |NumpyMinVersion|),"

#: ../developers/advanced_installation.rst:99
msgid "SciPy (>= |ScipyMinVersion|),"
msgstr "SciPy (>= |ScipyMinVersion|),"

#: ../developers/advanced_installation.rst:100
msgid "Joblib (>= |JoblibMinVersion|),"
msgstr "Joblib (>= |JoblibMinVersion|),"

#: ../developers/advanced_installation.rst:101
msgid "threadpoolctl (>= |ThreadpoolctlMinVersion|)."
msgstr "threadpoolctl (>= |ThreadpoolctlMinVersion|)."

#: ../developers/advanced_installation.rst:103
msgid "Those dependencies are **automatically installed by pip** if they were missing when building scikit-learn from source."
msgstr "Esas dependencias son **instaladas automáticamente por pip** si faltaban al compilar scikit-learn desde el origen."

#: ../developers/advanced_installation.rst:108
msgid "For running on PyPy, PyPy3-v5.10+, Numpy 1.14.0+, and scipy 1.1.0+ are required. For PyPy, only installation instructions with pip apply."
msgstr "Para ejecutarse en PyPy, PyPy3-v5.10+, se requieren Numpy 1.14.0+, y scipy 1.1.0+. Para PyPy, solo se aplican las instrucciones de instalación con pip."

#: ../developers/advanced_installation.rst:112
msgid "Build dependencies"
msgstr "Dependencias de compilación"

#: ../developers/advanced_installation.rst:114
msgid "Building Scikit-learn also requires:"
msgstr "La compilación de Scikit-learn también requiere:"

#: ../developers/advanced_installation.rst:122
msgid "Cython >= |CythonMinVersion|"
msgstr "Cython >= |CythonMinVersion|"

#: ../developers/advanced_installation.rst:123
msgid "A C/C++ compiler and a matching OpenMP_ runtime library. See the :ref:`platform system specific instructions <platform_specific_instructions>` for more details."
msgstr "Un compilador C/C++ y una biblioteca de tiempo de ejecución OpenMP_ correspondiente. Consulta las :ref:`instrucciones específicas del sistema de la plataforma <platform_specific_instructions>` para obtener más detalles."

#: ../developers/advanced_installation.rst:129
msgid "If OpenMP is not supported by the compiler, the build will be done with OpenMP functionalities disabled. This is not recommended since it will force some estimators to run in sequential mode instead of leveraging thread-based parallelism. Setting the ``SKLEARN_FAIL_NO_OPENMP`` environment variable (before cythonization) will force the build to fail if OpenMP is not supported."
msgstr "Si OpenMP no es compatible con el compilador, la compilación se hará con las funcionalidades de OpenMP deshabilitadas. Esto no es recomendable ya que forzará a algunos estimadores a ejecutarse en modo secuencial en lugar de aprovechar el paralelismo basado en hilos. Establecer la variable de entorno ``SKLEARN_FAIL_NO_OPENMP`` (antes de la cythonización) forzará la compilación a fallar si OpenMP no es compatible."

#: ../developers/advanced_installation.rst:136
msgid "Since version 0.21, scikit-learn automatically detects and use the linear algebrea library used by SciPy **at runtime**. Scikit-learn has therefore no build dependency on BLAS/LAPACK implementations such as OpenBlas, Atlas, Blis or MKL."
msgstr "Desde la versión 0.21, scikit-learn detecta y utiliza automáticamente la biblioteca de álgebra lineal utilizada por SciPy **en tiempo de ejecución**. Por lo tanto, Scikit-learn no depende de implementaciones BLAS/LAPACK como OpenBlas, Atlas, Blis o MKL."

#: ../developers/advanced_installation.rst:142
msgid "Test dependencies"
msgstr "Dependencias de prueba"

#: ../developers/advanced_installation.rst:144
msgid "Running tests requires:"
msgstr "Las pruebas en ejecución requieren:"

#: ../developers/advanced_installation.rst:146
msgid "pytest >= |PytestMinVersion|"
msgstr "pytest >= |PytestMinVersion|"

#: ../developers/advanced_installation.rst:148
msgid "Some tests also require `pandas <https://pandas.pydata.org>`_."
msgstr "Algunas pruebas también requieren `pandas <https://pandas.pydata.org>`_."

#: ../developers/advanced_installation.rst:152
msgid "Building a specific version from a tag"
msgstr "Compilar una versión específica de una etiqueta"

#: ../developers/advanced_installation.rst:154
msgid "If you want to build a stable version, you can ``git checkout <VERSION>`` to get the code for that particular version, or download an zip archive of the version from github."
msgstr "Si desea compilar una versión estable, puede ``git checkout <VERSION>`` para obtener el código para esa versión en particular, o descargar un archivo zip de la versión desde github."

#: ../developers/advanced_installation.rst:161
msgid "Editable mode"
msgstr "Modo editable"

#: ../developers/advanced_installation.rst:163
msgid "If you run the development version, it is cumbersome to reinstall the package each time you update the sources. Therefore it is recommended that you install in with the ``pip install --no-build-isolation --editable .`` command, which allows you to edit the code in-place. This builds the extension in place and creates a link to the development directory (see `the pip docs <https://pip.pypa.io/en/stable/reference/pip_install/#editable-installs>`_)."
msgstr "Si ejecutas la versión de desarrollo, es engorroso reinstalar el paquete cada vez que actualices las fuentes. Por lo tanto, se recomienda que instales con el ``pip install --no-build-isolation --editable . ` , que te permite editar el código en su lugar. Esto compila la extensión en su lugar y crea un enlace al directorio de desarrollo (ver `los documentos pip <https://pip.pypa.io/en/stable/reference/pip_install/#editable-installs>`_)."

#: ../developers/advanced_installation.rst:170
msgid "This is fundamentally similar to using the command ``python setup.py develop`` (see `the setuptool docs <https://setuptools.readthedocs.io/en/latest/setuptools.html#development-mode>`_). It is however preferred to use pip."
msgstr "Esto es fundamentalmente similar a usar el comando ``python setup.py develop`` (ver `el archivo setuptool docs <https://setuptools.readthedocs.io/en/latest/setuptools.html#development-mode>`_). Sin embargo, se prefiere usar pip."

#: ../developers/advanced_installation.rst:175
msgid "On Unix-like systems, you can equivalently type ``make in`` from the top-level folder. Have a look at the ``Makefile`` for additional utilities."
msgstr "En sistemas semejantes a Unix, puede escribir equivalentemente ``make in`` desde la carpeta de nivel superior. Echa un vistazo a ``Makefile`` para utilidades adicionales."

#: ../developers/advanced_installation.rst:181
msgid "Platform-specific instructions"
msgstr "Instrucciones específicas de la plataforma"

#: ../developers/advanced_installation.rst:183
msgid "Here are instructions to install a working C/C++ compiler with OpenMP support to build scikit-learn Cython extensions for each supported platform."
msgstr "Aquí están las instrucciones para instalar un compilador C/C++ en funcionamiento con soporte OpenMP para compilar extensiones scikit-learn de Cython para cada plataforma soportada."

#: ../developers/advanced_installation.rst:189
msgid "Windows"
msgstr "Windows"

#: ../developers/advanced_installation.rst:191
msgid "First, install `Build Tools for Visual Studio 2019 <https://visualstudio.microsoft.com/downloads/>`_."
msgstr "Primero, instala `Herramientas de compilación para Visual Studio 2019 <https://visualstudio.microsoft.com/downloads/>`_."

#: ../developers/advanced_installation.rst:196
msgid "You DO NOT need to install Visual Studio 2019. You only need the \"Build Tools for Visual Studio 2019\", under \"All downloads\" -> \"Tools for Visual Studio 2019\"."
msgstr "NO necesitas instalar Visual Studio 2019. Sólo necesitas las \"Herramientas de compilación para Visual Studio 2019\", en \"Todas las descargas\" -> \"Herramientas para Visual Studio 2019\"."

#: ../developers/advanced_installation.rst:200
msgid "Secondly, find out if you are running 64-bit or 32-bit Python. The building command depends on the architecture of the Python interpreter. You can check the architecture by running the following in ``cmd`` or ``powershell`` console:"
msgstr "En segundo lugar, averigua si estás ejecutando Python de 64 o 32 bits. El comando de compilación depende de la arquitectura del intérprete de Python. Puedes comprobar la arquitectura ejecutando lo siguiente en la consola ``cmd`` o ``powershell``:"

#: ../developers/advanced_installation.rst:209
msgid "For 64-bit Python, configure the build environment by running the following commands in ``cmd`` or an Anaconda Prompt (if you use Anaconda):"
msgstr "Para Python de 64 bits, configura el entorno de compilación ejecutando los siguientes comandos en ``cmd`` o un Anaconda Prompt (si utilizas Anaconda):"

#: ../developers/advanced_installation.rst:217
msgid "Replace ``x64`` by ``x86`` to build for 32-bit Python."
msgstr "Reemplaza ``x64`` por ``x86`` para compilar por Python de 32-bits."

#: ../developers/advanced_installation.rst:219
msgid "Please be aware that the path above might be different from user to user. The aim is to point to the \"vcvarsall.bat\" file that will set the necessary environment variables in the current command prompt."
msgstr "Por favor, ten en cuenta que la ruta anterior puede ser diferente de usuario a usuario. El objetivo es apuntar al archivo \"vcvarsall.bat\" que establecerá las variables de entorno necesarias en la línea de comandos actual."

#: ../developers/advanced_installation.rst:223
msgid "Finally, build scikit-learn from this command prompt:"
msgstr "Finalmente, compila scikit-learn a partir de esta línea de comandos:"

#: ../developers/advanced_installation.rst:232
msgid "macOS"
msgstr "macOS"

#: ../developers/advanced_installation.rst:234
msgid "The default C compiler on macOS, Apple clang (confusingly aliased as `/usr/bin/gcc`), does not directly support OpenMP. We present two alternatives to enable OpenMP support:"
msgstr "El compilador C predeterminado en macOS, Apple clang (alias confusamente como `/usr/bin/gcc`), no soporta directamente OpenMP. Presentamos dos alternativas para habilitar el soporte OpenMP:"

#: ../developers/advanced_installation.rst:238
msgid "either install `conda-forge::compilers` with conda;"
msgstr "instala `conda-forge::compilers` con conda;"

#: ../developers/advanced_installation.rst:240
msgid "or install `libomp` with Homebrew to extend the default Apple clang compiler."
msgstr "o instala `libomp` con Homebrew para extender el compilador predeterminado de Apple clang."

#: ../developers/advanced_installation.rst:242
msgid "For Apple Silicon M1 hardware, only the conda-forge method below is known to work at the time of writing (January 2021). You can install the `macos/arm64` distribution of conda using the `miniforge installer <https://github.com/conda-forge/miniforge#miniforge>`_"
msgstr "Para el hardware Apple Silicon M1, sólo se sabe que el método conda-forge siguiente funciona en el momento de la escritura (enero de 2021). Puedes instalar la distribución `macos/arm64` de conda usando el `miniforge installer <https://github.com/conda-forge/miniforge#miniforge>`_"

#: ../developers/advanced_installation.rst:248
msgid "macOS compilers from conda-forge"
msgstr "compiladores macOS de conda-forge"

#: ../developers/advanced_installation.rst:250
msgid "If you use the conda package manager (version >= 4.7), you can install the ``compilers`` meta-package from the conda-forge channel, which provides OpenMP-enabled C/C++ compilers based on the llvm toolchain."
msgstr "Si utilizas el gestor de paquetes conda (versión >= 4.7), puede instalar el meta-paquete ``compilers`` desde el canal conda-forge, el cual proporciona compiladores C/C++ habilitados para OpenMP basados en la toolchain llvm."

#: ../developers/advanced_installation.rst:254
#: ../developers/advanced_installation.rst:312
msgid "First install the macOS command line tools:"
msgstr "Primero instale las herramientas de línea de comandos de macOS:"

#: ../developers/advanced_installation.rst:260
msgid "It is recommended to use a dedicated `conda environment`_ to build scikit-learn from source:"
msgstr "Se recomienda utilizar un `conda environment`_ dedicado para compilar scikit-learn desde el código fuente:"

#: ../developers/advanced_installation.rst:273
msgid "If you get any conflicting dependency error message, try commenting out any custom conda configuration in the ``$HOME/.condarc`` file. In particular the ``channel_priority: strict`` directive is known to cause problems for this setup."
msgstr "Si obtienes algún mensaje de error de dependencia en conflicto, intenta comentar cualquier configuración de conda personalizada en el ``$HOME/.condarc``. En particular, se sabe que la directiva ``channel_priority: strict`` causa problemas en esta configuración."

#: ../developers/advanced_installation.rst:278
msgid "You can check that the custom compilers are properly installed from conda forge using the following command:"
msgstr "Puedes comprobar que los compiladores personalizados están correctamente instalados desde conda forge usando el siguiente comando:"

#: ../developers/advanced_installation.rst:285
msgid "which should include ``compilers`` and ``llvm-openmp``."
msgstr "que debe incluir ``compilers`` y ``llvm-openmp``."

#: ../developers/advanced_installation.rst:287
msgid "The compilers meta-package will automatically set custom environment variables:"
msgstr "El meta-paquete de los compiladores establecerá automáticamente variables de entorno personalizadas:"

#: ../developers/advanced_installation.rst:298
msgid "They point to files and folders from your ``sklearn-dev`` conda environment (in particular in the bin/, include/ and lib/ subfolders). For instance ``-L/path/to/conda/envs/sklearn-dev/lib`` should appear in ``LDFLAGS``."
msgstr "Apuntan a archivos y carpetas de tu entorno conda ``sklearn-dev`` (en particular en las subcarpetas bin/, include/ y lib/). Por ejemplo ``-L/path/to/conda/envs/sklearn-dev/lib`` debería aparecer en ``LDFLAGS``."

#: ../developers/advanced_installation.rst:302
msgid "In the log, you should see the compiled extension being built with the clang and clang++ compilers installed by conda with the ``-fopenmp`` command line flag."
msgstr "En el registro, deberías ver la extensión compilada que se está construyendo con los compiladores clang y clang++ instalados por conda con la bandera de línea de comando ``-fopenmp``."

#: ../developers/advanced_installation.rst:307
msgid "macOS compilers from Homebrew"
msgstr "compiladores macOS de Homebrew"

#: ../developers/advanced_installation.rst:309
msgid "Another solution is to enable OpenMP support for the clang compiler shipped by default on macOS."
msgstr "Otra solución es habilitar el soporte OpenMP para el compilador clang que se envía por defecto en macOS."

#: ../developers/advanced_installation.rst:318
msgid "Install the Homebrew_ package manager for macOS."
msgstr "Instalar el gestor de paquetes Homebrew_ para macOS."

#: ../developers/advanced_installation.rst:320
msgid "Install the LLVM OpenMP library:"
msgstr "Instalar la biblioteca OpenMP de LLVM:"

#: ../developers/advanced_installation.rst:326
msgid "Set the following environment variables:"
msgstr "Establece las siguientes variables de entorno:"

#: ../developers/advanced_installation.rst:337
msgid "Finally, build scikit-learn in verbose mode (to check for the presence of the ``-fopenmp`` flag in the compiler commands):"
msgstr "Finalmente, compila scikit-learn en modo verbose (para comprobar la presencia de la bandera ``-fopenmp`` en los comandos del compilador):"

#: ../developers/advanced_installation.rst:348
msgid "Linux"
msgstr "Linux"

#: ../developers/advanced_installation.rst:351
msgid "Linux compilers from the system"
msgstr "Compiladores Linux del sistema"

#: ../developers/advanced_installation.rst:353
msgid "Installing scikit-learn from source without using conda requires you to have installed the scikit-learn Python development headers and a working C/C++ compiler with OpenMP support (typically the GCC toolchain)."
msgstr "Instalar scikit-learn desde el código fuente sin usar conda requiere que haya instalado las cabeceras de desarrollo de Python y un compilador C/C++ de trabajo con soporte OpenMP (normalmente la herramienta GCC)."

#: ../developers/advanced_installation.rst:357
msgid "Install build dependencies for Debian-based operating systems, e.g. Ubuntu:"
msgstr "Instala dependencias de compilación para sistemas operativos basados en Debian, por ejemplo, Ubuntu:"

#: ../developers/advanced_installation.rst:364
msgid "then proceed as usual:"
msgstr "luego procede como de costumbre:"

#: ../developers/advanced_installation.rst:371
msgid "Cython and the pre-compiled wheels for the runtime dependencies (numpy, scipy and joblib) should automatically be installed in ``$HOME/.local/lib/pythonX.Y/site-packages``. Alternatively you can run the above commands from a virtualenv_ or a `conda environment`_ to get full isolation from the Python packages installed via the system packager. When using an isolated environment, ``pip3`` should be replaced by ``pip`` in the above commands."
msgstr "Cython y las wheels precompiladas para las dependencias de tiempo de ejecución (numpy, scipy y joblib) deberían instalarse automáticamente en ``$HOME/.local/lib/pythonX.Y/site-packages``. También puedes ejecutar los comandos anteriores desde un virtualenv_ o un `conda environment`_ para obtener el aislamiento completo de los paquetes Python instalados a través del empaquetador del sistema. Cuando se utiliza un entorno aislado, ``pip3`` debe ser reemplazado por ``pip`` en los comandos anteriores."

#: ../developers/advanced_installation.rst:379
msgid "When precompiled wheels of the runtime dependencies are not avalaible for your architecture (e.g. ARM), you can install the system versions:"
msgstr "Cuando las wheels precompiladas de las dependencias de tiempo de ejecución no están disponibles para tu arquitectura (por ejemplo, ARM), puedes instalar las versiones del sistema:"

#: ../developers/advanced_installation.rst:386
msgid "On Red Hat and clones (e.g. CentOS), install the dependencies using:"
msgstr "En Red Hat y clones (por ejemplo, CentOS), instala las dependencias usando:"

#: ../developers/advanced_installation.rst:393
msgid "Linux compilers from conda-forge"
msgstr "Compiladores Linux de conda-forge"

#: ../developers/advanced_installation.rst:395
msgid "Alternatively, install a recent version of the GNU C Compiler toolchain (GCC) in the user folder using conda:"
msgstr "Alternativamente, instala una versión reciente de la toolchain del compilador de C GNU (GCC) en la carpeta de usuario usando conda:"

#: ../developers/advanced_installation.rst:408
msgid "FreeBSD"
msgstr "FreeBSD"

#: ../developers/advanced_installation.rst:410
msgid "The clang compiler included in FreeBSD 12.0 and 11.2 base systems does not include OpenMP support. You need to install the `openmp` library from packages (or ports):"
msgstr "El compilador clang incluido en los sistemas base FreeBSD 12.0 y 11.2 no incluye soporte OpenMP. Necesitas instalar la librería `openmp` desde paquetes (o puertos):"

#: ../developers/advanced_installation.rst:418
msgid "This will install header files in ``/usr/local/include`` and libs in ``/usr/local/lib``. Since these directories are not searched by default, you can set the environment variables to these locations:"
msgstr "Esto instalará archivos de cabecera en ``/usr/local/include`` y libs en ``/usr/local/lib``. Dado que estos directorios no son buscados por defecto, puedes establecer las variables de entorno a estas ubicaciones:"

#: ../developers/advanced_installation.rst:428
msgid "Finally, build the package using the standard command:"
msgstr "Finalmente, compila el paquete usando el comando estándar:"

#: ../developers/advanced_installation.rst:434
msgid "For the upcoming FreeBSD 12.1 and 11.3 versions, OpenMP will be included in the base system and these steps will not be necessary."
msgstr "Para las próximas versiones de FreeBSD 12.1 y 11.3, OpenMP será incluido en el sistema base y estos pasos no serán necesarios."

#: ../developers/advanced_installation.rst:444
msgid "Alternative compilers"
msgstr "Compiladores alternativos"

#: ../developers/advanced_installation.rst:446
msgid "The command:"
msgstr "El comando:"

#: ../developers/advanced_installation.rst:452
msgid "will build scikit-learn using your default C/C++ compiler. If you want to build scikit-learn with another compiler handled by ``distutils`` or by ``numpy.distutils``, use the following command:"
msgstr "compilará scikit-learn usando el compilador predeterminado de C/C++. Si deseas construir scikit-learn con otro compilador manejado por ``distutils`` o por ``numpy.distutils``, utiliza el siguiente comando:"

#: ../developers/advanced_installation.rst:460
msgid "To see the list of available compilers run:"
msgstr "Para ver la lista de compiladores disponibles ejecutar:"

#: ../developers/advanced_installation.rst:466
msgid "If your compiler is not listed here, you can specify it via the ``CC`` and ``LDSHARED`` environment variables (does not work on windows):"
msgstr "Si tu compilador no aparece aquí, puedes especificarlo a través de las variables de entorno ``CC`` y ``LDSHARED`` (no funciona en Windows):"

#: ../developers/advanced_installation.rst:474
msgid "Building with Intel C Compiler (ICC) using oneAPI on Linux"
msgstr "Compilar con Intel C Compiler (ICC) usando oneAPI en Linux"

#: ../developers/advanced_installation.rst:476
msgid "Intel provides access to all of its oneAPI toolkits and packages through a public APT repository. First you need to get and install the public key of this repository:"
msgstr "Intel proporciona acceso a todos sus kits de herramientas y paquetes oneAPI a través de un repositorio público de APT. En primer lugar, es necesario obtener e instalar la clave pública de este repositorio:"

#: ../developers/advanced_installation.rst:486
msgid "Then, add the oneAPI repository to your APT repositories:"
msgstr "Luego, añade el repositorio oneAPI a tus repositorios APT:"

#: ../developers/advanced_installation.rst:493
msgid "Install ICC, packaged under the name ``intel-oneapi-icc``:"
msgstr "Instala ICC, empaquetado con el nombre ``intel-oneapi-icc``:"

#: ../developers/advanced_installation.rst:499
msgid "Before using ICC, you need to set up environment variables:"
msgstr "Antes de usar ICC, necesitas configurar las variables de entorno:"

#: ../developers/advanced_installation.rst:505
msgid "Finally, you can build scikit-learn. For example on Linux x86_64:"
msgstr "Finalmente, puedes compilar scikit-learn. Por ejemplo en Linux x86_64:"

#: ../developers/advanced_installation.rst:512
msgid "Parallel builds"
msgstr "Compilaciones paralelas"

#: ../developers/advanced_installation.rst:514
msgid "It is possible to build scikit-learn compiled extensions in parallel by setting and environment variable as follows before calling the ``pip install`` or ``python setup.py build_ext`` commands::"
msgstr "Es posible construir extensiones compiladas de scikit en paralelo mediante la configuración y la variable de entorno como sigue, antes de llamar a ``pip install`` o ``python setup. y build_ext`` comandos::"

#: ../developers/advanced_installation.rst:521
msgid "On a machine with 2 CPU cores, it can be beneficial to use a parallelism level of 3 to overlap IO bound tasks (reading and writing files on disk) with CPU bound tasks (actually compiling)."
msgstr "En una máquina con 2 núcleos de CPU, puede ser beneficioso utilizar un nivel de paralelismo de 3 para solapar las tareas ligadas a la E/S (lectura y escritura de archivos en el disco) con las tareas ligadas a la CPU (compilación real)."

