# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.cluster.cluster_optics_xi.rst:2
msgid ":mod:`sklearn.cluster`.cluster_optics_xi"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:2
msgid "Automatically extract clusters according to the Xi-steep method."
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi
msgid "Parameters"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:8
msgid "**reachability**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:8
msgid "Reachability distances calculated by OPTICS (`reachability_`)"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:11
msgid "**predecessor**"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:11
msgid "Predecessors calculated by OPTICS."
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:14
msgid "**ordering**"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:14
msgid "OPTICS ordered point indices (`ordering_`)"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:20
msgid "**min_samples**"
msgstr ""

#: of
msgid "int > 1 or float between 0 and 1"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:17
msgid ""
"The same as the min_samples given to OPTICS. Up and down steep regions "
"can't have more then ``min_samples`` consecutive non-steep points. "
"Expressed as an absolute number or a fraction of the number of samples "
"(rounded to be at least 2)."
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:25
msgid "**min_cluster_size**"
msgstr ""

#: of
msgid "int > 1 or float between 0 and 1, default=None"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:23
msgid ""
"Minimum number of samples in an OPTICS cluster, expressed as an absolute "
"number or a fraction of the number of samples (rounded to be at least 2)."
" If ``None``, the value of ``min_samples`` is used instead."
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:31
msgid "**xi**"
msgstr ""

#: of
msgid "float between 0 and 1, default=0.05"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:28
msgid ""
"Determines the minimum steepness on the reachability plot that "
"constitutes a cluster boundary. For example, an upwards point in the "
"reachability plot is defined by the ratio from one point to its successor"
" being at most 1-xi."
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:34
msgid "**predecessor_correction**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:34
msgid "Correct clusters based on the calculated predecessors."
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi
msgid "Returns"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:40
msgid "**labels**"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:39
msgid ""
"The labels assigned to samples. Points which are not included in any "
"cluster are labeled as -1."
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:59
msgid "**clusters**"
msgstr ""

#: of
msgid "ndarray of shape (n_clusters, 2)"
msgstr ""

#: of sklearn.cluster._optics.cluster_optics_xi:43
msgid ""
"The list of clusters in the form of ``[start, end]`` in each row, with "
"all indices inclusive. The clusters are ordered according to ``(end, "
"-start)`` (ascending) so that larger clusters encompassing smaller "
"clusters come after such nested smaller clusters. Since ``labels`` does "
"not reflect the hierarchy, usually ``len(clusters) > np.unique(labels)``."
msgstr ""

