# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.kernel_approximation.Nystroem.rst:2
msgid ":mod:`sklearn.kernel_approximation`.Nystroem"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:2
msgid "Approximate a kernel map using a subset of the training data."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:4
msgid ""
"Constructs an approximate feature map for an arbitrary kernel using a "
"subset of the data as basis."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:7
msgid "Read more in the :ref:`User Guide <nystroem_kernel_approx>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.kernel_approximation.Nystroem
#: sklearn.kernel_approximation.Nystroem.fit
#: sklearn.kernel_approximation.Nystroem.transform
msgid "Parameters"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:16
msgid "**kernel**"
msgstr ""

#: of
msgid "string or callable, default='rbf'"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:14
msgid ""
"Kernel map to be approximated. A callable should accept two arguments and"
" the keyword arguments passed to this object as kernel_params, and should"
" return a floating point number."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:22
msgid "**gamma**"
msgstr ""

#: of
msgid "float, default=None"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:19
msgid ""
"Gamma parameter for the RBF, laplacian, polynomial, exponential chi2 and "
"sigmoid kernels. Interpretation of the default value is left to the "
"kernel; see the documentation for sklearn.metrics.pairwise. Ignored by "
"other kernels."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:26
msgid "**coef0**"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:25
msgid ""
"Zero coefficient for polynomial and sigmoid kernels. Ignored by other "
"kernels."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:29
msgid "**degree**"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:29
msgid "Degree of the polynomial kernel. Ignored by other kernels."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:33
msgid "**kernel_params**"
msgstr ""

#: of
msgid "dict, default=None"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:32
msgid ""
"Additional parameters (keyword arguments) for kernel function passed as "
"callable object."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:37
msgid "**n_components**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:36
msgid ""
"Number of features to construct. How many data points will be used to "
"construct the mapping."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:44
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:40
msgid ""
"Pseudo-random number generator to control the uniform sampling without "
"replacement of n_components of the training data to construct the basis "
"kernel. Pass an int for reproducible output across multiple function "
"calls. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:58
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:47
msgid ""
"The number of jobs to use for the computation. This works by breaking "
"down the kernel matrix into n_jobs even slices and computing them in "
"parallel."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:51
msgid ""
"``None`` means 1 unless in a :obj:`joblib.parallel_backend` context. "
"``-1`` means using all processors. See :term:`Glossary <n_jobs>` for more"
" details."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem
msgid "Attributes"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:63
msgid "**components_**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_features)"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:63
msgid "Subset of training points used to construct the feature map."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:66
msgid "**component_indices_**"
msgstr ""

#: of
msgid "ndarray of shape (n_components)"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:66
msgid "Indices of ``components_`` in the training set."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:73
msgid "**normalization_**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_components)"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:69
msgid ""
"Normalization matrix needed for embedding. Square root of the kernel "
"matrix on ``components_``."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:78
msgid ":obj:`RBFSampler`"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:79
msgid "An approximation to the RBF kernel using random Fourier features."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:80
msgid ":obj:`sklearn.metrics.pairwise.kernel_metrics`"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:81
msgid "List of built-in kernels."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:86
msgid "References"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:87
msgid ""
"Williams, C.K.I. and Seeger, M. \"Using the Nystroem method to speed up "
"kernel machines\", Advances in neural information processing systems 2001"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:91
msgid ""
"T. Yang, Y. Li, M. Mahdavi, R. Jin and Z. Zhou \"Nystroem Method vs "
"Random Fourier Features: A Theoretical and Empirical Comparison\", "
"Advances in Neural Information Processing Systems 2012"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:101
msgid "Examples"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:117
msgid "Methods"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid ":obj:`fit <sklearn.kernel_approximation.Nystroem.fit>`\\"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem.fit:2
#: sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid "Fit estimator to data."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid ""
":obj:`fit_transform "
"<sklearn.kernel_approximation.Nystroem.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid ":obj:`get_params <sklearn.kernel_approximation.Nystroem.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid ":obj:`set_params <sklearn.kernel_approximation.Nystroem.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid ":obj:`transform <sklearn.kernel_approximation.Nystroem.transform>`\\"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem.transform:2
#: sklearn.kernel_approximation.Nystroem:125:<autosummary>:1
msgid "Apply feature map to X."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem.fit:4
msgid ""
"Samples a subset of training points, computes kernel on these and "
"computes normalization matrix."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.kernel_approximation.Nystroem.fit:22
#: sklearn.kernel_approximation.Nystroem.transform:10
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem.fit:10
msgid "Training data."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid ""
"Fits transformer to `X` and `y` with optional parameters `fit_params` and"
" returns a transformed version of `X`."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "**y**"
msgstr ""

#: of
msgid ""
"array-like of shape (n_samples,) or (n_samples, n_outputs),"
"                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.kernel_approximation.Nystroem.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of "
"the form ``<component>__<parameter>`` so that it's possible to update "
"each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem.transform:4
msgid ""
"Computes an approximate feature map using the kernel between some "
"training points and X."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem.transform:10
msgid "Data to transform."
msgstr ""

#: of sklearn.kernel_approximation.Nystroem.transform:26
msgid "**X_transformed**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.kernel_approximation.Nystroem.transform:15
msgid "Transformed data."
msgstr ""

