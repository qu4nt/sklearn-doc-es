# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.covariance.GraphicalLasso.rst:2
msgid ":mod:`sklearn.covariance`.GraphicalLasso"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:2
msgid "Sparse inverse covariance estimation with an l1-penalized estimator."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:4
msgid "Read more in the :ref:`User Guide <sparse_inverse_covariance>`."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:6
msgid "GraphLasso has been renamed to GraphicalLasso"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._graph_lasso.GraphicalLasso
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit
msgid "Parameters"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:14
msgid "**alpha**"
msgstr ""

#: of
msgid "float, default=0.01"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:12
msgid ""
"The regularization parameter: the higher alpha, the more regularization, "
"the sparser the inverse covariance. Range is (0, inf]."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:19
msgid "**mode**"
msgstr ""

#: of
msgid "{'cd', 'lars'}, default='cd'"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:17
msgid ""
"The Lasso solver to use: coordinate descent or LARS. Use LARS for very "
"sparse underlying graphs, where p > n. Elsewhere prefer cd which is more "
"numerically stable."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:23
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-4"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:22
msgid ""
"The tolerance to declare convergence: if the dual gap goes below this "
"value, iterations are stopped. Range is (0, inf]."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:29
msgid "**enet_tol**"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:26
msgid ""
"The tolerance for the elastic net solver used to calculate the descent "
"direction. This parameter controls the accuracy of the search direction "
"for a given column update, not of the overall parameter estimate. Only "
"used for mode='cd'. Range is (0, inf]."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:32
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:32
msgid "The maximum number of iterations."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:36
msgid "**verbose**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:35
msgid ""
"If verbose is True, the objective function and dual gap are plotted at "
"each iteration."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:45
msgid "**assume_centered**"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:39
msgid ""
"If True, data are not centered before computation. Useful when working "
"with data whose mean is almost, but not exactly zero. If False, data are "
"centered before computation."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso
msgid "Attributes"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:50
msgid "**location_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:50
msgid "Estimated location, i.e. the estimated mean."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:53
msgid "**covariance_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:53
msgid "Estimated covariance matrix"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:20
#: sklearn.covariance._graph_lasso.GraphicalLasso:56
msgid "**precision_**"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:56
msgid "Estimated pseudo inverse matrix."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:62
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:59
msgid "Number of iterations run."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:67
msgid ":obj:`graphical_lasso`, :obj:`GraphicalLassoCV`"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:73
msgid "Examples"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:94
msgid "Methods"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`error_norm <sklearn.covariance.GraphicalLasso.error_norm>`\\"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Computes the Mean Squared Error between two covariance estimators."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`fit <sklearn.covariance.GraphicalLasso.fit>`\\"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso.fit:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Fits the GraphicalLasso model to X."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`get_params <sklearn.covariance.GraphicalLasso.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`get_precision <sklearn.covariance.GraphicalLasso.get_precision>`\\"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Getter for the precision matrix."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`mahalanobis <sklearn.covariance.GraphicalLasso.mahalanobis>`\\"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Computes the squared Mahalanobis distances of given observations."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`score <sklearn.covariance.GraphicalLasso.score>`\\"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ""
"Computes the log-likelihood of a Gaussian data set with "
"`self.covariance_` as an estimator of its covariance matrix."
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid ":obj:`set_params <sklearn.covariance.GraphicalLasso.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.covariance._graph_lasso.GraphicalLasso:104:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:2
msgid ""
"Computes the Mean Squared Error between two covariance estimators. (In "
"the sense of the Frobenius norm)."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "**comp_cov**"
msgstr ""

#: of
msgid "array-like of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "The covariance to compare with."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:15
msgid "**norm**"
msgstr ""

#: of
msgid "{\"frobenius\", \"spectral\"}, default=\"frobenius\""
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:12
msgid ""
"The type of norm used to compute the error. Available error types: - "
"'frobenius' (default): sqrt(tr(A^t.A)) - 'spectral': "
"sqrt(max(eigenvalues(A^t.A)) where A is the error ``(comp_cov - "
"self.covariance_)``."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:19
msgid "**scaling**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:18
msgid ""
"If True (default), the squared error norm is divided by n_features. If "
"False, the squared error norm is not rescaled."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:24
msgid "**squared**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:22
msgid ""
"Whether to compute the squared error norm or the error norm. If True "
"(default), the squared error norm is returned. If False, the error norm "
"is returned."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit
msgid "Returns"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:41
msgid "**result**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:29
msgid ""
"The Mean Squared Error (in the sense of the Frobenius norm) between "
"`self` and `comp_cov` covariance estimators."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:10
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.covariance._graph_lasso.GraphicalLasso.fit:8
msgid "Data from which to compute the covariance estimate"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit:11
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit:11
msgid "Not used, present for API consistency by convention."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.covariance._graph_lasso.GraphicalLasso.fit:27
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:9
msgid "The precision matrix associated to the current covariance object."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:8
msgid ""
"The observations, the Mahalanobis distances of the which we compute. "
"Observations are assumed to be drawn from the same distribution than the "
"data used in fit."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:26
msgid "**dist**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:15
msgid "Squared Mahalanobis distances of the observations."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:12
msgid "**X_test**"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:9
msgid ""
"Test data of which we compute the likelihood, where n_samples is the "
"number of samples and n_features is the number of features. X_test is "
"assumed to be drawn from the same distribution than the data used in fit "
"(including centering)."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:32
msgid "**res**"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:20
msgid ""
"The likelihood of the data set with `self.covariance_` as an estimator of"
" its covariance matrix."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of "
"the form ``<component>__<parameter>`` so that it's possible to update "
"each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

