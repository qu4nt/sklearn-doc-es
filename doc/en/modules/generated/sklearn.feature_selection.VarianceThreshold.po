# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.feature_selection.VarianceThreshold.rst:2
msgid ":mod:`sklearn.feature_selection`.VarianceThreshold"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:2
msgid "Feature selector that removes all low-variance features."
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:4
msgid ""
"This feature selection algorithm looks only at the features (X), not the "
"desired outputs (y), and can thus be used for unsupervised learning."
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:7
msgid "Read more in the :ref:`User Guide <variance_threshold>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_selection._base.SelectorMixin.get_support
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform
#: sklearn.feature_selection._base.SelectorMixin.transform
#: sklearn.feature_selection._variance_threshold.VarianceThreshold
#: sklearn.feature_selection._variance_threshold.VarianceThreshold.fit
msgid "Parameters"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:17
msgid "**threshold**"
msgstr ""

#: of
msgid "float, default=0"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:12
msgid ""
"Features with a training-set variance lower than this threshold will be "
"removed. The default is to keep all features with non-zero variance, i.e."
" remove the features that have the same value in all samples."
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold
msgid "Attributes"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:26
msgid "**variances_**"
msgstr ""

#: of
msgid "array, shape (n_features,)"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:22
msgid "Variances of individual features."
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:29
msgid "Notes"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:30
msgid ""
"Allows NaN in the input. Raises ValueError if no feature in X meets the "
"variance threshold."
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:35
msgid "Examples"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:36
msgid ""
"The following dataset has integer features, two of which are the same in "
"every sample. These are removed with the default setting for threshold::"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold:47
msgid "Methods"
msgstr ""

#: of
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid ":obj:`fit <sklearn.feature_selection.VarianceThreshold.fit>`\\"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold.fit:2
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid "Learn empirical variances from X."
msgstr ""

#: of
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid ""
":obj:`fit_transform "
"<sklearn.feature_selection.VarianceThreshold.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid ""
":obj:`get_params "
"<sklearn.feature_selection.VarianceThreshold.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid ""
":obj:`get_support "
"<sklearn.feature_selection.VarianceThreshold.get_support>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:2
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid "Get a mask, or integer index, of the features selected"
msgstr ""

#: of
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid ""
":obj:`inverse_transform "
"<sklearn.feature_selection.VarianceThreshold.inverse_transform>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:2
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid "Reverse the transformation operation"
msgstr ""

#: of
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid ""
":obj:`set_params "
"<sklearn.feature_selection.VarianceThreshold.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid ":obj:`transform <sklearn.feature_selection.VarianceThreshold.transform>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.transform:2
#: sklearn.feature_selection._variance_threshold.VarianceThreshold:57:<autosummary>:1
msgid "Reduce X to the selected features."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform:8
#: sklearn.feature_selection._base.SelectorMixin.transform:8
#: sklearn.feature_selection._variance_threshold.VarianceThreshold.fit:8
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix}, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold.fit:8
msgid "Sample vectors from which to compute variances."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.feature_selection._variance_threshold.VarianceThreshold.fit:12
msgid "**y**"
msgstr ""

#: of
msgid "any, default=None"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold.fit:11
msgid ""
"Ignored. This parameter exists only for compatibility with "
"sklearn.pipeline.Pipeline."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_selection._base.SelectorMixin.get_support
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform
#: sklearn.feature_selection._base.SelectorMixin.transform
#: sklearn.feature_selection._variance_threshold.VarianceThreshold.fit
msgid "Returns"
msgstr ""

#: of sklearn.feature_selection._variance_threshold.VarianceThreshold.fit:28
msgid "self"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid ""
"Fits transformer to `X` and `y` with optional parameters `fit_params` and"
" returns a transformed version of `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid ""
"array-like of shape (n_samples,) or (n_samples, n_outputs),"
"                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:9
msgid "**indices**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:8
msgid ""
"If True, the return value will be an array of integers, rather than a "
"boolean mask."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:30
msgid "**support**"
msgstr ""

#: of
msgid "array"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:14
msgid ""
"An index that selects the retained features from a feature vector. If "
"`indices` is False, this is a boolean array of shape [# input features], "
"in which an element is True iff its corresponding feature is selected for"
" retention. If `indices` is True, this is an integer array of shape [# "
"output features] whose values are indices into the input feature vector."
msgstr ""

#: of
msgid "array of shape [n_samples, n_selected_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:8
#: sklearn.feature_selection._base.SelectorMixin.transform:8
msgid "The input samples."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:25
#: sklearn.feature_selection._base.SelectorMixin.transform:24
msgid "**X_r**"
msgstr ""

#: of
msgid "array of shape [n_samples, n_original_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:13
msgid ""
"`X` with columns of zeros inserted where features would have been removed"
" by :meth:`transform`."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of "
"the form ``<component>__<parameter>`` so that it's possible to update "
"each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of
msgid "array of shape [n_samples, n_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.transform:13
msgid "The input samples with only the selected features."
msgstr ""

