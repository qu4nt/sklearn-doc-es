# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/fastica-function.rst:2
msgid ":mod:`sklearn.decomposition`.fastica"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:2
msgid "Perform Fast Independent Component Analysis."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:4
msgid "Read more in the :ref:`User Guide <ICA>`."
msgstr ""

#: of sklearn.decomposition._fastica.fastica
msgid "Parameters"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:10
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:9
msgid ""
"Training vector, where n_samples is the number of samples and n_features "
"is the number of features."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:14
msgid "**n_components**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:13
msgid ""
"Number of components to extract. If None no dimension reduction is "
"performed."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:17
msgid "**algorithm**"
msgstr ""

#: of
msgid "{'parallel', 'deflation'}, default='parallel'"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:17
msgid "Apply a parallel or deflational FASTICA algorithm."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:24
msgid "**whiten**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:20
msgid ""
"If True perform an initial whitening of the data. If False, the data is "
"assumed to have already been preprocessed: it should be centered, normed "
"and white. Otherwise you will get incorrect results. In this case the "
"parameter n_components will be ignored."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:36
msgid "**fun**"
msgstr ""

#: of
msgid "{'logcosh', 'exp', 'cube'} or callable, default='logcosh'"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:27
msgid ""
"The functional form of the G function used in the approximation to neg-"
"entropy. Could be either 'logcosh', 'exp', or 'cube'. You can also "
"provide your own function. It should return a tuple containing the value "
"of the function, and of its derivative, in the point. The derivative "
"should be averaged along its last dimension. Example:"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:36
msgid "def my_g(x):"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:36
msgid "return x ** 3, np.mean(3 * x ** 2, axis=-1)"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:41
msgid "**fun_args**"
msgstr ""

#: of
msgid "dict, default=None"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:39
msgid ""
"Arguments to send to the functional form. If empty or None and if "
"fun='logcosh', fun_args will take value {'alpha' : 1.0}"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:44
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=200"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:44
msgid "Maximum number of iterations to perform."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:48
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-04"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:47
msgid ""
"A positive scalar giving the tolerance at which the un-mixing matrix is "
"considered to have converged."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:52
msgid "**w_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_components), default=None"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:51
msgid ""
"Initial un-mixing array of dimension (n.comp,n.comp). If None (default) "
"then an array of normal r.v.'s is used."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:58
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:55
msgid ""
"Used to initialize ``w_init`` when not specified, with a normal "
"distribution. Pass an int, for reproducible results across multiple "
"function calls. See :term:`Glossary <random_state>`."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:61
msgid "**return_X_mean**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:61
msgid "If True, X_mean is returned too."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:65
msgid "**compute_sources**"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:64
msgid ""
"If False, sources are not computed, but only the rotation matrix. This "
"can save memory when working with big data. Defaults to True."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:68
msgid "**return_n_iter**"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:68
msgid "Whether or not to return the number of iterations."
msgstr ""

#: of sklearn.decomposition._fastica.fastica
msgid "Returns"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:75
msgid "**K**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_features) or None"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:73
msgid ""
"If whiten is 'True', K is the pre-whitening matrix that projects data "
"onto the first n_components principal components. If whiten is 'False', K"
" is 'None'."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:80
msgid "**W**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_components)"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:78
msgid ""
"The square matrix that unmixes the data after whitening. The mixing "
"matrix is the pseudo-inverse of matrix ``W K`` if K is not None, else it "
"is the inverse of W."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:83
msgid "**S**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components) or None"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:83
msgid "Estimated source matrix"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:86
msgid "**X_mean**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:86
msgid "The mean over features. Returned only if return_X_mean is True."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:99
msgid "**n_iter**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:89
msgid ""
"If the algorithm is \"deflation\", n_iter is the maximum number of "
"iterations run across all components. Else they are just the number of "
"iterations taken to converge. This is returned only when return_n_iter is"
" set to `True`."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:102
msgid "Notes"
msgstr ""

#: of sklearn.decomposition._fastica.fastica:103
msgid ""
"The data matrix X is considered to be a linear combination of non-"
"Gaussian (independent) components i.e. X = AS where columns of S contain "
"the independent components and A is a linear mixing matrix. In short ICA "
"attempts to `un-mix' the data by estimating an un-mixing matrix W where "
"``S = W K X.`` While FastICA was proposed to estimate as many sources as "
"features, it is possible to estimate less by setting n_components < "
"n_features. It this case K is not a square matrix and the estimated A is "
"the pseudo-inverse of ``W K``."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:113
msgid ""
"This implementation was originally made for data of shape [n_features, "
"n_samples]. Now the input is transposed before the algorithm is applied. "
"This makes it slightly faster for Fortran-ordered input."
msgstr ""

#: of sklearn.decomposition._fastica.fastica:118
msgid ""
"Implemented using FastICA: *A. Hyvarinen and E. Oja, Independent "
"Component Analysis: Algorithms and Applications, Neural Networks, "
"13(4-5), 2000, pp. 411-430*"
msgstr ""

