# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.covariance.OAS.rst:2
msgid ":mod:`sklearn.covariance`.OAS"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:2
msgid "Oracle Approximating Shrinkage Estimator"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:4
msgid "Read more in the :ref:`User Guide <shrunk_covariance>`."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:6
msgid ""
"OAS is a particular form of shrinkage described in \"Shrinkage Algorithms"
" for MMSE Covariance Estimation\" Chen et al., IEEE Trans. on Sign. "
"Proc., Volume 58, Issue 10, October 2010."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:10
msgid ""
"The formula used here does not correspond to the one given in the "
"article. In the original article, formula (23) states that 2/p is "
"multiplied by Trace(cov*cov) in both the numerator and denominator, but "
"this operation is omitted because for a large p, the value of 2/p is so "
"small that it doesn't affect the value of the estimator."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._shrunk_covariance.OAS
#: sklearn.covariance._shrunk_covariance.OAS.fit
msgid "Parameters"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:19
msgid "**store_precision**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:19
msgid "Specify if the estimated precision is stored."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:28
msgid "**assume_centered**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:22
msgid ""
"If True, data will not be centered before computation. Useful when "
"working with data whose mean is almost, but not exactly zero. If False "
"(default), data will be centered before computation."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS
msgid "Attributes"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:33
msgid "**covariance_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:33
msgid "Estimated covariance matrix."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:36
msgid "**location_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:36
msgid "Estimated location, i.e. the estimated mean."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:20
#: sklearn.covariance._shrunk_covariance.OAS:40
msgid "**precision_**"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:39
msgid "Estimated pseudo inverse matrix. (stored only if store_precision is True)"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:48
msgid "**shrinkage_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:43
msgid ""
"coefficient in the convex combination used for the computation of the "
"shrunk estimate. Range is [0, 1]."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:51
msgid "Notes"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:52
msgid "The regularised covariance is:"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:54
msgid "(1 - shrinkage) * cov + shrinkage * mu * np.identity(n_features)"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:56
msgid ""
"where mu = trace(cov) / n_features and shrinkage is given by the OAS "
"formula (see References)"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:60
msgid "References"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:61
msgid ""
"\"Shrinkage Algorithms for MMSE Covariance Estimation\" Chen et al., IEEE"
" Trans. on Sign. Proc., Volume 58, Issue 10, October 2010."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:69
msgid "Examples"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:90
msgid "Methods"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid ":obj:`error_norm <sklearn.covariance.OAS.error_norm>`\\"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid "Computes the Mean Squared Error between two covariance estimators."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid ":obj:`fit <sklearn.covariance.OAS.fit>`\\"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS.fit:2
#: sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid ""
"Fit the Oracle Approximating Shrinkage covariance model according to the "
"given training data and parameters."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid ":obj:`get_params <sklearn.covariance.OAS.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid ":obj:`get_precision <sklearn.covariance.OAS.get_precision>`\\"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:2
#: sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid "Getter for the precision matrix."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid ":obj:`mahalanobis <sklearn.covariance.OAS.mahalanobis>`\\"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:2
#: sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid "Computes the squared Mahalanobis distances of given observations."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid ":obj:`score <sklearn.covariance.OAS.score>`\\"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:2
#: sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid ""
"Computes the log-likelihood of a Gaussian data set with "
"`self.covariance_` as an estimator of its covariance matrix."
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid ":obj:`set_params <sklearn.covariance.OAS.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.covariance._shrunk_covariance.OAS:100:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:2
msgid ""
"Computes the Mean Squared Error between two covariance estimators. (In "
"the sense of the Frobenius norm)."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "**comp_cov**"
msgstr ""

#: of
msgid "array-like of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:9
msgid "The covariance to compare with."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:15
msgid "**norm**"
msgstr ""

#: of
msgid "{\"frobenius\", \"spectral\"}, default=\"frobenius\""
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:12
msgid ""
"The type of norm used to compute the error. Available error types: - "
"'frobenius' (default): sqrt(tr(A^t.A)) - 'spectral': "
"sqrt(max(eigenvalues(A^t.A)) where A is the error ``(comp_cov - "
"self.covariance_)``."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:19
msgid "**scaling**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:18
msgid ""
"If True (default), the squared error norm is divided by n_features. If "
"False, the squared error norm is not rescaled."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:24
msgid "**squared**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:22
msgid ""
"Whether to compute the squared error norm or the error norm. If True "
"(default), the squared error norm is returned. If False, the error norm "
"is returned."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.score
#: sklearn.covariance._shrunk_covariance.OAS.fit
msgid "Returns"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:41
msgid "**result**"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.error_norm:29
msgid ""
"The Mean Squared Error (in the sense of the Frobenius norm) between "
"`self` and `comp_cov` covariance estimators."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:10
#: sklearn.covariance._shrunk_covariance.OAS.fit:10
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.covariance._shrunk_covariance.OAS.fit:9
msgid ""
"Training data, where `n_samples` is the number of samples and "
"`n_features` is the number of features."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._shrunk_covariance.OAS.fit:13
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:15
#: sklearn.covariance._shrunk_covariance.OAS.fit:13
msgid "Not used, present for API consistency by convention."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.covariance._shrunk_covariance.OAS.fit:29
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.get_precision:9
msgid "The precision matrix associated to the current covariance object."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:8
msgid ""
"The observations, the Mahalanobis distances of the which we compute. "
"Observations are assumed to be drawn from the same distribution than the "
"data used in fit."
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:26
msgid "**dist**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of
#: sklearn.covariance._empirical_covariance.EmpiricalCovariance.mahalanobis:15
msgid "Squared Mahalanobis distances of the observations."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:12
msgid "**X_test**"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:9
msgid ""
"Test data of which we compute the likelihood, where n_samples is the "
"number of samples and n_features is the number of features. X_test is "
"assumed to be drawn from the same distribution than the data used in fit "
"(including centering)."
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:32
msgid "**res**"
msgstr ""

#: of sklearn.covariance._empirical_covariance.EmpiricalCovariance.score:20
msgid ""
"The likelihood of the data set with `self.covariance_` as an estimator of"
" its covariance matrix."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of "
"the form ``<component>__<parameter>`` so that it's possible to update "
"each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

