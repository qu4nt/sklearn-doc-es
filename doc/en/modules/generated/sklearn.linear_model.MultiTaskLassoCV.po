# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.linear_model.MultiTaskLassoCV.rst:2
msgid ":mod:`sklearn.linear_model`.MultiTaskLassoCV"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:2
msgid "Multi-task Lasso model trained with L1/L2 mixed-norm as regularizer."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:4
msgid "See glossary entry for :term:`cross-validation estimator`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:6
msgid "The optimization objective for MultiTaskLasso is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:10
#: sklearn.linear_model._coordinate_descent.lasso_path:14
msgid "Where::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:14
#: sklearn.linear_model._coordinate_descent.lasso_path:18
msgid "i.e. the sum of norm of each row."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:16
msgid "Read more in the :ref:`User Guide <multi_task_lasso>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV
#: sklearn.linear_model._coordinate_descent.lasso_path
msgid "Parameters"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:24
#: sklearn.linear_model._coordinate_descent.lasso_path:34
msgid "**eps**"
msgstr ""

#: of
msgid "float, default=1e-3"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:23
msgid ""
"Length of the path. ``eps=1e-3`` means that ``alpha_min / alpha_max = "
"1e-3``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:27
#: sklearn.linear_model._coordinate_descent.lasso_path:37
msgid "**n_alphas**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:27
msgid "Number of alphas along the regularization path."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:31
#: sklearn.linear_model._coordinate_descent.lasso_path:41
#: sklearn.linear_model._coordinate_descent.lasso_path:74
msgid "**alphas**"
msgstr ""

#: of
msgid "array-like, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:30
msgid ""
"List of alphas where to compute the models. If not provided, set "
"automatically."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:36
msgid "**fit_intercept**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:34
msgid ""
"Whether to calculate the intercept for this model. If set to false, no "
"intercept will be used in calculations (i.e. data is expected to be "
"centered)."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:44
msgid "**normalize**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:39
msgid ""
"This parameter is ignored when ``fit_intercept`` is set to False. If "
"True, the regressors X will be normalized before regression by "
"subtracting the mean and dividing by the l2-norm. If you wish to "
"standardize, please use :class:`~sklearn.preprocessing.StandardScaler` "
"before calling ``fit`` on an estimator with ``normalize=False``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:47
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=1000"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:47
msgid "The maximum number of iterations."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:53
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-4"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:50
msgid ""
"The tolerance for the optimization: if the updates are smaller than "
"``tol``, the optimization code checks the dual gap for optimality and "
"continues until it is smaller than ``tol``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:56
#: sklearn.linear_model._coordinate_descent.lasso_path:53
msgid "**copy_X**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:56
#: sklearn.linear_model._coordinate_descent.lasso_path:53
msgid "If ``True``, X will be copied; else, it may be overwritten."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:73
msgid "**cv**"
msgstr ""

#: of
msgid "int, cross-validation generator or iterable, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:59
msgid ""
"Determines the cross-validation splitting strategy. Possible inputs for "
"cv are:"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:62
msgid "None, to use the default 5-fold cross-validation,"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:63
msgid "int, to specify the number of folds."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:64
msgid ":term:`CV splitter`,"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:65
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:67
msgid "For int/None inputs, :class:`KFold` is used."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:69
msgid ""
"Refer :ref:`User Guide <cross_validation>` for the various cross-"
"validation strategies that can be used here."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:72
msgid "``cv`` default value if None changed from 3-fold to 5-fold."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:76
#: sklearn.linear_model._coordinate_descent.lasso_path:59
msgid "**verbose**"
msgstr ""

#: of
msgid "bool or int, default=False"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:76
#: sklearn.linear_model._coordinate_descent.lasso_path:59
msgid "Amount of verbosity."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:83
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:79
msgid ""
"Number of CPUs to use during the cross validation. Note that this is used"
" only if multiple values for l1_ratio are given. ``None`` means 1 unless "
"in a :obj:`joblib.parallel_backend` context. ``-1`` means using all "
"processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:89
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:86
msgid ""
"The seed of the pseudo random number generator that selects a random "
"feature to update. Used when ``selection`` == 'random'. Pass an int for "
"reproducible output across multiple function calls. See :term:`Glossary "
"<random_state>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:98
msgid "**selection**"
msgstr ""

#: of
msgid "{'cyclic', 'random'}, default='cyclic'"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:92
msgid ""
"If set to 'random', a random coefficient is updated every iteration "
"rather than looping over features sequentially by default. This (setting "
"to 'random') often leads to significantly faster convergence especially "
"when tol is higher than 1e-4."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV
msgid "Attributes"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:103
msgid "**intercept_**"
msgstr ""

#: of
msgid "ndarray of shape (n_tasks,)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:103
msgid "Independent term in decision function."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:107
msgid "**coef_**"
msgstr ""

#: of
msgid "ndarray of shape (n_tasks, n_features)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:106
msgid ""
"Parameter vector (W in the cost function formula). Note that ``coef_`` "
"stores the transpose of ``W``, ``W.T``."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:110
msgid "**alpha_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:110
msgid "The amount of penalization chosen by cross validation."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:113
msgid "**mse_path_**"
msgstr ""

#: of
msgid "ndarray of shape (n_alphas, n_folds)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:113
msgid "Mean square error for the test set on each fold, varying alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:116
msgid "**alphas_**"
msgstr ""

#: of
msgid "ndarray of shape (n_alphas,)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:116
msgid "The grid of alphas used for fitting."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:120
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:119
msgid ""
"Number of iterations run by the coordinate descent solver to reach the "
"specified tolerance for the optimal alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:126
msgid "**dual_gap_**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:123
msgid "The dual gap at the end of the optimization for the optimal alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:131
msgid ":obj:`MultiTaskElasticNet`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:133
msgid ":obj:`ElasticNetCV`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:135
msgid ":obj:`MultiTaskElasticNetCV`"
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:139
#: sklearn.linear_model._coordinate_descent.lasso_path:109
msgid "Notes"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:140
msgid "The algorithm used to fit the model is coordinate descent."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:142
msgid ""
"To avoid unnecessary memory duplication the X and y arguments of the fit "
"method should be directly passed as Fortran-contiguous numpy arrays."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:147
#: sklearn.linear_model._coordinate_descent.lasso_path:124
msgid "Examples"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:161
msgid "Methods"
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.MultiTaskLassoCV.fit>`\\"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:2
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid "Fit linear model with coordinate descent."
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.MultiTaskLassoCV.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid ":obj:`path <sklearn.linear_model.MultiTaskLassoCV.path>`\\"
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
#: sklearn.linear_model._coordinate_descent.lasso_path:2
msgid "Compute Lasso path with coordinate descent"
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.MultiTaskLassoCV.predict>`\\"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:2
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid "Predict using the linear model."
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.MultiTaskLassoCV.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.MultiTaskLassoCV.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._coordinate_descent.MultiTaskLassoCV:170:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:4
msgid "Fit is on grid of alphas and best alpha estimated by cross-validation."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._base.LinearModel.predict:8
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit:11
#: sklearn.linear_model._coordinate_descent.lasso_path:27
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:9
msgid ""
"Training data. Pass directly as Fortran-contiguous data to avoid "
"unnecessary memory duplication. If y is mono-output, X can be sparse."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._coordinate_descent.LinearModelCV.fit:26
#: sklearn.linear_model._coordinate_descent.lasso_path:30
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_targets)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.LinearModelCV.fit:14
msgid "Target values."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._coordinate_descent.lasso_path
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:4
msgid "The Lasso optimization function varies for mono and multi-outputs."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:6
msgid "For mono-output tasks it is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:10
msgid "For multi-output tasks it is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:20
msgid "Read more in the :ref:`User Guide <lasso>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:25
msgid ""
"Training data. Pass directly as Fortran-contiguous data to avoid "
"unnecessary memory duplication. If ``y`` is mono-output then ``X`` can be"
" sparse."
msgstr ""

#: of
msgid ""
"{array-like, sparse matrix} of shape (n_samples,) or         (n_samples, "
"n_outputs)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:30
msgid "Target values"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:33
msgid ""
"Length of the path. ``eps=1e-3`` means that ``alpha_min / alpha_max = "
"1e-3``"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:37
msgid "Number of alphas along the regularization path"
msgstr ""

#: of
msgid "ndarray, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:40
msgid ""
"List of alphas where to compute the models. If ``None`` alphas are set "
"automatically"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:46
msgid "**precompute**"
msgstr ""

#: of
msgid ""
"'auto', bool or array-like of shape (n_features, n_features),"
"                 default='auto'"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:44
msgid ""
"Whether to use a precomputed Gram matrix to speed up calculations. If set"
" to ``'auto'`` let us decide. The Gram matrix can also be passed as "
"argument."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:50
msgid "**Xy**"
msgstr ""

#: of
msgid ""
"array-like of shape (n_features,) or (n_features, n_outputs),         "
"default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:49
msgid ""
"Xy = np.dot(X.T, y) that can be precomputed. It is useful only when the "
"Gram matrix is precomputed."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:56
msgid "**coef_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, ), default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:56
msgid "The initial values of the coefficients."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:62
msgid "**return_n_iter**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:62
msgid "whether to return the number of iterations or not."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:66
msgid "**positive**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:65
msgid ""
"If set to True, forces coefficients to be positive. (Only allowed when "
"``y.ndim == 1``)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
#: sklearn.linear_model._coordinate_descent.lasso_path:69
msgid "**\\*\\*params**"
msgstr ""

#: of
msgid "kwargs"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:69
msgid "keyword arguments passed to the coordinate descent solver."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:74
msgid "The alphas along the path where models are computed."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:77
msgid "**coefs**"
msgstr ""

#: of
msgid ""
"ndarray of shape (n_features, n_alphas) or             (n_outputs, "
"n_features, n_alphas)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:77
msgid "Coefficients along the path."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:80
msgid "**dual_gaps**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:80
msgid "The dual gaps at the end of the optimization for each alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:90
msgid "**n_iters**"
msgstr ""

#: of
msgid "list of int"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:83
msgid ""
"The number of iterations taken by the coordinate descent optimizer to "
"reach the specified tolerance for each alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:95
msgid ":obj:`lars_path`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:97
msgid ":obj:`Lasso`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:99
msgid ":obj:`LassoLars`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:101
msgid ":obj:`LassoCV`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:103
msgid ":obj:`LassoLarsCV`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:105
msgid ":obj:`sklearn.decomposition.sparse_encode`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:110
msgid ""
"For an example, see "
":ref:`examples/linear_model/plot_lasso_coordinate_descent_path.py "
"<sphx_glr_auto_examples_linear_model_plot_lasso_coordinate_descent_path.py>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:114
msgid ""
"To avoid unnecessary memory duplication the X argument of the fit method "
"should be directly passed as a Fortran-contiguous numpy array."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:117
msgid ""
"Note that in certain cases, the Lars solver may be significantly faster "
"to implement this functionality. In particular, linear interpolation can "
"be used to retrieve model coefficients between the values output by "
"lars_path"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:125
msgid "Comparing lasso_path and lars_path with interpolation:"
msgstr ""

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:8
msgid "Samples."
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:24
msgid "**C**"
msgstr ""

#: of
msgid "array, shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:13
msgid "Returns predicted values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid ""
"The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, "
"where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** "
"2).sum()`` and :math:`v` is the total sum of squares ``((y_true - "
"y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can "
"be negative (because the model can be arbitrarily worse). A constant "
"model that always predicts the expected value of `y`, disregarding the "
"input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid ""
"Test samples. For some estimators this may be a precomputed kernel matrix"
" or a list of generic objects instead with shape ``(n_samples, "
"n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples "
"used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid ""
"The :math:`R^2` score used when calling ``score`` on a regressor uses "
"``multioutput='uniform_average'`` from version 0.23 to keep consistent "
"with default value of :func:`~sklearn.metrics.r2_score`. This influences "
"the ``score`` method of all the multioutput regressors (except for "
":class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of "
"the form ``<component>__<parameter>`` so that it's possible to update "
"each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

