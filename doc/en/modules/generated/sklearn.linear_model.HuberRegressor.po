# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.linear_model.HuberRegressor.rst:2
msgid ":mod:`sklearn.linear_model`.HuberRegressor"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:2
msgid "Linear regression model that is robust to outliers."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:4
msgid ""
"The Huber Regressor optimizes the squared loss for the samples where "
"``|(y - X'w) / sigma| < epsilon`` and the absolute loss for the samples "
"where ``|(y - X'w) / sigma| > epsilon``, where w and sigma are parameters"
" to be optimized. The parameter sigma makes sure that if y is scaled up "
"or down by a certain factor, one does not need to rescale epsilon to "
"achieve the same robustness. Note that this does not take into account "
"the fact that the different features of X may be of different scales."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:12
msgid ""
"This makes sure that the loss function is not heavily influenced by the "
"outliers while not completely ignoring their effect."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:15
msgid "Read more in the :ref:`User Guide <huber_regression>`"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._huber.HuberRegressor
#: sklearn.linear_model._huber.HuberRegressor.fit
msgid "Parameters"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:24
msgid "**epsilon**"
msgstr ""

#: of
msgid "float, greater than 1.0, default=1.35"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:22
msgid ""
"The parameter epsilon controls the number of samples that should be "
"classified as outliers. The smaller the epsilon, the more robust it is to"
" outliers."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:28
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:27
msgid ""
"Maximum number of iterations that "
"``scipy.optimize.minimize(method=\"L-BFGS-B\")`` should run for."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:31
msgid "**alpha**"
msgstr ""

#: of
msgid "float, default=0.0001"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:31
msgid "Regularization parameter."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:37
msgid "**warm_start**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:34
msgid ""
"This is useful if the stored attributes of a previously used model has to"
" be reused. If set to False, then the coefficients will be rewritten for "
"every call to fit. See :term:`the Glossary <warm_start>`."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:41
msgid "**fit_intercept**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:40
msgid ""
"Whether or not to fit the intercept. This can be set to False if the data"
" is already centered around the origin."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:49
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-05"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:44
msgid ""
"The iteration will stop when ``max{|proj g_i | i = 1, ..., n}`` <= "
"``tol`` where pg_i is the i-th component of the projected gradient."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor
msgid "Attributes"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:54
msgid "**coef_**"
msgstr ""

#: of
msgid "array, shape (n_features,)"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:54
msgid "Features got by optimizing the Huber loss."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:57
msgid "**intercept_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:57
msgid "Bias."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:60
msgid "**scale_**"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:60
msgid "The value by which ``|y - X'w - c|`` is scaled down."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:69
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:63
msgid ""
"Number of iterations that "
"``scipy.optimize.minimize(method=\"L-BFGS-B\")`` has run for."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:68
msgid ""
"In SciPy <= 1.0.0 the number of lbfgs iterations may exceed ``max_iter``."
" ``n_iter_`` will now report at most ``max_iter``."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:78
msgid "**outliers_**"
msgstr ""

#: of
msgid "array, shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:72
msgid ""
"A boolean mask which is set to True where the samples are identified as "
"outliers."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:81
msgid "References"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:82
msgid ""
"Peter J. Huber, Elvezio M. Ronchetti, Robust Statistics Concomitant scale"
" estimates, pg 172"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:84
msgid ""
"Art B. Owen (2006), A robust hybrid of lasso and ridge regression. "
"https://statweb.stanford.edu/~owen/reports/hhu.pdf"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:89
msgid "[Re4616ef910fb-1]_, [Re4616ef910fb-2]_"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:92
msgid "Examples"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:115
msgid "Methods"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.HuberRegressor.fit>`\\"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor.fit:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Fit the model according to the given training data."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.HuberRegressor.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.HuberRegressor.predict>`\\"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Predict using the linear model."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.HuberRegressor.score>`\\"
msgstr ""

#: of sklearn.base.RegressorMixin.score:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Return the coefficient of determination :math:`R^2` of the prediction."
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid ":obj:`set_params <sklearn.linear_model.HuberRegressor.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.linear_model._huber.HuberRegressor:123:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.base.RegressorMixin.score:20
#: sklearn.linear_model._base.LinearModel.predict:8
#: sklearn.linear_model._huber.HuberRegressor.fit:9
msgid "**X**"
msgstr ""

#: of
msgid "array-like, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor.fit:8
msgid ""
"Training vector, where n_samples in the number of samples and n_features "
"is the number of features."
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
#: sklearn.linear_model._huber.HuberRegressor.fit:12
msgid "**y**"
msgstr ""

#: of
msgid "array-like, shape (n_samples,)"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor.fit:12
msgid "Target vector relative to X."
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
#: sklearn.linear_model._huber.HuberRegressor.fit:15
msgid "**sample_weight**"
msgstr ""

#: of sklearn.linear_model._huber.HuberRegressor.fit:15
msgid "Weight given to each sample."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.RegressorMixin.score
#: sklearn.linear_model._base.LinearModel.predict
#: sklearn.linear_model._huber.HuberRegressor.fit
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.linear_model._huber.HuberRegressor.fit:31
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of
msgid "array-like or sparse matrix, shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:8
msgid "Samples."
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:24
msgid "**C**"
msgstr ""

#: of sklearn.linear_model._base.LinearModel.predict:13
msgid "Returns predicted values."
msgstr ""

#: of sklearn.base.RegressorMixin.score:5
msgid ""
"The coefficient :math:`R^2` is defined as :math:`(1 - \\frac{u}{v})`, "
"where :math:`u` is the residual sum of squares ``((y_true - y_pred) ** "
"2).sum()`` and :math:`v` is the total sum of squares ``((y_true - "
"y_true.mean()) ** 2).sum()``. The best possible score is 1.0 and it can "
"be negative (because the model can be arbitrarily worse). A constant "
"model that always predicts the expected value of `y`, disregarding the "
"input features, would get a :math:`R^2` score of 0.0."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:17
msgid ""
"Test samples. For some estimators this may be a precomputed kernel matrix"
" or a list of generic objects instead with shape ``(n_samples, "
"n_samples_fitted)``, where ``n_samples_fitted`` is the number of samples "
"used in the fitting for the estimator."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.RegressorMixin.score:23
msgid "True values for `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.base.RegressorMixin.score:26
msgid "Sample weights."
msgstr ""

#: of sklearn.base.RegressorMixin.score:38
msgid "**score**"
msgstr ""

#: of sklearn.base.RegressorMixin.score:31
msgid ":math:`R^2` of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.RegressorMixin.score:41
msgid "Notes"
msgstr ""

#: of sklearn.base.RegressorMixin.score:42
msgid ""
"The :math:`R^2` score used when calling ``score`` on a regressor uses "
"``multioutput='uniform_average'`` from version 0.23 to keep consistent "
"with default value of :func:`~sklearn.metrics.r2_score`. This influences "
"the ``score`` method of all the multioutput regressors (except for "
":class:`~sklearn.multioutput.MultiOutputRegressor`)."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of "
"the form ``<component>__<parameter>`` so that it's possible to update "
"each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:4
msgid "Examples using ``sklearn.linear_model.HuberRegressor``"
msgstr ""

#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:15
#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:23
#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:34
#: ../modules/generated/sklearn.linear_model.HuberRegressor.examples:42
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_robust_fit.py`"
msgstr ""

