# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.feature_selection.SelectorMixin.rst:2
msgid ":mod:`sklearn.feature_selection`.SelectorMixin"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin:2
msgid "Transformer mixin that performs feature selection given a support mask"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin:4
msgid ""
"This mixin provides a feature selector implementation with `transform` "
"and `inverse_transform` functionality given an implementation of "
"`_get_support_mask`."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin:21
msgid "Methods"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin:28:<autosummary>:1
msgid ""
":obj:`fit_transform "
"<sklearn.feature_selection.SelectorMixin.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.feature_selection._base.SelectorMixin:28:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin:28:<autosummary>:1
msgid ":obj:`get_support <sklearn.feature_selection.SelectorMixin.get_support>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:2
#: sklearn.feature_selection._base.SelectorMixin:28:<autosummary>:1
msgid "Get a mask, or integer index, of the features selected"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin:28:<autosummary>:1
msgid ""
":obj:`inverse_transform "
"<sklearn.feature_selection.SelectorMixin.inverse_transform>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:2
#: sklearn.feature_selection._base.SelectorMixin:28:<autosummary>:1
msgid "Reverse the transformation operation"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin:28:<autosummary>:1
msgid ":obj:`transform <sklearn.feature_selection.SelectorMixin.transform>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.transform:2
#: sklearn.feature_selection._base.SelectorMixin:28:<autosummary>:1
msgid "Reduce X to the selected features."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid ""
"Fits transformer to `X` and `y` with optional parameters `fit_params` and"
" returns a transformed version of `X`."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_selection._base.SelectorMixin.get_support
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform
#: sklearn.feature_selection._base.SelectorMixin.transform
msgid "Parameters"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform:8
#: sklearn.feature_selection._base.SelectorMixin.transform:8
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "**y**"
msgstr ""

#: of
msgid ""
"array-like of shape (n_samples,) or (n_samples, n_outputs),"
"                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_selection._base.SelectorMixin.get_support
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform
#: sklearn.feature_selection._base.SelectorMixin.transform
msgid "Returns"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:9
msgid "**indices**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:8
msgid ""
"If True, the return value will be an array of integers, rather than a "
"boolean mask."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:30
msgid "**support**"
msgstr ""

#: of
msgid "array"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:14
msgid ""
"An index that selects the retained features from a feature vector. If "
"`indices` is False, this is a boolean array of shape [# input features], "
"in which an element is True iff its corresponding feature is selected for"
" retention. If `indices` is True, this is an integer array of shape [# "
"output features] whose values are indices into the input feature vector."
msgstr ""

#: of
msgid "array of shape [n_samples, n_selected_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:8
#: sklearn.feature_selection._base.SelectorMixin.transform:8
msgid "The input samples."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:25
#: sklearn.feature_selection._base.SelectorMixin.transform:24
msgid "**X_r**"
msgstr ""

#: of
msgid "array of shape [n_samples, n_original_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:13
msgid ""
"`X` with columns of zeros inserted where features would have been removed"
" by :meth:`transform`."
msgstr ""

#: of
msgid "array of shape [n_samples, n_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.transform:13
msgid "The input samples with only the selected features."
msgstr ""

