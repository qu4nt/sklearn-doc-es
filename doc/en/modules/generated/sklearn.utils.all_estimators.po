# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.utils.all_estimators.rst:2
msgid ":mod:`sklearn.utils`.all_estimators"
msgstr ""

#: of sklearn.utils.all_estimators:2
msgid "Get a list of all estimators from sklearn."
msgstr ""

#: of sklearn.utils.all_estimators:4
msgid ""
"This function crawls the module and gets all classes that inherit from "
"BaseEstimator. Classes that are defined in test-modules are not included."
msgstr ""

#: of sklearn.utils.all_estimators
msgid "Parameters"
msgstr ""

#: of sklearn.utils.all_estimators:15
msgid "**type_filter**"
msgstr ""

#: of
msgid ""
"{\"classifier\", \"regressor\", \"cluster\", \"transformer\"}"
"             or list of such str, default=None"
msgstr ""

#: of sklearn.utils.all_estimators:11
msgid ""
"Which kind of estimators should be returned. If None, no filter is "
"applied and all estimators are returned.  Possible values are "
"'classifier', 'regressor', 'cluster' and 'transformer' to get estimators "
"only of these specific types, or a list of these to get the estimators "
"that fit at least one of the types."
msgstr ""

#: of sklearn.utils.all_estimators
msgid "Returns"
msgstr ""

#: of sklearn.utils.all_estimators:32
msgid "**estimators**"
msgstr ""

#: of
msgid "list of tuples"
msgstr ""

#: of sklearn.utils.all_estimators:20
msgid ""
"List of (name, class), where ``name`` is the class name as string and "
"``class`` is the actuall type of the class."
msgstr ""

