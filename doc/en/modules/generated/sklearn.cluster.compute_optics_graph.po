# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.cluster.compute_optics_graph.rst:2
msgid ":mod:`sklearn.cluster`.compute_optics_graph"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:2
msgid "Computes the OPTICS reachability graph."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:4
msgid "Read more in the :ref:`User Guide <optics>`."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph
msgid "Parameters"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:10
msgid "**X**"
msgstr ""

#: of
msgid ""
"ndarray of shape (n_samples, n_features), or             (n_samples, "
"n_samples) if metric=’precomputed’."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:9
msgid ""
"A feature array, or array of distances between samples if "
"metric='precomputed'"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:15
msgid "**min_samples**"
msgstr ""

#: of
msgid "int > 1 or float between 0 and 1"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:13
msgid ""
"The number of samples in a neighborhood for a point to be considered as a"
" core point. Expressed as an absolute number or a fraction of the number "
"of samples (rounded to be at least 2)."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:21
msgid "**max_eps**"
msgstr ""

#: of
msgid "float, default=np.inf"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:18
msgid ""
"The maximum distance between two samples for one to be considered as in "
"the neighborhood of the other. Default value of ``np.inf`` will identify "
"clusters across all scales; reducing ``max_eps`` will result in shorter "
"run times."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:46
msgid "**metric**"
msgstr ""

#: of
msgid "str or callable, default='minkowski'"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:24
msgid ""
"Metric to use for distance computation. Any metric from scikit-learn or "
"scipy.spatial.distance can be used."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:27
msgid ""
"If metric is a callable function, it is called on each pair of instances "
"(rows) and the resulting value recorded. The callable should take two "
"arrays as input and return one value indicating the distance between "
"them. This works for Scipy's metrics, but is less efficient than passing "
"the metric name as a string. If metric is \"precomputed\", X is assumed "
"to be a distance matrix and must be square."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:34
msgid "Valid values for metric are:"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:36
msgid ""
"from scikit-learn: ['cityblock', 'cosine', 'euclidean', 'l1', 'l2', "
"'manhattan']"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:39
msgid ""
"from scipy.spatial.distance: ['braycurtis', 'canberra', 'chebyshev', "
"'correlation', 'dice', 'hamming', 'jaccard', 'kulsinski', 'mahalanobis', "
"'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', "
"'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule']"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:45
msgid ""
"See the documentation for scipy.spatial.distance for details on these "
"metrics."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:52
msgid "**p**"
msgstr ""

#: of
msgid "int, default=2"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:49
msgid ""
"Parameter for the Minkowski metric from "
":class:`~sklearn.metrics.pairwise_distances`. When p = 1, this is "
"equivalent to using manhattan_distance (l1), and euclidean_distance (l2) "
"for p = 2. For arbitrary p, minkowski_distance (l_p) is used."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:55
msgid "**metric_params**"
msgstr ""

#: of
msgid "dict, default=None"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:55
msgid "Additional keyword arguments for the metric function."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:67
msgid "**algorithm**"
msgstr ""

#: of
msgid "{'auto', 'ball_tree', 'kd_tree', 'brute'}, default='auto'"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:58
msgid "Algorithm used to compute the nearest neighbors:"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:60
msgid "'ball_tree' will use :class:`BallTree`"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:61
msgid "'kd_tree' will use :class:`KDTree`"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:62
msgid "'brute' will use a brute-force search."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:63
msgid ""
"'auto' will attempt to decide the most appropriate algorithm based on the"
" values passed to :meth:`fit` method. (default)"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:66
msgid ""
"Note: fitting on sparse input will override the setting of this "
"parameter, using brute force."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:73
msgid "**leaf_size**"
msgstr ""

#: of
msgid "int, default=30"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:70
msgid ""
"Leaf size passed to :class:`BallTree` or :class:`KDTree`. This can affect"
" the speed of the construction and query, as well as the memory required "
"to store the tree. The optimal value depends on the nature of the "
"problem."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:79
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:76
msgid ""
"The number of parallel jobs to run for neighbors search. ``None`` means 1"
" unless in a :obj:`joblib.parallel_backend` context. ``-1`` means using "
"all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph
msgid "Returns"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:84
msgid "**ordering_**"
msgstr ""

#: of
msgid "array of shape (n_samples,)"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:84
msgid "The cluster ordered list of sample indices."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:89
msgid "**core_distances_**"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:87
msgid ""
"Distance at which each sample becomes a core point, indexed by object "
"order. Points which will never be core have a distance of inf. Use "
"``clust.core_distances_[clust.ordering_]`` to access in cluster order."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:93
msgid "**reachability_**"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:92
msgid ""
"Reachability distances per sample, indexed by object order. Use "
"``clust.reachability_[clust.ordering_]`` to access in cluster order."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:105
msgid "**predecessor_**"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:96
msgid ""
"Point that a sample was reached from, indexed by object order. Seed "
"points have a predecessor of -1."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:108
msgid "References"
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:109
msgid ""
"Ankerst, Mihael, Markus M. Breunig, Hans-Peter Kriegel, and Jörg Sander. "
"\"OPTICS: ordering points to identify the clustering structure.\" ACM "
"SIGMOD Record 28, no. 2 (1999): 49-60."
msgstr ""

#: of sklearn.cluster._optics.compute_optics_graph:115
msgid "[R61802d06a170-1]_"
msgstr ""

