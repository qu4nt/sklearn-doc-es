# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/preprocessing_targets.rst:7
msgid "Transforming the prediction target (``y``)"
msgstr ""

#: ../modules/preprocessing_targets.rst:9
msgid ""
"These are transformers that are not intended to be used on features, only"
" on supervised learning targets. See also "
":ref:`transformed_target_regressor` if you want to transform the "
"prediction target for learning, but evaluate the model in the original "
"(untransformed) space."
msgstr ""

#: ../modules/preprocessing_targets.rst:15
msgid "Label binarization"
msgstr ""

#: ../modules/preprocessing_targets.rst:18
msgid "LabelBinarizer"
msgstr ""

#: ../modules/preprocessing_targets.rst:20
msgid ""
":class:`LabelBinarizer` is a utility class to help create a :term:`label "
"indicator matrix` from a list of :term:`multiclass` labels::"
msgstr ""

#: ../modules/preprocessing_targets.rst:33
msgid ""
"Using this format can enable multiclass classification in estimators that"
" support the label indicator matrix format."
msgstr ""

#: ../modules/preprocessing_targets.rst:38
msgid ""
"LabelBinarizer is not needed if you are using an estimator that already "
"supports :term:`multiclass` data."
msgstr ""

#: ../modules/preprocessing_targets.rst:41
msgid ""
"For more information about multiclass classification, refer to "
":ref:`multiclass_classification`."
msgstr ""

#: ../modules/preprocessing_targets.rst:45
msgid "MultiLabelBinarizer"
msgstr ""

#: ../modules/preprocessing_targets.rst:47
msgid ""
"In :term:`multilabel` learning, the joint set of binary classification "
"tasks is expressed with a label binary indicator array: each sample is "
"one row of a 2d array of shape (n_samples, n_classes) with binary values "
"where the one, i.e. the non zero elements, corresponds to the subset of "
"labels for that sample. An array such as ``np.array([[1, 0, 0], [0, 1, "
"1], [0, 0, 0]])`` represents label 0 in the first sample, labels 1 and 2 "
"in the second sample, and no labels in the third sample."
msgstr ""

#: ../modules/preprocessing_targets.rst:55
msgid ""
"Producing multilabel data as a list of sets of labels may be more "
"intuitive. The :class:`MultiLabelBinarizer "
"<sklearn.preprocessing.MultiLabelBinarizer>` transformer can be used to "
"convert between a collection of collections of labels and the indicator "
"format::"
msgstr ""

#: ../modules/preprocessing_targets.rst:69
msgid ""
"For more information about multilabel classification, refer to "
":ref:`multilabel_classification`."
msgstr ""

#: ../modules/preprocessing_targets.rst:73
msgid "Label encoding"
msgstr ""

#: ../modules/preprocessing_targets.rst:75
msgid ""
":class:`LabelEncoder` is a utility class to help normalize labels such "
"that they contain only values between 0 and n_classes-1. This is "
"sometimes useful for writing efficient Cython routines. "
":class:`LabelEncoder` can be used as follows::"
msgstr ""

#: ../modules/preprocessing_targets.rst:91
msgid ""
"It can also be used to transform non-numerical labels (as long as they "
"are hashable and comparable) to numerical labels::"
msgstr ""

