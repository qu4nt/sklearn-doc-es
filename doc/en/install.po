# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../install.rst:5
msgid "Installing scikit-learn"
msgstr ""

#: ../install.rst:7
msgid "There are different ways to install scikit-learn:"
msgstr ""

#: ../install.rst:9
msgid ""
":ref:`Install the latest official release <install_official_release>`. "
"This is the best approach for most users. It will provide a stable "
"version and pre-built packages are available for most platforms."
msgstr ""

#: ../install.rst:13
msgid ""
"Install the version of scikit-learn provided by your :ref:`operating "
"system or Python distribution <install_by_distribution>`. This is a quick"
" option for those who have operating systems or Python distributions that"
" distribute scikit-learn. It might not provide the latest release "
"version."
msgstr ""

#: ../install.rst:19
msgid ""
":ref:`Building the package from source <install_bleeding_edge>`. This is "
"best for users who want the latest-and-greatest features and aren't "
"afraid of running brand-new code. This is also needed for users who wish "
"to contribute to the project."
msgstr ""

#: ../install.rst:29
msgid "Installing the latest release"
msgstr ""

#: ../install.rst:68
msgid "Then run:"
msgstr ""

#: ../install.rst:88
msgid "In order to check your installation you can use"
msgstr ""

#: ../install.rst:111
msgid ""
"Note that in order to avoid potential conflicts with other packages it is"
" strongly recommended to use a `virtual environment (venv) "
"<https://docs.python.org/3/tutorial/venv.html>`_ or a `conda environment "
"<https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-"
"environments.html>`_."
msgstr ""

#: ../install.rst:116
msgid ""
"Using such an isolated environment makes it possible to install a "
"specific version of scikit-learn with pip or conda and its dependencies "
"independently of any previously installed Python packages. In particular "
"under Linux is it discouraged to install pip packages alongside the "
"packages managed by the package manager of the distribution (apt, dnf, "
"pacman...)."
msgstr ""

#: ../install.rst:122
msgid ""
"Note that you should always remember to activate the environment of your "
"choice prior to running any Python command whenever you start a new "
"terminal session."
msgstr ""

#: ../install.rst:125
msgid ""
"If you have not installed NumPy or SciPy yet, you can also install these "
"using conda or pip. When using pip, please ensure that *binary wheels* "
"are used, and NumPy and SciPy are not recompiled from source, which can "
"happen when using particular configurations of operating system and "
"hardware (such as Linux on a Raspberry Pi)."
msgstr ""

#: ../install.rst:132
msgid ""
"Scikit-learn plotting capabilities (i.e., functions start with "
"\"plot\\_\" and classes end with \"Display\") require Matplotlib. The "
"examples require Matplotlib and some examples require scikit-image, "
"pandas, or seaborn. The minimum version of Scikit-learn dependencies are "
"listed below along with its purpose."
msgstr ""

#: ../min_dependency_table.rst:2
msgid "Dependency"
msgstr ""

#: ../min_dependency_table.rst:2
msgid "Minimum Version"
msgstr ""

#: ../min_dependency_table.rst:2
msgid "Purpose"
msgstr ""

#: ../min_dependency_table.rst:4
msgid "numpy"
msgstr ""

#: ../min_dependency_table.rst:4
msgid "1.13.3"
msgstr ""

#: ../min_dependency_table.rst:4 ../min_dependency_table.rst:5
msgid "build, install"
msgstr ""

#: ../min_dependency_table.rst:5
msgid "scipy"
msgstr ""

#: ../min_dependency_table.rst:5
msgid "0.19.1"
msgstr ""

#: ../min_dependency_table.rst:6
msgid "joblib"
msgstr ""

#: ../min_dependency_table.rst:6
msgid "0.11"
msgstr ""

#: ../min_dependency_table.rst:6 ../min_dependency_table.rst:7
msgid "install"
msgstr ""

#: ../min_dependency_table.rst:7
msgid "threadpoolctl"
msgstr ""

#: ../min_dependency_table.rst:7
msgid "2.0.0"
msgstr ""

#: ../min_dependency_table.rst:8
msgid "cython"
msgstr ""

#: ../min_dependency_table.rst:8
msgid "0.28.5"
msgstr ""

#: ../min_dependency_table.rst:8
msgid "build"
msgstr ""

#: ../min_dependency_table.rst:9
msgid "matplotlib"
msgstr ""

#: ../min_dependency_table.rst:9
msgid "2.1.1"
msgstr ""

#: ../min_dependency_table.rst:9 ../min_dependency_table.rst:11
msgid "benchmark, docs, examples, tests"
msgstr ""

#: ../min_dependency_table.rst:10
msgid "scikit-image"
msgstr ""

#: ../min_dependency_table.rst:10
msgid "0.13"
msgstr ""

#: ../min_dependency_table.rst:10
msgid "docs, examples, tests"
msgstr ""

#: ../min_dependency_table.rst:11
msgid "pandas"
msgstr ""

#: ../min_dependency_table.rst:11
msgid "0.25.0"
msgstr ""

#: ../min_dependency_table.rst:12
msgid "seaborn"
msgstr ""

#: ../min_dependency_table.rst:12
msgid "0.9.0"
msgstr ""

#: ../min_dependency_table.rst:12
msgid "docs, examples"
msgstr ""

#: ../min_dependency_table.rst:13
msgid "memory_profiler"
msgstr ""

#: ../min_dependency_table.rst:13
msgid "0.57.0"
msgstr ""

#: ../min_dependency_table.rst:13
msgid "benchmark, docs"
msgstr ""

#: ../min_dependency_table.rst:14
msgid "pytest"
msgstr ""

#: ../min_dependency_table.rst:14
msgid "5.0.1"
msgstr ""

#: ../min_dependency_table.rst:14 ../min_dependency_table.rst:15
#: ../min_dependency_table.rst:16 ../min_dependency_table.rst:17
#: ../min_dependency_table.rst:18
msgid "tests"
msgstr ""

#: ../min_dependency_table.rst:15
msgid "pytest-cov"
msgstr ""

#: ../min_dependency_table.rst:15
msgid "2.9.0"
msgstr ""

#: ../min_dependency_table.rst:16
msgid "flake8"
msgstr ""

#: ../min_dependency_table.rst:16
msgid "3.8.2"
msgstr ""

#: ../min_dependency_table.rst:17
msgid "mypy"
msgstr ""

#: ../min_dependency_table.rst:17
msgid "0.770"
msgstr ""

#: ../min_dependency_table.rst:18
msgid "pyamg"
msgstr ""

#: ../min_dependency_table.rst:18
msgid "4.0.0"
msgstr ""

#: ../min_dependency_table.rst:19
msgid "sphinx"
msgstr ""

#: ../min_dependency_table.rst:19
msgid "3.2.0"
msgstr ""

#: ../min_dependency_table.rst:19 ../min_dependency_table.rst:20
#: ../min_dependency_table.rst:21 ../min_dependency_table.rst:22
#: ../min_dependency_table.rst:23
msgid "docs"
msgstr ""

#: ../min_dependency_table.rst:20
msgid "sphinx-gallery"
msgstr ""

#: ../min_dependency_table.rst:20
msgid "0.7.0"
msgstr ""

#: ../min_dependency_table.rst:21
msgid "numpydoc"
msgstr ""

#: ../min_dependency_table.rst:21
msgid "1.0.0"
msgstr ""

#: ../min_dependency_table.rst:22
msgid "Pillow"
msgstr ""

#: ../min_dependency_table.rst:22
msgid "7.1.2"
msgstr ""

#: ../min_dependency_table.rst:23
msgid "sphinx-prompt"
msgstr ""

#: ../min_dependency_table.rst:23
msgid "1.3.0"
msgstr ""

#: ../install.rst:142
msgid ""
"Scikit-learn 0.20 was the last version to support Python 2.7 and Python "
"3.4. Scikit-learn 0.21 supported Python 3.5-3.7. Scikit-learn 0.22 "
"supported Python 3.5-3.8. Scikit-learn now requires Python 3.6 or newer."
msgstr ""

#: ../install.rst:150
msgid ""
"For installing on PyPy, PyPy3-v5.10+, Numpy 1.14.0+, and scipy 1.1.0+ are"
" required."
msgstr ""

#: ../install.rst:156
msgid "Installing on Apple Silicon M1 hardware"
msgstr ""

#: ../install.rst:158
msgid ""
"The recently introduced `macos/arm64` platform (sometimes also known as "
"`macos/aarch64`) requires the open source community to upgrade the build "
"configuation and automation to properly support it."
msgstr ""

#: ../install.rst:162
msgid ""
"At the time of writing (January 2021), the only way to get a working "
"installation of scikit-learn on this hardware is to install scikit-learn "
"and its dependencies from the conda-forge distribution, for instance "
"using the miniforge installers:"
msgstr ""

#: ../install.rst:167
msgid "https://github.com/conda-forge/miniforge"
msgstr ""

#: ../install.rst:169
msgid ""
"The following issue tracks progress on making it possible to install "
"scikit-learn from PyPI with pip:"
msgstr ""

#: ../install.rst:172
msgid "https://github.com/scikit-learn/scikit-learn/issues/19137"
msgstr ""

#: ../install.rst:178
msgid "Third party distributions of scikit-learn"
msgstr ""

#: ../install.rst:180
msgid ""
"Some third-party distributions provide versions of scikit-learn "
"integrated with their package-management systems."
msgstr ""

#: ../install.rst:183
msgid ""
"These can make installation and upgrading much easier for users since the"
" integration includes the ability to automatically install dependencies "
"(numpy, scipy) that scikit-learn requires."
msgstr ""

#: ../install.rst:187
msgid ""
"The following is an incomplete list of OS and python distributions that "
"provide their own version of scikit-learn."
msgstr ""

#: ../install.rst:191
msgid "Arch Linux"
msgstr ""

#: ../install.rst:193
msgid ""
"Arch Linux's package is provided through the `official repositories "
"<https://www.archlinux.org/packages/?q=scikit-learn>`_ as ``python-"
"scikit-learn`` for Python. It can be installed by typing the following "
"command:"
msgstr ""

#: ../install.rst:204
msgid "Debian/Ubuntu"
msgstr ""

#: ../install.rst:206
msgid ""
"The Debian/Ubuntu package is splitted in three different packages called "
"``python3-sklearn`` (python modules), ``python3-sklearn-lib`` (low-level "
"implementations and bindings), ``python3-sklearn-doc`` (documentation). "
"Only the Python 3 version is available in the Debian Buster (the more "
"recent Debian distribution). Packages can be installed using ``apt-get``:"
msgstr ""

#: ../install.rst:219
msgid "Fedora"
msgstr ""

#: ../install.rst:221
msgid ""
"The Fedora package is called ``python3-scikit-learn`` for the python 3 "
"version, the only one available in Fedora30. It can be installed using "
"``dnf``:"
msgstr ""

#: ../install.rst:231
msgid "NetBSD"
msgstr ""

#: ../install.rst:233
msgid ""
"scikit-learn is available via `pkgsrc-wip <http://pkgsrc-"
"wip.sourceforge.net/>`_:"
msgstr ""

#: ../install.rst:236
msgid "http://pkgsrc.se/math/py-scikit-learn"
msgstr ""

#: ../install.rst:240
msgid "MacPorts for Mac OSX"
msgstr ""

#: ../install.rst:242
msgid ""
"The MacPorts package is named ``py<XY>-scikits-learn``, where ``XY`` "
"denotes the Python version. It can be installed by typing the following "
"command:"
msgstr ""

#: ../install.rst:253
msgid "Anaconda and Enthought Deployment Manager for all supported platforms"
msgstr ""

#: ../install.rst:255
msgid ""
"`Anaconda <https://www.anaconda.com/download>`_ and `Enthought Deployment"
" Manager <https://assets.enthought.com/downloads/>`_ both ship with "
"scikit-learn in addition to a large set of scientific python library for "
"Windows, Mac OSX and Linux."
msgstr ""

#: ../install.rst:260
msgid "Anaconda offers scikit-learn as part of its free distribution."
msgstr ""

#: ../install.rst:264
msgid "Intel conda channel"
msgstr ""

#: ../install.rst:266
msgid "Intel maintains a dedicated conda channel that ships scikit-learn:"
msgstr ""

#: ../install.rst:272
msgid ""
"This version of scikit-learn comes with alternative solvers for some "
"common estimators. Those solvers come from the DAAL C++ library and are "
"optimized for multi-core Intel CPUs."
msgstr ""

#: ../install.rst:276
msgid ""
"Note that those solvers are not enabled by default, please refer to the "
"`daal4py <https://intelpython.github.io/daal4py/sklearn.html>`_ "
"documentation for more details."
msgstr ""

#: ../install.rst:280
msgid ""
"Compatibility with the standard scikit-learn solvers is checked by "
"running the full scikit-learn test suite via automated continuous "
"integration as reported on https://github.com/IntelPython/daal4py."
msgstr ""

#: ../install.rst:286
msgid "WinPython for Windows"
msgstr ""

#: ../install.rst:288
msgid ""
"The `WinPython <https://winpython.github.io/>`_ project distributes "
"scikit-learn as an additional plugin."
msgstr ""

#: ../install.rst:293
msgid "Troubleshooting"
msgstr ""

#: ../install.rst:298
msgid "Error caused by file path length limit on Windows"
msgstr ""

#: ../install.rst:300
msgid ""
"It can happen that pip fails to install packages when reaching the "
"default path size limit of Windows if Python is installed in a nested "
"location such as the `AppData` folder structure under the user home "
"directory, for instance::"
msgstr ""

#: ../install.rst:310
msgid ""
"In this case it is possible to lift that limit in the Windows registry by"
" using the ``regedit`` tool:"
msgstr ""

#: ../install.rst:313
msgid "Type \"regedit\" in the Windows start menu to launch ``regedit``."
msgstr ""

#: ../install.rst:315
msgid ""
"Go to the "
"``Computer\\HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\FileSystem``"
" key."
msgstr ""

#: ../install.rst:319
msgid ""
"Edit the value of the ``LongPathsEnabled`` property of that key and set "
"it to 1."
msgstr ""

#: ../install.rst:322
msgid "Reinstall scikit-learn (ignoring the previous broken installation):"
msgstr ""

