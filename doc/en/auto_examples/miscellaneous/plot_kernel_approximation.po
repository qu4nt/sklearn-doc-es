# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_auto_examples_miscellaneous_plot_kernel_approximation.py>`"
" to download the full example code or to run this example in your browser"
" via Binder"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:23
msgid "Explicit feature map approximation for RBF kernels"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:25
msgid ""
"An example illustrating the approximation of the feature map of an RBF "
"kernel."
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:30
msgid ""
"It shows how to use :class:`RBFSampler` and :class:`Nystroem` to "
"approximate the feature map of an RBF kernel for classification with an "
"SVM on the digits dataset. Results using a linear SVM in the original "
"space, a linear SVM using the approximate mappings and using a kernelized"
" SVM are compared. Timings and accuracy for varying amounts of Monte "
"Carlo samplings (in the case of :class:`RBFSampler`, which uses random "
"Fourier features) and different sized subsets of the training set (for "
":class:`Nystroem`) for the approximate mapping are shown."
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:39
msgid ""
"Please note that the dataset here is not large enough to show the "
"benefits of kernel approximation, as the exact SVM is still reasonably "
"fast."
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:42
msgid ""
"Sampling more dimensions clearly leads to better classification results, "
"but comes at a greater cost. This means there is a tradeoff between "
"runtime and accuracy, given by the parameter n_components. Note that "
"solving the Linear SVM and also the approximate kernel SVM could be "
"greatly accelerated by using stochastic gradient descent via "
":class:`~sklearn.linear_model.SGDClassifier`. This is not easily possible"
" for the case of the kernelized SVM."
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:52
msgid "Python package and dataset imports, load dataset"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:91
msgid "Timing and accuracy plots"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:92
msgid ""
"To apply an classifier on this data, we need to flatten the image, to "
"turn the data in a (samples, feature) matrix:"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:218
msgid "Decision Surfaces of RBF Kernel SVM and Linear SVM"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:219
msgid ""
"The second plot visualized the decision surfaces of the RBF kernel SVM "
"and the linear SVM with approximate kernel maps. The plot shows decision "
"surfaces of the classifiers projected onto the first two principal "
"components of the data. This visualization should be taken with a grain "
"of salt since it is just an interesting slice through the decision "
"surface in 64 dimensions. In particular note that a datapoint "
"(represented as a dot) does not necessarily be classified into the region"
" it is lying in, since it will not lie on the plane that the first two "
"principal components span. The usage of :class:`RBFSampler` and "
":class:`Nystroem` is described in detail in :ref:`kernel_approximation`."
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:295
msgid "**Total running time of the script:** ( 0 minutes  5.556 seconds)"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:317
msgid ""
":download:`Download Python source code: plot_kernel_approximation.py "
"<plot_kernel_approximation.py>`"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:323
msgid ""
":download:`Download Jupyter notebook: plot_kernel_approximation.ipynb "
"<plot_kernel_approximation.ipynb>`"
msgstr ""

#: ../auto_examples/miscellaneous/plot_kernel_approximation.rst:330
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

