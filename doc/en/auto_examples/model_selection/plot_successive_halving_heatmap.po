# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 12:43-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_auto_examples_model_selection_plot_successive_halving_heatmap.py>`"
" to download the full example code or to run this example in your browser"
" via Binder"
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:22
msgid "Comparison between grid search and successive halving"
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:24
msgid ""
"This example compares the parameter search performed by "
":class:`~sklearn.model_selection.HalvingGridSearchCV` and "
":class:`~sklearn.model_selection.GridSearchCV`."
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:56
msgid ""
"We first define the parameter space for an :class:`~sklearn.svm.SVC` "
"estimator, and compute the time required to train a "
":class:`~sklearn.model_selection.HalvingGridSearchCV` instance, as well "
"as a :class:`~sklearn.model_selection.GridSearchCV` instance."
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:95
msgid "We now plot heatmaps for both search estimators."
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:173
msgid ""
"The heatmaps show the mean test score of the parameter combinations for "
"an :class:`~sklearn.svm.SVC` instance. The "
":class:`~sklearn.model_selection.HalvingGridSearchCV` also shows the "
"iteration at which the combinations where last used. The combinations "
"marked as ``0`` were only evaluated at the first iteration, while the "
"ones with ``5`` are the parameter combinations that are considered the "
"best ones."
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:180
msgid ""
"We can see that the :class:`~sklearn.model_selection.HalvingGridSearchCV`"
" class is able to find parameter combinations that are just as accurate "
"as :class:`~sklearn.model_selection.GridSearchCV`, in much less time."
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:187
msgid "**Total running time of the script:** ( 0 minutes  9.307 seconds)"
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:209
msgid ""
":download:`Download Python source code: "
"plot_successive_halving_heatmap.py <plot_successive_halving_heatmap.py>`"
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:215
msgid ""
":download:`Download Jupyter notebook: "
"plot_successive_halving_heatmap.ipynb "
"<plot_successive_halving_heatmap.ipynb>`"
msgstr ""

#: ../auto_examples/model_selection/plot_successive_halving_heatmap.rst:222
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

#~ msgid "**Total running time of the script:** ( 0 minutes  0.001 seconds)"
#~ msgstr ""

