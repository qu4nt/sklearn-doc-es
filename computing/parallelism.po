# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../computing/parallelism.rst:6
msgid "Parallelism, resource management, and configuration"
msgstr ""

#: ../computing/parallelism.rst:11
msgid "Parallelism"
msgstr ""

#: ../computing/parallelism.rst:13
msgid ""
"Some scikit-learn estimators and utilities can parallelize costly "
"operations using multiple CPU cores, thanks to the following components:"
msgstr ""

#: ../computing/parallelism.rst:16
msgid ""
"via the `joblib <https://joblib.readthedocs.io/en/latest/>`_ library. In "
"this case the number of threads or processes can be controlled with the "
"``n_jobs`` parameter."
msgstr ""

#: ../computing/parallelism.rst:19
msgid "via OpenMP, used in C or Cython code."
msgstr ""

#: ../computing/parallelism.rst:21
msgid ""
"In addition, some of the numpy routines that are used internally by "
"scikit-learn may also be parallelized if numpy is installed with specific"
" numerical libraries such as MKL, OpenBLAS, or BLIS."
msgstr ""

#: ../computing/parallelism.rst:25
msgid "We describe these 3 scenarios in the following subsections."
msgstr ""

#: ../computing/parallelism.rst:28
msgid "Joblib-based parallelism"
msgstr ""

#: ../computing/parallelism.rst:30
msgid ""
"When the underlying implementation uses joblib, the number of workers "
"(threads or processes) that are spawned in parallel can be controlled via"
" the ``n_jobs`` parameter."
msgstr ""

#: ../computing/parallelism.rst:36
msgid ""
"Where (and how) parallelization happens in the estimators is currently "
"poorly documented. Please help us by improving our docs and tackle `issue"
" 14228 <https://github.com/scikit-learn/scikit-learn/issues/14228>`_!"
msgstr ""

#: ../computing/parallelism.rst:40
msgid ""
"Joblib is able to support both multi-processing and multi-threading. "
"Whether joblib chooses to spawn a thread or a process depends on the "
"**backend** that it's using."
msgstr ""

#: ../computing/parallelism.rst:44
msgid ""
"Scikit-learn generally relies on the ``loky`` backend, which is joblib's "
"default backend. Loky is a multi-processing backend. When doing multi-"
"processing, in order to avoid duplicating the memory in each process "
"(which isn't reasonable with big datasets), joblib will create a `memmap "
"<https://docs.scipy.org/doc/numpy/reference/generated/numpy.memmap.html>`_"
" that all processes can share, when the data is bigger than 1MB."
msgstr ""

#: ../computing/parallelism.rst:51
msgid ""
"In some specific cases (when the code that is run in parallel releases "
"the GIL), scikit-learn will indicate to ``joblib`` that a multi-threading"
" backend is preferable."
msgstr ""

#: ../computing/parallelism.rst:55
msgid ""
"As a user, you may control the backend that joblib will use (regardless "
"of what scikit-learn recommends) by using a context manager::"
msgstr ""

#: ../computing/parallelism.rst:63
msgid ""
"Please refer to the `joblib's docs "
"<https://joblib.readthedocs.io/en/latest/parallel.html#thread-based-"
"parallelism-vs-process-based-parallelism>`_ for more details."
msgstr ""

#: ../computing/parallelism.rst:67
msgid ""
"In practice, whether parallelism is helpful at improving runtime depends "
"on many factors. It is usually a good idea to experiment rather than "
"assuming that increasing the number of workers is always a good thing. In"
" some cases it can be highly detrimental to performance to run multiple "
"copies of some estimators or functions in parallel (see oversubscription "
"below)."
msgstr ""

#: ../computing/parallelism.rst:74
msgid "OpenMP-based parallelism"
msgstr ""

#: ../computing/parallelism.rst:76
msgid ""
"OpenMP is used to parallelize code written in Cython or C, relying on "
"multi-threading exclusively. By default (and unless joblib is trying to "
"avoid oversubscription), the implementation will use as many threads as "
"possible."
msgstr ""

#: ../computing/parallelism.rst:81
msgid ""
"You can control the exact number of threads that are used via the "
"``OMP_NUM_THREADS`` environment variable:"
msgstr ""

#: ../computing/parallelism.rst:89
msgid "Parallel Numpy routines from numerical libraries"
msgstr ""

#: ../computing/parallelism.rst:91
msgid ""
"Scikit-learn relies heavily on NumPy and SciPy, which internally call "
"multi-threaded linear algebra routines implemented in libraries such as "
"MKL, OpenBLAS or BLIS."
msgstr ""

#: ../computing/parallelism.rst:95
msgid ""
"The number of threads used by the OpenBLAS, MKL or BLIS libraries can be "
"set via the ``MKL_NUM_THREADS``, ``OPENBLAS_NUM_THREADS``, and "
"``BLIS_NUM_THREADS`` environment variables."
msgstr ""

#: ../computing/parallelism.rst:99
msgid ""
"Please note that scikit-learn has no direct control over these "
"implementations. Scikit-learn solely relies on Numpy and Scipy."
msgstr ""

#: ../computing/parallelism.rst:103
msgid ""
"At the time of writing (2019), NumPy and SciPy packages distributed on "
"pypi.org (used by ``pip``) and on the conda-forge channel are linked with"
" OpenBLAS, while conda packages shipped on the \"defaults\" channel from "
"anaconda.org are linked by default with MKL."
msgstr ""

#: ../computing/parallelism.rst:110
msgid "Oversubscription: spawning too many threads"
msgstr ""

#: ../computing/parallelism.rst:112
msgid ""
"It is generally recommended to avoid using significantly more processes "
"or threads than the number of CPUs on a machine. Over-subscription "
"happens when a program is running too many threads at the same time."
msgstr ""

#: ../computing/parallelism.rst:116
msgid ""
"Suppose you have a machine with 8 CPUs. Consider a case where you're "
"running a :class:`~sklearn.model_selection.GridSearchCV` (parallelized "
"with joblib) with ``n_jobs=8`` over a "
":class:`~sklearn.ensemble.HistGradientBoostingClassifier` (parallelized "
"with OpenMP). Each instance of "
":class:`~sklearn.ensemble.HistGradientBoostingClassifier` will spawn 8 "
"threads (since you have 8 CPUs). That's a total of ``8 * 8 = 64`` "
"threads, which leads to oversubscription of physical CPU resources and to"
" scheduling overhead."
msgstr ""

#: ../computing/parallelism.rst:126
msgid ""
"Oversubscription can arise in the exact same fashion with parallelized "
"routines from MKL, OpenBLAS or BLIS that are nested in joblib calls."
msgstr ""

#: ../computing/parallelism.rst:129
msgid ""
"Starting from ``joblib >= 0.14``, when the ``loky`` backend is used "
"(which is the default), joblib will tell its child **processes** to limit"
" the number of threads they can use, so as to avoid oversubscription. In "
"practice the heuristic that joblib uses is to tell the processes to use "
"``max_threads = n_cpus // n_jobs``, via their corresponding environment "
"variable. Back to our example from above, since the joblib backend of "
":class:`~sklearn.model_selection.GridSearchCV` is ``loky``, each process "
"will only be able to use 1 thread instead of 8, thus mitigating the "
"oversubscription issue."
msgstr ""

#: ../computing/parallelism.rst:139
msgid "Note that:"
msgstr ""

#: ../computing/parallelism.rst:141
msgid ""
"Manually setting one of the environment variables (``OMP_NUM_THREADS``, "
"``MKL_NUM_THREADS``, ``OPENBLAS_NUM_THREADS``, or ``BLIS_NUM_THREADS``) "
"will take precedence over what joblib tries to do. The total number of "
"threads will be ``n_jobs * <LIB>_NUM_THREADS``. Note that setting this "
"limit will also impact your computations in the main process, which will "
"only use ``<LIB>_NUM_THREADS``. Joblib exposes a context manager for "
"finer control over the number of threads in its workers (see joblib docs "
"linked below)."
msgstr ""

#: ../computing/parallelism.rst:149
msgid ""
"Joblib is currently unable to avoid oversubscription in a multi-threading"
" context. It can only do so with the ``loky`` backend (which spawns "
"processes)."
msgstr ""

#: ../computing/parallelism.rst:153
msgid ""
"You will find additional details about joblib mitigation of "
"oversubscription in `joblib documentation "
"<https://joblib.readthedocs.io/en/latest/parallel.html#avoiding-over-"
"subscription-of-cpu-ressources>`_."
msgstr ""

#: ../computing/parallelism.rst:159
msgid "Configuration switches"
msgstr ""

#: ../computing/parallelism.rst:162
msgid "Python runtime"
msgstr ""

#: ../computing/parallelism.rst:164
msgid ":func:`sklearn.set_config` controls the following behaviors:"
msgstr ""

#: ../computing/parallelism.rst
msgid "assume_finite"
msgstr ""

#: ../computing/parallelism.rst:168
msgid ""
"used to skip validation, which enables faster computations but may lead "
"to segmentation faults if the data contains NaNs."
msgstr ""

#: ../computing/parallelism.rst
msgid "working_memory"
msgstr ""

#: ../computing/parallelism.rst:173
msgid "the optimal size of temporary arrays used by some algorithms."
msgstr ""

#: ../computing/parallelism.rst:178
msgid "Environment variables"
msgstr ""

#: ../computing/parallelism.rst:180
msgid "These environment variables should be set before importing scikit-learn."
msgstr ""

#: ../computing/parallelism.rst
msgid "SKLEARN_SITE_JOBLIB"
msgstr ""

#: ../computing/parallelism.rst:184
msgid ""
"When this environment variable is set to a non zero value, scikit-learn "
"uses the site joblib rather than its vendored version. Consequently, "
"joblib must be installed for scikit-learn to run. Note that using the "
"site joblib is at your own risks: the versions of scikit-learn and joblib"
" need to be compatible. Currently, joblib 0.11+ is supported. In "
"addition, dumps from joblib.Memory might be incompatible, and you might "
"loose some caches and have to redownload some datasets."
msgstr ""

#: ../computing/parallelism.rst:194
msgid ""
"As of version 0.21 this parameter has no effect, vendored joblib was "
"removed and site joblib is always used."
msgstr ""

#: ../computing/parallelism.rst
msgid "SKLEARN_ASSUME_FINITE"
msgstr ""

#: ../computing/parallelism.rst:199
msgid ""
"Sets the default value for the `assume_finite` argument of "
":func:`sklearn.set_config`."
msgstr ""

#: ../computing/parallelism.rst
msgid "SKLEARN_WORKING_MEMORY"
msgstr ""

#: ../computing/parallelism.rst:204
msgid ""
"Sets the default value for the `working_memory` argument of "
":func:`sklearn.set_config`."
msgstr ""

#: ../computing/parallelism.rst
msgid "SKLEARN_SEED"
msgstr ""

#: ../computing/parallelism.rst:209
msgid ""
"Sets the seed of the global random generator when running the tests, for "
"reproducibility."
msgstr ""

#: ../computing/parallelism.rst
msgid "SKLEARN_SKIP_NETWORK_TESTS"
msgstr ""

#: ../computing/parallelism.rst:214
msgid ""
"When this environment variable is set to a non zero value, the tests that"
" need network access are skipped. When this environment variable is not "
"set then network tests are skipped."
msgstr ""

