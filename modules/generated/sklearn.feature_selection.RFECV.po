# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.feature_selection.RFECV.rst:2
msgid ":mod:`sklearn.feature_selection`.RFECV"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:2
msgid ""
"Feature ranking with recursive feature elimination and cross-validated "
"selection of the best number of features."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:5
msgid "See glossary entry for :term:`cross-validation estimator`."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:7
msgid "Read more in the :ref:`User Guide <rfe>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_selection._base.SelectorMixin.get_support
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform
#: sklearn.feature_selection._base.SelectorMixin.transform
#: sklearn.feature_selection._rfe.RFE.decision_function
#: sklearn.feature_selection._rfe.RFE.predict
#: sklearn.feature_selection._rfe.RFE.predict_log_proba
#: sklearn.feature_selection._rfe.RFE.predict_proba
#: sklearn.feature_selection._rfe.RFE.score
#: sklearn.feature_selection._rfe.RFECV
#: sklearn.feature_selection._rfe.RFECV.fit
msgid "Parameters"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:14
msgid "**estimator** : ``Estimator`` instance"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:13
#: sklearn.feature_selection._rfe.RFECV:90
msgid "Estimator instance"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:12
msgid ""
"A supervised learning estimator with a ``fit`` method that provides "
"information about feature importance either through a ``coef_`` attribute"
" or through a ``feature_importances_`` attribute."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:22
msgid "**step**"
msgstr ""

#: of
msgid "int or float, default=1"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:17
msgid ""
"If greater than or equal to 1, then ``step`` corresponds to the (integer)"
" number of features to remove at each iteration. If within (0.0, 1.0), "
"then ``step`` corresponds to the percentage (rounded down) of features to"
" remove at each iteration. Note that the last iteration may remove fewer "
"than ``step`` features in order to reach ``min_features_to_select``."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:30
msgid "**min_features_to_select**"
msgstr ""

#: of
msgid "int, default=1"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:25
msgid ""
"The minimum number of features to be selected. This number of features "
"will always be scored, even if the difference between the original "
"feature count and ``min_features_to_select`` isn't divisible by ``step``."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:50
msgid "**cv**"
msgstr ""

#: of
msgid "int, cross-validation generator or an iterable, default=None"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:33
msgid ""
"Determines the cross-validation splitting strategy. Possible inputs for "
"cv are:"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:36
msgid "None, to use the default 5-fold cross-validation,"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:37
msgid "integer, to specify the number of folds."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:38
msgid ":term:`CV splitter`,"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:39
msgid "An iterable yielding (train, test) splits as arrays of indices."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:41
msgid ""
"For integer/None inputs, if ``y`` is binary or multiclass, "
":class:`~sklearn.model_selection.StratifiedKFold` is used. If the "
"estimator is a classifier or if ``y`` is neither binary nor multiclass, "
":class:`~sklearn.model_selection.KFold` is used."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:46
msgid ""
"Refer :ref:`User Guide <cross_validation>` for the various cross-"
"validation strategies that can be used here."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:49
msgid "``cv`` default value of None changed from 3-fold to 5-fold."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:55
msgid "**scoring**"
msgstr ""

#: of
msgid "string, callable or None, default=None"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:53
msgid ""
"A string (see model evaluation documentation) or a scorer callable object"
" / function with signature ``scorer(estimator, X, y)``."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:58
msgid "**verbose**"
msgstr ""

#: of
msgid "int, default=0"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:58
msgid "Controls verbosity of output."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:66
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int or None, default=None"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:61
msgid ""
"Number of cores to run in parallel while fitting across folds. ``None`` "
"means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means "
"using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:86
msgid "**importance_getter**"
msgstr ""

#: of
msgid "str or callable, default='auto'"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:69
msgid ""
"If 'auto', uses the feature importance either through a `coef_` or "
"`feature_importances_` attributes of estimator."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:72
msgid ""
"Also accepts a string that specifies an attribute name/path for "
"extracting feature importance. For example, give `regressor_.coef_` in "
"case of :class:`~sklearn.compose.TransformedTargetRegressor`  or "
"`named_steps.clf.feature_importances_` in case of "
":class:`~sklearn.pipeline.Pipeline` with its last step named `clf`."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:79
msgid ""
"If `callable`, overrides the default feature importance getter. The "
"callable is passed with the fitted estimator and it should return "
"importance for each feature."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV
msgid "Attributes"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:91
msgid "**estimator_** : ``Estimator`` instance"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:91
msgid "The fitted estimator used to select features."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:96
msgid "**grid_scores_**"
msgstr ""

#: of
msgid "ndarray of shape (n_subsets_of_features,)"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:94
msgid ""
"The cross-validation scores such that ``grid_scores_[i]`` corresponds to "
"the CV score of the i-th subset of features."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:99
msgid "**n_features_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:99
msgid "The number of selected features with cross-validation."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:106
msgid "**ranking_**"
msgstr ""

#: of
msgid "narray of shape (n_features,)"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:102
msgid ""
"The feature ranking, such that `ranking_[i]` corresponds to the ranking "
"position of the i-th feature. Selected (i.e., estimated best) features "
"are assigned rank 1."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:112
msgid "**support_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:109
msgid "The mask of selected features."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:117
msgid ":obj:`RFE`"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:118
msgid "Recursive feature elimination."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:122
msgid "Notes"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:123
msgid ""
"The size of ``grid_scores_`` is equal to ``ceil((n_features - "
"min_features_to_select) / step) + 1``, where step is the number of "
"features removed at each iteration."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:127
msgid "Allows NaN/Inf in the input if the underlying estimator does as well."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:130
msgid "References"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:131
msgid ""
"Guyon, I., Weston, J., Barnhill, S., & Vapnik, V., \"Gene selection for "
"cancer classification using support vector machines\", Mach. Learn., "
"46(1-3), 389--422, 2002."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:137
msgid "[R6f4d61ceb411-1]_"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:140
msgid "Examples"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:141
msgid ""
"The following example shows how to retrieve the a-priori not known 5 "
"informative features in the Friedman #1 dataset."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:158
msgid "Methods"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ""
":obj:`decision_function "
"<sklearn.feature_selection.RFECV.decision_function>`\\"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.decision_function:2
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Compute the decision function of ``X``."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ":obj:`fit <sklearn.feature_selection.RFECV.fit>`\\"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV.fit:4
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Fit the RFE model and automatically tune the number of selected"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.feature_selection.RFECV.fit_transform>`\\"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:2
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Fit to data, then transform it."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ":obj:`get_params <sklearn.feature_selection.RFECV.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ":obj:`get_support <sklearn.feature_selection.RFECV.get_support>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:2
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Get a mask, or integer index, of the features selected"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ""
":obj:`inverse_transform "
"<sklearn.feature_selection.RFECV.inverse_transform>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:2
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Reverse the transformation operation"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ":obj:`predict <sklearn.feature_selection.RFECV.predict>`\\"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.predict:4
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Reduce X to the selected features and then predict using the"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ""
":obj:`predict_log_proba "
"<sklearn.feature_selection.RFECV.predict_log_proba>`\\"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.predict_log_proba:2
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Predict class log-probabilities for X."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.feature_selection.RFECV.predict_proba>`\\"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.predict_proba:2
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Predict class probabilities for X."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ":obj:`score <sklearn.feature_selection.RFECV.score>`\\"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.score:4
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Reduce X to the selected features and then return the score of the"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ":obj:`set_params <sklearn.feature_selection.RFECV.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid ":obj:`transform <sklearn.feature_selection.RFECV.transform>`\\"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.transform:2
#: sklearn.feature_selection._rfe.RFECV:173:<autosummary>:1
msgid "Reduce X to the selected features."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform:8
#: sklearn.feature_selection._base.SelectorMixin.transform:8
#: sklearn.feature_selection._rfe.RFE.decision_function:10
#: sklearn.feature_selection._rfe.RFE.predict:9
#: sklearn.feature_selection._rfe.RFE.predict_log_proba:8
#: sklearn.feature_selection._rfe.RFE.predict_proba:10
#: sklearn.feature_selection._rfe.RFE.score:9
#: sklearn.feature_selection._rfe.RFECV.fit:10
msgid "**X**"
msgstr ""

#: of
msgid "{array-like or sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.decision_function:8
#: sklearn.feature_selection._rfe.RFE.predict_proba:8
msgid ""
"The input samples. Internally, it will be converted to "
"``dtype=np.float32`` and if a sparse matrix is provided to a sparse "
"``csr_matrix``."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params
#: sklearn.base.TransformerMixin.fit_transform
#: sklearn.feature_selection._base.SelectorMixin.get_support
#: sklearn.feature_selection._base.SelectorMixin.inverse_transform
#: sklearn.feature_selection._base.SelectorMixin.transform
#: sklearn.feature_selection._rfe.RFE.decision_function
#: sklearn.feature_selection._rfe.RFE.predict
#: sklearn.feature_selection._rfe.RFE.predict_log_proba
#: sklearn.feature_selection._rfe.RFE.predict_proba
msgid "Returns"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.decision_function:29
msgid "**score**"
msgstr ""

#: of
msgid "array, shape = [n_samples, n_classes] or [n_samples]"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.decision_function:15
msgid ""
"The decision function of the input samples. The order of the classes "
"corresponds to that in the attribute :term:`classes_`. Regression and "
"binary classification produce an array of shape [n_samples]."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV.fit:3
msgid "features."
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV.fit:9
msgid ""
"Training vector, where `n_samples` is the number of samples and "
"`n_features` is the total number of features."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
#: sklearn.feature_selection._rfe.RFE.predict:25
#: sklearn.feature_selection._rfe.RFE.score:24
#: sklearn.feature_selection._rfe.RFECV.fit:14
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV.fit:13
msgid "Target values (integers for classification, real numbers for regression)."
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV.fit:33
msgid "**groups**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or None, default=None"
msgstr ""

#: of sklearn.feature_selection._rfe.RFECV.fit:17
msgid ""
"Group labels for the samples used while splitting the dataset into "
"train/test set. Only used in conjunction with a \"Group\" :term:`cv` "
"instance (e.g., :class:`~sklearn.model_selection.GroupKFold`)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:4
msgid ""
"Fits transformer to `X` and `y` with optional parameters `fit_params` and"
" returns a transformed version of `X`."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:10
msgid "Input samples."
msgstr ""

#: of
msgid ""
"array-like of shape (n_samples,) or (n_samples, n_outputs),"
"                 default=None"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:13
msgid "Target values (None for unsupervised transformations)."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "**\\*\\*fit_params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:16
msgid "Additional fit parameters."
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:32
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray array of shape (n_samples, n_features_new)"
msgstr ""

#: of sklearn.base.TransformerMixin.fit_transform:21
msgid "Transformed array."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:9
msgid "**indices**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:8
msgid ""
"If True, the return value will be an array of integers, rather than a "
"boolean mask."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:30
msgid "**support**"
msgstr ""

#: of
msgid "array"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.get_support:14
msgid ""
"An index that selects the retained features from a feature vector. If "
"`indices` is False, this is a boolean array of shape [# input features], "
"in which an element is True iff its corresponding feature is selected for"
" retention. If `indices` is True, this is an integer array of shape [# "
"output features] whose values are indices into the input feature vector."
msgstr ""

#: of
msgid "array of shape [n_samples, n_selected_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:8
#: sklearn.feature_selection._base.SelectorMixin.transform:8
#: sklearn.feature_selection._rfe.RFE.predict:9
#: sklearn.feature_selection._rfe.RFE.predict_log_proba:8
#: sklearn.feature_selection._rfe.RFE.score:9
msgid "The input samples."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:25
#: sklearn.feature_selection._base.SelectorMixin.transform:24
msgid "**X_r**"
msgstr ""

#: of
msgid "array of shape [n_samples, n_original_features]"
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.inverse_transform:13
msgid ""
"`X` with columns of zeros inserted where features would have been removed"
" by :meth:`transform`."
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.predict:3
#: sklearn.feature_selection._rfe.RFE.score:3
msgid "underlying estimator."
msgstr ""

#: of
msgid "array of shape [n_samples, n_features]"
msgstr ""

#: of
msgid "array of shape [n_samples]"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.predict:14
msgid "The predicted target values."
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.predict_log_proba:25
#: sklearn.feature_selection._rfe.RFE.predict_proba:27
msgid "**p**"
msgstr ""

#: of
msgid "array of shape (n_samples, n_classes)"
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.predict_log_proba:13
msgid ""
"The class log-probabilities of the input samples. The order of the "
"classes corresponds to that in the attribute :term:`classes_`."
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.predict_proba:15
msgid ""
"The class probabilities of the input samples. The order of the classes "
"corresponds to that in the attribute :term:`classes_`."
msgstr ""

#: of sklearn.feature_selection._rfe.RFE.score:12
msgid "The target values."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of "
"the form ``<component>__<parameter>`` so that it's possible to update "
"each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.feature_selection._base.SelectorMixin.transform:13
msgid "The input samples with only the selected features."
msgstr ""

#: ../modules/generated/sklearn.feature_selection.RFECV.examples:4
msgid "Examples using ``sklearn.feature_selection.RFECV``"
msgstr ""

#: ../modules/generated/sklearn.feature_selection.RFECV.examples:15
#: ../modules/generated/sklearn.feature_selection.RFECV.examples:23
msgid ":ref:`sphx_glr_auto_examples_feature_selection_plot_rfe_with_cross_validation.py`"
msgstr ""

