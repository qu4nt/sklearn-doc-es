# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.decomposition.dict_learning.rst:2
msgid ":mod:`sklearn.decomposition`.dict_learning"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:2
msgid "Solves a dictionary learning matrix factorization problem."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:4
msgid ""
"Finds the best dictionary and the corresponding sparse code for "
"approximating the data matrix X by solving::"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:11
msgid "where V is the dictionary and U is the sparse code."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:13
msgid "Read more in the :ref:`User Guide <DictionaryLearning>`."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning
msgid "Parameters"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:18
msgid "**X**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:18
msgid "Data matrix."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:21
msgid "**n_components**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:21
msgid "Number of dictionary atoms to extract."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:24
msgid "**alpha**"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:24
msgid "Sparsity controlling parameter."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:27
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:27
#: sklearn.decomposition._dict_learning.dict_learning:78
msgid "Maximum number of iterations to perform."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:30
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-8"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:30
msgid "Tolerance for the stopping condition."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:39
msgid "**method**"
msgstr ""

#: of
msgid "{'lars', 'cd'}, default='lars'"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:33
msgid "The method used:"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:35
msgid "`'lars'`: uses the least angle regression method to solve the lasso"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:36
msgid "problem (`linear_model.lars_path`);"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:37
msgid ""
"`'cd'`: uses the coordinate descent method to compute the Lasso solution "
"(`linear_model.Lasso`). Lars will be faster if the estimated components "
"are sparse."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:45
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:42
msgid ""
"Number of parallel jobs to run. ``None`` means 1 unless in a "
":obj:`joblib.parallel_backend` context. ``-1`` means using all "
"processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:48
msgid "**dict_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_features), default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:48
msgid "Initial value for the dictionary for warm restart scenarios."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:51
msgid "**code_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components), default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:51
msgid "Initial value for the sparse code for warm restart scenarios."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:54
msgid "**callback**"
msgstr ""

#: of
msgid "callable, default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:54
msgid "Callable that gets invoked every five iterations"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:57
msgid "**verbose**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:57
msgid "To control the verbosity of the procedure."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:62
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:60
msgid ""
"Used for randomly initializing the dictionary. Pass an int for "
"reproducible results across multiple function calls. See :term:`Glossary "
"<random_state>`."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:65
msgid "**return_n_iter**"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:65
msgid "Whether or not to return the number of iterations."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:70
msgid "**positive_dict**"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:68
msgid "Whether to enforce positivity when finding the dictionary."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:75
msgid "**positive_code**"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:73
msgid "Whether to enforce positivity when finding the code."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:80
msgid "**method_max_iter**"
msgstr ""

#: of
msgid "int, default=1000"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning
msgid "Returns"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:85
msgid "**code**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_components)"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:85
msgid "The sparse code factor in the matrix factorization."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:88
msgid "**dictionary**"
msgstr ""

#: of
msgid "ndarray of shape (n_components, n_features),"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:88
msgid "The dictionary factor in the matrix factorization."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:91
msgid "**errors**"
msgstr ""

#: of
msgid "array"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:91
msgid "Vector of errors at each iteration."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:101
msgid "**n_iter**"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:94
msgid "Number of iterations run. Returned only if `return_n_iter` is set to True."
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:106
msgid ":obj:`dict_learning_online`"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:108
msgid ":obj:`DictionaryLearning`"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:110
msgid ":obj:`MiniBatchDictionaryLearning`"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:112
msgid ":obj:`SparsePCA`"
msgstr ""

#: of sklearn.decomposition._dict_learning.dict_learning:114
msgid ":obj:`MiniBatchSparsePCA`"
msgstr ""

