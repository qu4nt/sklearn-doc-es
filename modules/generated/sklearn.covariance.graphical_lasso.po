# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.covariance.graphical_lasso.rst:2
msgid ":mod:`sklearn.covariance`.graphical_lasso"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:2
msgid "l1-penalized covariance estimator"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:4
msgid "Read more in the :ref:`User Guide <sparse_inverse_covariance>`."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:6
msgid "graph_lasso has been renamed to graphical_lasso"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso
msgid "Parameters"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:12
msgid "**emp_cov**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, n_features)"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:12
msgid "Empirical covariance from which to compute the covariance estimate."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:17
msgid "**alpha**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:15
msgid ""
"The regularization parameter: the higher alpha, the more regularization, "
"the sparser the inverse covariance. Range is (0, inf]."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:21
msgid "**cov_init**"
msgstr ""

#: of
msgid "array of shape (n_features, n_features), default=None"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:20
msgid ""
"The initial guess for the covariance. If None, then the empirical "
"covariance is used."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:26
msgid "**mode**"
msgstr ""

#: of
msgid "{'cd', 'lars'}, default='cd'"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:24
msgid ""
"The Lasso solver to use: coordinate descent or LARS. Use LARS for very "
"sparse underlying graphs, where p > n. Elsewhere prefer cd which is more "
"numerically stable."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:30
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-4"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:29
msgid ""
"The tolerance to declare convergence: if the dual gap goes below this "
"value, iterations are stopped. Range is (0, inf]."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:36
msgid "**enet_tol**"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:33
msgid ""
"The tolerance for the elastic net solver used to calculate the descent "
"direction. This parameter controls the accuracy of the search direction "
"for a given column update, not of the overall parameter estimate. Only "
"used for mode='cd'. Range is (0, inf]."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:39
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:39
msgid "The maximum number of iterations."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:43
msgid "**verbose**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:42
msgid ""
"If verbose is True, the objective function and dual gap are printed at "
"each iteration."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:47
msgid "**return_costs**"
msgstr ""

#: of
msgid "bool, default=Flase"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:46
msgid ""
"If return_costs is True, the objective function and dual gap at each "
"iteration are returned."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:52
msgid "**eps**"
msgstr ""

#: of
msgid "float, default=eps"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:50
msgid ""
"The machine-precision regularization in the computation of the Cholesky "
"diagonal factors. Increase this for very ill-conditioned systems. Default"
" is `np.finfo(np.float64).eps`."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:55
msgid "**return_n_iter**"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:55
msgid "Whether or not to return the number of iterations."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso
msgid "Returns"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:60
msgid "**covariance**"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:60
msgid "The estimated covariance matrix."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:63
msgid "**precision**"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:63
msgid "The estimated (sparse) precision matrix."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:67
msgid "**costs**"
msgstr ""

#: of
msgid "list of (objective, dual_gap) pairs"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:66
msgid ""
"The list of values of the objective function and the dual gap at each "
"iteration. Returned only if return_costs is True."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:76
msgid "**n_iter**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:70
msgid "Number of iterations. Returned only if `return_n_iter` is set to True."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:81
msgid ":obj:`GraphicalLasso`, :obj:`GraphicalLassoCV`"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:85
msgid "Notes"
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:86
msgid ""
"The algorithm employed to solve this problem is the GLasso algorithm, "
"from the Friedman 2008 Biostatistics paper. It is the same algorithm as "
"in the R `glasso` package."
msgstr ""

#: of sklearn.covariance._graph_lasso.graphical_lasso:90
msgid ""
"One possible difference with the `glasso` R package is that the diagonal "
"coefficients are not penalized."
msgstr ""

