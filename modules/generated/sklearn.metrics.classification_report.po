# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.metrics.classification_report.rst:2
msgid ":mod:`sklearn.metrics`.classification_report"
msgstr ""

#: of sklearn.metrics._classification.classification_report:2
msgid "Build a text report showing the main classification metrics."
msgstr ""

#: of sklearn.metrics._classification.classification_report:4
msgid "Read more in the :ref:`User Guide <classification_report>`."
msgstr ""

#: of sklearn.metrics._classification.classification_report
msgid "Parameters"
msgstr ""

#: of sklearn.metrics._classification.classification_report:9
msgid "**y_true**"
msgstr ""

#: of
msgid "1d array-like, or label indicator array / sparse matrix"
msgstr ""

#: of sklearn.metrics._classification.classification_report:9
msgid "Ground truth (correct) target values."
msgstr ""

#: of sklearn.metrics._classification.classification_report:12
msgid "**y_pred**"
msgstr ""

#: of sklearn.metrics._classification.classification_report:12
msgid "Estimated targets as returned by a classifier."
msgstr ""

#: of sklearn.metrics._classification.classification_report:15
msgid "**labels**"
msgstr ""

#: of
msgid "array-like of shape (n_labels,), default=None"
msgstr ""

#: of sklearn.metrics._classification.classification_report:15
msgid "Optional list of label indices to include in the report."
msgstr ""

#: of sklearn.metrics._classification.classification_report:18
msgid "**target_names**"
msgstr ""

#: of
msgid "list of str of shape (n_labels,), default=None"
msgstr ""

#: of sklearn.metrics._classification.classification_report:18
msgid "Optional display names matching the labels (same order)."
msgstr ""

#: of sklearn.metrics._classification.classification_report:21
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.metrics._classification.classification_report:21
msgid "Sample weights."
msgstr ""

#: of sklearn.metrics._classification.classification_report:26
msgid "**digits**"
msgstr ""

#: of
msgid "int, default=2"
msgstr ""

#: of sklearn.metrics._classification.classification_report:24
msgid ""
"Number of digits for formatting output floating point values. When "
"``output_dict`` is ``True``, this will be ignored and the returned values"
" will not be rounded."
msgstr ""

#: of sklearn.metrics._classification.classification_report:31
msgid "**output_dict**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.metrics._classification.classification_report:29
msgid "If True, return output as dict."
msgstr ""

#: of sklearn.metrics._classification.classification_report:35
msgid "**zero_division**"
msgstr ""

#: of
msgid "\"warn\", 0 or 1, default=\"warn\""
msgstr ""

#: of sklearn.metrics._classification.classification_report:34
msgid ""
"Sets the value to return when there is a zero division. If set to "
"\"warn\", this acts as 0, but warnings are also raised."
msgstr ""

#: of sklearn.metrics._classification.classification_report
msgid "Returns"
msgstr ""

#: of sklearn.metrics._classification.classification_report:70
msgid "**report**"
msgstr ""

#: of
msgid "string / dict"
msgstr ""

#: of sklearn.metrics._classification.classification_report:40
msgid ""
"Text summary of the precision, recall, F1 score for each class. "
"Dictionary returned if output_dict is True. Dictionary has the following "
"structure::"
msgstr ""

#: of sklearn.metrics._classification.classification_report:52
msgid ""
"The reported averages include macro average (averaging the unweighted "
"mean per label), weighted average (averaging the support-weighted mean "
"per label), and sample average (only for multilabel classification). "
"Micro average (averaging the total true positives, false negatives and "
"false positives) is only shown for multi-label or multi-class with a "
"subset of classes, because it corresponds to accuracy otherwise and would"
" be the same for all metrics. See also "
":func:`precision_recall_fscore_support` for more details on averages."
msgstr ""

#: of sklearn.metrics._classification.classification_report:62
msgid ""
"Note that in binary classification, recall of the positive class is also "
"known as \"sensitivity\"; recall of the negative class is "
"\"specificity\"."
msgstr ""

#: of sklearn.metrics._classification.classification_report:75
msgid ":obj:`precision_recall_fscore_support`, :obj:`confusion_matrix`"
msgstr ""

#: of sklearn.metrics._classification.classification_report:77
msgid ":obj:`multilabel_confusion_matrix`"
msgstr ""

#: of sklearn.metrics._classification.classification_report:83
msgid "Examples"
msgstr ""

#: ../modules/generated/sklearn.metrics.classification_report.examples:4
msgid "Examples using ``sklearn.metrics.classification_report``"
msgstr ""

#: ../modules/generated/sklearn.metrics.classification_report.examples:15
#: ../modules/generated/sklearn.metrics.classification_report.examples:23
#: ../modules/generated/sklearn.metrics.classification_report.examples:53
#: ../modules/generated/sklearn.metrics.classification_report.examples:61
msgid ":ref:`sphx_glr_auto_examples_applications_plot_face_recognition.py`"
msgstr ""

#: ../modules/generated/sklearn.metrics.classification_report.examples:34
#: ../modules/generated/sklearn.metrics.classification_report.examples:42
msgid ":ref:`sphx_glr_auto_examples_feature_selection_plot_feature_selection_pipeline.py`"
msgstr ""

#: ../modules/generated/sklearn.metrics.classification_report.examples:72
#: ../modules/generated/sklearn.metrics.classification_report.examples:80
msgid ":ref:`sphx_glr_auto_examples_model_selection_plot_grid_search_digits.py`"
msgstr ""

#: ../modules/generated/sklearn.metrics.classification_report.examples:91
#: ../modules/generated/sklearn.metrics.classification_report.examples:99
msgid ":ref:`sphx_glr_auto_examples_neural_networks_plot_rbm_logistic_classification.py`"
msgstr ""

#: ../modules/generated/sklearn.metrics.classification_report.examples:110
#: ../modules/generated/sklearn.metrics.classification_report.examples:118
msgid ":ref:`sphx_glr_auto_examples_compose_plot_column_transformer.py`"
msgstr ""

#: ../modules/generated/sklearn.metrics.classification_report.examples:129
#: ../modules/generated/sklearn.metrics.classification_report.examples:137
msgid ":ref:`sphx_glr_auto_examples_semi_supervised_plot_label_propagation_digits.py`"
msgstr ""

#: ../modules/generated/sklearn.metrics.classification_report.examples:148
#: ../modules/generated/sklearn.metrics.classification_report.examples:156
msgid ":ref:`sphx_glr_auto_examples_semi_supervised_plot_label_propagation_digits_active_learning.py`"
msgstr ""

#: ../modules/generated/sklearn.metrics.classification_report.examples:167
#: ../modules/generated/sklearn.metrics.classification_report.examples:175
msgid ":ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py`"
msgstr ""

