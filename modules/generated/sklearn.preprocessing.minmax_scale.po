# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.preprocessing.minmax_scale.rst:2
msgid ":mod:`sklearn.preprocessing`.minmax_scale"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:2
msgid "Transform features by scaling each feature to a given range."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:4
msgid ""
"This estimator scales and translates each feature individually such that "
"it is in the given range on the training set, i.e. between zero and one."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:8
msgid "The transformation is given by (when ``axis=0``)::"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:13
msgid "where min, max = feature_range."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:15
msgid "The transformation is calculated as (when ``axis=0``)::"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:20
msgid ""
"This transformation is often used as an alternative to zero mean, unit "
"variance scaling."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:23
msgid "Read more in the :ref:`User Guide <preprocessing_scaler>`."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:25
msgid ""
"*minmax_scale* function interface to "
":class:`~sklearn.preprocessing.MinMaxScaler`."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale
msgid "Parameters"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:32
msgid "**X**"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:32
msgid "The data."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:35
msgid "**feature_range**"
msgstr ""

#: of
msgid "tuple (min, max), default=(0, 1)"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:35
msgid "Desired range of transformed data."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:39
msgid "**axis**"
msgstr ""

#: of
msgid "int, default=0"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:38
msgid ""
"Axis used to scale along. If 0, independently scale each feature, "
"otherwise (if 1) scale each sample."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:43
msgid "**copy**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:42
msgid ""
"Set to False to perform inplace scaling and avoid a copy (if the input is"
" already a numpy array)."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale
msgid "Returns"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:48
msgid "**X_tr**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:48
msgid "The transformed data."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:50
msgid ""
"Risk of data leak Do not use :func:`~sklearn.preprocessing.minmax_scale` "
"unless you know what you are doing. A common mistake is to apply it to "
"the entire data *before* splitting into training and test sets. This will"
" bias the model evaluation because information would have leaked from the"
" test set to the training set. In general, we recommend using "
":class:`~sklearn.preprocessing.MinMaxScaler` within a :ref:`Pipeline "
"<pipeline>` in order to prevent most risks of data leaking: `pipe = "
"make_pipeline(MinMaxScaler(), LogisticRegression())`."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:70
msgid ":obj:`MinMaxScaler`"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:71
msgid ""
"Performs scaling to a given range using the Transformer API (e.g. as part"
" of a preprocessing :class:`~sklearn.pipeline.Pipeline`)."
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:75
msgid "Notes"
msgstr ""

#: of sklearn.preprocessing._data.minmax_scale:76
msgid ""
"For a comparison of the different scalers, transformers, and normalizers,"
" see :ref:`examples/preprocessing/plot_all_scaling.py "
"<sphx_glr_auto_examples_preprocessing_plot_all_scaling.py>`."
msgstr ""

#: ../modules/generated/sklearn.preprocessing.minmax_scale.examples:4
msgid "Examples using ``sklearn.preprocessing.minmax_scale``"
msgstr ""

#: ../modules/generated/sklearn.preprocessing.minmax_scale.examples:15
#: ../modules/generated/sklearn.preprocessing.minmax_scale.examples:23
msgid ":ref:`sphx_glr_auto_examples_preprocessing_plot_all_scaling.py`"
msgstr ""

