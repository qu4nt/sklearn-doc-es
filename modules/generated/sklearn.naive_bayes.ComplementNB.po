# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.naive_bayes.ComplementNB.rst:2
msgid ":mod:`sklearn.naive_bayes`.ComplementNB"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:2
msgid "The Complement Naive Bayes classifier described in Rennie et al. (2003)."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:4
msgid ""
"The Complement Naive Bayes classifier was designed to correct the "
"\"severe assumptions\" made by the standard Multinomial Naive Bayes "
"classifier. It is particularly suited for imbalanced data sets."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:8
msgid "Read more in the :ref:`User Guide <complement_naive_bayes>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.naive_bayes.ComplementNB sklearn.naive_bayes._BaseDiscreteNB.fit
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit
#: sklearn.naive_bayes._BaseNB.predict
#: sklearn.naive_bayes._BaseNB.predict_log_proba
#: sklearn.naive_bayes._BaseNB.predict_proba
msgid "Parameters"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:15
msgid "**alpha**"
msgstr ""

#: of
msgid "float, default=1.0"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:15
msgid "Additive (Laplace/Lidstone) smoothing parameter (0 for no smoothing)."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:18
msgid "**fit_prior**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:18
msgid "Only used in edge case with a single class in the training set."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:21
msgid "**class_prior**"
msgstr ""

#: of
msgid "array-like of shape (n_classes,), default=None"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:21
msgid "Prior probabilities of the classes. Not used."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:30
msgid "**norm**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:24
msgid ""
"Whether or not a second normalization of the weights is performed. The "
"default behavior mirrors the implementations found in Mahout and Weka, "
"which do not follow the full algorithm described in Table 9 of the paper."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB
msgid "Attributes"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:36
msgid "**class_count_**"
msgstr ""

#: of
msgid "ndarray of shape (n_classes,)"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:35
msgid ""
"Number of samples encountered for each class during fitting. This value "
"is weighted by the sample weight when provided."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:40
msgid "**class_log_prior_**"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:39
msgid ""
"Smoothed empirical log probability for each class. Only used in edge case"
" with a single class in the training set."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:43
msgid "**classes_**"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:43
msgid "Class labels known to the classifier"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:51
msgid "**coef_**"
msgstr ""

#: of
msgid "ndarray of shape (n_classes, n_features)"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:46
msgid ""
"Mirrors ``feature_log_prob_`` for interpreting `ComplementNB` as a linear"
" model."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:49 sklearn.naive_bayes.ComplementNB:68
msgid ""
"``coef_`` is deprecated in 0.24 and will be removed in 1.1 (renaming of "
"0.26)."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:55
msgid "**feature_all_**"
msgstr ""

#: of
msgid "ndarray of shape (n_features,)"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:54
msgid ""
"Number of samples encountered for each feature during fitting. This value"
" is weighted by the sample weight when provided."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:59
msgid "**feature_count_**"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:58
msgid ""
"Number of samples encountered for each (class, feature) during fitting. "
"This value is weighted by the sample weight when provided."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:62
msgid "**feature_log_prob_**"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:62
msgid "Empirical weights for class complements."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:70
msgid "**intercept_**"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:65
msgid ""
"Mirrors ``class_log_prior_`` for interpreting `ComplementNB` as a linear "
"model."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:78
msgid "**n_features_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:73
msgid "Number of features of each sample."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:81
msgid "References"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:82
msgid ""
"Rennie, J. D., Shih, L., Teevan, J., & Karger, D. R. (2003). Tackling the"
" poor assumptions of naive bayes text classifiers. In ICML (Vol. 3, pp. "
"616-623). https://people.csail.mit.edu/jrennie/papers/icml03-nb.pdf"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:92
msgid "Examples"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:105
msgid "Methods"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid ":obj:`fit <sklearn.naive_bayes.ComplementNB.fit>`\\"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
#: sklearn.naive_bayes._BaseDiscreteNB.fit:2
msgid "Fit Naive Bayes classifier according to X, y"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid ":obj:`get_params <sklearn.naive_bayes.ComplementNB.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid ":obj:`partial_fit <sklearn.naive_bayes.ComplementNB.partial_fit>`\\"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:2
msgid "Incremental fit on a batch of samples."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid ":obj:`predict <sklearn.naive_bayes.ComplementNB.predict>`\\"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
#: sklearn.naive_bayes._BaseNB.predict:2
msgid "Perform classification on an array of test vectors X."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid ""
":obj:`predict_log_proba "
"<sklearn.naive_bayes.ComplementNB.predict_log_proba>`\\"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
#: sklearn.naive_bayes._BaseNB.predict_log_proba:2
msgid "Return log-probability estimates for the test vector X."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid ":obj:`predict_proba <sklearn.naive_bayes.ComplementNB.predict_proba>`\\"
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
#: sklearn.naive_bayes._BaseNB.predict_proba:2
msgid "Return probability estimates for the test vector X."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid ":obj:`score <sklearn.naive_bayes.ComplementNB.score>`\\"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:2
#: sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid "Return the mean accuracy on the given test data and labels."
msgstr ""

#: of sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid ":obj:`set_params <sklearn.naive_bayes.ComplementNB.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.naive_bayes.ComplementNB:116:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:11
#: sklearn.naive_bayes._BaseDiscreteNB.fit:9
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:19
#: sklearn.naive_bayes._BaseNB.predict:8
#: sklearn.naive_bayes._BaseNB.predict_log_proba:8
#: sklearn.naive_bayes._BaseNB.predict_proba:8
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.naive_bayes._BaseDiscreteNB.fit:8
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:18
msgid ""
"Training vectors, where n_samples is the number of samples and n_features"
" is the number of features."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:14
#: sklearn.naive_bayes._BaseDiscreteNB.fit:12
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:22
msgid "**y**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,)"
msgstr ""

#: of sklearn.naive_bayes._BaseDiscreteNB.fit:12
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:22
msgid "Target values."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:17
#: sklearn.naive_bayes._BaseDiscreteNB.fit:15
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:31
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.naive_bayes._BaseDiscreteNB.fit:15
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:31
msgid "Weights applied to individual samples (1. for unweighted)."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.base.ClassifierMixin.score
#: sklearn.naive_bayes._BaseDiscreteNB.fit
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit
#: sklearn.naive_bayes._BaseNB.predict
#: sklearn.naive_bayes._BaseNB.predict_log_proba
#: sklearn.naive_bayes._BaseNB.predict_proba
msgid "Returns"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
#: sklearn.naive_bayes._BaseDiscreteNB.fit:31
#: sklearn.naive_bayes._BaseDiscreteNB.partial_fit:47
msgid "**self**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:4
msgid ""
"This method is expected to be called several times consecutively on "
"different chunks of a dataset so as to implement out-of-core or online "
"learning."
msgstr ""

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:8
msgid ""
"This is especially useful when the whole dataset is too big to fit in "
"memory at once."
msgstr ""

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:11
msgid ""
"This method has some performance overhead hence it is better to call "
"partial_fit on chunks of data that are as large as possible (as long as "
"fitting in the memory budget) to hide the overhead."
msgstr ""

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:28
msgid "**classes**"
msgstr ""

#: of
msgid "array-like of shape (n_classes), default=None"
msgstr ""

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:25
msgid "List of all the classes that can possibly appear in the y vector."
msgstr ""

#: of sklearn.naive_bayes._BaseDiscreteNB.partial_fit:27
msgid ""
"Must be provided at the first call to partial_fit, can be omitted in "
"subsequent calls."
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.naive_bayes._BaseNB.predict:24
#: sklearn.naive_bayes._BaseNB.predict_log_proba:26
#: sklearn.naive_bayes._BaseNB.predict_proba:26
msgid "**C**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.naive_bayes._BaseNB.predict:13
msgid "Predicted target values for X"
msgstr ""

#: of
msgid "array-like of shape (n_samples, n_classes)"
msgstr ""

#: of sklearn.naive_bayes._BaseNB.predict_log_proba:13
msgid ""
"Returns the log-probability of the samples for each class in the model. "
"The columns correspond to the classes in sorted order, as they appear in "
"the attribute :term:`classes_`."
msgstr ""

#: of sklearn.naive_bayes._BaseNB.predict_proba:13
msgid ""
"Returns the probability of the samples for each class in the model. The "
"columns correspond to the classes in sorted order, as they appear in the "
"attribute :term:`classes_`."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:4
msgid ""
"In multi-label classification, this is the subset accuracy which is a "
"harsh metric since you require for each sample that each label set be "
"correctly predicted."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:11
msgid "Test samples."
msgstr ""

#: of
msgid "array-like of shape (n_samples,) or (n_samples, n_outputs)"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:14
msgid "True labels for `X`."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:17
msgid "Sample weights."
msgstr ""

#: of sklearn.base.ClassifierMixin.score:33
msgid "**score**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.base.ClassifierMixin.score:22
msgid "Mean accuracy of ``self.predict(X)`` wrt. `y`."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of "
"the form ``<component>__<parameter>`` so that it's possible to update "
"each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: ../modules/generated/sklearn.naive_bayes.ComplementNB.examples:4
msgid "Examples using ``sklearn.naive_bayes.ComplementNB``"
msgstr ""

#: ../modules/generated/sklearn.naive_bayes.ComplementNB.examples:15
#: ../modules/generated/sklearn.naive_bayes.ComplementNB.examples:23
msgid ":ref:`sphx_glr_auto_examples_text_plot_document_classification_20newsgroups.py`"
msgstr ""

