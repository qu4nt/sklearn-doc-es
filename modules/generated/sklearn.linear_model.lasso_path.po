# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.linear_model.lasso_path.rst:2
msgid ":mod:`sklearn.linear_model`.lasso_path"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:2
msgid "Compute Lasso path with coordinate descent"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:4
msgid "The Lasso optimization function varies for mono and multi-outputs."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:6
msgid "For mono-output tasks it is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:10
msgid "For multi-output tasks it is::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:14
msgid "Where::"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:18
msgid "i.e. the sum of norm of each row."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:20
msgid "Read more in the :ref:`User Guide <lasso>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path
msgid "Parameters"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:27
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:25
msgid ""
"Training data. Pass directly as Fortran-contiguous data to avoid "
"unnecessary memory duplication. If ``y`` is mono-output then ``X`` can be"
" sparse."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:30
msgid "**y**"
msgstr ""

#: of
msgid ""
"{array-like, sparse matrix} of shape (n_samples,) or         (n_samples, "
"n_outputs)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:30
msgid "Target values"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:34
msgid "**eps**"
msgstr ""

#: of
msgid "float, default=1e-3"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:33
msgid ""
"Length of the path. ``eps=1e-3`` means that ``alpha_min / alpha_max = "
"1e-3``"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:37
msgid "**n_alphas**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:37
msgid "Number of alphas along the regularization path"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:41
#: sklearn.linear_model._coordinate_descent.lasso_path:74
msgid "**alphas**"
msgstr ""

#: of
msgid "ndarray, default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:40
msgid ""
"List of alphas where to compute the models. If ``None`` alphas are set "
"automatically"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:46
msgid "**precompute**"
msgstr ""

#: of
msgid ""
"'auto', bool or array-like of shape (n_features, n_features),"
"                 default='auto'"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:44
msgid ""
"Whether to use a precomputed Gram matrix to speed up calculations. If set"
" to ``'auto'`` let us decide. The Gram matrix can also be passed as "
"argument."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:50
msgid "**Xy**"
msgstr ""

#: of
msgid ""
"array-like of shape (n_features,) or (n_features, n_outputs),         "
"default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:49
msgid ""
"Xy = np.dot(X.T, y) that can be precomputed. It is useful only when the "
"Gram matrix is precomputed."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:53
msgid "**copy_X**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:53
msgid "If ``True``, X will be copied; else, it may be overwritten."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:56
msgid "**coef_init**"
msgstr ""

#: of
msgid "ndarray of shape (n_features, ), default=None"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:56
msgid "The initial values of the coefficients."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:59
msgid "**verbose**"
msgstr ""

#: of
msgid "bool or int, default=False"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:59
msgid "Amount of verbosity."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:62
msgid "**return_n_iter**"
msgstr ""

#: of
msgid "bool, default=False"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:62
msgid "whether to return the number of iterations or not."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:66
msgid "**positive**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:65
msgid ""
"If set to True, forces coefficients to be positive. (Only allowed when "
"``y.ndim == 1``)."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:69
msgid "**\\*\\*params**"
msgstr ""

#: of
msgid "kwargs"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:69
msgid "keyword arguments passed to the coordinate descent solver."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path
msgid "Returns"
msgstr ""

#: of
msgid "ndarray of shape (n_alphas,)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:74
msgid "The alphas along the path where models are computed."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:77
msgid "**coefs**"
msgstr ""

#: of
msgid ""
"ndarray of shape (n_features, n_alphas) or             (n_outputs, "
"n_features, n_alphas)"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:77
msgid "Coefficients along the path."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:80
msgid "**dual_gaps**"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:80
msgid "The dual gaps at the end of the optimization for each alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:90
msgid "**n_iters**"
msgstr ""

#: of
msgid "list of int"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:83
msgid ""
"The number of iterations taken by the coordinate descent optimizer to "
"reach the specified tolerance for each alpha."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:95
msgid ":obj:`lars_path`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:97
msgid ":obj:`Lasso`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:99
msgid ":obj:`LassoLars`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:101
msgid ":obj:`LassoCV`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:103
msgid ":obj:`LassoLarsCV`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:105
msgid ":obj:`sklearn.decomposition.sparse_encode`"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:109
msgid "Notes"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:110
msgid ""
"For an example, see "
":ref:`examples/linear_model/plot_lasso_coordinate_descent_path.py "
"<sphx_glr_auto_examples_linear_model_plot_lasso_coordinate_descent_path.py>`."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:114
msgid ""
"To avoid unnecessary memory duplication the X argument of the fit method "
"should be directly passed as a Fortran-contiguous numpy array."
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:117
msgid ""
"Note that in certain cases, the Lars solver may be significantly faster "
"to implement this functionality. In particular, linear interpolation can "
"be used to retrieve model coefficients between the values output by "
"lars_path"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:124
msgid "Examples"
msgstr ""

#: of sklearn.linear_model._coordinate_descent.lasso_path:125
msgid "Comparing lasso_path and lars_path with interpolation:"
msgstr ""

#: ../modules/generated/sklearn.linear_model.lasso_path.examples:4
msgid "Examples using ``sklearn.linear_model.lasso_path``"
msgstr ""

#: ../modules/generated/sklearn.linear_model.lasso_path.examples:15
#: ../modules/generated/sklearn.linear_model.lasso_path.examples:23
msgid ":ref:`sphx_glr_auto_examples_linear_model_plot_lasso_coordinate_descent_path.py`"
msgstr ""

