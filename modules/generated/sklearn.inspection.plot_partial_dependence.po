# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.inspection.plot_partial_dependence.rst:2
msgid ":mod:`sklearn.inspection`.plot_partial_dependence"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:2
msgid ""
"Partial dependence (PD) and individual conditional expectation (ICE) "
"plots."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:5
msgid ""
"Partial dependence plots, individual conditional expectation plots or an "
"overlay of both of them can be plotted by setting the ``kind`` parameter."
" The ``len(features)`` plots are arranged in a grid with ``n_cols`` "
"columns. Two-way partial dependence plots are plotted as contour plots. "
"The deciles of the feature values will be shown with tick marks on the "
"x-axes for one-way plots, and on both axes for two-way plots."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:13
msgid "Read more in the :ref:`User Guide <partial_dependence>`."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:17
msgid ""
":func:`plot_partial_dependence` does not support using the same axes with"
" multiple calls. To plot the the partial dependence for multiple "
"estimators, please pass the axes created by the first call to the second "
"call::"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:36
msgid ""
"For :class:`~sklearn.ensemble.GradientBoostingClassifier` and "
":class:`~sklearn.ensemble.GradientBoostingRegressor`, the `'recursion'` "
"method (used by default) will not account for the `init` predictor of the"
" boosting process. In practice, this will produce the same values as "
"`'brute'` up to a constant offset in the target response, provided that "
"`init` is a constant estimator (which is the default). However, if `init`"
" is not a constant estimator, the partial dependence values are incorrect"
" for `'recursion'` because the offset will be sample-dependent. It is "
"preferable to use the `'brute'` method. Note that this only applies to "
":class:`~sklearn.ensemble.GradientBoostingClassifier` and "
":class:`~sklearn.ensemble.GradientBoostingRegressor`, not to "
":class:`~sklearn.ensemble.HistGradientBoostingClassifier` and "
":class:`~sklearn.ensemble.HistGradientBoostingRegressor`."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence
msgid "Parameters"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:56
msgid "**estimator**"
msgstr ""

#: of
msgid "BaseEstimator"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:54
msgid ""
"A fitted estimator object implementing :term:`predict`, "
":term:`predict_proba`, or :term:`decision_function`. Multioutput-"
"multiclass classifiers are not supported."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:62
msgid "**X**"
msgstr ""

#: of
msgid "{array-like or dataframe} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:59
msgid ""
"``X`` is used to generate a grid of values for the target ``features`` "
"(where the partial dependence will be evaluated), and also to generate "
"values for the complement features when the `method` is `'brute'`."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:69
msgid "**features**"
msgstr ""

#: of
msgid "list of {int, str, pair of int, pair of str}"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:65
msgid ""
"The target features for which to create the PDPs. If `features[i]` is an "
"integer or a string, a one-way PDP is created; if `features[i]` is a "
"tuple, a two-way PDP is created (only supported with `kind='average'`). "
"Each tuple must be of size 2. if any entry is a string, then it must be "
"in ``feature_names``."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:75
msgid "**feature_names**"
msgstr ""

#: of
msgid "array-like of shape (n_features,), dtype=str, default=None"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:72
msgid ""
"Name of each feature; `feature_names[i]` holds the name of the feature "
"with index `i`. By default, the name of the feature corresponds to their "
"numerical index for NumPy array and their column name for pandas "
"dataframe."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:84
msgid "**target**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:78
msgid ""
"In a multiclass setting, specifies the class for which the PDPs should be"
" computed. Note that for binary classification, the positive class (index"
" 1) is always used."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:81
msgid ""
"In a multioutput setting, specifies the task for which the PDPs should be"
" computed."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:84
msgid "Ignored in binary classification or classical regression settings."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:93
msgid "**response_method**"
msgstr ""

#: of
msgid "{'auto', 'predict_proba', 'decision_function'},             default='auto'"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:87
msgid ""
"Specifies whether to use :term:`predict_proba` or "
":term:`decision_function` as the target response. For regressors this "
"parameter is ignored and the response is always the output of "
":term:`predict`. By default, :term:`predict_proba` is tried first and we "
"revert to :term:`decision_function` if it doesn't exist. If ``method`` is"
" `'recursion'`, the response is always the output of "
":term:`decision_function`."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:97
msgid "**n_cols**"
msgstr ""

#: of
msgid "int, default=3"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:96
msgid ""
"The maximum number of columns in the grid plot. Only active when `ax` is "
"a single axis or `None`."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:101
msgid "**grid_resolution**"
msgstr ""

#: of
msgid "int, default=100"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:100
msgid ""
"The number of equally spaced points on the axes of the plots, for each "
"target feature."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:105
msgid "**percentiles**"
msgstr ""

#: of
msgid "tuple of float, default=(0.05, 0.95)"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:104
msgid ""
"The lower and upper percentile used to create the extreme values for the "
"PDP axes. Must be in [0, 1]."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:132
msgid "**method**"
msgstr ""

#: of
msgid "str, default='auto'"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:108
msgid "The method used to calculate the averaged predictions:"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:110
msgid ""
"`'recursion'` is only supported for some tree-based estimators (namely "
":class:`~sklearn.ensemble.GradientBoostingClassifier`, "
":class:`~sklearn.ensemble.GradientBoostingRegressor`, "
":class:`~sklearn.ensemble.HistGradientBoostingClassifier`, "
":class:`~sklearn.ensemble.HistGradientBoostingRegressor`, "
":class:`~sklearn.tree.DecisionTreeRegressor`, "
":class:`~sklearn.ensemble.RandomForestRegressor` but is more efficient in"
" terms of speed. With this method, the target response of a classifier is"
" always the decision function, not the predicted probabilities. Since the"
" `'recursion'` method implicitely computes the average of the ICEs by "
"design, it is not compatible with ICE and thus `kind` must be "
"`'average'`."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:125
msgid ""
"`'brute'` is supported for any estimator, but is more computationally "
"intensive."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:128
msgid ""
"`'auto'`: the `'recursion'` is used for estimators that support it, and "
"`'brute'` is used otherwise."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:131
msgid ""
"Please see :ref:`this note <pdp_method_differences>` for differences "
"between the `'brute'` and `'recursion'` method."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:138
msgid "**n_jobs**"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:135
msgid ""
"The number of CPUs to use to compute the partial dependences. ``None`` "
"means 1 unless in a :obj:`joblib.parallel_backend` context. ``-1`` means "
"using all processors. See :term:`Glossary <n_jobs>` for more details."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:141
msgid "**verbose**"
msgstr ""

#: of
msgid "int, default=0"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:141
msgid "Verbose output during PD computations."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:145
msgid "**line_kw**"
msgstr ""

#: of
msgid "dict, default=None"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:144
msgid ""
"Dict with keywords passed to the ``matplotlib.pyplot.plot`` call. For "
"one-way partial dependence plots."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:149
msgid "**contour_kw**"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:148
msgid ""
"Dict with keywords passed to the ``matplotlib.pyplot.contourf`` call. For"
" two-way partial dependence plots."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:161
msgid "**ax**"
msgstr ""

#: of
msgid "Matplotlib axes or array-like of Matplotlib axes, default=None"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:152
msgid ""
"If a single axis is passed in, it is treated as a bounding axes and a "
"grid of partial dependence plots will be drawn within these bounds. The "
"`n_cols` parameter controls the number of columns in the grid."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:156
msgid ""
"If an array-like of axes are passed in, the partial dependence plots will"
" be drawn directly into these axes."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:158
msgid ""
"If `None`, a figure and a bounding axes is created and treated as the "
"single axes case."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:174
msgid "**kind**"
msgstr ""

#: of
msgid "{'average', 'individual', 'both'}, default='average'"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:164
msgid ""
"Whether to plot the partial dependence averaged across all the samples in"
" the dataset or one line per sample or both."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:167
msgid "``kind='average'`` results in the traditional PD plot;"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:168
msgid "``kind='individual'`` results in the ICE plot."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:170
msgid ""
"Note that the fast ``method='recursion'`` option is only available for "
"``kind='average'``. Plotting individual dependencies requires using the "
"slower ``method='brute'`` option."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:185
msgid "**subsample**"
msgstr ""

#: of
msgid "float, int or None, default=1000"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:177
msgid ""
"Sampling for ICE curves when `kind` is 'individual' or 'both'. If "
"`float`, should be between 0.0 and 1.0 and represent the proportion of "
"the dataset to be used to plot ICE curves. If `int`, represents the "
"absolute number samples to use."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:182
msgid ""
"Note that the full dataset is still used to calculate averaged partial "
"dependence when `kind='both'`."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:192
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:188
msgid ""
"Controls the randomness of the selected samples when subsamples is not "
"`None` and `kind` is either `'both'` or `'individual'`. See "
":term:`Glossary <random_state>` for details."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence
msgid "Returns"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:203
msgid "**display** : :class:`~sklearn.inspection.PartialDependenceDisplay`"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:202
msgid "PartialDependenceDisplay"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:208
msgid ":obj:`partial_dependence`"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:209
msgid "Compute Partial Dependence values."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:210
msgid ":obj:`PartialDependenceDisplay`"
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:211
msgid "Partial Dependence visualization."
msgstr ""

#: of sklearn.inspection._plot.partial_dependence.plot_partial_dependence:217
msgid "Examples"
msgstr ""

#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:4
msgid "Examples using ``sklearn.inspection.plot_partial_dependence``"
msgstr ""

#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:15
#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:23
msgid ":ref:`sphx_glr_auto_examples_release_highlights_plot_release_highlights_0_24_0.py`"
msgstr ""

#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:34
#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:42
#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:53
#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:61
msgid ":ref:`sphx_glr_auto_examples_inspection_plot_partial_dependence.py`"
msgstr ""

#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:72
#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:80
#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:91
#: ../modules/generated/sklearn.inspection.plot_partial_dependence.examples:99
msgid ":ref:`sphx_glr_auto_examples_miscellaneous_plot_partial_dependence_visualization_api.py`"
msgstr ""

