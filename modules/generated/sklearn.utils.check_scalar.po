# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.utils.check_scalar.rst:2
msgid ":mod:`sklearn.utils`.check_scalar"
msgstr ""

#: of sklearn.utils.validation.check_scalar:2
msgid "Validate scalar parameters type and value."
msgstr ""

#: of sklearn.utils.validation.check_scalar
msgid "Parameters"
msgstr ""

#: of sklearn.utils.validation.check_scalar:8
msgid "**x**"
msgstr ""

#: of
msgid "object"
msgstr ""

#: of sklearn.utils.validation.check_scalar:8
msgid "The scalar parameter to validate."
msgstr ""

#: of sklearn.utils.validation.check_scalar:11
msgid "**name**"
msgstr ""

#: of
msgid "str"
msgstr ""

#: of sklearn.utils.validation.check_scalar:11
msgid "The name of the parameter to be printed in error messages."
msgstr ""

#: of sklearn.utils.validation.check_scalar:14
msgid "**target_type**"
msgstr ""

#: of
msgid "type or tuple"
msgstr ""

#: of sklearn.utils.validation.check_scalar:14
msgid "Acceptable data types for the parameter."
msgstr ""

#: of sklearn.utils.validation.check_scalar:18
msgid "**min_val**"
msgstr ""

#: of
msgid "float or int, default=None"
msgstr ""

#: of sklearn.utils.validation.check_scalar:17
msgid ""
"The minimum valid value the parameter can take. If None (default) it is "
"implied that the parameter does not have a lower bound."
msgstr ""

#: of sklearn.utils.validation.check_scalar:26
msgid "**max_val**"
msgstr ""

#: of sklearn.utils.validation.check_scalar:21
msgid ""
"The maximum valid value the parameter can take. If None (default) it is "
"implied that the parameter does not have an upper bound."
msgstr ""

#: of sklearn.utils.validation.check_scalar
msgid "Raises"
msgstr ""

#: of sklearn.utils.validation.check_scalar:31
msgid "TypeError"
msgstr ""

#: of sklearn.utils.validation.check_scalar:31
msgid "If the parameter's type does not match the desired type."
msgstr ""

#: of sklearn.utils.validation.check_scalar:41
msgid "ValueError"
msgstr ""

#: of sklearn.utils.validation.check_scalar:34
msgid "If the parameter's value violates the given bounds."
msgstr ""

