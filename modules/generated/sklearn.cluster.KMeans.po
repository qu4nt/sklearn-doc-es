# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../modules/generated/sklearn.cluster.KMeans.rst:2
msgid ":mod:`sklearn.cluster`.KMeans"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:2
msgid "K-Means clustering."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:4
msgid "Read more in the :ref:`User Guide <k_means>`."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.cluster._kmeans.KMeans
#: sklearn.cluster._kmeans.KMeans.fit
#: sklearn.cluster._kmeans.KMeans.fit_predict
#: sklearn.cluster._kmeans.KMeans.fit_transform
#: sklearn.cluster._kmeans.KMeans.predict sklearn.cluster._kmeans.KMeans.score
#: sklearn.cluster._kmeans.KMeans.transform
msgid "Parameters"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:10
msgid "**n_clusters**"
msgstr ""

#: of
msgid "int, default=8"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:9
msgid ""
"The number of clusters to form as well as the number of centroids to "
"generate."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:26
msgid "**init**"
msgstr ""

#: of
msgid ""
"{'k-means++', 'random'}, callable or array-like of shape             "
"(n_clusters, n_features), default='k-means++'"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:13
msgid "Method for initialization:"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:15
msgid ""
"'k-means++' : selects initial cluster centers for k-mean clustering in a "
"smart way to speed up convergence. See section Notes in k_init for more "
"details."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:19
msgid ""
"'random': choose `n_clusters` observations (rows) at random from data for"
" the initial centroids."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:22
msgid ""
"If an array is passed, it should be of shape (n_clusters, n_features) and"
" gives the initial centers."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:25
msgid ""
"If a callable is passed, it should take arguments X, n_clusters and a "
"random state and return an initialization."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:31
msgid "**n_init**"
msgstr ""

#: of
msgid "int, default=10"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:29
msgid ""
"Number of time the k-means algorithm will be run with different centroid "
"seeds. The final results will be the best output of n_init consecutive "
"runs in terms of inertia."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:35
msgid "**max_iter**"
msgstr ""

#: of
msgid "int, default=300"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:34
msgid "Maximum number of iterations of the k-means algorithm for a single run."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:40
msgid "**tol**"
msgstr ""

#: of
msgid "float, default=1e-4"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:38
msgid ""
"Relative tolerance with regards to Frobenius norm of the difference in "
"the cluster centers of two consecutive iterations to declare convergence."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:55
msgid "**precompute_distances**"
msgstr ""

#: of
msgid "{'auto', True, False}, default='auto'"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:43
msgid "Precompute distances (faster but takes more memory)."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:45
msgid ""
"'auto' : do not precompute distances if n_samples * n_clusters > 12 "
"million. This corresponds to about 100MB overhead per job using double "
"precision."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:49
msgid "True : always precompute distances."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:51
msgid "False : never precompute distances."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:53
msgid ""
"'precompute_distances' was deprecated in version 0.22 and will be removed"
" in 1.0 (renaming of 0.25). It has no effect."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:58
msgid "**verbose**"
msgstr ""

#: of
msgid "int, default=0"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:58
msgid "Verbosity mode."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:63
msgid "**random_state**"
msgstr ""

#: of
msgid "int, RandomState instance or None, default=None"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:61
msgid ""
"Determines random number generation for centroid initialization. Use an "
"int to make the randomness deterministic. See :term:`Glossary "
"<random_state>`."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:73
msgid "**copy_x**"
msgstr ""

#: of
msgid "bool, default=True"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:66
msgid ""
"When pre-computing distances it is more numerically accurate to center "
"the data first. If copy_x is True (default), then the original data is "
"not modified. If False, the original data is modified, and put back "
"before the function returns, but small numerical differences may be "
"introduced by subtracting and then adding the data mean. Note that if the"
" original data is not C-contiguous, a copy will be made even if copy_x is"
" False. If the original data is sparse, but not in CSR format, a copy "
"will be made even if copy_x is False."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:84
msgid "**n_jobs**"
msgstr ""

#: of
msgid "int, default=None"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:76
msgid ""
"The number of OpenMP threads to use for the computation. Parallelism is "
"sample-wise on the main cython loop which assigns each sample to its "
"closest center."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:80
msgid "``None`` or ``-1`` means using all processors."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:82
msgid ""
"``n_jobs`` was deprecated in version 0.23 and will be removed in 1.0 "
"(renaming of 0.25)."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:100
msgid "**algorithm**"
msgstr ""

#: of
msgid "{\"auto\", \"full\", \"elkan\"}, default=\"auto\""
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:87
msgid ""
"K-means algorithm to use. The classical EM-style algorithm is \"full\". "
"The \"elkan\" variation is more efficient on data with well-defined "
"clusters, by using the triangle inequality. However it's more memory "
"intensive due to the allocation of an extra array of shape (n_samples, "
"n_clusters)."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:93
msgid ""
"For now \"auto\" (kept for backward compatibiliy) chooses \"elkan\" but "
"it might change in the future for a better heuristic."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:96
msgid "Added Elkan algorithm"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans
msgid "Attributes"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:107
msgid "**cluster_centers_**"
msgstr ""

#: of
msgid "ndarray of shape (n_clusters, n_features)"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:105
msgid ""
"Coordinates of cluster centers. If the algorithm stops before fully "
"converging (see ``tol`` and ``max_iter``), these will not be consistent "
"with ``labels_``."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:110
msgid "**labels_**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples,)"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:110
msgid "Labels of each point"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:113
msgid "**inertia_**"
msgstr ""

#: of
msgid "float"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:113
msgid "Sum of squared distances of samples to their closest cluster center."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:119
msgid "**n_iter_**"
msgstr ""

#: of
msgid "int"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:116
msgid "Number of iterations run."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:124
msgid ":obj:`MiniBatchKMeans`"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:125
msgid ""
"Alternative online implementation that does incremental updates of the "
"centers positions using mini-batches. For large scale learning (say "
"n_samples > 10k) MiniBatchKMeans is probably much faster than the default"
" batch implementation."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:129
msgid "Notes"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:130
msgid "The k-means problem is solved using either Lloyd's or Elkan's algorithm."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:132
msgid ""
"The average complexity is given by O(k n T), were n is the number of "
"samples and T is the number of iteration."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:135
msgid ""
"The worst case complexity is given by O(n^(k+2/p)) with n = n_samples, p "
"= n_features. (D. Arthur and S. Vassilvitskii, 'How slow is the k-means "
"method?' SoCG2006)"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:139
msgid ""
"In practice, the k-means algorithm is very fast (one of the fastest "
"clustering algorithms available), but it falls in local minima. That's "
"why it can be useful to restart it several times."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:143
msgid ""
"If the algorithm stops before fully converging (because of ``tol`` or "
"``max_iter``), ``labels_`` and ``cluster_centers_`` will not be "
"consistent, i.e. the ``cluster_centers_`` will not be the means of the "
"points in each cluster. Also, the estimator will reassign ``labels_`` "
"after the last iteration to make ``labels_`` consistent with ``predict`` "
"on the training set."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:152
msgid "Examples"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:167
msgid "Methods"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid ":obj:`fit <sklearn.cluster.KMeans.fit>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit:2
#: sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid "Compute k-means clustering."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid ":obj:`fit_predict <sklearn.cluster.KMeans.fit_predict>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:2
#: sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid "Compute cluster centers and predict cluster index for each sample."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid ":obj:`fit_transform <sklearn.cluster.KMeans.fit_transform>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_transform:2
#: sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid "Compute clustering and transform X to cluster-distance space."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid ":obj:`get_params <sklearn.cluster.KMeans.get_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:2
#: sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid "Get parameters for this estimator."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid ":obj:`predict <sklearn.cluster.KMeans.predict>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.predict:2
#: sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid "Predict the closest cluster each sample in X belongs to."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid ":obj:`score <sklearn.cluster.KMeans.score>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.score:2
#: sklearn.cluster._kmeans.KMeans.score:20
#: sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid "Opposite of the value of X on the K-means objective."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid ":obj:`set_params <sklearn.cluster.KMeans.set_params>`\\"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:2
#: sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid "Set the parameters of this estimator."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid ":obj:`transform <sklearn.cluster.KMeans.transform>`\\"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.transform:2
#: sklearn.cluster._kmeans.KMeans:178:<autosummary>:1
msgid "Transform X to a cluster-distance space."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit:12
#: sklearn.cluster._kmeans.KMeans.fit_predict:10
#: sklearn.cluster._kmeans.KMeans.fit_transform:9
#: sklearn.cluster._kmeans.KMeans.predict:11
#: sklearn.cluster._kmeans.KMeans.score:8
#: sklearn.cluster._kmeans.KMeans.transform:11
msgid "**X**"
msgstr ""

#: of
msgid "{array-like, sparse matrix} of shape (n_samples, n_features)"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit:8
msgid ""
"Training instances to cluster. It must be noted that the data will be "
"converted to C ordering, which will cause a memory copy if the given data"
" is not C-contiguous. If a sparse matrix is passed, a copy will be made "
"if it's not in CSR format."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit:15
#: sklearn.cluster._kmeans.KMeans.fit_predict:13
#: sklearn.cluster._kmeans.KMeans.fit_transform:12
#: sklearn.cluster._kmeans.KMeans.score:11
msgid "**y**"
msgstr ""

#: of
msgid "Ignored"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit:15
#: sklearn.cluster._kmeans.KMeans.fit_predict:13
#: sklearn.cluster._kmeans.KMeans.fit_transform:12
#: sklearn.cluster._kmeans.KMeans.score:11
msgid "Not used, present here for API consistency by convention."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit:21
#: sklearn.cluster._kmeans.KMeans.fit_predict:17
#: sklearn.cluster._kmeans.KMeans.fit_transform:16
#: sklearn.cluster._kmeans.KMeans.predict:15
#: sklearn.cluster._kmeans.KMeans.score:15
msgid "**sample_weight**"
msgstr ""

#: of
msgid "array-like of shape (n_samples,), default=None"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit:18
#: sklearn.cluster._kmeans.KMeans.fit_predict:16
#: sklearn.cluster._kmeans.KMeans.fit_transform:15
#: sklearn.cluster._kmeans.KMeans.predict:14
#: sklearn.cluster._kmeans.KMeans.score:14
msgid ""
"The weights for each observation in X. If None, all observations are "
"assigned equal weight."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params
#: sklearn.base.BaseEstimator.set_params sklearn.cluster._kmeans.KMeans.fit
#: sklearn.cluster._kmeans.KMeans.fit_predict
#: sklearn.cluster._kmeans.KMeans.fit_transform
#: sklearn.cluster._kmeans.KMeans.predict sklearn.cluster._kmeans.KMeans.score
#: sklearn.cluster._kmeans.KMeans.transform
msgid "Returns"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit:37
msgid "self"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit:26
msgid "Fitted estimator."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:4
msgid "Convenience method; equivalent to calling fit(X) followed by predict(X)."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:10
#: sklearn.cluster._kmeans.KMeans.fit_transform:9
#: sklearn.cluster._kmeans.KMeans.transform:11
msgid "New data to transform."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:33
#: sklearn.cluster._kmeans.KMeans.predict:31
msgid "**labels**"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_predict:22
#: sklearn.cluster._kmeans.KMeans.predict:20
msgid "Index of the cluster each sample belongs to."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_transform:4
msgid "Equivalent to fit(X).transform(X), but more efficiently implemented."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_transform:32
#: sklearn.cluster._kmeans.KMeans.transform:27
msgid "**X_new**"
msgstr ""

#: of
msgid "ndarray of shape (n_samples, n_clusters)"
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.fit_transform:21
#: sklearn.cluster._kmeans.KMeans.transform:16
msgid "X transformed in the new space."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:9
msgid "**deep**"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:8
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:25
msgid "**params**"
msgstr ""

#: of
msgid "dict"
msgstr ""

#: of sklearn.base.BaseEstimator.get_params:14
msgid "Parameter names mapped to their values."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.predict:4
msgid ""
"In the vector quantization literature, `cluster_centers_` is called the "
"code book and each value returned by `predict` is the index of the "
"closest code in the code book."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.predict:11
msgid "New data to predict."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.score:8
msgid "New data."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.score:31
msgid "**score**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:4
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as :class:`~sklearn.pipeline.Pipeline`). The latter have parameters of "
"the form ``<component>__<parameter>`` so that it's possible to update "
"each component of a nested object."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "**\\*\\*params**"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:12
msgid "Estimator parameters."
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:28
msgid "**self**"
msgstr ""

#: of
msgid "estimator instance"
msgstr ""

#: of sklearn.base.BaseEstimator.set_params:17
msgid "Estimator instance."
msgstr ""

#: of sklearn.cluster._kmeans.KMeans.transform:4
msgid ""
"In the new space, each dimension is the distance to the cluster centers. "
"Note that even if X is sparse, the array returned by `transform` will "
"typically be dense."
msgstr ""

#: ../modules/generated/sklearn.cluster.KMeans.examples:4
msgid "Examples using ``sklearn.cluster.KMeans``"
msgstr ""

#: ../modules/generated/sklearn.cluster.KMeans.examples:15
#: ../modules/generated/sklearn.cluster.KMeans.examples:23
msgid ":ref:`sphx_glr_auto_examples_text_plot_document_clustering.py`"
msgstr ""

