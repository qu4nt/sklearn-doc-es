# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../auto_examples/linear_model/plot_logistic_path.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_auto_examples_linear_model_plot_logistic_path.py>` to "
"download the full example code or to run this example in your browser via"
" Binder"
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:23
msgid "Regularization path of L1- Logistic Regression"
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:26
msgid ""
"Train l1-penalized logistic regression models on a binary classification "
"problem derived from the Iris dataset."
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:29
msgid ""
"The models are ordered from strongest regularized to least regularized. "
"The 4 coefficients of the models are collected and plotted as a "
"\"regularization path\": on the left-hand side of the figure (strong "
"regularizers), all the coefficients are exactly 0. When regularization "
"gets progressively looser, coefficients can get non-zero values one after"
" the other."
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:35
msgid ""
"Here we choose the liblinear solver because it can efficiently optimize "
"for the Logistic Regression loss with a non-smooth, sparsity inducing l1 "
"penalty."
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:38
msgid ""
"Also note that we set a low value for the tolerance to make sure that the"
" model has converged before collecting the coefficients."
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:41
msgid ""
"We also use warm_start=True which means that the coefficients of the "
"models are reused to initialize the next model fit to speed-up the "
"computation of the full-path."
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:56
msgid "Out:"
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:126
msgid "**Total running time of the script:** ( 0 minutes  0.149 seconds)"
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:148
msgid ""
":download:`Download Python source code: plot_logistic_path.py "
"<plot_logistic_path.py>`"
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:154
msgid ""
":download:`Download Jupyter notebook: plot_logistic_path.ipynb "
"<plot_logistic_path.ipynb>`"
msgstr ""

#: ../auto_examples/linear_model/plot_logistic_path.rst:161
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

