# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007 - 2020, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-31 11:24-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_auto_examples_applications_wikipedia_principal_eigenvector.py>`"
" to download the full example code or to run this example in your browser"
" via Binder"
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:23
msgid "Wikipedia principal eigenvector"
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:25
msgid ""
"A classical way to assert the relative importance of vertices in a graph "
"is to compute the principal eigenvector of the adjacency matrix so as to "
"assign to each vertex the values of the components of the first "
"eigenvector as a centrality score:"
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:30
msgid "https://en.wikipedia.org/wiki/Eigenvector_centrality"
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:32
msgid ""
"On the graph of webpages and links those values are called the PageRank "
"scores by Google."
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:35
msgid ""
"The goal of this example is to analyze the graph of links inside "
"wikipedia articles to rank articles by relative importance according to "
"this eigenvector centrality."
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:39
msgid ""
"The traditional way to compute the principal eigenvector is to use the "
"power iteration method:"
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:42
msgid "https://en.wikipedia.org/wiki/Power_iteration"
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:44
msgid ""
"Here the computation is achieved thanks to Martinsson's Randomized SVD "
"algorithm implemented in scikit-learn."
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:47
msgid ""
"The graph data is fetched from the DBpedia dumps. DBpedia is an "
"extraction of the latent structured data of the Wikipedia content."
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:251
msgid "**Total running time of the script:** ( 0 minutes  0.000 seconds)"
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:273
msgid ""
":download:`Download Python source code: "
"wikipedia_principal_eigenvector.py <wikipedia_principal_eigenvector.py>`"
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:279
msgid ""
":download:`Download Jupyter notebook: "
"wikipedia_principal_eigenvector.ipynb "
"<wikipedia_principal_eigenvector.ipynb>`"
msgstr ""

#: ../auto_examples/applications/wikipedia_principal_eigenvector.rst:286
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

